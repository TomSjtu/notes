{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#_1","title":"\u6b22\u8fce\u6765\u5230\u6211\u7684\u4e3b\u9875","text":"<p>\" \u6ca1\u6709\u5b66\u672f\u7684\u6c11\u4e3b\u548c\u601d\u60f3\u7684\u81ea\u7531\uff0c\u79d1\u5b66\u5c31\u4e0d\u80fd\u7e41\u8363\u3002\"</p> <p>-- 2003\u7248\u9ad8\u4e00\u7269\u7406\u5fc5\u4fee\u4e00\u8bfe\u672c</p>"},{"location":"#_2","title":"\u5185\u5bb9\u5bfc\u822a","text":"<ul> <li> <p>Linux</p> </li> <li> <p>ARM</p> </li> <li> <p>ROS2</p> </li> <li> <p>\u7f16\u7a0b\u8bed\u8a00</p> </li> <li> <p>\u4eba\u5de5\u667a\u80fd</p> </li> <li> <p>\u4e91\u8ba1\u7b97</p> </li> <li> <p>Tools</p> </li> <li> <p>\u5176\u4ed6</p> </li> </ul>"},{"location":"#inspired-by","title":"Inspired by:","text":"<ul> <li>CS\u81ea\u5b66\u6307\u5357</li> <li>\u4e0a\u6d77\u4ea4\u901a\u5927\u5b66\u751f\u5b58\u624b\u518c</li> </ul>"},{"location":"ai/","title":"AI\u76f8\u5173","text":"<p>\"Artificial intelligence is not a substitute for human intelligence; it is a tool to amplify human creativity and ingenuity.\"</p> <p>-- Fei-Fei Li</p>"},{"location":"ai/dl/","title":"\u6df1\u5ea6\u5b66\u4e60","text":""},{"location":"ai/dl/onnx/","title":"ONNX","text":"<p>\u5728\u6df1\u5ea6\u5b66\u4e60\u9886\u57df\u4e2d\uff0c\u6709\u5927\u91cf\u5404\u5f0f\u7684\u5f00\u6e90\u6846\u67b6\uff0c\u4f8b\u5982\uff0cTensorFlow\uff0cPyTorch\uff0cCaffe2\u7b49\u3002\u6bcf\u4e2a\u6846\u67b6\u90fd\u4f7f\u7528\u81ea\u5df1\u7684\u6a21\u578b\u5b58\u50a8\u683c\u5f0f\uff0c\u8fd9\u5c31\u5bfc\u81f4\u4e86\u4e0d\u540c\u6846\u67b6\u4e4b\u95f4\u96be\u4ee5\u5171\u4ea8\u6a21\u578b\u3002</p> <p>ONNX(Open Neural Network Exchange)\u662f\u4e00\u79cd\u5f00\u653e\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u4ea4\u6362\u683c\u5f0f\uff0c\u7b80\u5316\u4e86\u4e0d\u540c\u5e73\u53f0\u4e4b\u95f4\u6267\u884c\u548c\u5171\u4eab\u6a21\u578b\u7684\u8fc7\u7a0b\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u901a\u7528\u7684\u4e2d\u95f4\u8bed\u8a00\u63cf\u8ff0\u6765\u8868\u793a\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u4f7f\u5f97\u5f00\u53d1\u8005\u80fd\u591f\u5728\u4e0d\u540c\u7684\u8fd0\u884c\u73af\u5883\u4e2d\u5171\u4eab\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u5e76\u5feb\u901f\u8fed\u4ee3\u3002</p>"},{"location":"ai/opencl/","title":"OpenCL\u6846\u67b6","text":"<p>OpenCL(Open Computing Language)\u2014\u2014\u5f00\u653e\u8ba1\u7b97\u8bed\u8a00\uff0c\u662f\u4e00\u79cd\u57fa\u4e8e C \u8bed\u8a00\u7684\u5e76\u884c\u5f02\u6784\u7f16\u7a0b\u6a21\u578b\u3002OpenCL \u7684\u76ee\u6807\u662f\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e00\u79cd\u7edf\u4e00\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u5458\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u7b97\u6cd5\u7684\u5b9e\u73b0\uff0c\u800c\u4e0d\u7528\u8003\u8651\u5e95\u5c42\u7684\u5e76\u884c\u5904\u7406\u3002</p> <p>\u5f02\u6784\u5e73\u53f0\u5305\u62ec\u4e86 CPU\u3001GPU\u3001FPGA\u3001DSP \u7b49\u591a\u4e2a\u8bbe\u5907\u3002\u4ee5\u4eba\u5de5\u667a\u80fd\u7684\u573a\u666f\u4e3e\u4f8b\u8bf4\u660e\uff0c\u5047\u5982\u5728\u67d0\u4e2a AI \u82af\u7247\u4e0a\u8dd1\u4eba\u8138\u8bc6\u522b\u5e94\u7528\uff0cCPU\u64c5\u957f\u63a7\u5236\uff0cAI processor \u64c5\u957f\u8ba1\u7b97\uff0c\u8f6f\u4ef6\u7684flow\u5c31\u53ef\u4ee5\u8fdb\u884c\u62c6\u5206\uff0c\u7528CPU\u6765\u8d1f\u8d23\u63a7\u5236\u89c6\u9891\u6d41\u8f93\u5165\u8f93\u51fa\u524d\u540e\u5904\u7406\uff0cAI processor \u6765\u5b8c\u6210\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u8fd0\u7b97\u5b8c\u6210\u8bc6\u522b\uff0c\u8fd9\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u5f02\u6784\u5904\u7406\u573a\u666f\uff0c\u5982\u679c\u8be5AI\u82af\u7247\u7684 SDK \u652f\u6301 OpenCL\uff0c\u90a3\u4e48\u4e0a\u5c42\u7684\u8f6f\u4ef6\u5c31\u53ef\u4ee5\u57fa\u4e8e OpenCL \u8fdb\u884c\u5f00\u53d1\u4e86\u3002</p>"},{"location":"ai/opencl/#opencl_1","title":"OpenCL\u67b6\u6784","text":"<p>OpenCL \u67b6\u6784\uff0c\u5305\u62ec\u4e86\u5e73\u53f0\u6a21\u578b\u3001\u5185\u5b58\u6a21\u578b\u3001\u6267\u884c\u6a21\u578b\u3001\u7f16\u7a0b\u6a21\u578b\u56db\u4e2a\u7ef4\u5ea6\u3002</p>"},{"location":"ai/opencl/#_1","title":"\u5e73\u53f0\u6a21\u578b","text":"<p>OpenCL \u5e73\u53f0\u6a21\u578b\uff0c\u662f\u6307 OpenCL \u8fd0\u884c\u5728\u54ea\u79cd\u8bbe\u5907\u4e0a\u3002OpenCL \u5e73\u53f0\u53ef\u4ee5\u5206\u4e3a\u4e3b\u673a\u5e73\u53f0\u548c\u8bbe\u5907\u5e73\u53f0\u3002\u4e3b\u673a\u5e73\u53f0\u6307\u7684\u662f\u8fd0\u884c OpenCL \u7a0b\u5e8f\u7684\u4e3b\u673a\uff0c\u6bd4\u5982\u7b14\u8bb0\u672c\u7535\u8111\u3001\u53f0\u5f0f\u673a\u3001\u670d\u52a1\u5668\u7b49\uff1b\u8bbe\u5907\u5e73\u53f0\u6307\u7684\u662f OpenCL \u7a0b\u5e8f\u53ef\u4ee5\u8fd0\u884c\u7684\u8bbe\u5907\uff0c\u6bd4\u5982 CPU\u3001GPU\u3001FPGA\u3001DSP \u7b49\u3002</p> <p></p> <ul> <li>\u5e73\u53f0\u6a21\u578b\u7531\u4e00\u4e2a host \u8fde\u63a5\u591a\u4e2a device \u7ec4\u6210</li> <li>\u4e00\u4e2a device \u53ef\u4ee5\u7531\u591a\u4e2a compute unit \u7ec4\u6210</li> <li>\u4e00\u4e2a compute unit \u53ef\u4ee5\u5305\u542b\u591a\u4e2a processing unit</li> <li>OpenCL \u7684\u5e94\u7528\u7a0b\u5e8f\u7531 host \u7aef\u548c device \u7aef\u7ec4\u6210</li> </ul>"},{"location":"ai/opencl/#_2","title":"\u5185\u5b58\u6a21\u578b","text":"<p>OpenCL \u5185\u5b58\u6a21\u578b\uff0c\u662f\u6307 OpenCL \u7a0b\u5e8f\u5982\u4f55\u8bbf\u95ee\u5185\u5b58\uff0c\u5305\u542b\u4ee5\u4e0b\u51e0\u7c7b\uff1a</p> <ul> <li>Host Memory\uff1a\u53ea\u80fd\u7531 host \u8bbf\u95ee</li> <li>Global Memory\uff1a\u8bbe\u5907\u5185\u5b58\uff0c\u53ef\u4ee5\u7531 Host \u548c OpenCL Device\u8bbf\u95ee\uff0c\u5141\u8bb8 Host \u7684\u8bfb\u5199\u64cd\u4f5c\uff0c\u4e5f\u5141\u8bb8 OpenCL Device \u4e2d PE \u8bfb\u5199\uff0cHost \u8d1f\u8d23\u8be5\u5185\u5b58\u4e2d Buffer \u7684\u5206\u914d\u548c\u91ca\u653e</li> <li>Constant Global Memory\uff1a\u8bbe\u5907\u5185\u5b58\uff0c\u5141\u8bb8 Host \u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff0c\u800c\u8bbe\u5907\u53ea\u80fd\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff0c\u7528\u4e8e\u4f20\u8f93\u5e38\u91cf\u6570\u636e</li> <li>Local Memory\uff1a\u5355\u4e2a CU \u4e2d\u7684\u672c\u5730\u5185\u5b58\uff0cHost \u770b\u4e0d\u5230\u8be5\u533a\u57df\u5e76\u65e0\u6cd5\u5bf9\u5176\u64cd\u4f5c\uff0c\u8be5\u533a\u57df\u5141\u8bb8\u5185\u90e8\u7684 PE \u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e PE \u4e4b\u95f4\u7684\u5171\u4eab\uff0c\u9700\u8981\u6ce8\u610f\u540c\u6b65\u548c\u5e76\u53d1\u95ee\u9898</li> <li>Private Memory\uff1aPE \u7684\u79c1\u6709\u5185\u5b58\uff0cHost \u548c\u5176\u4ed6 PE \u90fd\u65e0\u6cd5\u8bbf\u95ee</li> </ul>"},{"location":"ai/opencl/#_3","title":"\u6267\u884c\u6a21\u578b","text":""},{"location":"ai/opencl/#_4","title":"\u7f16\u7a0b\u6a21\u578b","text":"<p>\u5728\u7f16\u7a0b\u6a21\u578b\u4e2d\uff0c\u6709\u4e24\u90e8\u5206\u4ee3\u7801\u9700\u8981\u7f16\u5199\uff1aHost \u7aef\u548c device \u7aef\u3002\u6838\u5fc3\u662f\u7ef4\u62a4\u4e00\u4e2a context\uff0c\u4ee3\u8868\u6574\u4e2a kernel \u6267\u884c\u73af\u5883\u3002</p> <p>\u6574\u4e2a\u4ee3\u7801\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"arm/","title":"ARM","text":""},{"location":"arm/#_1","title":"\u57fa\u7840\u77e5\u8bc6","text":"<ul> <li>\u5b89\u5168\u542f\u52a8</li> <li>ARM64\u7684\u542f\u52a8</li> <li>ARM\u67b6\u6784\u57fa\u7840\u77e5\u8bc6</li> <li>\u7f16\u7a0b\u89c4\u8303</li> </ul>"},{"location":"arm/#arm_1","title":"ARM\u6c47\u7f16\u8bed\u8a00","text":"<ul> <li>A64\u6307\u4ee4\u96c6</li> <li>GNU\u6c47\u7f16</li> </ul>"},{"location":"arm/#_2","title":"\u5f02\u5e38\u5904\u7406","text":"<ul> <li>\u5f02\u5e38\u5904\u7406</li> <li>GIC</li> </ul>"},{"location":"arm/#arm_2","title":"ARM\u540c\u6b65\u673a\u5236","text":"<ul> <li>\u539f\u5b50\u64cd\u4f5c</li> <li>\u9501\u7684\u5b9e\u73b0</li> <li>\u5185\u5b58\u5c4f\u969c</li> </ul>"},{"location":"arm/#_3","title":"\u5185\u5b58\u7ba1\u7406","text":"<ul> <li>\u5185\u5b58\u7ba1\u7406</li> <li>\u9ad8\u901f\u7f13\u5b58</li> <li>TLB\u7ba1\u7406</li> </ul>"},{"location":"arm/#_4","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>ARM64\u4f53\u7cfb\u7ed3\u6784\u7f16\u7a0b\u4e0e\u5b9e\u8df5</li> <li>ARMv8 Arch</li> <li>Arm Developer Documentation</li> <li>ARM GCC Inline Assembler CookBook</li> </ul>"},{"location":"arm/aarch64/","title":"ARM\u67b6\u6784\u57fa\u7840\u77e5\u8bc6","text":"<p>ARM\u4f53\u7cfb\u7ed3\u6784\u6839\u636e\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\u5206\u4e3a\u5982\u4e0b\u4e09\u79cd\u7cfb\u5217\uff1a</p> <ul> <li> <p>A\u7cfb\u5217\uff1a\u9762\u5411\u6027\u80fd\u5bc6\u96c6\u578b\u7cfb\u7edf</p> </li> <li> <p>R\u7cfb\u5217\uff1a\u9762\u5411\u5b9e\u65f6\u6027\u5e94\u7528</p> </li> <li> <p>M\u7cfb\u5217\uff1a\u9762\u5411\u5d4c\u5165\u5f0f\u5e94\u7528</p> </li> </ul> <p>ARMv8 \u662f\u7b2c\u4e00\u4ee3\u652f\u6301 64 \u4f4d\u5904\u7406\u5668\u7684\u6307\u4ee4\u96c6\u548c\u4f53\u7cfb\u7ed3\u6784\uff0c\u4e3a\u4e86\u517c\u5bb9\u8fd8\u63d0\u4f9b\u4e86\u5bf9 32 \u4f4d\u6307\u4ee4\u96c6\u7684\u652f\u6301\u3002\u5b83\u8fd8\u5f15\u5165\u4e86\u8bb8\u591a\u65b0\u7684\u7279\u6027\uff1a</p> <ul> <li> <p>\u8d85\u5927\u7269\u7406\u5730\u5740\u7a7a\u95f4\uff0c\u63d0\u4f9b\u8d85\u8fc7 4GB \u7269\u7406\u5185\u5b58\u7684\u8bbf\u95ee\u3002</p> </li> <li> <p>64 \u4f4d\u5bbd\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u3002</p> </li> <li> <p>\u81ea\u52a8\u4e8b\u4ef6\u4fe1\u53f7\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8282\u80fd\u3001\u9ad8\u6027\u80fd\u7684\u81ea\u65cb\u9501\u3002</p> </li> <li> <p>31 \u4e2a 64 \u4f4d\u5bbd\u7684\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u53ef\u4ee5\u51cf\u5c11\u5bf9\u6808\u7684\u8bbf\u95ee\u3002</p> </li> <li> <p>\u63d0\u4f9b 16KB \u548c 64KB \u7684\u9875\uff0c\u6709\u52a9\u4e8e\u964d\u4f4e TLB \u7684\u4f2a\u547d\u4e2d\u7387\u3002</p> </li> <li> <p>\u5168\u65b0\u7684\u5f02\u5e38\u5904\u7406\u6a21\u578b\uff0c\u964d\u4f4e\u4e86\u64cd\u4f5c\u7cfb\u7edf\u548c\u865a\u62df\u5316\u7684\u5b9e\u73b0\u590d\u6742\u5ea6\u3002</p> </li> <li> <p>\u5168\u65b0\u7684\u52a0\u8f7d-\u83b7\u53d6\u6307\u4ee4\u3001\u5b58\u50a8-\u91ca\u653e\u6307\u4ee4\uff0c\u4e13\u95e8\u4e3a C++11\u3001C11 \u4ee5\u53ca JAVA \u5185\u5b58\u6a21\u578b\u8bbe\u8ba1\u3002</p> </li> <li> <p>NEON \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u9ad8\u7ea7 SIMD\uff0c\u4f7f\u5f97 SIMD \u77e2\u91cf\u5316\u80fd\u591f\u5e94\u7528\u4e8e\u66f4\u5e7f\u6cdb\u7684\u7b97\u6cd5\u96c6\uff0c\u4f8b\u5982\u79d1\u5b66\u8ba1\u7b97\u3001\u9ad8\u6027\u80fd\u8ba1\u7b97(HPC)\u548c\u8d85\u7ea7\u8ba1\u7b97\u673a\u3002</p> </li> </ul> <p>\u5e38\u89c1\u7684\u91c7\u7528 ARMv8 \u4f53\u7cfb\u7ed3\u6784\u7684\u5904\u7406\u5668\u5185\u6838\u6709\uff1a</p> <ul> <li> <p>Cortex-A53</p> </li> <li> <p>Cortex-A57</p> </li> <li> <p>Cortex-A72</p> </li> </ul> <p></p> <p>ARMv8 \u4f53\u7cfb\u5b9a\u4e49\u4e86\u4e24\u79cd\u6267\u884c\u72b6\u6001\uff1a</p> AArch64AArch32 <ul> <li> <p>\u63d0\u4f9b 31 \u4e2a 64 \u4f4d\u7684\u901a\u7528\u5bc4\u5b58\u5668\u3002</p> </li> <li> <p>\u63d0\u4f9b64\u4f4d\u7684\u7a0b\u5e8f\u8ba1\u6570\u6307\u9488\u5bc4\u5b58\u5668(PC)\u3001\u6808\u6307\u9488\u5bc4\u5b58\u5668\uff08SP\uff09\u4ee5\u53ca\u5f02\u5e38\u94fe\u63a5\u5bc4\u5b58\u5668(ELR)\u3002</p> </li> <li> <p>\u63d0\u4f9b A64 \u6307\u4ee4\u96c6\u3002</p> </li> <li> <p>\u5b9a\u4e49 ARMv8 \u5f02\u5e38\u6a21\u578b\uff0c\u652f\u63014\u4e2a\u5f02\u5e38\u7b49\u7ea7\u2014\u2014EL0 ~ EL3\u3002</p> </li> <li> <p>\u63d0\u4f9b\u4e00\u7ec4\u5904\u7406\u5668\u72b6\u6001\u5bc4\u5b58\u5668(PSTATE)\u4fdd\u5b58 PE \u7684\u72b6\u6001\u3002</p> </li> </ul> <ul> <li> <p>\u63d0\u4f9b 13 \u4e2a 32 \u4f4d\u7684\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u518d\u52a0\u4e0aPC\u3001SP\u3001LR\u3002</p> </li> <li> <p>\u652f\u6301 A32 \u548c T32 (Thumb\u6307\u4ee4\u96c6)\u6307\u4ee4\u96c6\u3002</p> </li> <li> <p>\u652f\u6301 ARMv7-A \u5f02\u5e38\u6a21\u578b\u3002</p> </li> <li> <p>\u5b9a\u4e49\u4e00\u7ec4 PSTATE \u4fdd\u5b58 PE \u7684\u72b6\u6001\u3002</p> </li> </ul> <p>ARMv8 \u4f53\u7cfb\u7ed3\u6784\u6839\u636e\u4e0d\u540c\u7684\u6267\u884c\u72b6\u6001\u63d0\u4f9b\u4e0d\u540c\u6307\u4ee4\u96c6\u7684\u652f\u6301\uff1a</p> <ul> <li> <p>A64 \u6307\u4ee4\u96c6\uff1a\u8fd0\u884c\u5728 AArch64 \u72b6\u6001\u4e0b\uff0c\u63d0\u4f9b 64 \u4f4d\u6307\u4ee4\u96c6</p> </li> <li> <p>A32 \u6307\u4ee4\u96c6\uff1a\u8fd0\u884c\u5728 AArch32 \u72b6\u6001\u4e0b\uff0c\u63d0\u4f9b 32 \u4f4d\u6307\u4ee4\u96c6</p> </li> <li> <p>T32 \u6307\u4ee4\u96c6\uff1a\u8fd0\u884c\u5728 AArch32 \u72b6\u6001\u4e0b\uff0c\u63d0\u4f9b 16 \u4f4d\u548c 32 \u4f4d\u6307\u4ee4\u96c6\u3002</p> </li> </ul> <p>\u5728 AArch64 \u72b6\u6001\u4e0b\uff0c\u7cfb\u7edf\u5bc4\u5b58\u5668\u6839\u636e\u4e0d\u540c\u7684\u5f02\u5e38\u7b49\u7ea7\u63d0\u4f9b\u4e0d\u540c\u7684\u53d8\u79cd\u5bc4\u5b58\u5668\uff1a<code>&lt;register_name&gt;_ELx</code>\u3002</p>"},{"location":"arm/aarch64/#armv8","title":"ARMv8\u5bc4\u5b58\u5668","text":"<p>AArch64 \u6267\u884c\u72b6\u6001\u652f\u6301 31 \u4e2a 64 \u4f4d\u7684\u901a\u7528\u5bc4\u5b58\u5668\uff1aX0 ~ X30\u3002\u53ef\u4ee5\u4f7f\u7528 W \u6765\u8868\u793a\u4f4e 32 \u4f4d\u7684\u6570\u636e\uff0c\u5982 W0 \u8868\u793a X0 \u5bc4\u5b58\u5668\u7684\u4f4e 32 \u4f4d\u3002\u4ece W \u5bc4\u5b58\u5668\u8bfb\u53d6\u65f6\uff0c\u5ffd\u7565\u9ad8 32 \u4f4d\uff0c\u5e76\u4fdd\u6301\u5176\u5b83\u4e0d\u53d8\u3002\u5199\u5165 W \u5bc4\u5b58\u5668\u65f6\uff0c\u5c06 X \u5bc4\u5b58\u5668\u7684\u9ad8 32 \u4f4d\u8bbe\u7f6e\u4e3a\u96f6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c06 0xFFFFFFFF \u5199\u5165 W0 \u4f1a\u5c06 X0 \u8bbe\u7f6e\u4e3a 0x00000000FFFFFFFF\u3002</p> <p></p> <p>\u5176\u4e2d X29 \u53c8\u53eb\u6808\u5e27\u5bc4\u5b58\u5668\uff0cX30 \u53eb\u94fe\u63a5\u5bc4\u5b58\u5668\u3002</p> <p>PSTATE \u5bc4\u5b58\u5668\u7528\u6765\u8868\u793a\u5f53\u524d\u5904\u7406\u5668\u72b6\u6001\uff0c\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>\u7279\u6b8a\u5bc4\u5b58\u5668\uff1a</p> <ol> <li> <p>\u96f6\u5bc4\u5b58\u5668\uff1aARMv8 \u4f53\u7cfb\u7ed3\u6784\u63d0\u4f9b\u4e24\u4e2a\u96f6\u5bc4\u5b58\u5668\u2014\u2014WZR\uff0cXZR\uff0c\u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u5168\u662f0\u3002</p> </li> <li> <p>PC \u6307\u9488\u5bc4\u5b58\u5668\uff1a\u7528\u6765\u6307\u5411\u5f53\u524d\u8fd0\u884c\u6307\u4ee4\u7684\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\u3002</p> </li> <li> <p>SP \u6307\u9488\u5bc4\u5b58\u5668\uff1a\u7528\u6765\u6307\u5411\u5f53\u524d\u6808\u5e27\u7684\u6808\u9876\uff0c\u6bcf\u4e2a\u5f02\u5e38\u7b49\u7ea7\u90fd\u6709\u4e00\u4e2a\u4e13\u95e8\u7684 SP \u5bc4\u5b58\u5668\u3002</p> </li> <li> <p>\u5907\u4efd\u7a0b\u5e8f\u72b6\u6001\u5bc4\u5b58\u5668(SPSR)\uff1a\u5f53\u5f02\u5e38\u53d1\u751f\u65f6\uff0c\u5904\u7406\u5668\u4f1a\u5c06 PSTATE \u5bc4\u5b58\u5668\u7684\u503c\u6682\u65f6\u4fdd\u5b58\u5230 SPSR \u4e2d\u3002</p> </li> <li> <p>\u5f02\u5e38\u94fe\u63a5\u5bc4\u5b58\u5668(ELR)\uff1a\u5b58\u653e\u5f02\u5e38\u8fd4\u56de\u5730\u5740\u3002</p> </li> <li> <p>CuurentEL \u5bc4\u5b58\u5668\uff1a\u8868\u793a PSTATE \u5bc4\u5b58\u5668\u4e2d EL \u5b57\u6bb5\u7684\u503c\uff0c\u4fdd\u5b58\u4e86\u5f53\u524d\u5f02\u5e38\u7b49\u7ea7\uff0c\u53ef\u4ee5\u901a\u8fc7<code>MRS</code>\u6307\u4ee4\u8bfb\u53d6\u3002</p> </li> <li> <p>DAIF \u5bc4\u5b58\u5668\uff1a\u8868\u793a PSTATE \u5bc4\u5b58\u5668\u4e2d{D, A,I,F}\u5b57\u6bb5\u7684\u503c\u3002</p> </li> <li> <p>SPSel \u5bc4\u5b58\u5668\uff1a\u8868\u793a PSTATE \u5bc4\u5b58\u5668\u4e2d SP \u5b57\u6bb5\u7684\u503c\u3002</p> </li> <li> <p>PAN \u5bc4\u5b58\u5668\uff1a\u8868\u793a PSTAET \u5bc4\u5b58\u5668\u4e2d PAN \u5b57\u6bb5\u7684\u503c\u3002</p> </li> <li> <p>UAO \u5bc4\u5b58\u5668\uff1a\u8868\u793a PSTATE \u5bc4\u5b58\u5668\u4e2d UAO \u5b57\u6bb5\u7684\u503c\u3002</p> </li> <li> <p>NZCV \u5bc4\u5b58\u5668\uff1a\u8868\u793a PSTATE \u5bc4\u5b58\u5668\u4e2d{N, Z, C, V}\u5b57\u6bb5\u7684\u503c\u3002</p> </li> </ol>"},{"location":"arm/aarch64/#_1","title":"\u5f02\u5e38\u7b49\u7ea7","text":"<p>\u5f02\u5e38\u662f\u6307\u53d1\u751f\u4e86\u67d0\u4e9b\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u662f\u5916\u90e8\u4e5f\u53ef\u4ee5\u662f\u5185\u90e8\uff0c\u5bfc\u81f4 CPU \u4e0d\u5f97\u4e0d\"\u9677\u5165\"\u66f4\u9ad8\u7b49\u7ea7\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u6267\u884c\u4e00\u4e9b\u9884\u5148\u8bbe\u5b9a\u7684\u4ee3\u7801\u3002\u5728\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u4f1a\u8fd4\u56de\u53d1\u751f\u5f02\u5e38\u7684\u73b0\u573a\u3002</p> <p>ARM64 \u6700\u5927\u652f\u6301\u56db\u79cd\u5f02\u5e38\uff1a</p> <p></p> <ul> <li> <p>EL0\uff1a\u7528\u6237\u7279\u6743\uff0c\u8fd0\u884c\u666e\u901a\u7528\u6237\u7a0b\u5e8f</p> </li> <li> <p>EL1\uff1a\u7cfb\u7edf\u7279\u6743\uff0c\u8fd0\u884c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838</p> </li> <li> <p>EL2\uff1a\u8fd0\u884c\u865a\u62df\u673a\u76d1\u89c6\u5668</p> </li> <li> <p>EL3\uff1a\u8fd0\u884c\u5b89\u5168\u76d1\u63a7\u5668</p> </li> </ul> <p>\u5f02\u5e38\u7ea7\u522b\u4e4b\u95f4\u7684\u79fb\u52a8\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a</p> <ul> <li> <p>\u79fb\u52a8\u5230\uf901\u9ad8\u7684\u5f02\u5e38\u7ea7\u522b\uff0c\u4f8b\u5982\u4ece EL0 \u5230 EL1\uff0c\u8868\u793a\u8f6f\u4ef6\u589e\u52a0\u6267\ufa08\u7279\u6743\u3002</p> </li> <li> <p>\u4e0d\u80fd\u5c06\u5f02\u5e38\u5904\u7406\u964d\u4f4e\u5230\u4f4e\u7ea7\u522b\u7684\u5f02\u5e38\u3002</p> </li> <li> <p>EL0 \u7ea7\u522b\u4e0d\u5141\u8bb8\u5f02\u5e38\u5904\uf9e4\uff0c\u5fc5\u987b\u5728\uf901\u9ad8\u7684\u5f02\u5e38\u7ea7\u522b\u5904\uf9e4\u3002</p> </li> <li> <p>\u5f02\u5e38\u5bfc\u81f4\u7a0b\u5e8f\u6d41\u7a0b\u53d1\u751f\u53d8\u5316\u3002\u5f02\u5e38\u5904\uf9e4\u7a0b\u5e8f\u7684\u6267\ufa08\u7531\u7cfb\u7edf\u5b9a\u4e49\u7684\u5f02\u5e38\u5411\u91cf\u8868\u5904\u5f00\u59cb\u3002</p> </li> <li> <p><code>ERET</code>\u6307\u4ee4\u53ef\u4ee5\u7ed3\u675f\u5f53\u524d\u5f02\u5e38\u5904\uf9e4\u5e76\u8fd4\u56de\u5230\u4e0a\u4e00\u4e2a\u5f02\u5e38\u7ea7\u522b\u3002</p> </li> <li> <p>\u4ece\u5f02\u5e38\u8fd4\u56de\u53ef\u4ee5\u4fdd\u6301\u76f8\u540c\u7684\u5f02\u5e38\u7ea7\u522b\u6216\u8fdb\u5165\u8f83\u4f4e\u7684\u5f02\u5e38\u7ea7\u522b\u3002\u5b83\uf967\u80fd\u79fb\u52a8\u5230\uf901\u9ad8\u7684\u5f02\u5e38\u7ea7\u522b\u3002</p> </li> <li> <p>\u5b89\u5168\u72b6\u6001\u786e\u5b9e\u4f1a\u968f\u7740\u5f02\u5e38\u7ea7\u522b\u7684\u53d8\u5316\u800c\u53d8\u5316\uff0c\u9664\u975e\u4ece EL3 \u91cd\u65b0\u8c03\u6574\u5230\u975e\u5b89\u5168\u72b6\u6001</p> </li> </ul> <p>\u8981\u5728\u76f8\u540c\u7684\u5f02\u5e38\u7ea7\u522b\u4e4b\u95f4\u5207\u6362\u6267\ufa08\u72b6\u6001\uff0c\u5fc5\u987b\u5207\u6362\u5230\uf901\u9ad8\u7684\u5f02\u5e38\u7ea7\u522b\uff0c\u7136\u540e\u8fd4\u56de\u5230\u539f\u59cb\u7684\u5f02\u5e38\u7ea7\u522b\u3002\u4f8b\u5982\uff0c\u6709 32 \u4f4d\u548c 64 \u4f4d\u5e94\u7528\u7a0b\u5e8f\u5728 64 \u4f4d\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u8fd0\ufa08\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c32 \u4f4d\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u6267\ufa08\u5e76\u751f\u6210\u4e3b\u7ba1\u8c03\u7528(SVC)\u6307\u4ee4\uff0c\u6216\u63a5\u6536\u4e2d\u65ad\uff0c\u4ece\u800c\u5bfc\u81f4\u5207\u6362\u5230 EL1 \u548c AArch64\u3002\u7136\u540e\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u6267\ufa08\u4efb\u52a1\u5207\u6362\u5e76\u8fd4\u56de\u5230 AArch64 \u4e2d\u7684 EL0\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u60a8\uf967\u80fd\u62e5\u6709\u6df7\u5408\u7684 32 \u4f4d\u548c 64 \u4f4d\u5e94\u7528\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e4b\u95f4\u6ca1\u6709\u76f4\u63a5\u7684\u8c03\u7528\u65b9\u5f0f\u3002</p>"},{"location":"arm/assembler/","title":"GNU\u6c47\u7f16","text":""},{"location":"arm/assembler/#gcc","title":"gcc\u7f16\u8bd1\u6d41\u7a0b","text":"<p>\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684c\u8bed\u8a00\u7a0b\u5e8f\u4e3a\u4f8b\uff1a</p> test.c<pre><code>#include &lt;stdio.h&gt;\n\nint data = 10;\nint main(void)\n{\n    printf(\"%d\\n\",data);\n    return 0;\n}\n</code></pre> <p>gcc\u7f16\u8bd1\u6d41\u7a0b\u5305\u62ec\u4ee5\u4e0b\u56db\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u9884\u5904\u7406\uff1a<code>gcc - E test.c -o test.i</code></li> <li>\u7f16\u8bd1\uff1a<code>gcc -S test.i -o test.s</code></li> <li>\u6c47\u7f16\uff1a<code>as test.s -o test.o</code></li> <li>\u94fe\u63a5\uff1a<code>ld test.o -o test -lc</code></li> </ol> <p>\u6c47\u7f16\u9636\u6bb5\u751f\u6210\u7684 .o \u53ef\u91cd\u5b9a\u4f4d\u6587\u4ef6\u4ee5\u53ca\u94fe\u63a5\u9636\u6bb5\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u90fd\u662f ELF \u6587\u4ef6\u683c\u5f0f\u7684\u4e00\u79cd\u3002</p> <p>ELF \u6587\u4ef6\u4e3b\u8981\u5305\u542b\uff1a</p> <ul> <li>ELF header\uff1a\u63cf\u8ff0\u6574\u4e2a\u6587\u4ef6\u7684\u57fa\u672c\u5c5e\u6027 </li> <li>program header table\uff1a\u63cf\u8ff0\u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u6620\u50cf</li> <li>\u5404\u4e2a\u6bb5</li> <li>section header table\uff1a\u63cf\u8ff0\u6bb5\u7684\u4fe1\u606f</li> </ul> <p><code>readelf</code>\u547d\u4ee4\u53ef\u4ee5\u7528\u6765\u67e5\u770b\u4e00\u4e2aELF\u6587\u4ef6\u7684\u7ec4\u6210\u3002\u6bd4\u5982<code>readelf -h</code>\u7528\u6765\u8bfb\u53d6ELF header\uff0c<code>readelf -S</code>\u7528\u6765\u8bfb\u53d6 section header table\u3002</p>"},{"location":"arm/assembler/#_1","title":"\u94fe\u63a5\u5668","text":"<p>\u5728\u73b0\u4ee3\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\uff0c\u4e00\u4e2a\u5927\u7684\u9879\u76ee\u5f80\u5f80\u7531\u591a\u4e2a\u6e90\u6587\u4ef6\u7ec4\u6210\uff0c\u8fd9\u4e9b\u6e90\u6587\u4ef6\u7ecf\u8fc7\u9884\u5904\u7406\u3001\u7f16\u8bd1\u3001\u6c47\u7f16\u540e\u751f\u6210 .o \u6587\u4ef6\uff0c\u7136\u540e\u901a\u8fc7\u94fe\u63a5\u5668\u5c06\u8fd9\u4e9b .o \u6587\u4ef6\u94fe\u63a5\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002\u800c\u94fe\u63a5\u811a\u672c\u5c31\u544a\u8bc9\u4e86\u94fe\u63a5\u5668\u5982\u4f55\u5c06\u76ee\u6807\u6587\u4ef6\u7ec4\u5408\u8d77\u6765\u3002</p> <p>\u4ee5\u4e0b\u662f\u4e00\u6bb5\u94fe\u63a5\u811a\u672c\u7684\u793a\u4f8b\uff1a</p> u-boot.lds<pre><code>#include &lt;config.h&gt;\n#include &lt;asm/psci.h&gt;\n\nOUTPUT_FORMAT(\"elf64-littleaarch64\", \"elf64-littleaarch64\", \"elf64-littleaarch64\")\nOUTPUT_ARCH(aarch64)\nENTRY(_start)\nSECTIONS\n{\n    . = 0x00000000;\n\n    . = ALIGN(8);\n    .text :\n    {\n        *(.__image_copy_start)\n        CPUDIR/start.o (.text*)\n    }\n\n    /* This needs to come before *(.text*) */\n    .efi_runtime : {\n                __efi_runtime_start = .;\n        *(.text.efi_runtime*)\n        *(.rodata.efi_runtime*)\n        *(.data.efi_runtime*)\n                __efi_runtime_stop = .;\n    }\n\n    .text_rest :\n    {\n        *(.text*)\n    }\n\n    . = ALIGN(8);\n    .rodata : { *(SORT_BY_ALIGNMENT(SORT_BY_NAME(.rodata*))) }\n\n    . = ALIGN(8);\n    .data : {\n        *(.data*)\n    }\n\n    . = ALIGN(8);\n\n    . = .;\n\n    . = ALIGN(8);\n    __u_boot_list : {\n        KEEP(*(SORT(__u_boot_list*)));\n    }\n\n    . = ALIGN(8);\n\n    .efi_runtime_rel : {\n                __efi_runtime_rel_start = .;\n        *(.rel*.efi_runtime)\n        *(.rel*.efi_runtime.*)\n                __efi_runtime_rel_stop = .;\n    }\n\n    . = ALIGN(8);\n\n    .image_copy_end :\n    {\n        *(.__image_copy_end)\n    }\n\n    . = ALIGN(8);\n\n    .rel_dyn_start :\n    {\n        *(.__rel_dyn_start)\n    }\n\n    .rela.dyn : {\n        *(.rela*)\n    }\n\n    .rel_dyn_end :\n    {\n        *(.__rel_dyn_end)\n    }\n\n    _end = .;\n\n    . = ALIGN(8);\n\n    .bss_start : {\n        KEEP(*(.__bss_start));\n    }\n\n    .bss : {\n        *(.bss*)\n         . = ALIGN(8);\n    }\n\n    .bss_end : {\n        KEEP(*(.__bss_end));\n    }\n\n    /DISCARD/ : { *(.dynsym) }\n    /DISCARD/ : { *(.dynstr*) }\n    /DISCARD/ : { *(.dynamic*) }\n    /DISCARD/ : { *(.plt*) }\n    /DISCARD/ : { *(.interp*) }\n    /DISCARD/ : { *(.gnu*) }\n}\n</code></pre> <p>\u8be5\u94fe\u63a5\u811a\u672c\u4e3b\u8981\u505a\u4e86\u51e0\u4ef6\u4e8b\uff1a</p> <ol> <li>\u6307\u660e\u8f93\u51fa\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u683c\u5f0f\u548c\u67b6\u6784</li> <li>\u6307\u660e\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u4e3a_start</li> <li>\u8bbe\u7f6e\u7a0b\u5e8f\u7684\u5404\u4e2a\u6bb5\uff0c\u6307\u660e\u5bf9\u9f50\u65b9\u5f0f</li> <li>\u4e22\u5f03\u4e00\u4e9b\u4e0d\u5fc5\u8981\u7684\u6bb5</li> </ol>"},{"location":"arm/assembler/#_2","title":"\u4f2a\u6307\u4ee4","text":"<p>\u4f2a\u6307\u4ee4\u5728\u6c47\u7f16\u671f\u95f4\u7531\u6c47\u7f16\u5668\u5904\u7406\uff0c\u53ef\u4ee5\u5b9e\u73b0\u591a\u79cd\u529f\u80fd\u3002</p> <p>\u4e00\u4e9b\u5e38\u7528\u7684\u4f2a\u6307\u4ee4\u6bd4\u5982\uff1a</p> <ul> <li>\u5bf9\u9f50\u4f2a\u6307\u4ee4\uff1a.align</li> <li>\u6570\u636e\u5b9a\u4e49\u4f2a\u6307\u4ee4\uff1a.byte\uff0c.word</li> <li>\u51fd\u6570\u63a7\u5236\u4f2a\u6307\u4ee4\uff1a.global\uff0c.ifeq expression</li> <li>\u6bb5\u4f2a\u6307\u4ee4\uff1a.section</li> <li>\u5b8f\u4f2a\u6307\u4ee4\uff1a.macro</li> </ul>"},{"location":"arm/assembler/#gcc_1","title":"GCC\u5185\u8054\u6c47\u7f16","text":"<p>\u4f7f\u7528\u5185\u8054\u6c47\u7f16\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728C\u4ee3\u7801\u4e2d\u7f16\u5199\u6c47\u7f16\u4ee3\u7801\uff0c\u5e76\u5728\u7f16\u8bd1\u65f6\u7531GCC\u7f16\u8bd1\u5668\u8fdb\u884c\u5904\u7406\u3002\u5b83\u7684\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>__asm__ asm-qualifiers(Assembler Template)\n    : output operands\n    : input operands\n    : clobbers\n</code></pre> <ol> <li>__asm__\uff1a\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u5185\u8054\u6c47\u7f16\u4ee3\u7801\u3002</li> <li>asm-qualifiers\uff1a\u4e00\u822c\u4f7f\u7528 volatile\uff0c\u8868\u793a\u7f16\u8bd1\u5668\u4e0d\u8981\u4f18\u5316\u8fd9\u6bb5\u4ee3\u7801\u3002</li> <li>Assembler Template\uff1a\u6c47\u7f16\u6307\u4ee4\uff0c\u7528\"\"\u5305\u542b\uff0c\u6bcf\u6761\u6307\u4ee4\u7528\\n\u5206\u9694\u3002</li> <li> <p>output operands\uff1a\u8f93\u51fa\u64cd\u4f5c\u6570\uff0c\u4fdd\u5b58\u8f93\u51fa\u7684\u7ed3\u679c\uff0c\u683c\u5f0f\u5982\u4e0b\uff0c\u5f53\u6709\u591a\u4e2a\u53d8\u91cf\u65f6\uff0c\u7528\u9017\u53f7\u9694\u5f00\uff1a</p> <pre><code>[[asmSymbolicName]] constraint (variablename)\n</code></pre> <ul> <li>asmSymbolicName\uff1a\u6c47\u7f16\u7b26\u53f7\u540d\uff0c\u7528\u4e8e\u5f15\u7528\u8f93\u51fa\u7ed3\u679c\uff0c\u53ef\u5199\u53ef\u4e0d\u5199</li> <li>constraint\uff1a\u7ea6\u675f\u6761\u4ef6\uff0c\u6709\u4ee5\u4e0b\u53d6\u503c</li> </ul> constraint \u8bf4\u660e m memory operand\uff0c\u8868\u793a\u8981\u4f20\u5165\u6709\u6548\u7684\u5730\u5740 r register operand\uff0c\u4f7f\u7528\u5bc4\u5b58\u5668\u6765\u4fdd\u5b58\u64cd\u4f5c\u6570 i immediate interger operand\uff0c\u8868\u793a\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u7acb\u5373\u6570 <p>constraint\u8fd8\u53ef\u4ee5\u52a0\u4e0a\u4e00\u4e9b\u4fee\u9970\u5b57\u7b26\uff0c\u6bd4\u5982\"=r\"\u3001\"+r\"\u3001\"=&amp;r\"\uff0c\u542b\u4e49\u5982\u4e0b\uff1a</p> \u4fee\u9970 \u8bf4\u660e = \u8868\u793a\u5185\u8054\u6c47\u7f16\u4f1a\u4fee\u6539\u8fd9\u4e2a\u64cd\u4f5c\u6570\uff0c\u5373\u5199 + \u65e2\u88ab\u8bfb\uff0c\u4e5f\u88ab\u5199 &amp; earlyclobber\u64cd\u4f5c\u6570 <p>\u793a\u4f8b1\uff1a <pre><code>[result] \"=r\"(sum)\n</code></pre> \u8868\u793a\u6c47\u7f16\u4ee3\u7801\u901a\u8fc7\u67d0\u4e2a\u5bc4\u5b58\u5668\u628a\u7ed3\u679c\u5199\u5165sum\u53d8\u91cf\uff0c\u53ef\u4ee5\u7528\"%[result]\"\u6765\u5f15\u7528</p> </li> <li> <p>input operands\uff1a\u8f93\u5165\u64cd\u4f5c\u6570\uff0c\u7528\u4e8e\u4f20\u5165\u53c2\u6570\uff0c\u683c\u5f0f\u5982\u4e0b\uff0c\u5f53\u6709\u591a\u4e2a\u53d8\u91cf\u65f6\uff0c\u7528\u9017\u53f7\u9694\u5f00\uff1a</p> <pre><code>[[asmSymbolicName]] constraint (expression)\n</code></pre> </li> <li> <p>clobbers\uff1a\u5728\u6c47\u7f16\u4ee3\u7801\u4e2d\uff0c\u5bf9\u4e8e\u4fee\u6539\u7684\u5bc4\u5b58\u5668\u3001\u5185\u5b58\uff0c\u9700\u8981\u5728clobbers\u4e2d\u58f0\u660e\uff0c\u4ee5\u514d\u6c47\u7f16\u5668\u4f18\u5316\u6389\u5b83\u4eec\u3002</p> clobbers \u8bf4\u660e cc \u8868\u793a\u6c47\u7f16\u4ee3\u7801\u4f1a\u4fee\u6539\u6807\u5fd7\u5bc4\u5b58\u5668 memory \u8868\u793a\u6c47\u7f16\u4ee3\u7801\u4f1a\u4fee\u6539\u5185\u5b58 </li> </ol>"},{"location":"arm/atomic/","title":"\u539f\u5b50\u64cd\u4f5c","text":"<p>\u539f\u5b50\u64cd\u4f5c\u5e95\u5c42\u4e0e\u67b6\u6784\u7d27\u5bc6\u76f8\u5173\uff0cARMv8.0 \u7684\u5b9e\u73b0\u5982\u4e0b\uff1a</p> linux/arch/arm64/include/asm/atomic_ll_sc.h<pre><code>#define ATOMIC_OP(op, asm_op, constraint)               \\\nstatic inline void                          \\\n__ll_sc_atomic_##op(int i, atomic_t *v)                 \\\n{                                   \\\n    unsigned long tmp;                      \\\n    int result;                         \\\n                                    \\\n    asm volatile(\"// atomic_\" #op \"\\n\"              \\\n    \"   prfm    pstl1strm, %2\\n\"                \\\n    \"1: ldxr    %w0, %2\\n\"                  \\\n    \"   \" #asm_op \" %w0, %w0, %w3\\n\"            \\\n    \"   stxr    %w1, %w0, %2\\n\"                 \\\n    \"   cbnz    %w1, 1b\\n\"                  \\\n    : \"=&amp;r\" (result), \"=&amp;r\" (tmp), \"+Q\" (v-&gt;counter)        \\\n    : __stringify(constraint) \"r\" (i));             \\\n}\n</code></pre> <p>\u6ce8\u610f\uff1aARMv8.1\u589e\u52a0\u7684LSE\uff08Large System Extension\uff09feature\u4f7f\u7528\u7684\u662f<code>ldadd</code>\u6307\u4ee4\u3002</p>"},{"location":"arm/atomic/#_2","title":"\u72ec\u5360\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4","text":"<p><code>LDXR</code>\u548c<code>STXR</code>\u6307\u4ee4\uff0c\u7528\u4e8e\u5b9e\u73b0\u5bf9\u53d8\u91cf\u7684\u539f\u5b50\u64cd\u4f5c\u3002</p> <p><code>LDXR</code>\u662f\u72ec\u5360\u5185\u5b58\u52a0\u8f7d\u6307\u4ee4\uff0c\u5b83\u4ee5\u72ec\u5360\u7684\u65b9\u5f0f\u52a0\u8f7d\u5185\u5b58\u5730\u5740\u7684\u503c\u5230\u901a\u7528\u5bc4\u5b58\u5668\u3002</p> <p><code>STXR</code>\u662f\u72ec\u5360\u5185\u5b58\u5b58\u50a8\u6307\u4ee4\uff0c\u5b83\u4ee5\u72ec\u5360\u7684\u65b9\u5f0f\u5c06\u901a\u7528\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u5b58\u50a8\u5230\u5185\u5b58\u5730\u5740\u3002\u6267\u884c\u7684\u7ed3\u679c\u653e\u5728 Ws \u5bc4\u5b58\u5668\u4e2d\uff0c\u5982\u679c\u8be5\u5bc4\u5b58\u5668\u4e3a0\u5219\u6267\u884c\u6210\u529f\u3002</p> <p><code>LDXP</code>\u548c<code>STXP</code>\u662f\u591a\u5b57\u8282\u7684\u72ec\u5360\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u3002</p>"},{"location":"arm/atomic/#_3","title":"\u72ec\u5360\u76d1\u89c6\u5668","text":"<p>\u72ec\u5360\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4<code>LDXR</code>\u548c<code>STXR</code>\u901a\u8fc7\u72ec\u5360\u76d1\u89c6\u5668\u6765\u76d1\u63a7\u5bf9\u5185\u5b58\u7684\u8bbf\u95ee\u3002</p> <p>\u72ec\u5360\u76d1\u89c6\u5668\u4f1a\u628a\u5bf9\u5e94\u5185\u5b58\u5730\u5740\u6807\u8bb0\u4e3a\u72ec\u5360\u8bbf\u95ee\u6a21\u5f0f\uff0c</p> <p>\u72ec\u5360\u8bbf\u95ee\u4f8b\u5b50</p> <pre><code>1:\n    ldxr x2, [x1]\n    orr x2, x2, x0\n    stxr w3, x2, [x1]\n    cbnz w3, 1b\n</code></pre> <p>\u6700\u540e\u4e00\u884c\u901a\u8fc7\u5224\u65ad W3 \u5bc4\u5b58\u5668\u7684\u503c\u6765\u5224\u65ad\u662f\u5426\u6267\u884c\u6210\u529f\uff0c\u5982\u679c\u4e0d\u4e3a0\u5219\u8df3\u8f6c\u5230\u6807\u7b7e1\u5904\u91cd\u65b0\u6267\u884c\u3002</p> <p>\u6ce8\u610f\uff0c<code>LDXR</code>\u548c<code>STXR</code>\u6307\u4ee4\u5fc5\u987b\u914d\u5bf9\u4f7f\u7528\uff0c\u4f4d\u4e8e\u8fd9\u4e24\u6761\u6307\u4ee4\u4e4b\u95f4\u7684\u4ee3\u7801\u662f\u539f\u5b50\u7684\u3002</p> <p>\u72ec\u5360\u76d1\u89c6\u5668\u4e00\u5171\u6709\u4e24\u79cd\u72b6\u6001\u2014\u2014\u5f00\u653e\u8bbf\u95ee\u72b6\u6001\u548c\u72ec\u5360\u8bbf\u95ee\u72b6\u6001\u3002</p> <p>\u5f53 CPU \u901a\u8fc7<code>LDXR</code>\u6307\u4ee4\u4ece\u5185\u5b58\u52a0\u8f7d\u6570\u636e\u65f6\uff0cCPU \u4f1a\u628a\u8fd9\u4e2a\u5185\u5b58\u5730\u5740\u6807\u8bb0\u4e3a\u72ec\u5360\u8bbf\u95ee\uff0c\u7136\u540e CPU \u5185\u90e8\u7684\u72ec\u5360\u76d1\u89c6\u5668\u7684\u72b6\u6001\u5c31\u53d8\u4e3a\u72ec\u5360\u8bbf\u95ee\u72b6\u6001\u3002\u5f53\u6267\u884c\u5230<code>STXR</code>\u6307\u4ee4\u65f6\uff0c\u9700\u8981\u6839\u636e\u72ec\u5360\u76d1\u89c6\u5668\u7684\u72b6\u6001\u6765\u505a\u51b3\u5b9a\uff1a</p> <ul> <li>\u5982\u679c\u662f\u72ec\u5360\u8bbf\u95ee\u72b6\u6001\u5e76\u4e14<code>STXR</code>\u6307\u4ee4\u8981\u5b58\u50a8\u7684\u5730\u5740\u6b63\u597d\u662f\u521a\u624d\u6807\u8bb0\u8fc7\u7684\u5730\u5740\uff0c\u90a3\u4e48<code>STXR</code>\u6307\u4ee4\u6267\u884c\u6210\u529f\uff0c\u8fd4\u56de0,\u5e76\u4e14\u72ec\u5360\u76d1\u89c6\u5668\u7684\u72b6\u6001\u53d8\u4e3a\u5f00\u653e\u8bbf\u95ee\u72b6\u6001\u3002</li> <li>\u5982\u679c\u662f\u5f00\u653e\u8bbf\u95ee\u72b6\u6001\uff0c\u90a3\u4e48<code>STXR</code>\u6307\u4ee4\u6267\u884c\u5931\u8d25\uff0c\u8fd4\u56de1\uff0c\u5e76\u4e14\u72ec\u5360\u76d1\u89c6\u5668\u7684\u72b6\u6001\u4ecd\u7136\u4fdd\u6301\u5f00\u653e\u8bbf\u95ee\u72b6\u6001\u3002</li> </ul> <p>ARMv8 \u4f53\u7cfb\u7ed3\u6784\u6839\u636e\u7f13\u5b58\u4e00\u81f4\u6027\u7684\u5c42\u6b21\u5173\u7cfb\u5206\u4e3a\u4e86\u591a\u4e2a\u76d1\u89c6\u5668\uff1a</p> <ul> <li>\u672c\u5730\u72ec\u5360\u76d1\u89c6\u5668\uff1a\u76d1\u89c6\u672c\u5730 CPU</li> <li>\u5185\u90e8\u7f13\u5b58\u4e00\u81f4\u6027\u5168\u5c40\u72ec\u5360\u76d1\u89c6\u5668\uff1a\u76d1\u89c6\u5185\u90e8\u7f13\u5b58\u4e00\u81f4\u6027</li> <li>\u5916\u90e8\u5168\u5c40\u72ec\u5360\u76d1\u89c6\u5668\uff1a\u76d1\u89c6\u5916\u90e8\u7f13\u5b58\u4e00\u81f4\u6027</li> </ul>"},{"location":"arm/atomic/#_4","title":"\u539f\u5b50\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4","text":"<p>ARMv8 \u4f53\u7cfb\u7ed3\u6784\u4e2d\u65b0\u589e\u4e86\u539f\u5b50\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\uff0c\u8be5\u6307\u4ee4\u9700\u8981 AMBA 5\u603b\u7ebf\u4e2d\u7684 CHI(Coherent Hub Interface)\u7684\u652f\u6301\u3002AMBA 5\u603b\u7ebf\u5f15\u5165\u4e86\u539f\u5b50\u4e8b\u52a1(atomic transaction)\u7684\u6982\u5ff5\uff0c\u5141\u8bb8\u5c06\u539f\u5b50\u64cd\u4f5c\u53d1\u9001\u5230\u6570\u636e\uff0c\u5e76\u4e14\u5141\u8bb8\u539f\u5b50\u64cd\u4f5c\u5728\u9760\u8fd1\u6570\u636e\u7684\u5730\u65b9\u6267\u884c\uff0c\u800c\u4e0d\u9700\u8981\u52a0\u8f7d\u5230\u9ad8\u901f\u7f13\u5b58\u4e2d\u5904\u7406\u3002\u539f\u5b50\u4e8b\u52a1\u975e\u5e38\u9002\u5408\u8981\u64cd\u4f5c\u7684\u6570\u636e\u79bb\u5904\u7406\u5668\u6838\u5fc3\u6bd4\u8f83\u8fdc\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u6570\u636e\u5728\u5185\u5b58\u4e2d\u3002</p> <p>\u539f\u5b50\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u4e0e\u72ec\u5360\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u6700\u5927\u533a\u522b\u5728\u4e8e\u6548\u7387\u3002\u8bbe\u60f3\u4e00\u4e2a SMP \u7cfb\u7edf\uff0c\u5047\u5982\u5171\u4eab\u8d44\u6e90\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u4f7f\u7528\u72ec\u5360\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u4f1a\u5bfc\u81f4\u6240\u6709 CPU \u6838\u5fc3\u90fd\u5c06\u9501\u52a0\u8f7d\u5230 L1 \u9ad8\u901f\u7f13\u5b58\u4e2d\uff0c\u7136\u540e\u4e0d\u505c\u5730\u5c1d\u8bd5\u83b7\u53d6\u9501\u548c\u68c0\u67e5\u72ec\u5360\u76d1\u89c6\u5668\u7684\u72b6\u6001\uff0c\u5728\u9501\u7ade\u4e89\u6fc0\u70c8\u7684\u65f6\u5019\u4f1a\u9020\u6210\u9ad8\u901f\u7f13\u5b58\u98a0\u7c38\u73b0\u8c61\uff0c\u5e76\u4e14\u6574\u4e2a\u8fc7\u7a0b\u8fd8\u9700\u8981 MESI(\u7f13\u5b58\u4e00\u81f4\u6027)\u534f\u8bae\u6765\u5904\u7406 L1 \u9ad8\u901f\u7f13\u5b58\u4e00\u81f4\u6027\u3002\u8fd9\u4e2a\u573a\u666f\u5728 NUMA \u67b6\u6784\u4e0b\u66f4\u52a0\u660e\u663e\uff0c\u8fdc\u7aef\u8282\u70b9\u7684 CPU \u9700\u8981\u4e0d\u65ad\u5730\u8de8\u8282\u70b9\u8bbf\u95ee\u6570\u636e\u3002\u53e6\u5916\u4e00\u4e2a\u95ee\u9898\u662f\u4e0d\u516c\u5e73\uff0c\u5f53\u9501\u6301\u6709\u8005\u91ca\u653e\u9501\u65f6\uff0c\u6240\u6709\u7684 CPU \u90fd\u9700\u8981\u4e89\u62a2\u8fd9\u628a\u9501\uff0c\u6709\u53ef\u80fd\u6700\u5148\u7533\u8bf7\u9501\u7684 CPU \u53cd\u800c\u6ca1\u6709\u62a2\u5230\u9501\u3002</p>"},{"location":"arm/barrier/","title":"\u5185\u5b58\u5c4f\u969c","text":"<p>\u7f16\u8bd1\u5668\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u5728\u5bf9\u6307\u4ee4\u4f18\u5316\u65f6\u4f1a\u5bf9\u6307\u4ee4\u7684\u987a\u5e8f\u91cd\u65b0\u6392\u5217\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u6307\u4ee4\u4e71\u5e8f\u3002\u7f16\u8bd1\u65f6\u7684\u4e71\u5e8f\u8bbf\u95ee\u5728C\u8bed\u8a00\u4e2d\u53ef\u4ee5\u901a\u8fc7<code>barrier()</code>\u51fd\u6570\u6765\u89c4\u907f\uff1a</p> <pre><code>#define barrier() __asm__ __volatile__(\"\": : :\"memory\")\n</code></pre> <p>\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e2d\uff0c\u4e00\u4e2a CPU \u6838\u5fc3\u7684\u6307\u4ee4\u4e71\u5e8f\u53ef\u80fd\u4f1a\u5bf9\u5176\u4ed6 CPU \u6838\u5fc3\u4ea7\u751f\u5f71\u54cd\uff0c\u8fdb\u800c\u9020\u6210\u4e0d\u53ef\u9884\u671f\u7684\u884c\u4e3a\uff0c\u7279\u522b\u662f\u591a\u6838\u5e76\u53d1\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u65f6\u3002\u7531\u4e8e\u73b0\u4ee3\u5904\u7406\u5668\u666e\u904d\u91c7\u7528\u8bf8\u5982\u9ad8\u901f\u7f13\u5b58\u3001\u8d85\u6807\u91cf\u6280\u672f\u3001\u4e71\u5e8f\u6267\u884c\u3001\u591a\u7ea7\u6d41\u6c34\u7ebf\u6280\u672f\u7b49\uff0c\u8fd9\u4e9b\u6280\u672f\u90fd\u4f1a\u5bf9\u6307\u4ee4\u7684\u6267\u884c\u987a\u5e8f\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\uff0c\u56e0\u6b64\uff0c\u4e3a\u4e86\u786e\u4fdd\u7a0b\u5e8f\u5728\u591a\u5904\u7406\u5668\u7cfb\u7edf\u4e0a\u7684\u6b63\u786e\u6027\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5408\u7406\u4f7f\u7528\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\u6765\u786e\u4fdd\u7a0b\u5e8f\u6309\u7167\u6211\u4eec\u9884\u671f\u7684\u65b9\u5f0f\u6267\u884c\u3002</p> <p>ARM64 \u5904\u7406\u5668\u7684\u5c4f\u969c\u6307\u4ee4\u5305\u62ec\uff1a</p> <ul> <li>DMB\uff08\u6570\u636e\u5185\u5b58\u5c4f\u969c\uff09\u6307\u4ee4\uff1a\u4fdd\u8bc1\u5728<code>DMB</code>\u6307\u4ee4\u4e4b\u524d\u7684\u6240\u6709\u5185\u5b58\u8bbf\u95ee\u64cd\u4f5c\u90fd\u5df2\u5b8c\u6210\uff0c\u624d\u63d0\u4ea4<code>DMB</code>\u6307\u4ee4\u4e4b\u540e\u7684\u5185\u5b58\u8bbf\u95ee\u64cd\u4f5c\u3002</li> <li>DSB\uff08\u6570\u636e\u540c\u6b65\u5c4f\u969c\uff09\u6307\u4ee4\uff1a\u4f4d\u4e8e\u6b64\u6307\u4ee4\u4e4b\u524d\u7684\u6240\u6709\u5185\u5b58\u8bbf\u95ee\u3001\u9ad8\u901f\u7f13\u5b58\u3001\u5206\u652f\u9884\u6d4b\u548c TLB \u7ef4\u62a4\u6307\u4ee4\u5168\u90e8\u5b8c\u6210\u3002</li> <li>ISB\uff08\u6307\u4ee4\u540c\u6b65\u5c4f\u969c\uff09\u6307\u4ee4\uff1aflush \u6d41\u6c34\u7ebf\uff0c\u4f7f\u5f97\u5728<code>ISB</code>\u6307\u4ee4\u4e4b\u540e\u7684\u6307\u4ee4\u91cd\u65b0\u4ece\u6307\u4ee4\u7f13\u5b58\u6216\u5185\u5b58\u4e2d\u91cd\u65b0\u9884\u53d6\u3002</li> </ul> <p>Linux \u5185\u6838\u4e2d\u7684\u81ea\u65cb\u9501\u3001\u4e92\u65a5\u4f53\u7b49\u903b\u8f91\uff0c\u90fd\u4f7f\u7528\u4e86\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\u6765\u786e\u4fdd\u7ebf\u7a0b\u5b89\u5168\u3002</p>"},{"location":"arm/barrier/#_2","title":"\u5171\u4eab\u5c5e\u6027\u57df","text":"<p><code>DMB</code>\u548c<code>DSB</code>\u6307\u4ee4\u540e\u9762\u5fc5\u987b\u8981\u5e26\u53c2\u6570\uff0c\u7528\u4e8e\u6307\u5b9a\u5171\u4eab\u5c5e\u6027\u57df(share ability domain)\u3002\u5171\u4eab\u5c5e\u6027\u57df\u7528\u6765\u63cf\u8ff0\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\u7684\u4f5c\u7528\u57df\uff0cARMv8 \u4f53\u7cfb\u7ed3\u6784\u5b9a\u4e49\u4e864\u79cd\u57df\uff1a</p> <ul> <li>\u5168\u7cfb\u7edf\u5171\u4eab\u57df\uff1a\u5f71\u54cd\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u89c2\u5bdf\u8005</li> <li>\u5916\u90e8\u5171\u4eab\u57df\uff1a\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5185\u90e8\u5171\u4eab\u57df\u7ec4\u6210</li> <li>\u5185\u90e8\u5171\u4eab\u57df\uff1a\u7531\u591a\u4e2a\u5904\u7406\u5668\u5171\u4eab\u7684\u53ef\u5171\u4eab\u57df\uff0c\u6bd4\u5982\u4e00\u4e2a\u56db\u6838 Cortex-A57 \u96c6\u7fa4</li> <li>\u4e0d\u6307\u5b9a\u5171\u4eab\u57df\uff1a\u53ea\u80fd\u7531\u5355\u4e2a\u5904\u7406\u5668\u8bbf\u95ee</li> </ul> <p>\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\u7684\u53c2\u6570\u5982\u4e0b\u8868\u6240\u793a\uff1a</p> \u53c2\u6570 \u5171\u4eab\u5c5e\u6027 SY \u5168\u7cfb\u7edf\u5171\u4eab\u57df OSH \u5916\u90e8\u5171\u4eab\u57df ISH \u5185\u90e8\u5171\u4eab\u57df NSH \u4e0d\u6307\u5b9a\u5171\u4eab\u57df <p>\u8fd8\u53ef\u4ee5\u5bf9\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\u9650\u5b9a\u8bfb\u5199\u65b9\u5411\uff1a\u4ec5\u8bfb\u2014\u2014LD \u540e\u7f00\uff0c\u4ec5\u5199\u2014\u2014ST \u540e\u7f00\u3002\u6bd4\u5982<code>ISHLD</code>\u5c31\u662f\u4ec5\u9650\u5236\u5185\u90e8\u5171\u4eab\u57df\u7684\u5185\u5b58\u8bfb\u6307\u4ee4\u3002</p>"},{"location":"arm/barrier/#dmb","title":"DMB\u6307\u4ee4","text":"<p><code>DMB</code>\u6307\u4ee4\u53ea\u80fd\u4fdd\u8bc1\u524d\u540e\u7684\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u6309\u7167\u987a\u5e8f\u6267\u884c\uff0c\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u5305\u62ec\u666e\u901a\u7684\u52a0\u8f7d\u548c\u5b58\u50a8\u6307\u4ee4\uff0c\u4e5f\u5305\u62ec\u6570\u636e\u9ad8\u901f\u7f13\u5b58\u6307\u4ee4\u3002</p> <p><code>DMB</code>\u6307\u4ee4\u540e\u9762\u5fc5\u987b\u5e26\u53c2\u6570\uff0c\u7528\u6765\u6307\u5b9a\u5171\u4eab\u5c5e\u6027\u57df\u3002</p> <p>\u5728\u6df1\u5165\u4e86\u89e3<code>DMB</code>\u6307\u4ee4\u4e4b\u524d\uff0c\u6709\u5fc5\u8981\u4e86\u89e3\u4e0b\u4ec0\u4e48\u662f\u6570\u636e\u4f9d\u8d56\u548c\u5730\u5740\u4f9d\u8d56\u3002\u6570\u636e\u4f9d\u8d56\u6307\u7684\u662f\u76f8\u90bb\u7684\u8bfb\u5199\u64cd\u4f5c\u6709\u6570\u636e\u4e0a\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u6bd4\u5982\u4ece Xn \u5730\u5740\u8bfb\u53d6\u5185\u5bb9\u5230 Xm\uff0c\u518d\u628a Xm \u5730\u5740\u4e2d\u7684\u503c\u5199\u5165\u5230 Xy \u5730\u5740\u4e2d\uff0c\u90a3\u4e48\u8fd9\u4e9b\u8bfb\u5199\u6307\u4ee4\u5c31\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\u3002\u4f2a\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>ldr xm, [xn]\nstr xm, [xy]\n</code></pre> <p>\u5730\u5740\u4f9d\u8d56\u6307\u7684\u662f\u76f8\u90bb\u7684\u8bfb\u5199\u64cd\u4f5c\u6709\u5730\u5740\u4e0a\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u6bd4\u5982\u4ece Xn \u5730\u5740\u8bfb\u53d6\u5185\u5bb9\u5230 Xm \u5730\u5740\u4e2d\uff0c\u518d\u628a\u53e6\u5916\u4e00\u4e2a\u503c\u5199\u5165\u5230 Xm \u5730\u5740\u4e2d\uff0c\u90a3\u4e48\u8fd9\u4e9b\u8bfb\u5199\u6307\u4ee4\u5c31\u5b58\u5728\u5730\u5740\u4f9d\u8d56\u5173\u7cfb\u3002\u4f2a\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>ldr xm, [xn]\nstr xy, [xm]\n</code></pre> <p>\u5982\u679c\u4e24\u6761\u6307\u4ee4\u65e2\u6ca1\u6709\u6570\u636e\u4f9d\u8d56\uff0c\u4e5f\u6ca1\u6709\u5730\u5740\u4f9d\u8d56\uff0c\u90a3\u4e48 CPU \u5c31\u53ef\u4ee5\u8fdb\u884c\u6307\u4ee4\u91cd\u6392\u4ee5\u6700\u4f18\u5316\u6027\u80fd\u3002\u6bd4\u5982\u6709\u4e24\u6761\u6307\u4ee4\u5982\u4e0b\uff1a</p> <pre><code>ldr x0, [x1]\nstr x2, [x3]\n</code></pre> <p>\u7531\u4e8e\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ece CPU \u7684\u89d2\u5ea6\u770b\uff0c\u5148\u6267\u884c<code>ldr</code>\u6307\u4ee4\u8fd8\u662f<code>str</code>\u6307\u4ee4\uff0c\u4ece\u6700\u7ec8\u7ed3\u679c\u6765\u770b\u6ca1\u6709\u533a\u522b\u3002\u5982\u679c\u60f3\u8981\u786e\u4fdd CPU\u4e00\u5b9a\u6309\u7167\u5199\u7684\u987a\u5e8f\u6765\u6267\u884c\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u5728\u8fd9\u4e24\u6761\u6307\u4ee4\u4e2d\u95f4\u52a0\u4e0a<code>DMB</code>\u6307\u4ee4\uff1a</p> <pre><code>ldr x0, x[1]\ndmb ish\nstr x2, [x3]\n</code></pre> <p>\u518d\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>ldr x0, [x1]\ndmb ish\nadd x2, x3, x4\n</code></pre> <p>\u5c3d\u7ba1\u5728<code>ldr</code>\u6307\u4ee4\u548c<code>add</code>\u6307\u4ee4\u4e2d\u95f4\u6709\u4e00\u6761<code>DMB</code>\u6307\u4ee4\uff0c\u4f46\u662f\u4ecd\u7136\u4e0d\u80fd\u4fdd\u8bc1\u6307\u4ee4\u6267\u884c\u7684\u987a\u5e8f\uff0c\u56e0\u4e3a<code>DMB</code>\u6307\u4ee4\u53ea\u80fd\u4fdd\u8bc1\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u7684\u6267\u884c\u6b21\u5e8f\uff0c\u800c<code>ADD</code>\u4e0d\u662f\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\uff0c\u5b83\u662f\u6709\u53ef\u80fd\u5728<code>ldr</code>\u6307\u4ee4\u4e4b\u524d\u6267\u884c\u7684\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5c31\u5f97\u628a<code>DMB</code>\u6307\u4ee4\u6362\u6210<code>DSB</code>\u6307\u4ee4\u3002</p>"},{"location":"arm/barrier/#dsb","title":"DSB\u6307\u4ee4","text":"<p><code>DSB</code>\u6307\u4ee4\u8981\u6bd4<code>DMB</code>\u6307\u4ee4\u4e25\u683c\u5f97\u591a\uff0c<code>DSB</code>\u540e\u9762\u7684\u6307\u4ee4\u5fc5\u987b\u6ee1\u8db3\u4e0b\u9762\u4e24\u4e2a\u6761\u4ef6\u624d\u80fd\u5f00\u59cb\u6267\u884c\uff1a</p> <ol> <li><code>DSB</code>\u6307\u4ee4\u524d\u9762\u7684\u6240\u6709\u5185\u5b58\u8bbf\u95ee\u6307\u4ee4\u5fc5\u987b\u6267\u884c\u5b8c\u3002</li> <li><code>DSB</code>\u6307\u4ee4\u524d\u9762\u7684\u9ad8\u901f\u7f13\u5b58\u3001\u5206\u652f\u9884\u6d4b\u3001TLB \u7b49\u7ef4\u62a4\u6307\u4ee4\u4e5f\u5fc5\u987b\u6267\u884c\u5b8c\u3002</li> </ol> <p>\u5728\u591a\u6838\u7cfb\u7edf\u4e2d\uff0c\u9ad8\u901f\u7f13\u5b58\u548c TLB \u7ef4\u62a4\u6307\u4ee4\u4f1a\u5e7f\u64ad\u5230\u5176\u4ed6 CPU \u6838\u5fc3\uff0c\u6267\u884c\u672c\u5730\u76f8\u5173\u7684\u7ef4\u62a4\u64cd\u4f5c\u3002<code>DSB</code>\u6307\u4ee4\u7b49\u5f85\u5e7f\u64ad\u5e76\u6536\u5230\u5176\u4ed6 CPU \u6838\u5fc3\u53d1\u9001\u7684\u5e94\u7b54\u4fe1\u53f7\u624d\u7b97\u6267\u884c\u5b8c\u3002</p> <pre><code>ldr x0, [x1]\ndsb ish\nadd x2, x3, x4\n</code></pre> <p>\u5f53\u4f7f\u7528\u4e86<code>DSB</code>\u6307\u4ee4\u540e\uff0c<code>ADD</code>\u6307\u4ee4\u4e0d\u80fd\u91cd\u6392\u5230<code>LDR</code>\u6307\u4ee4\u524d\u9762\u3002</p>"},{"location":"arm/barrier/#isb","title":"ISB\u6307\u4ee4","text":"<p><code>ISB</code>\u6307\u4ee4\u4f1a\u51b2\u5237\u6d41\u6c34\u7ebf\uff0c\u7136\u540e\u4ece\u6307\u4ee4\u9ad8\u901f\u7f13\u5b58\u540e\u8005\u5185\u5b58\u4e2d\u91cd\u65b0\u9884\u53d6\u6307\u4ee4\u3002</p> <p>ARMv8 \u4f53\u7cfb\u7ed3\u6784\u4e2d\u6709\u4e00\u4e2a\u672f\u8bed\u2014\u2014\u66f4\u6539\u4e0a\u4e0b\u6587\u64cd\u4f5c(context-switching operation)\uff0c\u5305\u62ec\u9ad8\u901f\u7f13\u5b58\u3001TLB\u3001\u5206\u652f\u9884\u6d4b\u4ee5\u53ca\u6539\u53d8\u7cfb\u7edf\u63a7\u5236\u5bc4\u5b58\u5668\u7b49\u64cd\u4f5c\u3002\u66f4\u6539\u4e0a\u4e0b\u6587\u64cd\u4f5c\u7684\u6548\u679c\u4ec5\u4ec5\u5728\u4e0a\u4e0b\u6587\u540c\u6b65\u4e8b\u4ef6\u4e4b\u540e\u80fd\u770b\u5230\u3002\u4e0a\u4e0b\u6587\u540c\u6b65\u4e8b\u4ef6\u5206\u4e3a\u4e09\u79cd\uff1a</p> <ul> <li>\u53d1\u751f\u4e00\u4e2a\u5f02\u5e38</li> <li>\u4ece\u4e00\u4e2a\u5f02\u5e38\u8fd4\u56de</li> <li>\u6267\u884c\u4e86<code>ISB</code>\u6307\u4ee4</li> </ul> <p><code>ISB</code>\u6307\u4ee4\u5237\u65b0\u6d41\u6c34\u7ebf\uff0c\u5e76\u4ece\u7f13\u5b58\u6216\u5185\u5b58\u4e2d\u91cd\u65b0\u83b7\u53d6\u6307\u4ee4\uff0c\u786e\u4fdd<code>ISB</code>\u6307\u4ee4\u4e4b\u524d\u7684\u4e0a\u4e0b\u6587\u66f4\u6539\u64cd\u4f5c\u5bf9<code>ISB</code>\u6307\u4ee4\u4e4b\u540e\u7684\u4efb\u4f55\u6307\u4ee4\u90fd\u53ef\u89c1\u3002\u5b83\u8fd8\u786e\u4fdd<code>ISB</code>\u6307\u4ee4\u4e4b\u540e\u7684\u4efb\u4f55\u4e0a\u4e0b\u6587\u66f4\u6539\u64cd\u4f5c\u5bf9<code>ISB</code>\u6307\u4ee4\u4e4b\u524d\u7684\u6307\u4ee4\u4e0d\u53ef\u89c1\u3002</p> <pre><code>mrs x1, cpacr_el1\norr x1, x1 # (0x3 &lt;&lt; 20)\nmsr cpacr_el1, x1\n\nisb\n\nfadd s0, s1, s2\n</code></pre> <p>\u5c06 cpacr_el1\u7684 Bit[21:20] \u4fee\u6539\u4e3a 0x3\uff0c\u53ef\u4ee5\u6253\u5f00\u6d6e\u70b9\u8fd0\u7b97\u529f\u80fd\u3002\u7d27\u63a5\u7740\u7684<code>FADD</code>\u6307\u4ee4\u5982\u679c\u6ca1\u6709<code>ISB</code>\u6307\u4ee4\u7684\u4fdd\u62a4\uff0c\u5219\u53ef\u80fd\u4f1a\u63d0\u524d\u6267\u884c\uff0c\u5373\u6d6e\u70b9\u8fd0\u7b97\u529f\u80fd\u8fd8\u672a\u542f\u7528\u65f6\u5c31\u6267\u884c\uff0c\u8fd9\u4f1a\u5f15\u53d1\u9519\u8bef\u3002</p> <p>\u6848\u4f8b\u5206\u6790\u8bf7\u53c2\u8003ARM64\u4f53\u7cfb\u7ed3\u6784\u7f16\u7a0b\u4e0e\u5b9e\u8df5P300\u9875 ~ P311\u9875\u3002</p>"},{"location":"arm/boot/","title":"ARM64\u7684\u542f\u52a8","text":""},{"location":"arm/boot/#_1","title":"\u8fdb\u5165\u5185\u6838\u524d","text":"<p>\u5728\u7cfb\u7edf\u542f\u52a8\u524d\uff0c\u63a7\u5236\u6743\u5728\u5f15\u5bfc\u7a0b\u5e8f(bootloader)\u624b\u4e2d\uff0c\u8fd9\u91cc\u7684 bootloader \u662f\u4e00\u4e2a\u5bbd\u6cdb\u7684\u6982\u5ff5\uff0c\u6cdb\u6307\u4e00\u5207\u4e3a\u5185\u6838\u51c6\u5907\u597d\u6267\u884c\u73af\u5883\u7684\u90a3\u4e9b\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u662f uboot\uff0c\u4e5f\u53ef\u4ee5\u662f Hypervisor \u6216\u8005\u662f secure monitor\u3002</p> <p>\u4e0d\u7ba1\u662f\u54ea\u79cd\u5f15\u5bfc\u7a0b\u5e8f\uff0c\u90fd\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li>\u521d\u59cb\u5316 RAM \u4fe1\u606f</li> <li>\u51c6\u5907\u597d\u8bbe\u5907\u6811\u4fe1\u606f\uff0c\u5e76\u5c06\u8bbe\u5907\u6811\u9996\u5730\u5740\u544a\u77e5\u5185\u6838</li> <li>\u89e3\u538b\u5185\u6838(\u975e\u5f3a\u5236)</li> <li>\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u5185\u6838</li> </ol> <p>\u5728\u8df3\u8f6c\u81f3\u5185\u6838\u524d\uff0c\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u72b6\u6001\uff1a</p> <ul> <li>\u5173\u95ed MMU</li> <li>\u5173\u95ed D-cache(\u6570\u636e\u7f13\u5b58)\uff0cI-cache(\u6307\u4ee4\u7f13\u5b58)\u5f00\u542f\u6216\u5173\u95ed\u90fd\u53ef</li> <li>x0 \u5bc4\u5b58\u5668\u7528\u6765\u4fdd\u5b58\u8bbe\u5907\u6811\u7684\u7269\u7406\u5730\u5740</li> <li>CPU \u5fc5\u987b\u5904\u4e8e EL2 \u6a21\u5f0f(\u63a8\u8350\uff0c\u53ef\u4ee5\u8bbf\u95ee\u865a\u62df\u5316\u6269\u5c55)\u6216\u975e\u5b89\u5168 EL1 \u6a21\u5f0f\u4e0b</li> </ul> <p>\u4e3a\u4ec0\u4e48\u5fc5\u987b\u5173\u95ed\u6570\u636e\u7f13\u5b58</p> <p>\u6570\u636e\u7f13\u5b58\u6709\u53ef\u80fd\u7f13\u5b58\u4e86 bootloader \u7684\u6570\u636e\uff0c\u5982\u679c\u4e0d\u6e05\u9664\uff0c\u53ef\u80fd\u5bfc\u81f4\u5185\u6838\u8bbf\u95ee\u9519\u8bef\u7684\u6570\u636e\u3002\u800c bootloader \u7684\u6307\u4ee4\u4e0e\u5185\u6838\u6307\u4ee4\u65e0\u5173\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e0d\u5173\u95ed\u6307\u4ee4\u7f13\u5b58\u3002</p> <p>\u66f4\u8be6\u7ec6\u7684 booting protocol \u8bf7\u53c2\u8003&lt;Documentation/arm64/booting.rst&gt;\u6587\u6863\u3002</p>"},{"location":"arm/boot/#_2","title":"\u542f\u52a8\u4ee3\u7801\u5206\u6790","text":"<p>ARM64 \u7684\u542f\u52a8\u4ee3\u7801\u4f4d\u4e8e&lt;arch/arm64/kernel/head.S&gt;\u6587\u4ef6\u4e2d\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>SYM_CODE_START(primary_entry)\n    bl  preserve_boot_args\n    bl  init_kernel_el          // w0=cpu_boot_mode\n    adrp    x23, __PHYS_OFFSET\n    and x23, x23, MIN_KIMG_ALIGN - 1    // KASLR offset, defaults to 0\n    bl  set_cpu_boot_mode_flag\n    bl  __create_page_tables\n    /*\n     * The following calls CPU setup code, see arch/arm64/mm/proc.S for\n     * details.\n     * On return, the CPU will be ready for the MMU to be turned on and\n     * the TCR will have been set.\n     */\n    bl  __cpu_setup         // initialise processor\n    b   __primary_switch\nSYM_CODE_END(primary_entry)\n</code></pre> <p>\u542f\u52a8\u7684\u5165\u53e3\u51fd\u6570\u4e3a<code>primary_entry</code>\uff0c\u8be5\u51fd\u6570\u53c8\u8c03\u7528\u4e86\u4e00\u7cfb\u5217\u521d\u59cb\u5316\u51fd\u6570\uff0c\u6211\u4eec\u9010\u4e2a\u5206\u6790\u3002</p>"},{"location":"arm/boot/#_3","title":"\u4fdd\u5b58\u53c2\u6570","text":"<pre><code>SYM_CODE_START_LOCAL(preserve_boot_args)\n    mov x21, x0             // \u4fdd\u5b58\u8bbe\u5907\u6811\u7684\u5730\u5740\u81f3x21\u5bc4\u5b58\u5668\n\n    adr_l   x0, boot_args           // \u5c06boot_args\u53d8\u91cf\u7684\u5730\u5740\u4fdd\u5b58\u81f3x0\n    stp x21, x1, [x0]           // \u4fdd\u5b58x0\u548cx1\u7684\u503c\u5230boot_args[0]\u548cboot_args[1]\n    stp x2, x3, [x0, #16]       //\u4fdd\u5b58x2\u548cx3\u7684\u503c\u5230boot_args[2]\u548cboot_args[3]\n\n    dmb sy              // \u6570\u636e\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\uff0csy\u8868\u793a\u5168\u7cfb\u7edf\u5171\u4eab\u57df\n\n    add x1, x0, #0x20           // 4 x 8 bytes\n    b   dcache_inval_poc        // tail call\nSYM_CODE_END(preserve_boot_args)\n</code></pre> <p>\u5728\u542f\u52a8\u524d\uff0cMMU \u548c D-cache \u5df2\u7ecf\u88ab\u5173\u95ed\uff0c\u56e0\u6b64\u5b58\u50a8\u6307\u4ee4\u7565\u8fc7\u4e86 cache\uff0c\u76f4\u63a5\u5199\u5165 RAM\u3002\u4f46\u662f\u4e3a\u4e86\u5b89\u5168\u8d77\u89c1\uff0c\u4ecd\u7136\u9700\u8981\u6e05\u9664 cache \u2014\u2014\u8c03\u7528<code>dcache_inval_poc</code>\u51fd\u6570\u3002</p> <p>x0~x3\u5bc4\u5b58\u5668</p> <p>\u4e3a\u4f55\u8981\u4fdd\u7559\u8fd9\u56db\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\uff1f\u5728 boot protocol \u4e2d\u6709\u89e3\u91ca\uff1ax0 \u662f dtb \u7684\u5730\u5740\uff0c\u800cx1~x3 \u5fc5\u987b\u4e3a0\uff0c\u7528\u6765\u4fdd\u7559\u4f7f\u7528\u3002\u6267\u884c\u51fd\u6570<code>setup_arch()</code>\u65f6\uff0c\u4f1a\u6821\u9a8c boot_args \u7684\u503c\u3002</p>"},{"location":"arm/boot/#_4","title":"\u521d\u59cb\u5316\u5f02\u5e38\u7b49\u7ea7","text":"<p>\u6211\u4eec\u671f\u671b\u7cfb\u7edf\u4ece EL2 \u6a21\u5f0f\u4e0b\u542f\u52a8\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u9700\u8981\u5148\u914d\u7f6e\u76f8\u5173\u73af\u5883\uff0c\u5728\u8fd4\u56de\u524d\uff0c\u5fc5\u987b\u5c06 BOOT_CPU_MODE \u7684\u503c\u4fdd\u5b58\u5728 w0 \u5bc4\u5b58\u5668\u4e2d\uff1a</p> <pre><code>/*\n * Starting from EL2 or EL1, configure the CPU to execute at the highest\n * reachable EL supported by the kernel in a chosen default state. If dropping\n * from EL2 to EL1, configure EL2 before configuring EL1.\n *\n * Since we cannot always rely on ERET synchronizing writes to sysregs (e.g. if\n * SCTLR_ELx.EOS is clear), we place an ISB prior to ERET.\n *\n * Returns either BOOT_CPU_MODE_EL1 or BOOT_CPU_MODE_EL2 in w0 if\n * booted in EL1 or EL2 respectively.\n */\nSYM_FUNC_START(init_kernel_el)\n    mrs x0, CurrentEL                   //\u8bfb\u53d6\u5f53\u524d\u5f02\u5e38\u7b49\u7ea7\u81f3x0\u5bc4\u5b58\u5668\n    cmp x0, #CurrentEL_EL2              //\u4e0eEL2\u8fdb\u884c\u6bd4\u8f83\n    b.eq    init_el2                    //\u5982\u679c\u76f8\u7b49\uff0c\u8df3\u8f6c\u5230init_el2\u51fd\u6570\n                                        //\u4e0d\u76f8\u7b49\u5219\u6267\u884c\u4e0b\u9762\u4ee3\u7801\n\nSYM_INNER_LABEL(init_el1, SYM_L_LOCAL)\n    mov_q   x0, INIT_SCTLR_EL1_MMU_OFF  \n    msr sctlr_el1, x0                   \n    isb                                 \n    mov_q   x0, INIT_PSTATE_EL1 \n    msr spsr_el1, x0                    \n    msr elr_el1, lr\n    mov w0, #BOOT_CPU_MODE_EL1\n    eret                                //ERET\u6307\u4ee4\u7528\u4e8e\u4ece\u5f02\u5e38\u4e2d\u8fd4\u56de\n\nSYM_INNER_LABEL(init_el2, SYM_L_LOCAL)\n    mov_q   x0, HCR_HOST_NVHE_FLAGS\n    msr hcr_el2, x0\n    isb\n\n    init_el2_state\n\n    /* Hypervisor stub */\n    adr_l   x0, __hyp_stub_vectors\n    msr vbar_el2, x0                    //\u8bbe\u7f6e\u5411\u91cf\u57fa\u5730\u5740\u5bc4\u5b58\u5668VBAR_EL2\n    isb\n\n    /*\n     * Fruity CPUs seem to have HCR_EL2.E2H set to RES1,\n     * making it impossible to start in nVHE mode. Is that\n     * compliant with the architecture? Absolutely not!\n     */\n    mrs x0, hcr_el2\n    and x0, x0, #HCR_E2H\n    cbz x0, 1f\n\n    /* Switching to VHE requires a sane SCTLR_EL1 as a start */\n    mov_q   x0, INIT_SCTLR_EL1_MMU_OFF\n    msr_s   SYS_SCTLR_EL12, x0\n\n    /*\n     * Force an eret into a helper \"function\", and let it return\n     * to our original caller... This makes sure that we have\n     * initialised the basic PSTATE state.\n     */\n    mov x0, #INIT_PSTATE_EL2\n    msr spsr_el1, x0\n    adr x0, __cpu_stick_to_vhe\n    msr elr_el1, x0\n    eret\n\n1:\n    mov_q   x0, INIT_SCTLR_EL1_MMU_OFF\n    msr sctlr_el1, x0\n\n    msr elr_el2, lr\n    mov w0, #BOOT_CPU_MODE_EL2\n    eret\n\n__cpu_stick_to_vhe:\n    mov x0, #HVC_VHE_RESTART\n    hvc #0\n    mov x0, #BOOT_CPU_MODE_EL2\n    ret\nSYM_FUNC_END(init_kernel_el)\n</code></pre> <p>\u4e0a\u9762\u4ee3\u7801\u4e3b\u8981\u914d\u7f6e\u4e86\u4e00\u4e9b\u7cfb\u7edf\u5bc4\u5b58\u5668\u7684\u73af\u5883\uff0c\u7136\u540e\u4ece\u5bf9\u5e94\u7684\u5f02\u5e38\u7b49\u7ea7\u8fd4\u56de\u3002</p>"},{"location":"arm/boot/#cpu","title":"\u8bbe\u7f6eCPU\u542f\u52a8\u6a21\u5f0f","text":"<p>\u8fdb\u5165\u8be5\u51fd\u6570\u524d\uff0c\u5fc5\u987b\u4fdd\u8bc1 w0 \u4fdd\u5b58\u4e86 __boot_cpu_mode \u7684\u503c\uff0c\u8be5\u503c\u7528\u4e8e\u4fdd\u5b58 CPU \u542f\u52a8\u65f6\u7684 Exception level\uff0c\u5b83\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>SYM_DATA_START(__boot_cpu_mode)\n    .long   BOOT_CPU_MODE_EL2\n    .long   BOOT_CPU_MODE_EL1\nSYM_DATA_END(__boot_cpu_mode)\n</code></pre> <p>\u8bbe\u7f6e\u542f\u52a8\u6a21\u5f0f\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/*\n * Sets the __boot_cpu_mode flag depending on the CPU boot mode passed\n * in w0. See arch/arm64/include/asm/virt.h for more info.\n */\nSYM_FUNC_START_LOCAL(set_cpu_boot_mode_flag)\n    adr_l   x1, __boot_cpu_mode     //x1\u5bc4\u5b58\u5668\u4fdd\u5b58\u5168\u5c40\u53d8\u91cf__boot_cpu_mode\u7684\u5730\u5740\n    cmp w0, #BOOT_CPU_MODE_EL2      //\u6bd4\u8f83\u5f53\u524d\u542f\u52a8\u6a21\u5f0f\u662f\u5426\u662fEL2\n    b.ne    1f                      //\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u5219\u8df3\u8f6c\u81f31\n    add x1, x1, #4\n1:  str w0, [x1]            //\u4fdd\u5b58CPU\u542f\u52a8\u6a21\u5f0f\n    dmb sy                  //\u4fdd\u8bc1str\u6307\u4ee4\u6267\u884c\u5b8c\u6210\n    dc  ivac, x1            //\u4f7f\u9ad8\u901f\u7f13\u5b58\u5931\u6548\n    ret\nSYM_FUNC_END(set_cpu_boot_mode_flag)\n</code></pre> <p>\u6211\u4eec\u671f\u671b\u6240\u6709 CPU \u90fd\u5728\u540c\u4e00\u6a21\u5f0f\u4e0b\u542f\u52a8\uff0c\u5982\u679c\u90fd\u5728 EL2 \u6a21\u5f0f\u4e0b\u542f\u52a8\uff0c\u5219\u8bf4\u660e\u7cfb\u7edf\u652f\u6301\u865a\u62df\u5316\uff0ckvm \u6a21\u5757\u624d\u53ef\u4ee5\u987a\u5229\u542f\u52a8\u3002</p>"},{"location":"arm/boot/#_5","title":"\u5efa\u7acb\u9875\u8868","text":"<p>\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u52a0\u5feb\u521d\u59cb\u5316\u901f\u5ea6\uff0c\u5fc5\u987b\u5728\u67d0\u4e2a\u9636\u6bb5\u6253\u5f00 MMU\uff0c\u800c\u5728\u6253\u5f00 MMU \u4e4b\u524d\uff0c\u5fc5\u987b\u8981\u5148\u8bbe\u5b9a\u597d\u9875\u8868\u3002</p> <pre><code>SYM_FUNC_START_LOCAL(__create_page_tables)\n    mov x28, lr\n\n    /*\n     * Invalidate the init page tables to avoid potential dirty cache lines\n     * being evicted. Other page tables are allocated in rodata as part of\n     * the kernel image, and thus are clean to the PoC per the boot\n     * protocol.\n     */\n    adrp    x0, init_pg_dir\n    adrp    x1, init_pg_end\n    bl  dcache_inval_poc\n\n    /*\n     * Clear the init page tables.\n     */\n    adrp    x0, init_pg_dir\n    adrp    x1, init_pg_end\n    sub x1, x1, x0\n1:  stp xzr, xzr, [x0], #16\n    stp xzr, xzr, [x0], #16\n    stp xzr, xzr, [x0], #16\n    stp xzr, xzr, [x0], #16\n    subs    x1, x1, #64\n    b.ne    1b\n\n    mov_q   x7, SWAPPER_MM_MMUFLAGS\n\n    /*\n     * Create the identity mapping.\n     */\n    adrp    x0, idmap_pg_dir\n    adrp    x3, __idmap_text_start      // __pa(__idmap_text_start)\n\n#ifdef CONFIG_ARM64_VA_BITS_52\n    mrs_s   x6, SYS_ID_AA64MMFR2_EL1\n    and x6, x6, #(0xf &lt;&lt; ID_AA64MMFR2_LVA_SHIFT)\n    mov x5, #52\n    cbnz    x6, 1f\n#endif\n    mov x5, #VA_BITS_MIN\n1:\n    adr_l   x6, vabits_actual\n    str x5, [x6]\n    dmb sy\n    dc  ivac, x6        // Invalidate potentially stale cache line\n\n    /*\n     * VA_BITS may be too small to allow for an ID mapping to be created\n     * that covers system RAM if that is located sufficiently high in the\n     * physical address space. So for the ID map, use an extended virtual\n     * range in that case, and configure an additional translation level\n     * if needed.\n     *\n     * Calculate the maximum allowed value for TCR_EL1.T0SZ so that the\n     * entire ID map region can be mapped. As T0SZ == (64 - #bits used),\n     * this number conveniently equals the number of leading zeroes in\n     * the physical address of __idmap_text_end.\n     */\n    adrp    x5, __idmap_text_end\n    clz x5, x5\n    cmp x5, TCR_T0SZ(VA_BITS_MIN) // default T0SZ small enough?\n    b.ge    1f          // .. then skip VA range extension\n\n    adr_l   x6, idmap_t0sz\n    str x5, [x6]\n    dmb sy\n    dc  ivac, x6        // Invalidate potentially stale cache line\n\n#if (VA_BITS &lt; 48)\n#define EXTRA_SHIFT (PGDIR_SHIFT + PAGE_SHIFT - 3)\n#define EXTRA_PTRS  (1 &lt;&lt; (PHYS_MASK_SHIFT - EXTRA_SHIFT))\n\n    /*\n     * If VA_BITS &lt; 48, we have to configure an additional table level.\n     * First, we have to verify our assumption that the current value of\n     * VA_BITS was chosen such that all translation levels are fully\n     * utilised, and that lowering T0SZ will always result in an additional\n     * translation level to be configured.\n     */\n#if VA_BITS != EXTRA_SHIFT\n#error \"Mismatch between VA_BITS and page size/number of translation levels\"\n#endif\n\n    mov x4, EXTRA_PTRS\n    create_table_entry x0, x3, EXTRA_SHIFT, x4, x5, x6\n#else\n    /*\n     * If VA_BITS == 48, we don't have to configure an additional\n     * translation level, but the top-level table has more entries.\n     */\n    mov x4, #1 &lt;&lt; (PHYS_MASK_SHIFT - PGDIR_SHIFT)\n    str_l   x4, idmap_ptrs_per_pgd, x5\n#endif\n1:\n    ldr_l   x4, idmap_ptrs_per_pgd\n    adr_l   x6, __idmap_text_end        // __pa(__idmap_text_end)\n\n    map_memory x0, x1, x3, x6, x7, x3, x4, x10, x11, x12, x13, x14\n\n    /*\n     * Map the kernel image (starting with PHYS_OFFSET).\n     */\n    adrp    x0, init_pg_dir\n    mov_q   x5, KIMAGE_VADDR        // compile time __va(_text)\n    add x5, x5, x23         // add KASLR displacement\n    mov x4, PTRS_PER_PGD\n    adrp    x6, _end            // runtime __pa(_end)\n    adrp    x3, _text           // runtime __pa(_text)\n    sub x6, x6, x3          // _end - _text\n    add x6, x6, x5          // runtime __va(_end)\n\n    map_memory x0, x1, x5, x6, x7, x3, x4, x10, x11, x12, x13, x14\n\n    /*\n     * Since the page tables have been populated with non-cacheable\n     * accesses (MMU disabled), invalidate those tables again to\n     * remove any speculatively loaded cache lines.\n     */\n    dmb sy\n\n    adrp    x0, idmap_pg_dir\n    adrp    x1, idmap_pg_end\n    bl  dcache_inval_poc\n\n    adrp    x0, init_pg_dir\n    adrp    x1, init_pg_end\n    bl  dcache_inval_poc\n\n    ret x28\nSYM_FUNC_END(__create_page_tables)\n</code></pre>"},{"location":"arm/boot/#cpu_1","title":"\u521d\u59cb\u5316CPU","text":"<p>\u4ee3\u7801\u4f4d\u4e8e&lt;arch/arm64/mm/proc.S&gt;\u4e2d\uff1a <pre><code>/*\n *  __cpu_setup\n *\n *  Initialise the processor for turning the MMU on.\n *\n * Output:\n *  Return in x0 the value of the SCTLR_EL1 register.\n */\n    .pushsection \".idmap.text\", \"awx\"\nSYM_FUNC_START(__cpu_setup)\n    tlbi    vmalle1             // Invalidate local TLB\n    dsb nsh\n\n    mov x1, #3 &lt;&lt; 20\n    msr cpacr_el1, x1           // Enable FP/ASIMD\n    mov x1, #1 &lt;&lt; 12            // Reset mdscr_el1 and disable\n    msr mdscr_el1, x1           // access to the DCC from EL0\n    isb                 // Unmask debug exceptions now,\n    enable_dbg              // since this is per-cpu\n    reset_pmuserenr_el0 x1          // Disable PMU access from EL0\n    reset_amuserenr_el0 x1          // Disable AMU access from EL0\n\n    /*\n     * Default values for VMSA control registers. These will be adjusted\n     * below depending on detected CPU features.\n     */\n    mair    .req    x17\n    tcr .req    x16\n    mov_q   mair, MAIR_EL1_SET\n    mov_q   tcr, TCR_TxSZ(VA_BITS) | TCR_CACHE_FLAGS | TCR_SMP_FLAGS | \\\n            TCR_TG_FLAGS | TCR_KASLR_FLAGS | TCR_ASID16 | \\\n            TCR_TBI0 | TCR_A1 | TCR_KASAN_SW_FLAGS | TCR_MTE_FLAGS\n\n    tcr_clear_errata_bits tcr, x9, x5\n\n#ifdef CONFIG_ARM64_VA_BITS_52\n    ldr_l       x9, vabits_actual\n    sub     x9, xzr, x9\n    add     x9, x9, #64\n    tcr_set_t1sz    tcr, x9\n#else\n    ldr_l       x9, idmap_t0sz\n#endif\n    tcr_set_t0sz    tcr, x9\n\n    /*\n     * Set the IPS bits in TCR_EL1.\n     */\n    tcr_compute_pa_size tcr, #TCR_IPS_SHIFT, x5, x6\n#ifdef CONFIG_ARM64_HW_AFDBM\n    /*\n     * Enable hardware update of the Access Flags bit.\n     * Hardware dirty bit management is enabled later,\n     * via capabilities.\n     */\n    mrs x9, ID_AA64MMFR1_EL1\n    and x9, x9, #0xf\n    cbz x9, 1f\n    orr tcr, tcr, #TCR_HA       // hardware Access flag update\n1:\n#endif  /* CONFIG_ARM64_HW_AFDBM */\n    msr mair_el1, mair\n    msr tcr_el1, tcr\n    /*\n     * Prepare SCTLR\n     */\n    mov_q   x0, INIT_SCTLR_EL1_MMU_ON\n    ret                 // return to head.S\n\n    .unreq  mair\n    .unreq  tcr\nSYM_FUNC_END(__cpu_setup)\n</code></pre></p>"},{"location":"arm/boot/#mmu","title":"\u5f00\u542fMMU","text":"<pre><code>SYM_FUNC_START_LOCAL(__primary_switch)\n#ifdef CONFIG_RANDOMIZE_BASE\n    mov x19, x0             // preserve new SCTLR_EL1 value\n    mrs x20, sctlr_el1          // preserve old SCTLR_EL1 value\n#endif\n\n    adrp    x1, init_pg_dir\n    bl  __enable_mmu\n#ifdef CONFIG_RELOCATABLE\n#ifdef CONFIG_RELR\n    mov x24, #0             // no RELR displacement yet\n#endif\n    bl  __relocate_kernel\n#ifdef CONFIG_RANDOMIZE_BASE\n    ldr x8, =__primary_switched\n    adrp    x0, __PHYS_OFFSET\n    blr x8\n\n    /*\n     * If we return here, we have a KASLR displacement in x23 which we need\n     * to take into account by discarding the current kernel mapping and\n     * creating a new one.\n     */\n    pre_disable_mmu_workaround\n    msr sctlr_el1, x20          // disable the MMU\n    isb\n    bl  __create_page_tables        // recreate kernel mapping\n\n    tlbi    vmalle1             // Remove any stale TLB entries\n    dsb nsh\n    isb\n\n    set_sctlr_el1   x19         // re-enable the MMU\n\n    bl  __relocate_kernel\n#endif\n#endif\n    ldr x8, =__primary_switched\n    adrp    x0, __PHYS_OFFSET\n    br  x8                      //\u8df3\u8f6c\u81f3__primary_switched\nSYM_FUNC_END(__primary_switch)\n</code></pre> <p>__enable_mmu\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>/*\n * Enable the MMU.\n *\n *  x0  = SCTLR_EL1 value for turning on the MMU.\n *  x1  = TTBR1_EL1 value\n *\n * Returns to the caller via x30/lr. This requires the caller to be covered\n * by the .idmap.text section.\n *\n * Checks if the selected granule size is supported by the CPU.\n * If it isn't, park the CPU\n */\nSYM_FUNC_START(__enable_mmu)\n    mrs x2, ID_AA64MMFR0_EL1\n    ubfx    x2, x2, #ID_AA64MMFR0_TGRAN_SHIFT, 4\n    cmp     x2, #ID_AA64MMFR0_TGRAN_SUPPORTED_MIN\n    b.lt    __no_granule_support\n    cmp     x2, #ID_AA64MMFR0_TGRAN_SUPPORTED_MAX\n    b.gt    __no_granule_support\n    update_early_cpu_boot_status 0, x2, x3\n    adrp    x2, idmap_pg_dir\n    phys_to_ttbr x1, x1\n    phys_to_ttbr x2, x2\n    msr ttbr0_el1, x2           // load TTBR0\n    offset_ttbr1 x1, x3\n    msr ttbr1_el1, x1           // load TTBR1\n    isb\n\n    set_sctlr_el1   x0\n\n    ret\nSYM_FUNC_END(__enable_mmu)\n</code></pre> <p>\u5728\u5f00\u542f MMU \u4e4b\u540e\uff0c\u4f7f\u7528 bx \u547d\u4ee4\u8df3\u8f6c\u81f3 __primary_switched\uff0c\u8fdb\u884c\u6700\u540e\u7684\u6808\u8bbe\u7f6e\u548c\u5f02\u5e38\u5411\u91cf\u8868\u8bbe\u7f6e\uff0c\u7136\u540e\u8fdb\u5165 start_kernel\uff1a</p> <pre><code>/*\n * The following fragment of code is executed with the MMU enabled.\n *\n *   x0 = __PHYS_OFFSET\n */\nSYM_FUNC_START_LOCAL(__primary_switched)\n    adr_l   x4, init_task\n    init_cpu_task x4, x5, x6\n\n    adr_l   x8, vectors         // load VBAR_EL1 with virtual\n    msr vbar_el1, x8            // vector table address\n    isb\n\n    stp x29, x30, [sp, #-16]!\n    mov x29, sp\n\n    str_l   x21, __fdt_pointer, x5      // Save FDT pointer\n\n    ldr_l   x4, kimage_vaddr        // Save the offset between\n    sub x4, x4, x0          // the kernel virtual and\n    str_l   x4, kimage_voffset, x5      // physical mappings\n\n    // Clear BSS\n    adr_l   x0, __bss_start\n    mov x1, xzr\n    adr_l   x2, __bss_stop\n    sub x2, x2, x0\n    bl  __pi_memset\n    dsb ishst               // Make zero page visible to PTW\n\n#if defined(CONFIG_KASAN_GENERIC) || defined(CONFIG_KASAN_SW_TAGS)\n    bl  kasan_early_init\n#endif\n    mov x0, x21             // pass FDT address in x0\n    bl  early_fdt_map           // Try mapping the FDT early\n    bl  init_feature_override       // Parse cpu feature overrides\n#ifdef CONFIG_RANDOMIZE_BASE\n    tst x23, ~(MIN_KIMG_ALIGN - 1)  // already running randomized?\n    b.ne    0f\n    bl  kaslr_early_init        // parse FDT for KASLR options\n    cbz x0, 0f              // KASLR disabled? just proceed\n    orr x23, x23, x0            // record KASLR offset\n    ldp x29, x30, [sp], #16     // we must enable KASLR, return\n    ret                 // to __primary_switch()\n0:\n#endif\n    bl  switch_to_vhe           // Prefer VHE if possible\n    ldp x29, x30, [sp], #16\n    bl  start_kernel            //jump to kernel\n    ASM_BUG()\nSYM_FUNC_END(__primary_switched)\n</code></pre>"},{"location":"arm/boot/#_6","title":"\u542f\u52a8\u5185\u6838","text":"<p>\u5185\u6838\u542f\u52a8\u7684\u5165\u53e3\u51fd\u6570\u662f<code>start_kernel()</code>\uff1a</p> init/main.c<pre><code>asmlinkage __visible void __init __no_sanitize_address start_kernel(void)\n{\n    char *command_line;\n    char *after_dashes;\n\n    set_task_stack_end_magic(&amp;init_task);\n    smp_setup_processor_id();\n    debug_objects_early_init();\n    init_vmlinux_build_id();\n\n    cgroup_init_early();\n\n    local_irq_disable();\n    early_boot_irqs_disabled = true;\n\n    /*\n     * Interrupts are still disabled. Do necessary setups, then\n     * enable them.\n     */\n    boot_cpu_init();\n    page_address_init();\n    pr_notice(\"%s\", linux_banner);\n    early_security_init();\n    setup_arch(&amp;command_line);\n    setup_boot_config();\n    setup_command_line(command_line);\n    setup_nr_cpu_ids();\n    setup_per_cpu_areas();\n    smp_prepare_boot_cpu(); /* arch-specific boot-cpu hooks */\n    boot_cpu_hotplug_init();\n\n    build_all_zonelists(NULL);\n    page_alloc_init();\n\n    pr_notice(\"Kernel command line: %s\\n\", saved_command_line);\n    /* parameters may set static keys */\n    jump_label_init();\n    parse_early_param();\n    after_dashes = parse_args(\"Booting kernel\",\n                  static_command_line, __start___param,\n                  __stop___param - __start___param,\n                  -1, -1, NULL, &amp;unknown_bootoption);\n    print_unknown_bootoptions();\n    if (!IS_ERR_OR_NULL(after_dashes))\n        parse_args(\"Setting init args\", after_dashes, NULL, 0, -1, -1,\n               NULL, set_init_arg);\n    if (extra_init_args)\n        parse_args(\"Setting extra init args\", extra_init_args,\n               NULL, 0, -1, -1, NULL, set_init_arg);\n\n    /*\n     * These use large bootmem allocations and must precede\n     * kmem_cache_init()\n     */\n    setup_log_buf(0);\n    vfs_caches_init_early();\n    sort_main_extable();\n    trap_init();\n    mm_init();\n\n    ftrace_init();\n\n    /* trace_printk can be enabled here */\n    early_trace_init();\n\n    /*\n     * Set up the scheduler prior starting any interrupts (such as the\n     * timer interrupt). Full topology setup happens at smp_init()\n     * time - but meanwhile we still have a functioning scheduler.\n     */\n    sched_init();\n\n    if (WARN(!irqs_disabled(),\n         \"Interrupts were enabled *very* early, fixing it\\n\"))\n        local_irq_disable();\n    radix_tree_init();\n\n    /*\n     * Set up housekeeping before setting up workqueues to allow the unbound\n     * workqueue to take non-housekeeping into account.\n     */\n    housekeeping_init();\n\n    /*\n     * Allow workqueue creation and work item queueing/cancelling\n     * early.  Work item execution depends on kthreads and starts after\n     * workqueue_init().\n     */\n    workqueue_init_early();\n\n    rcu_init();\n\n    /* Trace events are available after this */\n    trace_init();\n\n    if (initcall_debug)\n        initcall_debug_enable();\n\n    context_tracking_init();\n    /* init some links before init_ISA_irqs() */\n    early_irq_init();\n    init_IRQ();\n    tick_init();\n    rcu_init_nohz();\n    init_timers();\n    srcu_init();\n    hrtimers_init();\n    softirq_init();\n    timekeeping_init();\n    kfence_init();\n    time_init();\n\n    /*\n     * For best initial stack canary entropy, prepare it after:\n     * - setup_arch() for any UEFI RNG entropy and boot cmdline access\n     * - timekeeping_init() for ktime entropy used in random_init()\n     * - time_init() for making random_get_entropy() work on some platforms\n     * - random_init() to initialize the RNG from from early entropy sources\n     */\n    random_init(command_line);\n    boot_init_stack_canary();\n\n    perf_event_init();\n    profile_init();\n    call_function_init();\n    WARN(!irqs_disabled(), \"Interrupts were enabled early\\n\");\n\n    early_boot_irqs_disabled = false;\n    local_irq_enable();\n\n    kmem_cache_init_late();\n\n    /*\n     * HACK ALERT! This is early. We're enabling the console before\n     * we've done PCI setups etc, and console_init() must be aware of\n     * this. But we do want output early, in case something goes wrong.\n     */\n    console_init();\n    if (panic_later)\n        panic(\"Too many boot %s vars at `%s'\", panic_later,\n              panic_param);\n\n    lockdep_init();\n\n    /*\n     * Need to run this when irqs are enabled, because it wants\n     * to self-test [hard/soft]-irqs on/off lock inversion bugs\n     * too:\n     */\n    locking_selftest();\n\n    /*\n     * This needs to be called before any devices perform DMA\n     * operations that might use the SWIOTLB bounce buffers. It will\n     * mark the bounce buffers as decrypted so that their usage will\n     * not cause \"plain-text\" data to be decrypted when accessed.\n     */\n    mem_encrypt_init();\n\n#ifdef CONFIG_BLK_DEV_INITRD\n    if (initrd_start &amp;&amp; !initrd_below_start_ok &amp;&amp;\n        page_to_pfn(virt_to_page((void *)initrd_start)) &lt; min_low_pfn) {\n        pr_crit(\"initrd overwritten (0x%08lx &lt; 0x%08lx) - disabling it.\\n\",\n            page_to_pfn(virt_to_page((void *)initrd_start)),\n            min_low_pfn);\n        initrd_start = 0;\n    }\n#endif\n    setup_per_cpu_pageset();\n    numa_policy_init();\n    acpi_early_init();\n    if (late_time_init)\n        late_time_init();\n    sched_clock_init();\n    calibrate_delay();\n    pid_idr_init();\n    anon_vma_init();\n\n    thread_stack_cache_init();\n    cred_init();\n    fork_init();\n    proc_caches_init();\n    uts_ns_init();\n    key_init();\n    security_init();\n    dbg_late_init();\n    net_ns_init();\n    vfs_caches_init();\n    pagecache_init();\n    signals_init();\n    seq_file_init();\n    proc_root_init();\n    nsfs_init();\n    cpuset_init();\n    cgroup_init();\n    taskstats_init_early();\n    delayacct_init();\n\n    poking_init();\n    check_bugs();\n\n    acpi_subsystem_init();\n    arch_post_acpi_subsys_init();\n    kcsan_init();\n\n    /* Do the rest non-__init'ed, we're now alive */\n    arch_call_rest_init();\n\n    prevent_tail_call_optimization();\n}\n</code></pre>"},{"location":"arm/boot/#set_task_stack_end_magic","title":"set_task_stack_end_magic","text":"<p>\u8bbe\u7f6e 0 \u53f7\u8fdb\u7a0b</p>"},{"location":"arm/boot/#setup_arch","title":"setup_arch","text":"<p><code>setup_arch()</code>\u51fd\u6570\u8d1f\u8d23\u4e0e\u5e73\u53f0\u76f8\u5173\u7684\u4e00\u7cfb\u5217\u521d\u59cb\u5316\u3002</p>"},{"location":"arm/boot/#_7","title":"\u5c55\u5f00\u8bbe\u5907\u6811","text":"<p><code>setup_machine_fdt(__fdt_pointer)</code>\uff1a<code>fdt_pointer</code>\u6307\u5411\u8bbe\u5907\u6811\u7684\u8d77\u59cb\u5730\u5740</p> <p>\u6b64\u65f6MMU\u5df2\u7ecf\u5f00\u542f\uff0c\u9700\u8981\u5c06 dtb \u4f4d\u4e8e\u5185\u5b58\u7684\u7269\u7406\u5730\u5740\u6620\u5c04\u6210\u865a\u62df\u5730\u5740\u3002</p>"},{"location":"arm/boot/#arch_call_rest_init","title":"arch_call_rest_init","text":"<p>init \u8fdb\u7a0b\u521a\u5f00\u59cb\u7531\u5185\u6838\u521b\u5efa\uff0c\u5c5e\u4e8e\u5185\u6838\u7ebf\u7a0b\u3002\u5f53\u5185\u6838\u6302\u8f7d\u5b8c\u6839\u6587\u4ef6\u7cfb\u7edf\u540e\uff0c\u7d27\u63a5\u7740\u8fd0\u884c\u4e00\u4e2a\u7528\u6237\u6001\u7684\u7a0b\u5e8f(linuxrc\u6216\u8005/sbin/init\u6216\u8005/etc/init\u6216\u8005/bin/init\u6216\u8005/bin/sh)\u2014\u2014\u8be5\u7a0b\u5e8f\u7531 uboot \u4f20\u9012\u7ed9\u5185\u6838\u3002\u6b64\u65f6 init \u8fdb\u7a0b\u628a\u81ea\u5df1\u5f3a\u884c\u8f6c\u6210\u4e86\u7528\u6237\u6001\uff0c\u5373\u4e3a\u7528\u6237\u6001\u6240\u6709\u8fdb\u7a0b\u7684\u7956\u5148\u3002</p> <pre><code>arch_call_rest_init()\n    -&gt; rest_init()\n        -&gt; pid = kernel_thread(kernel_init, NULL, CLONE_FS);        //\u521b\u5efakernel_init\u7ebf\u7a0b\n        -&gt; pid = kernel_thread(kthreadd, NULL, CLONE_FS | CLONE_FILES); //\u521b\u5efakthreadd\u7ebf\u7a0b \n        -&gt; complete(&amp;kthreadd_done);    //\u8868\u793akthreadd\u8fdb\u7a0b\u5df2\u7ecf\u5b8c\u6210\u521d\u59cb\u5316\n        -&gt; schedule_preempt_disabled(); //\u8c03\u5ea6\u4e00\u4e2a\u7981\u6b62\u62a2\u5360\u7684idle\u7ebf\u7a0b\uff0c\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u5b83\n        -&gt; cpu_startup_entry(CPUHP_ONLINE); //\u542f\u52a8idle\u8fdb\u7a0b\n</code></pre>"},{"location":"arm/cache/","title":"\u9ad8\u901f\u7f13\u5b58","text":""},{"location":"arm/exception/","title":"\u5f02\u5e38\u5904\u7406","text":""},{"location":"arm/exception/#_2","title":"\u5f02\u5e38","text":"<p>\u5728 ARM64 \u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0c\u5f02\u5e38\u53ef\u4ee5\u5206\u4e3a\u540c\u6b65\u5f02\u5e38\u548c\u5f02\u6b65\u5f02\u5e38\uff0c\u5f02\u6b65\u5f02\u5e38\u5c31\u662f\u5e38\u8bf4\u7684\u4e2d\u65ad\u3002</p>"},{"location":"arm/exception/#_3","title":"\u5f02\u5e38\u7c7b\u578b","text":"<ol> <li> <p>\u4e2d\u65ad</p> <p>\u5728 ARM64 \u5904\u7406\u5668\u4e2d\uff0c\u4e2d\u65ad\u8bf7\u6c42\u5206\u4e3a\u666e\u901a\u4e2d\u65ad\u8bf7\u6c42(IRQ)\u548c\u5feb\u901f\u4e2d\u65ad\u8bf7\u6c42(FIQ)\uff0c\u5176\u4e2d FIQ \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e IRQ\u3002</p> <p>\u5916\u8bbe\u7684\u4e2d\u65ad\u5f15\u811a\u8fde\u63a5\u5230\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u4e2d\u65ad\u63a7\u5236\u5668\u7684 IRQ \u7ebf\u548c FIQ \u7ebf\u5206\u522b\u8fde\u63a5\u5230 CPU \u5185\u90e8\u7684 IRQ \u5f15\u811a\u548c FIQ \u5f15\u811a\u3002\u5916\u8bbe\u7684\u8bf7\u6c42\u5148\u9001\u5230\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u7531\u4e2d\u65ad\u63a7\u5236\u5668\u4ef2\u88c1\u5e76\u786e\u5b9a\u5176\u4f18\u5148\u7ea7\uff0c\u7136\u540e\u518d\u53d1\u9001\u7ed9 CPU\u3002</p> </li> <li> <p>\u4e2d\u6b62</p> <p>\u4e2d\u6b62\u5206\u4e3a\u6307\u4ee4\u4e2d\u6b62\u548c\u6570\u636e\u4e2d\u6b62\uff0c\u901a\u5e38\u662f\u8bbf\u95ee\u5185\u5b58\u5730\u5740\u65f6\u53d1\u751f\u4e86\u9519\u8bef\uff0c\u5904\u7406\u5668\u7684 MMU \u6355\u83b7\u8fd9\u4e9b\u9519\u8bef\u5e76\u62a5\u544a\u7ed9\u5904\u7406\u5668\u3002</p> </li> <li> <p>\u590d\u4f4d</p> <p>\u590d\u4f4d\u662f\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u4e00\u79cd\u5f02\u5e38\u5904\u7406\uff0cCPU \u590d\u4f4d\u5f15\u811a\u4ea7\u751f\u590d\u4f4d\u4fe1\u53f7\uff0c\u8ba9 CPU \u8fdb\u5165\u590d\u4f4d\u72b6\u6001\uff0c\u7136\u540e\u91cd\u65b0\u542f\u52a8\u3002</p> </li> <li> <p>\u5f02\u5e38\u6307\u4ee4</p> <ul> <li><code>SVC</code>\u6307\u4ee4\uff1a\u7cfb\u7edf\u8c03\u7528\u6307\u4ee4\uff0c\u7528\u4e8e\u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u670d\u52a1</li> <li><code>HVC</code>\u6307\u4ee4\uff1a\u786c\u4ef6\u865a\u62df\u5316\u6307\u4ee4\uff0c\u7528\u4e8e\u8c03\u7528\u865a\u62df\u5316(Hypervisor)\u76f8\u5173\u7684\u670d\u52a1</li> <li><code>SMC</code>\u6307\u4ee4\uff1a\u5b89\u5168\u76d1\u89c6\u5668\u8c03\u7528\u6307\u4ee4\uff0c\u7528\u4e8e\u8c03\u7528\u5b89\u5168\u76d1\u89c6\u5668\u63d0\u4f9b\u7684\u670d\u52a1</li> </ul> </li> </ol>"},{"location":"arm/exception/#_4","title":"\u5f02\u5e38\u7b49\u7ea7","text":"<p>ARM64 \u5904\u7406\u5668\u5206\u4e3a\u4e24\u79cd\u6a21\u5f0f\uff1a\u7279\u6743\u6a21\u5f0f\u548c\u975e\u7279\u6743\u6a21\u5f0f\u3002\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u8fd0\u884c\u5728\u7279\u6743\u6a21\u5f0f\uff0c\u800c\u7528\u6237\u6001\u7a0b\u5e8f\u8fd0\u884c\u5728\u975e\u7279\u6743\u6a21\u5f0f\u3002\u9664\u6b64\u4e4b\u5916\uff0cARM64 \u8fd8\u652f\u6301\u865a\u62df\u5316\u6269\u5c55\u4ee5\u53ca\u5b89\u5168\u6a21\u5f0f\u6269\u5c55\uff0c\u8fd9\u56db\u79cd\u6a21\u5f0f\u88ab\u79f0\u4e3a\u5f02\u5e38\u7b49\u7ea7(Exception Level)\uff1a</p> <ul> <li>EL0\uff1a\u975e\u7279\u6743\u6a21\u5f0f\uff0c\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f</li> <li>EL1\uff1a\u7279\u6743\u6a21\u5f0f\uff0c\u8fd0\u884c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838</li> <li>EL1\uff1a\u865a\u62df\u5316\u6a21\u5f0f\uff0c\u8fd0\u884c\u865a\u62df\u5316\u7ba1\u7406\u7a0b\u5e8f</li> <li>EL2\uff1a\u5b89\u5168\u6a21\u5f0f\uff0c\u8fd0\u884c\u5b89\u5168\u4e16\u754c\u7ba1\u7406\u7a0b\u5e8f</li> </ul>"},{"location":"arm/exception/#_5","title":"\u5f02\u5e38\u5904\u7406\u6d41\u7a0b","text":"<p>\u5f53\u5f02\u5e38\u53d1\u751f\u540e\uff0c\u5185\u6838\u5fc5\u987b\u80fd\u611f\u77e5\u5f02\u5e38\u7684\u53d1\u751f\uff0c\u5e76\u4e14\u751f\u6210\u4e00\u4e2a\u5f53\u524d\u7684\u5f02\u5e38\u7b49\u7ea7 ELx\uff0c\u7136\u540e\uff1a</p> <ol> <li>\u628a PSTATE \u5bc4\u5b58\u5668\u7684\u503c\u4fdd\u5b58\u5230\u5bf9\u5e94\u5f02\u5e38\u7b49\u7ea7\u7684 SPSR_ELx\u4e2d</li> <li>\u628a\u8fd4\u56de\u5730\u5740\u4fdd\u5b58\u5230\u5bf9\u5e94\u5f02\u5e38\u7b49\u7ea7\u7684 ELR_ELx \u4e2d</li> <li>\u5c06 PSTATE \u5bc4\u5b58\u5668\u91cc\u7684D\u3001A\u3001I\u3001F\u6807\u5fd7\u4f4d\u8bbe\u4e3a1\uff0c\u5373\u5173\u95ed\u8c03\u8bd5\u5f02\u5e38\u3001SError\u3001IRQ\u548cFIQ</li> <li>\u5207\u6362 SP \u5bc4\u5b58\u5668\u4e3a\u76ee\u6807\u5f02\u5e38\u7b49\u7ea7\u7684 SP_ELx \u5bc4\u5b58\u5668</li> <li>\u5207\u6362\u5230\u5bf9\u5e94\u76ee\u6807\u5f02\u5e38\u7b49\u7ea7 ELx\uff0c\u7136\u540e\u8df3\u8f6c\u5230\u5f02\u5e38\u5411\u91cf\u8868\u4e2d</li> <li>\u6267\u884c\u5f02\u5e38\u5411\u91cf\u8868\u4e2d\u5bf9\u5e94\u7684\u5f02\u5e38\u5904\u7406\u51fd\u6570</li> <li>\u6267\u884c<code>ERET</code>\u6307\u4ee4\u4ece\u5f02\u5e38\u8fd4\u56de</li> </ol> <p>ERET\u6307\u4ee4\u9700\u8981\u5b8c\u6210\uff1a</p> <ol> <li>\u4ece ELR_ELx \u4e2d\u6062\u590d PC \u6307\u9488</li> <li>\u4ece SPSR_ELx \u4e2d\u6062\u590d PSTATE \u5bc4\u5b58\u5668</li> </ol> <p>\u6839\u636e\u7cfb\u7edf\u7684\u914d\u7f6e\uff0c\u5f02\u5e38\u53ef\u4ee5\u5728\u5f53\u524d\u5f02\u5e38\u7b49\u7ea7\u5904\u7406\uff0c\u4e5f\u53ef\u4ee5\u9677\u5165\u66f4\u9ad8\u7ea7\u522b\u5f02\u5e38\u7b49\u7ea7\u53bb\u5904\u7406\u3002\u4f46\u662f EL0 \u4e0d\u80fd\u7528\u6765\u5904\u7406\u5f02\u5e38\u3002</p> <p>\u7531\u4e8e\u4e0d\u540c\u5f02\u5e38\u7b49\u7ea7\u90fd\u6709\u5bf9\u5e94\u7684 SP \u5bc4\u5b58\u5668\uff0c\u56e0\u6b64\u5728\u6c47\u7f16\u4ee3\u7801\u8df3\u8f6c\u5230<code>main()</code>\u51fd\u6570\u4e4b\u524d\uff0c\u9700\u8981\u786e\u4fdd\u6bcf\u4e2a\u5f02\u5e38\u7b49\u7ea7\u5bf9\u5e94\u7684\u6808\u7a7a\u95f4\u53ef\u7528\u3002</p> <p>\u5f02\u5e38\u5904\u7406\u7684\u6267\u884c\u72b6\u6001\u4fdd\u5b58\u5728 HCR_EL2 \u5bc4\u5b58\u5668\u4e2d\uff0c\u8fd4\u56de\u65f6\u7684\u6267\u884c\u72b6\u6001\u4fdd\u5b58\u5728 SPSR \u4e2d\u3002</p>"},{"location":"arm/exception/#_6","title":"\u5f02\u5e38\u5411\u91cf\u8868","text":"<p>\u5f02\u5e38\u5411\u91cf\u8868\u548c\u5f02\u5e38\u5904\u7406\u51fd\u6570\u5728&lt;arch/arm64/kernel/entry.S&gt;\u4e2d\u5b9a\u4e49\uff1a</p> <pre><code>SYM_CODE_START(vectors)\n    kernel_ventry   1, sync_invalid         // Synchronous EL1t\n    kernel_ventry   1, irq_invalid          // IRQ EL1t\n    kernel_ventry   1, fiq_invalid          // FIQ EL1t\n    kernel_ventry   1, error_invalid        // Error EL1t\n\n    kernel_ventry   1, sync             // Synchronous EL1h\n    kernel_ventry   1, irq              // IRQ EL1h\n    kernel_ventry   1, fiq_invalid          // FIQ EL1h\n    kernel_ventry   1, error            // Error EL1h\n\n    kernel_ventry   0, sync             // Synchronous 64-bit EL0\n    kernel_ventry   0, irq              // IRQ 64-bit EL0\n    kernel_ventry   0, fiq_invalid          // FIQ 64-bit EL0\n    kernel_ventry   0, error            // Error 64-bit EL0\n\n#ifdef CONFIG_COMPAT\n    kernel_ventry   0, sync_compat, 32      // Synchronous 32-bit EL0\n    kernel_ventry   0, irq_compat, 32       // IRQ 32-bit EL0\n    kernel_ventry   0, fiq_invalid_compat, 32   // FIQ 32-bit EL0\n    kernel_ventry   0, error_compat, 32     // Error 32-bit EL0\n#else\n    kernel_ventry   0, sync_invalid, 32     // Synchronous 32-bit EL0\n    kernel_ventry   0, irq_invalid, 32      // IRQ 32-bit EL0\n    kernel_ventry   0, fiq_invalid, 32      // FIQ 32-bit EL0\n    kernel_ventry   0, error_invalid, 32        // Error 32-bit EL0\n#endif\nSYM_CODE_END(vectors)\n</code></pre> <p>\u5f02\u5e38\u5411\u91cf\u8868\u5b58\u653e\u7684\u57fa\u5730\u5740\u53ef\u4ee5\u901a\u8fc7\u5411\u91cf\u57fa\u5740\u5bc4\u5b58\u5668(Vector Base Address Register)\u6765\u8bbe\u7f6e\u3002\u5728 ARM64 \u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0c\u9664\u4e86 EL0\uff0c\u6bcf\u4e2a\u5f02\u5e38\u7b49\u7ea7\u90fd\u6709\u81ea\u5df1\u7684\u5f02\u5e38\u5411\u91cf\u8868\uff0c\u57fa\u5730\u5740\u4fdd\u5b58\u5728\u5bf9\u5e94\u7684 VBAR_ELx \u5bc4\u5b58\u5668\u4e2d\u3002</p> <p></p> <p>\u6839\u636e\u5b98\u65b9\u6587\u6863\u53ef\u77e5\uff0c\u5982\u679c\u5904\u7406\u5668\u5728\u5185\u6838\u6001 EL1 \u5f02\u5e38\u7b49\u7ea7\u4e2d\u89e6\u53d1\u4e86 IRQ\uff0c\u4e14\u914d\u7f6e\u4e86 SP_EL1 \u5bc4\u5b58\u5668\u4f5c\u4e3a\u6808\u6307\u9488\uff0c\u90a3\u4e48\u5904\u7406\u5668\u5c31\u4f1a\u8df3\u8f6c\u5230\"VBAR_EL1 + 0x280\"\u5730\u5740\u5904\u7684\u5f02\u5e38\u5411\u91cf\u4e2d\u3002\u5982\u679c\u5904\u7406\u5668\u5728\u7528\u6237\u6001 EL0 \u5f02\u5e38\u767b\u8bb0\u4e2d\u89e6\u53d1\u4e86 IRQ\uff0c\u82e5\u4e3a AArch64 \u6267\u884c\u72b6\u6001\uff0c\u90a3\u4e48\u5904\u7406\u5668\u5c31\u4f1a\u8df3\u8f6c\u5230\"VBAR_EL1 + 0x480\"\u5730\u5740\u5904\u7684\u5f02\u5e38\u5411\u91cf\u4e2d\u3002</p>"},{"location":"arm/exception/#_7","title":"\u4e2d\u65ad","text":"<p>ARM64 \u5904\u7406\u5668\u4e0a\u6709\u4e24\u4e2a\u4e0e\u4e2d\u65ad\u76f8\u5173\u7684\u5f15\u811a\uff1a</p> <ul> <li>nIRQ\uff1aIRQ \u4fe1\u53f7\uff0c\u6bcf\u4e2a CPU \u5185\u6838\u90fd\u6709\u4e00\u6839\u4fe1\u53f7\u7ebf\uff0c\u4f4e\u7535\u5e73\u6709\u6548</li> <li>nFIQ\uff1aFIQ \u4fe1\u53f7\uff0c\u6bcf\u4e2a CPU \u5185\u6838\u90fd\u6709\u4e00\u6839\u4fe1\u53f7\u7ebf\uff0c\u4f4e\u7535\u5e73\u6709\u6548</li> </ul> <p>PSTATE \u5bc4\u5b58\u5668\u91cc\u9762\u6709\u4e24\u4f4d\u4e0e\u4e2d\u65ad\u6709\u5173\uff0c\u53ef\u4ee5\u7528\u6765\u5c4f\u853d\u548c\u6253\u5f00\u4e2d\u65ad\uff0c\u5206\u522b\u662f I\u2014\u2014IRQ\uff0cF\u2014\u2014FIQ\u3002</p>"},{"location":"arm/exception/#_8","title":"\u4e2d\u65ad\u5904\u7406\u8fc7\u7a0b","text":"<p>\u4e00\u822c\u7684\u4e2d\u65ad\u5904\u7406\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u4fdd\u5b58\u73b0\u573a\uff0c\u7136\u540e\u8df3\u8f6c\u5230\u4e2d\u65ad\u5411\u91cf\u8868\u4e2d</li> <li>\u6839\u636e\u4e2d\u65ad\u5411\u91cf\u8868\u4e2d\u7684\u5730\u5740\uff0c\u8df3\u8f6c\u5230\u9876\u5c42\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f</li> <li>\u8bfb\u53d6\u4e2d\u65ad\u53f7\uff0c\u6839\u636e\u4e2d\u65ad\u53f7\uff0c\u8df3\u8f6c\u5230\u8bbe\u5907\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f</li> <li>\u5728\u8bbe\u5907\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4e2d\uff0c\u5904\u7406\u8fd9\u4e2a\u4e2d\u65ad</li> <li>\u8fd4\u56de\u9876\u5c42\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u8c03\u7528ERET\u6307\u4ee4\u8fd4\u56de\u73b0\u573a</li> <li>\u6267\u884c\u4e2d\u65ad\u524d\u7684\u4e0b\u4e00\u6761\u6307\u4ee4</li> </ol>"},{"location":"arm/exception/#_9","title":"\u4e2d\u65ad\u73b0\u573a","text":"<p>\u4e2d\u65ad\u53d1\u751f\u65f6\u9700\u8981\u4fdd\u5b58\u73b0\u573a\uff0cARM64 \u5904\u7406\u5668\u9700\u8981\u4fdd\u5b58\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ul> <li>PSTATE \u5bc4\u5b58\u5668\u91cc\u7684\u503c</li> <li>PC \u503c</li> <li>SP \u503c</li> <li>X0~X30 \u5bc4\u5b58\u5668\u91cc\u7684\u503c</li> </ul> <p>\u6808\u6846\u6570\u636e\u7ed3\u6784<code>struct pt_regs</code>\u7528\u6765\u63cf\u8ff0\u9700\u8981\u4fdd\u5b58\u7684\u4e2d\u65ad\u73b0\u573a\uff1a</p> <pre><code>struct pt_regs {\n    union {\n        struct user_pt_regs user_regs;\n        struct {\n            u64 regs[31];\n            u64 sp;\n            u64 pc;\n            u64 pstate;\n        };\n    };\n    u64 orig_x0;\n#ifdef __AARCH64EB__\n    u32 unused2;\n    s32 syscallno;\n#else\n    s32 syscallno;\n    u32 unused2;\n#endif\n    u64 sdei_ttbr1;\n    /* Only valid when ARM64_HAS_IRQ_PRIO_MASKING is enabled. */\n    u64 pmr_save;\n    u64 stackframe[2];\n\n    /* Only valid for some EL1 exceptions. */\n    u64 lockdep_hardirqs;\n    u64 exit_rcu;\n};\n</code></pre> <ul> <li>\u6808\u6846\u7684 PSTATE \u4fdd\u5b58 SPSR_EL1 \u7684\u5185\u5bb9</li> <li>\u6808\u6846\u7684 PC \u4fdd\u5b58 ELR_EL1 \u7684\u5185\u5bb9</li> <li>\u6808\u6846\u7684 SP \u4fdd\u5b58\u6808\u9876\u7684\u4f4d\u7f6e</li> <li>\u6808\u6846\u7684 regs[30] \u4fdd\u5b58 LR \u7684\u503c</li> <li>\u6808\u6846\u7684 regs[0] ~ regs[29] \u4fdd\u5b58 X0~X29 \u7684\u503c</li> </ul>"},{"location":"arm/gic/","title":"GIC","text":"<p>\u7531\u4e8e\u73b0\u5728\u7684 SoC \u505a\u5f97\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u4e2d\u65ad\u7684\u7ba1\u7406\u8d8a\u6765\u8d8a\u56f0\u96be\uff0c\u6240\u4ee5 ARM \u516c\u53f8\u4e13\u95e8\u5f00\u53d1\u4e86 GIC\uff0c\u7528\u4e8e\u7edf\u4e00\u7ba1\u7406\u4e2d\u65ad\u3002\u76ee\u524d\u6700\u65b0\u7248\u672c\u662f GIC-V4\u3002</p> <p></p> <p>GIC \u4ece\u529f\u80fd\u4e0a\u6765\u8bf4\uff0c\u9664\u4e86\u5e38\u7528\u7684\u4e2d\u65ad\u4f7f\u80fd\u3001\u4e2d\u65ad\u5c4f\u853d\u3001\u4f18\u5148\u7ea7\u7ba1\u7406\u7b49\uff0c\u8fd8\u652f\u6301\u5b89\u5168\u6269\u5c55\u548c\u865a\u62df\u5316\u3002\u4ece\u7ec4\u6210\u4e0a\u6765\u8bf4\uff0c\u5206\u4e3a\u5206\u53d1\u5668(distributor)\u548cCPU\u63a5\u53e3(CPU interface)\u3002\u5206\u53d1\u5668\u8d1f\u8d23\u5bf9\u4e2d\u65ad\u6e90\u8fdb\u884c\u4ef2\u88c1\uff0c\u5e76\u5c06\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u53d1\u9001\u7ed9 CPU \u63a5\u53e3\uff0cCPU \u63a5\u53e3\u8d1f\u8d23\u5c06\u4e2d\u65ad\u53d1\u9001\u7ed9 CPU\u3002\u5206\u53d1\u5668\u53ea\u6709\u4e00\u4e2a\uff0c\u662f\u516c\u7528\u7684\uff0c\u4f46\u662f\u6bcf\u4e2a CPU \u6838\u5fc3\u90fd\u6709\u4e00\u4e2a CPU \u63a5\u53e3\uff0c\u5b83\u4eec\u901a\u8fc7 nIRQ \u548c nFIQ \u5f15\u811a\u8fde\u63a5\u3002</p> <p>GIC\u652f\u6301\u4e09\u79cd\u7c7b\u578b\u7684\u4e2d\u65ad\uff1a</p> <ul> <li> <p>SGI\uff08Software Generated Interrupt\uff09\uff1a\u8f6f\u4ef6\u4ea7\u751f\u7684\u4e2d\u65ad\uff0c\u53ef\u4ee5\u7528\u4e8e\u591a\u6838\u95f4\u7684\u901a\u4fe1\uff0c\u4e00\u4e2aCPU\u53ef\u4ee5\u901a\u8fc7\u5199 GIC \u7684\u5bc4\u5b58\u5668\u7ed9\u53e6\u5916\u4e00\u4e2a CPU \u4ea7\u751f\u4e2d\u65ad\u3002SGI \u4fdd\u7559\u4e2d\u65ad ID \u662f 0~15.</p> </li> <li> <p>PPI\uff08Private Peripheral Interrupt\uff09\uff1a\u67d0\u4e2a CPU \u79c1\u6709\u5916\u8bbe\u7684\u4e2d\u65ad\uff0c\u53ea\u80fd\u53d1\u7ed9\u7ed1\u5b9a\u7684\u90a3\u4e2a CPU\u3002PPI \u4fdd\u7559\u4e2d\u65ad ID \u662f 16~31\u3002</p> </li> <li> <p>SPI\uff08Shared Peripheral Interrupt\uff09\uff1a\u5171\u4eab\u5916\u8bbe\u7684\u4e2d\u65ad\uff0c\u53ef\u4ee5\u53d1\u9001\u7ed9\u4efb\u4f55\u4e00\u4e2a CPU\u3002SPI \u4fdd\u7559\u4e2d\u65ad ID \u662f 32~1020\u3002</p> </li> </ul> <p>\u6bcf\u4e00\u4e2a\u4e2d\u65ad\u652f\u6301\u7684\u72b6\u6001\u6709\u4ee5\u4e0b4\u79cd\uff1a</p> <ul> <li>Inactive\uff1a\u4e2d\u65ad\u5904\u4e8e\u65e0\u6548\u72b6\u6001</li> <li>Pending\uff1a\u4e2d\u65ad\u5904\u4e8e\u6709\u6548\u72b6\u6001\uff0c\u4f46\u5c1a\u672a\u4f20\u9012\u7ed9\u76ee\u6807 CPU</li> <li>Active\uff1a\u53d1\u751f\u4e86\u4e2d\u65ad\u5e76\u4f20\u9012\u7ed9\u76ee\u6807 CPU</li> <li>Active and pending\uff1aCPU \u6b63\u5728\u54cd\u5e94\uff0c\u4f46\u662f\u8be5\u4e2d\u65ad\u6e90\u53c8\u4ea7\u751f\u4e86\u76f8\u540c\u7684\u4e2d\u65ad</li> </ul> <p>\u5916\u8bbe\u4e2d\u65ad\u652f\u6301\u4e24\u79cd\u89e6\u53d1\u65b9\u5f0f\uff1a</p> <ul> <li>\u8fb9\u6cbf\u89e6\u53d1\uff1a\u5f53\u4e2d\u65ad\u6e90\u4ea7\u751f\u4e00\u4e2a\u4e0a\u5347\u6cbf\u6216\u8005\u4e0b\u964d\u6cbf\u65f6\uff0c\u89e6\u53d1\u4e00\u4e2a\u4e2d\u65ad</li> <li>\u7535\u5e73\u89e6\u53d1\uff1a\u5f53\u4e2d\u65ad\u6e90\u4ea7\u751f\u4e00\u4e2a\u9ad8\u7535\u5e73\u6216\u8005\u4f4e\u7535\u5e73\u65f6\uff0c\u89e6\u53d1\u4e00\u4e2a\u4e2d\u65ad</li> </ul>"},{"location":"arm/gic/#_1","title":"\u4e2d\u65ad\u6d41\u7a0b","text":"<p>GIC \u68c0\u6d4b\u4e2d\u65ad\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u5f53 GIC \u68c0\u6d4b\u5230\u4e00\u4e2a\u4e2d\u65ad\u65f6\uff0c\u6807\u8bb0\u8be5\u4e2d\u65ad\u4e3a pending \u72b6\u6001</li> <li>\u5bf9\u4e8e pending \u72b6\u6001\u7684\u4e2d\u65ad\uff0c\u5206\u53d1\u5668\u4f1a\u786e\u5b9a\u76ee\u6807 CPU\uff0c\u5c06\u4e2d\u65ad\u8bf7\u6c42\u53d1\u9001\u7ed9\u8fd9\u4e2a CPU</li> <li>\u5982\u679c\u6709\u591a\u4e2a\u5904\u4e8e pending \u72b6\u6001\u7684\u4e2d\u65ad\uff0c\u5206\u53d1\u5668\u4f1a\u9009\u62e9\u4e00\u4e2a\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u4e2d\u65ad\uff0c\u53d1\u9001\u7ed9 CPU \u63a5\u53e3</li> <li>CPU \u63a5\u53e3\u4f1a\u51b3\u5b9a\u8fd9\u4e2a\u4e2d\u65ad\u662f\u5426\u53ef\u4ee5\u53d1\u9001\u7ed9 CPU\uff0c\u5982\u679c\u53ef\u4ee5\uff0cGIC \u5c31\u4f1a\u53d1\u9001\u4e00\u4e2a\u4e2d\u65ad\u8bf7\u6c42\u4fe1\u53f7\u7ed9 CPU</li> <li> <p>CPU \u8fdb\u5165\u4e2d\u65ad\u5f02\u5e38\uff0c\u8df3\u8f6c\u5230\u9876\u5c42\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u8bfb\u53d6\u5bc4\u5b58\u5668\u4e2d\u7684\u4e2d\u65ad\u6e90\u4fe1\u606f\uff0c\u540c\u65f6 GIC \u4f1a\u505a\u4ee5\u4e0b\u5904\u7406\uff1a</p> <ul> <li>\u5982\u679c\u8be5\u4e2d\u65ad\u5904\u4e8e pending \u72b6\u6001\uff0c\u90a3\u4e48\u72b6\u6001\u5c06\u53d8\u6210 active</li> <li>\u5982\u679c\u8be5\u4e2d\u65ad\u53c8\u91cd\u65b0\u4ea7\u751f\uff0c\u90a3\u4e48\u72b6\u6001\u5c06\u53d8\u6210 active and pending</li> </ul> </li> <li> <p>\u5904\u7406\u5668\u5b8c\u6210\u4e2d\u65ad\u670d\u52a1\uff0c\u53d1\u9001\u4e00\u4e2a\u5b8c\u6210\u4fe1\u53f7(End of Interrupt)\u7ed9 GIC\uff0c\u6307\u793a\u4e2d\u65ad\u7ed3\u675f</p> </li> <li>\u5c06\u4e2d\u65ad\u72b6\u6001\u6539\u4e3a inactive \u6216\u8005 pending(\u5982\u679c\u72b6\u6001\u4e3a active and pending)\uff0c\u6302\u8d77\u7684\u4e2d\u65ad\u53ef\u4ee5\u7ee7\u7eed\u5f80 CPU \u53d1\u9001\u4e2d\u65ad\u4fe1\u606f</li> </ol> <p>\u5728\u540c\u4e00\u4e2a\u5185\u6838\u4e0a\u53ef\u80fd\u6709\u591a\u4e2a\u4e2d\u65ad\u7b49\u5f85\u670d\u52a1\uff0c\u4f46\u662f CPU \u63a5\u53e3\u4e00\u6b21\u53ea\u80fd\u53d1\u51fa\u4e00\u4e2a\u4e2d\u65ad\u4fe1\u53f7\u3002\u9876\u5c42\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u53ef\u4ee5\u91cd\u590d\u4e0a\u8ff0\u987a\u5e8f\uff0c\u76f4\u5230\u8bfb\u53d6\u5230\u7279\u6b8a\u4e2d\u65ad ID \u503c 1023\uff0c\u8868\u793a\u6709\u5728\u8fd9\u4e2a\u6838\u5fc3\u4e0a\u6ca1\u6709\u66f4\u591a\u7684\u4e2d\u65ad\u6302\u8d77\u3002\u8fd9\u4e2a\u7279\u6b8a\u7684\u4e2d\u65ad ID \u88ab\u79f0\u4e3a\u865a\u5047\u7684\u4e2d\u65ad\u6807\u8bc6\u3002\u865a\u5047\u4e2d\u65ad ID \u662f\u4e00\u4e2a\u4fdd\u7559\u503c\uff0c\u4e0d\u80fd\u5206\u914d\u7ed9\u7cfb\u7edf\u3002\u5f53\u9876\u5c42\u5904\u7406\u7a0b\u5e8f\u8bfb\u53d6\u4e86\u865a\u5047\u4e2d\u65ad ID \u540e\uff0c\u5b83\u53ef\u4ee5\u5b8c\u6210\u5b83\u7684\u6267\u884c\uff0c\u5e76\u51c6\u5907\u5185\u6838\u5728\u4e2d\u65ad\u4e4b\u524d\u6062\u590d\u5b83\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u3002</p>"},{"location":"arm/gic/#gic_1","title":"GIC\u5bc4\u5b58\u5668","text":"<p>GIC \u7684\u5206\u53d1\u5668\u5305\u542b\u4f17\u591a\u5bc4\u5b58\u5668\uff0c\u53ef\u4ee5\u7528\u5b83\u4eec\u6765\u914d\u7f6e\u5404\u4e2a\u4e2d\u65ad\u7684\u5c5e\u6027\uff0c\u6bd4\u5982\uff1a</p> <ul> <li>\u4e2d\u65ad\u4f18\u5148\u7ea7\uff1a\u5206\u53d1\u5668\u7528\u5b83\u6765\u786e\u5b9a\u8c01\u88ab\u4f18\u5148\u53d1\u9001\u7ed9 CPU \u63a5\u53e3</li> <li>\u4e2d\u65ad\u914d\u7f6e\uff1a\u51b3\u5b9a\u4e86\u662f\u7535\u5e73\u89e6\u53d1\u8fd8\u662f\u8fb9\u7f18\u89e6\u53d1</li> <li>\u4e2d\u65ad\u76ee\u6807\uff1a\u51b3\u5b9a\u4e86\u4e2d\u65ad\u88ab\u53d1\u9001\u7ed9\u54ea\u4e2a CPU \u63a5\u53e3\uff0c\u4ec5\u9002\u7528\u4e8e SPI\u3002</li> <li>\u4e2d\u65ad\u7981\u7528\uff1a\u51b3\u5b9a\u4e86\u54ea\u4e9b\u4e2d\u65ad\u88ab\u7981\u6b62\u53d1\u9001\u7ed9 CPU \u63a5\u53e3</li> <li>\u4e2d\u65ad\u72b6\u6001\uff1a\u8bb0\u5f55\u4e86\u4e2d\u65ad\u7684\u72b6\u6001\uff0c\u5305\u62ec pending\u3001active\u3001active and pending</li> </ul> <p>\u5206\u53d1\u5668\u8fd8\u63d0\u4f9b\u4e86\u4f18\u5148\u7ea7\u5c4f\u853d\uff0c\u53ef\u4ee5\u9632\u6b62\u67d0\u4e2a\u4f4e\u4e8e\u4f18\u5148\u7ea7\u7684\u4e2d\u65ad\u5230\u8fbe\u5185\u6838\u3002</p>"},{"location":"arm/instructions/","title":"A64\u6307\u4ee4\u96c6","text":"<p>ARMv8 \u589e\u52a0\u4e86\u65b0\u7684 64 \u4f4d\u6307\u4ee4\u96c6\u2014\u2014 A64\uff0c\u5b83\u53ef\u4ee5\u5904\u7406 64 \u4f4d\u5bbd\u7684\u5bc4\u5b58\u5668\u548c\u6570\u636e\u5e76\u4e14\u4f7f\u7528 64 \u4f4d\u7684\u6307\u9488\u6765\u8bbf\u95ee\u5185\u5b58\uff0c\u4f46\u662f\u5176\u6307\u4ee4\u96c6\u7684\u6307\u4ee4\u5bbd\u5ea6\u4f9d\u7136\u662f 32 \u4f4d\u3002ARMv8 \u517c\u5bb9 A32 \u6307\u4ee4\u96c6\uff0c\u4f46 A64 \u6307\u4ee4\u96c6\u548c A32 \u6307\u4ee4\u96c6\u662f\u4e0d\u517c\u5bb9\u7684\u3002</p> <p>ARMv8 \u652f\u6301\u4e24\u79cd\u6267\u884c\u72b6\u6001\u2014\u2014 AArch64 \u548c AArch32\u3002AArch64 \u72b6\u6001\u7528\u4e8e\u6267\u884c 64 \u4f4d\u6307\u4ee4\uff0c\u800c AArch32 \u72b6\u6001\u7528\u4e8e\u6267\u884c 32 \u4f4d\u6307\u4ee4\u3002</p>"},{"location":"arm/instructions/#_1","title":"\u52a0\u8f7d\u4e0e\u5b58\u50a8\u6307\u4ee4","text":""},{"location":"arm/instructions/#ldrstr","title":"LDR\u548cSTR\u6307\u4ee4","text":"<pre><code>ldr \u76ee\u6807\u5bc4\u5b58\u5668, &lt;\u5b58\u50a8\u5668\u5730\u5740&gt;    //\u628a\u5b58\u50a8\u5668\u5730\u5740\u7684\u6570\u636e\u52a0\u8f7d\u5230\u76ee\u6807\u5bc4\u5b58\u5668\n\nstr \u6e90\u5bc4\u5b58\u5668, &lt;\u5b58\u50a8\u5668\u5730\u5740&gt;      //\u628a\u6e90\u5bc4\u5b58\u5668\u4e2d\u7684\u6570\u636e\u5b58\u50a8\u5230\u5b58\u50a8\u5668\u5730\u5740\n</code></pre> <pre><code>ldr     x1,=0xE0000000  ;x1=0xE0000000\nldr     x1,0xE0000000   ;\u5c06\u5185\u5b58\u4e2d\u5730\u5740\u4e3a0xE0000000\u7684\u5185\u5bb9\u8f7d\u5165\u5230x1\nldr     x1,[x0]         ;\u5c06x0\u4e2d\u7684\u6570\u6240\u6307\u5b9a\u7684\u5730\u5740\u7684\u5185\u5bb9\u4f20\u8f93\u5230x1\n</code></pre>"},{"location":"arm/instructions/#_2","title":"\u5165\u6808\u4e0e\u51fa\u6808","text":"<p>\u51fd\u6570\u4f20\u9012\u7684\u53c2\u6570\u5982\u679c\u5c11\u4e8e8\u4e2a\uff0c\u5219\u4f7f\u7528 X0-X7 \u5bc4\u5b58\u5668\u4f20\u9012\uff0c\u5982\u679c\u591a\u4e8e8\u4e2a\uff0c\u5219\u4f7f\u7528\u6808\u4f20\u9012\u3002SP \u6307\u9488\u6307\u5411\u6808\u9876\uff0c\u4ece\u6808\u5e95\u5230\u6808\u9876\u7684\u8fd9\u6bb5\u7a7a\u95f4\uff0c\u79f0\u4e3a\u6808\u5e27\u3002</p> <p>A32 \u6307\u4ee4\u96c6\u63d0\u4f9b\u4e86<code>PUSH</code>\u4e0e<code>POP</code>\u6307\u4ee4\u6765\u5b9e\u73b0\u5165\u6808\u4e0e\u51fa\u6808\uff0c\u4f46\u662f A64 \u6307\u4ee4\u96c6\u5df2\u7ecf\u79fb\u9664\uff0c\u800c\u8f6c\u800c\u4f7f\u7528\u52a0\u8f7d\u4e0e\u5b58\u50a8\u6307\u4ee4\u3002</p>"},{"location":"arm/instructions/#mov","title":"MOV\u6307\u4ee4","text":"<p><code>MOV</code>\u6307\u4ee4\u53ea\u80fd\u7528\u4e8e\u6570\u636e\u5728\u5bc4\u5b58\u5668\u4e4b\u95f4\u7684\u642c\u79fb\uff0c\u4ee5\u53ca\u5f80\u5bc4\u5b58\u5668\u91cc\u5199\u7acb\u5373\u6570\u3002</p>"},{"location":"arm/instructions/#_3","title":"\u7b97\u672f\u4e0e\u79fb\u4f4d\u6307\u4ee4","text":""},{"location":"arm/instructions/#_4","title":"\u6761\u4ef6\u64cd\u4f5c\u7801","text":"<p>PSTATE \u4e2d\u6709\u56db\u4e2a\u6761\u4ef6\u6807\u5fd7\u4f4d\uff0c\u5206\u522b\u662fN\u3001Z\u3001C\u3001V\uff0c\u4ee3\u8868\u4e0a\u4e00\u6b21\u8fd0\u7b97\u7684\u7ed3\u679c\u3002</p> \u6761\u4ef6\u6807\u5fd7\u4f4d \u542b\u4e49 N \u8d1f\u6570 Z \u96f6 C \u8fdb\u4f4d V \u6ea2\u51fa"},{"location":"arm/instructions/#addsub","title":"ADD\u4e0eSUB\u6307\u4ee4","text":"<p>\u6709\u4e09\u79cd\u7528\u6cd5\uff1a</p> <ul> <li>\u4f7f\u7528\u7acb\u5373\u6570</li> <li>\u4f7f\u7528\u5bc4\u5b58\u5668</li> <li>\u4f7f\u7528\u79fb\u4f4d\u64cd\u4f5c</li> </ul> <p><code>ADDS</code>\u548c<code>SUBS</code>\uff1a\u8868\u793a\u6307\u4ee4\u7ed3\u679c\u4f1a\u5f71\u54cd PSTATE \u5bc4\u5b58\u5668\u7684\u6807\u5fd7\u4f4d</p> <p><code>ADC</code>\u548c<code>SBC</code>\uff1a\u5e26\u8fdb\u4f4d\uff0c\u8ba1\u7b97\u65f6\u9700\u8981\u8003\u8651 PSTATE \u5bc4\u5b58\u5668\u7684C\u6807\u5fd7\u4f4d</p>"},{"location":"arm/instructions/#_5","title":"\u79fb\u4f4d\u6307\u4ee4","text":"<ul> <li>LSL\uff1a\u903b\u8f91\u5de6\u79fb</li> <li>LSR\uff1a\u903b\u8f91\u53f3\u79fb</li> <li>ASR\uff1a\u7b97\u672f\u53f3\u79fb</li> <li>ROR\uff1a\u5faa\u73af\u53f3\u79fb</li> </ul> <p>\u903b\u8f91\u79fb\u4f4d\u548c\u7b97\u672f\u79fb\u4f4d\u7684\u533a\u522b\u5728\u4e8e\u662f\u5426\u8003\u8651\u7b26\u53f7\u4f4d\u3002</p>"},{"location":"arm/instructions/#_6","title":"\u4f4d\u64cd\u4f5c\u6307\u4ee4","text":"<ul> <li><code>AND</code>\uff1a\u6309\u4f4d\u4e0e</li> <li><code>ORR</code>\uff1a\u6309\u4f4d\u6216</li> <li><code>EOR</code>\uff1a\u6309\u4f4d\u5f02\u6216</li> <li><code>BIC</code>\uff1a\u4f4d\u6e05\u9664</li> </ul>"},{"location":"arm/instructions/#_7","title":"\u6bd4\u8f83\u4e0e\u8df3\u8f6c\u6307\u4ee4","text":""},{"location":"arm/instructions/#cmp","title":"CMP\u6307\u4ee4","text":"<p>\u6bd4\u8f83\u4e24\u4e2a\u6570\u7684\u5927\u5c0f\uff0c\u6709\u4e09\u79cd\u7528\u6cd5\uff1a</p> <ul> <li>\u4f7f\u7528\u7acb\u5373\u6570</li> <li>\u4f7f\u7528\u5bc4\u5b58\u5668</li> <li>\u4f7f\u7528\u79fb\u4f4d\u64cd\u4f5c</li> </ul>"},{"location":"arm/instructions/#_8","title":"\u8df3\u8f6c\u4e0e\u8fd4\u56de\u6307\u4ee4","text":"<p>\u8df3\u8f6c\u6307\u4ee4\uff1a</p> <ul> <li><code>B</code>\uff1a\u65e0\u6761\u4ef6\u8df3\u8f6c</li> <li><code>B.cond</code>\uff1a\u6761\u4ef6\u8df3\u8f6c</li> <li><code>BL</code>\uff1a\u5e26\u8fd4\u56de\u5730\u5740\u7684\u8df3\u8f6c</li> <li><code>BR</code>\uff1a\u8df3\u8f6c\u5230\u5bc4\u5b58\u5668\u6307\u5b9a\u7684\u5730\u5740</li> <li><code>BLR</code>\uff1a\u5e26\u8fd4\u56de\u5730\u5740\u7684BR</li> </ul> <p>\u8fd4\u56de\u6307\u4ee4\uff1a</p> <ul> <li><code>RET</code>\uff1a\u901a\u5e38\u7528\u4e8e\u5b50\u51fd\u6570\u7684\u8fd4\u56de\uff0c\u8fd4\u56de\u5730\u5740\u4fdd\u5b58\u5728 LR</li> <li><code>ERET</code>\uff1a\u4ece\u5f53\u524d\u7684\u5f02\u5e38\u6a21\u5f0f\u8fd4\u56de\uff0c\u5b83\u4f1a\u628a SPSR \u7684\u5185\u5bb9\u6062\u590d\u5230 PSTATE \u5bc4\u5b58\u5668\u4e2d\u3002\u8be5\u6307\u4ee4\u53ef\u4ee5\u5b9e\u73b0\u5904\u7406\u5668\u6a21\u5f0f\u7684\u5207\u6362\u3002</li> </ul> <p>\u6bd4\u8f83\u5e76\u8df3\u8f6c\u6307\u4ee4\uff1a</p> <ul> <li><code>CBZ</code>\uff1a\u5982\u679c\u5bc4\u5b58\u5668\u4e3a0\uff0c\u5219\u8df3\u8f6c</li> <li><code>CBNZ</code>\uff1a\u5982\u679c\u5bc4\u5b58\u5668\u4e0d\u4e3a0\uff0c\u5219\u8df3\u8f6c</li> </ul>"},{"location":"arm/instructions/#_9","title":"\u5176\u4ed6\u91cd\u8981\u6307\u4ee4","text":""},{"location":"arm/instructions/#pc","title":"PC\u76f8\u5bf9\u5730\u5740\u52a0\u8f7d\u6307\u4ee4","text":"<p><code>ADR</code>\u6307\u4ee4\u7528\u4e8e\u52a0\u8f7d\u4e00\u4e2a\u5728\u5f53\u524d PC \u503c \u00b11MB \u8303\u56f4\u5185\u7684 label \u5730\u5740\u5230 Xd \u5bc4\u5b58\u5668\u4e2d\u3002</p> <p>LDR\u548cADR\u6307\u4ee4\u7684\u533a\u522b</p> <p>LDR \u4f2a\u6307\u4ee4\u52a0\u8f7d\u7684\u662f\u7edd\u5bf9\u5730\u5740\uff0c\u5373\u7a0b\u5e8f\u7f16\u8bd1\u65f6\u7684\u94fe\u63a5\u5730\u5740\u3002ADR \u52a0\u8f7d\u7684\u662f\u5f53\u524d PC \u7684\u76f8\u5bf9\u5730\u5740\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5f53\u524d\u8fd0\u884c\u65f6 label \u7684\u7269\u7406\u5730\u5740\u3002\u7531\u4e8e\u8fd0\u884c\u5730\u5740\u548c\u94fe\u63a5\u5730\u5740\u53ef\u80fd\u4e0d\u540c\uff0c\u56e0\u6b64\u9700\u8981\u5728\u4e0d\u540c\u573a\u666f\u4e0b\u9009\u62e9\u4f7f\u7528\u3002</p>"},{"location":"arm/instructions/#_10","title":"\u5185\u5b58\u72ec\u5360\u6307\u4ee4","text":"<p>ARMv8 \u4f53\u7cfb\u63d0\u4f9b\u72ec\u5360\u7684\u5185\u5b58\u8bbf\u95ee(exclusive memory access)\u6307\u4ee4\u3002<code>LDXR</code>\u6307\u4ee4\u5c1d\u8bd5\u5728\u5185\u5b58\u603b\u7ebf\u4e2d\u7533\u8bf7\u4e00\u4e2a\u72ec\u5360\u8bbf\u95ee\u7684\u9501\uff0c\u7136\u540e\u8bbf\u95ee\u4e00\u4e2a\u5185\u5b58\u5730\u5740\u3002<code>STXR</code>\u6307\u4ee4\u4f1a\u5f80\u521a\u624d<code>LDXR</code>\u6307\u4ee4\u5df2\u7ecf\u7533\u8bf7\u72ec\u5360\u8bbf\u95ee\u7684\u5185\u5b58\u5730\u5740\u4e2d\u5199\u5165\u65b0\u5185\u5bb9\u3002\u8fd9\u4e24\u4e2a\u6307\u4ee4\u914d\u5408\u4f7f\u7528\u6765\u5b8c\u6210\u4e00\u4e9b\u540c\u6b65\u64cd\u4f5c\u3002</p>"},{"location":"arm/instructions/#_11","title":"\u5f02\u5e38\u5904\u7406\u6307\u4ee4","text":"<ul> <li><code>SVC</code>\uff1a\u7cfb\u7edf\u8c03\u7528\u6307\u4ee4\uff0c\u9677\u5165 EL1</li> <li><code>HVC</code>\uff1a\u865a\u62df\u5316\u7cfb\u7edf\u8c03\u7528\u6307\u4ee4\uff0c\u9677\u5165 EL2</li> <li><code>SMC</code>\uff1a\u5b89\u5168\u76d1\u63a7\u7cfb\u7edf\u8c03\u7528\u6307\u4ee4\uff0c\u9677\u5165 EL3</li> </ul>"},{"location":"arm/instructions/#_12","title":"\u7cfb\u7edf\u5bc4\u5b58\u5668\u8bbf\u95ee\u6307\u4ee4","text":"<p>\u5728 ARMv7 \u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0c\u901a\u8fc7 CP15 \u534f\u5904\u7406\u5668\u53ef\u4ee5\u8bbf\u95ee\u7cfb\u7edf\u5bc4\u5b58\u5668\u3002\u5728 ARMv8 \u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0c\u8bbf\u95ee\u7684\u65b9\u5f0f\u6709\u4e86\u5927\u5e45\u7684\u6539\u8fdb\u548c\u4f18\u5316\u3002<code>MRS</code>\u548c<code>MSR</code>\u4e24\u6761\u6307\u4ee4\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7cfb\u7edf\u5bc4\u5b58\u5668\u3002</p> <ul> <li><code>MRS</code>\uff1a\u8bfb\u53d6\u7cfb\u7edf\u5bc4\u5b58\u5668\u7684\u503c\u5230\u901a\u7528\u5bc4\u5b58\u5668</li> <li><code>MSR</code>\uff1a\u5c06\u901a\u7528\u5bc4\u5b58\u5668\u7684\u503c\u5199\u5165\u7cfb\u7edf\u5bc4\u5b58\u5668</li> </ul> <p>\u8bbf\u95eeSCTLR</p> <pre><code>mrs x20, sctlr_el1\nmsr sctlr_el1, x20\n</code></pre> <p>\u9664\u4e86\u8bbf\u95ee\u7cfb\u7edf\u5bc4\u5b58\u5668\u4e4b\u5916\uff0c<code>MRS</code>\u548c<code>MSR</code>\u6307\u4ee4\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u4e0e PSTATE \u5bc4\u5b58\u5668\u76f8\u5173\u7684\u5b57\u6bb5\uff0c\u6bd4\u5982 CurrentEL \u7b49\u3002</p>"},{"location":"arm/instructions/#_13","title":"\u5185\u5b58\u5c4f\u969c\u6307\u4ee4","text":"<ul> <li><code>DMB</code>\uff1a\u6570\u636e\u5b58\u50a8\u5c4f\u969c</li> <li><code>DSB</code>\uff1a\u6570\u636e\u540c\u6b65\u5c4f\u969c</li> <li><code>ISB</code>\uff1a\u6307\u4ee4\u540c\u6b65\u5c4f\u969c</li> </ul> <p>\u9664\u6b64\u4e4b\u5916\uff0cARMv8 \u8fd8\u63d0\u4f9b\u4e86\u4e00\u7ec4\u65b0\u7684\u52a0\u8f7d\u548c\u5b58\u50a8\u6307\u4ee4\uff0c\u663e\u793a\u5305\u542b\u4e86\u5185\u5b58\u5c4f\u969c\u529f\u80fd\uff1a</p> <ul> <li><code>LDAR</code>\uff1a\u52a0\u8f7d-\u83b7\u53d6\u6307\u4ee4\uff0c<code>LDAR</code>\u6307\u4ee4\u540e\u9762\u7684\u8bfb\u5199\u5185\u5b58\u6307\u4ee4\u5fc5\u987b\u5728<code>LDAR</code>\u6307\u4ee4\u4e4b\u540e\u624d\u80fd\u6267\u884c</li> <li><code>STLR</code>\uff1a\u5b58\u50a8-\u91ca\u653e\u6307\u4ee4\uff0c\u6240\u6709\u7684\u52a0\u8f7d\u548c\u5b58\u50a8\u6307\u4ee4\u5fc5\u987b\u5728<code>STLR</code>\u6307\u4ee4\u4e4b\u524d\u5b8c\u6210</li> </ul>"},{"location":"arm/lock/","title":"\u9501\u7684\u5b9e\u73b0","text":""},{"location":"arm/lock/#arch_spinlock_t","title":"arch_spinlock_t","text":"<p>\u65e9\u671f\u7684 ARM \u5e73\u53f0 spin lock \u7684\u5b9e\u73b0\u4f7f\u7528\u4e86<code>raw_spinlock_t</code>\uff1a</p> <pre><code>typedef struct {\n    volatile unsigned int lock;\n}raw_spinlock_t;\n</code></pre> <p>\u8fd9\u4e2a\u7248\u672c\u7684\u9501\u5b9e\u73b0\u7b80\u5355\u2014\u2014 0\u8868\u793a unlocked\uff0c1\u8868\u793a locked\u3002\u4f46\u5b58\u5728\u4e25\u91cd\u7684\u4e0d\u516c\u5e73\u6027\u95ee\u9898\u3002\u4e5f\u5c31\u662f\u6240\u6709\u7684\u7ebf\u7a0b\u65e0\u5e8f\u5730\u4e89\u62a2 spin lock\uff0c\u4e0d\u7ba1\u7ebf\u7a0b\u7b49\u5f85\u4e86\u591a\u4e45\u3002\u5728\u51b2\u7a81\u6bd4\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u516c\u5e73\u6027\u4f53\u73b0\u5f97\u5e76\u4e0d\u660e\u663e\u3002\u4f46\u662f\u968f\u7740\u786c\u4ef6\u7684\u53d1\u5c55\uff0c\u5904\u7406\u5668\u7684\u6838\u5fc3\u6570\u8d8a\u6765\u8d8a\u591a\uff0c\u591a\u6838\u4e4b\u95f4\u7684\u51b2\u7a81\u6108\u53d1\u5267\u70c8\uff0c\u4e0d\u516c\u5e73\u6027\u5c31\u6108\u53d1\u660e\u663e\u3002\u6709\u4eba\u6d4b\u8bd5\u8fc7\u5728\u6781\u7aef\u60c5\u51b5\u4e0b\uff0c\u6709\u7684\u7ebf\u7a0b\u751a\u81f3\u8981\u7b49\u5f85 100,000 \u6b21\u673a\u4f1a\u624d\u4f1a\u6267\u884c\u4e00\u6b21\u3002</p> <p>\u73b0\u5728\u7684 ARM \u5e73\u53f0 spin lock \u4f7f\u7528\u4ee5\u4e0b\u5b9a\u4e49\uff1a</p> <pre><code>typedef struct {\n    union {\n        u32 slock;\n        struct __raw_tickets {\n            u16 owner;\n            u16 next;\n        } tickets;\n    };\n} arch_spinlock_t; \n</code></pre> <p>\u8be5\u9501\u5b9e\u9645\u4e0a\u5c31\u662f\u6240\u8c13\u7684\u7968\u53f7\u81ea\u65cb\u9501\u3002\u5b83\u7684\u539f\u7406\u7c7b\u4f3c\u4e8e\u53bb\u94f6\u884c\u529e\u4e1a\u52a1\uff0c\u6bcf\u4e2a\u8fdb\u6765\u7684\u4eba\u5148\u53d6\u4e00\u4e2a\u53f7\u7136\u540e\u7b49\u5f85\u3002\u4e1a\u52a1\u5458\u5904\u7406\u5b8c\u4e00\u4e2a\u4eba\u7684\u4e1a\u52a1\u4e4b\u540e\u5c31\u4f1a\u53eb\u53f7\uff0c\u5982\u679c\u53eb\u7684\u53f7\u548c\u81ea\u5df1\u624b\u91cc\u53d6\u7684\u53f7\u662f\u4e00\u6837\u7684\uff0c\u5c31\u8f6e\u5230\u81ea\u5df1\u53bb\u529e\u4e1a\u52a1\u3002</p> <p>owner \u4ee3\u8868\u5f53\u524d\u6b63\u5728\u529e\u7406\u4e1a\u52a1\u7684\u7968\u53f7\uff0cnext \u4ee3\u8868\u4e0b\u4e00\u4e2a\u4eba\u53d6\u53f7\u7684\u53f7\u7801\u3002\u5728\u6700\u5f00\u59cb\u7684\u65f6\u5019\uff0cowner \u548c next \u90fd\u7b49\u4e8e0\uff0c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u6765\u65f6\uff0c\u53d1\u73b0\u8fd9\u4e24\u8005\u76f8\u7b49\uff0c\u4e8e\u662f\u52a0\u9501\uff0c\u5e76\u4e14\u5c06 next++\u3002\u540e\u6765\u7684\u7ebf\u7a0b\u5728 next \u7684\u57fa\u7840\u4e0a\u7d2f\u52a0\u5e76\u7b49\u5f85 owner \u91ca\u653e\u3002\u5f53\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u91ca\u653e\u4e4b\u540e\uff0c\u5c06 owner++\uff0c\u6b64\u65f6 owner \u53c8\u7b49\u4e8e next\uff0c\u6240\u4ee5\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u52a0\u9501\u6210\u529f\u3002\u4ee5\u6b64\u7c7b\u63a8\u3002\u800c owner \u4e0e next \u7684\u5dee\u503c\u5c31\u4ee3\u8868\u6392\u961f\u7b49\u5f85\u7ebf\u7a0b\u7684\u4e2a\u6570\u3002</p> <p></p> <p>\u7533\u8bf7\u9501\u64cd\u4f5c\uff1a</p> <pre><code>static inline void arch_spin_lock(arch_spinlock_t *lock)\n{\n    arch_spinlock_t old_lock;\n    old_lock.slock = lock-&gt;slock;\n    lock-&gt;tickets.next++;\n    while(old_lock.tickets.next != old_lock.tickets.owner) {\n        wfe();\n        old_lock.tickets.owner = lock-&gt;tickets.owner;\n\n    }\n}\n</code></pre> <p>\u6c47\u7f16\u6307\u4ee4<code>wfe()</code>\u8ba9ARM\u6838\u8fdb\u5165\u4f4e\u529f\u8017\u6a21\u5f0f\u3002</p> <p>\u91ca\u653e\u9501\u64cd\u4f5c\uff1a</p> <pre><code>static inline void arch_spin_unlock(arch_spinlock_t *lock)\n{\n    lock-&gt;tickets.owner++;\n    sev();\n}\n</code></pre> <p>\u6c47\u7f16\u6307\u4ee4<code>sev()</code>\u5524\u9192\u6240\u6709\u7761\u7720\u7684CPU\u3002</p> <p>Tips</p> <p>\u5bf9\u4e8e<code>arch_spin_lock()</code>\u3001<code>arch_spin_unlock()</code>\u7684\u5e95\u5c42\u5b9e\u73b0\uff0c\u4e0d\u540c\u5185\u6838\u7248\u672c\u4e00\u76f4\u5728\u53d8\u5316\u3002</p>"},{"location":"arm/lock/#arch_rwlock_t","title":"arch_rwlock_t","text":"<pre><code>typedef struct {\n    u32 lock;\n}arch_rwlock_t;\n</code></pre> <p>lock \u7684\u6700\u9ad8\u4f4d\u4ee3\u8868\u662f\u5426\u6709\u5199\u7ebf\u7a0b\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u4f4e31\u4f4d\u7edf\u8ba1\u8bfb\u7ebf\u7a0b\u4e2a\u6570\u3002</p> <p>read_lock \u64cd\u4f5c\uff1a</p> <pre><code>static inline void arch_read_lock(arch_rwlock_t *rw)\n{\n    unsigned int tmp;\n    do {\n        wfe();\n        tmp = rw&gt;lock;\n        temp++;\n    }while(tep &amp; (1 &lt;&lt; 31);\n\n    rw-&gt;lock = tmp;\n}\n</code></pre> <p>read_unlock \u64cd\u4f5c\uff1a</p> <pre><code>static inline void arch_read_unlock(arch_rwlock_t *rw)\n{\n    rw-&gt;lock++;\n    sev();\n}\n</code></pre> <p>write_lock \u64cd\u4f5c\uff1a</p> <pre><code>static inline void arch_write_lock(arch_rwlock_t *rw)\n{\n    unsigned int tmp;\n    sevl();\n\n    do {\n        wfe();\n        temp = rw-&gt;lock;\n    }while(temp);\n    rw-&gt;lock = 1 &lt;&lt; 31;\n}\n</code></pre> <p>\u53ea\u6709\u5f53 rw-&gt;lock \u7684\u503c\u4e3a0\uff0c\u5199\u7ebf\u7a0b\u624d\u53ef\u4ee5\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u540c\u65f6\u5c06\u6700\u9ad8\u4f4d\u7f6e1\u3002</p> <p>write_unlock \u64cd\u4f5c\uff1a <pre><code>static inline arch_write_unlock(arch_rwlock_t *rw)\n{\n    rw-&gt;lock = 0;\n    sev();\n}\n</code></pre></p>"},{"location":"arm/lock/#semaphore","title":"semaphore","text":"<pre><code>struct semaphore_waiter {\n    struct list_head list;\n    struct task_struct *task;\n};\n\nsturct sempahore {\n    unsigned int count;\n    struct list_head wait_list;\n};\n</code></pre> <p>\u7533\u8bf7 semaphore\uff1a</p> <pre><code>void down(struct semaphore *sem)\n{\n    struct semaphore_waiter waiter;\n\n    if (sem-&gt;count &gt; 0) {\n        sem-&gt;count--;                               \n        return;\n    }\n\n    waiter.task = current;                          \n    list_add_tail(&amp;waiter.list, &amp;sem-&gt;wait_list);   \n    schedule();                                     \n}\n</code></pre> <p>\u91ca\u653e semaphore\uff1a</p> <pre><code>void up(struct semaphore *sem)\n{\n    struct semaphore_waiter waiter;\n\n    if (list_empty(&amp;sem-&gt;wait_list)) {\n        sem-&gt;count++;                              \n        return;\n    }\n\n    waiter = list_first_entry(&amp;sem-&gt;wait_list, struct semaphore_waiter, list);\n    list_del(&amp;waiter-&gt;list);                       \n    wake_up_process(waiter-&gt;task);                 \n}\n</code></pre>"},{"location":"arm/lock/#mutex","title":"mutex","text":"<p>mutex \u7c7b\u4f3c\u4e8e\u8ba1\u6570\u503c\u53ea\u67091\u7684 semaphore\uff0c\u4f46\u662f\u53ea\u6709\u6301\u6709\u9501\u7684\u4eba\u624d\u80fd\u89e3\u9501\uff0c\u800c\u4fe1\u53f7\u91cf\u53ef\u4ee5\u7531\u4efb\u4f55\u4e00\u4e2a\u7ebf\u7a0b\u91ca\u653e\u3002</p> <pre><code>struct mutex_waiter {\n    struct list_head list;\n    struct task_struct *task;\n};\n\nstruct mutex {\n    long owner;\n    struct list_head wait_list;\n};\n</code></pre> <p>mutex \u7684 owner \u5b57\u6bb5\u8bb0\u5f55\u6301\u6709\u9501\u7684\u7ebf\u7a0b ID\uff0cwait_list \u8bb0\u5f55\u7b49\u5f85\u9501\u7684\u7ebf\u7a0b\u3002</p> <p>\u7533\u8bf7 mutex\uff1a</p> <pre><code>void mutex_take(struct mutex *mutex)\n{\n    struct mutex_waiter waiter;\n\n    if (!mutex-&gt;owner) {\n        mutex-&gt;owner = (long)current;               \n        return;\n    }\n\n    waiter.task = current;\n    list_add_tail(&amp;waiter.list, &amp;mutex-&gt;wait_list); \n    schedule();                                     \n} \n</code></pre> <p>\u5f53 mutex-&gt;owner \u4e3a0\u65f6\uff0c\u8868\u793a\u6ca1\u6709\u7ebf\u7a0b\u6301\u6709\u9501\u3002\u5f53\u4e0d\u80fd\u83b7\u53d6 mutex \u65f6\uff0c\u5c06\u7ebf\u7a0b\u6302\u5165\u7b49\u5f85\u94fe\u8868\u3002</p> <p>\u91ca\u653e mutex\uff1a</p> <pre><code>int mutex_release(struct mutex *mutex)\n{\n    struct mutex_waiter *waiter;\n\n    if (mutex-&gt;owner != (long)current)                         \n        return -1;\n\n    if (list_empty(&amp;mutex-&gt;wait_list)) {\n        mutex-&gt;owner = 0;                                      \n        return 0;\n    }\n\n    waiter = list_first_entry(&amp;mutex-&gt;wait_list, struct mutex_waiter, list);\n    list_del(&amp;waiter-&gt;list);\n    mutex-&gt;owner = (long)waiter-&gt;task;                         \n    wake_up_process(waiter-&gt;task);                             \n\n    return 0; \n}\n</code></pre>"},{"location":"arm/mm/","title":"\u5185\u5b58\u7ba1\u7406","text":"<p>\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u5185\u5b58\u8fdb\u884c\u4e86\u62bd\u8c61\uff0c\u8fdb\u7a0b\u6240\u4f7f\u7528\u7684\u90fd\u662f\u865a\u62df\u5730\u5740\uff0c\u7531MMU\u5355\u5143\u8d1f\u8d23\u7ffb\u8bd1\u6210\u771f\u5b9e\u7684\u7269\u7406\u5730\u5740\u3002\u7a0b\u5e8f\u5728\u865a\u62df\u5730\u5740\u7a7a\u95f4\u91cc\u53ef\u4ee5\u4efb\u610f\u5206\u914d\u865a\u62df\u5185\u5b58\uff0c\u4f46\u53ea\u6709\u5f53\u7a0b\u5e8f\u9700\u8981\u8bbf\u95ee\u6216\u4fee\u6539\u865a\u62df\u5185\u5b58\u65f6\uff0c\u5185\u6838\u624d\u4f1a\u4e3a\u5176\u5206\u914d\u7269\u7406\u9875\u9762\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u505a\u7f3a\u9875\u5f02\u5e38\uff08page fault\uff09\u3002</p> <p>\u4ee532\u4f4d\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u5982\u679c\u91c7\u7528\u6700\u7b80\u5355\u7684\u4e00\u7ea7\u9875\u8868\uff0c\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u5bfb\u5740\u8303\u56f4\u662f0 ~ 4GB\u3002\u865a\u62df\u5730\u5740VA[31:0]\u53ef\u4ee5\u5206\u4e3a\u4e24\u90e8\u5206\uff1aVA[31:12]\u662f\u865a\u62df\u9875\u5e27\u53f7(VPN)\uff0c\u4f5c\u4e3a\u7d22\u5f15\u503c\u5728\u9875\u8868\u4e2d\u67e5\u8be2\u9875\u8868\u9879\uff1bVA[11:0]\u662f\u9875\u9762\u504f\u79fb\u91cf\u3002\u9875\u5e27\u53f7\u52a0\u4e0a\u9875\u9762\u504f\u79fb\u5c31\u6784\u6210\u4e86\u6700\u7ec8\u7269\u7406\u5730\u5740\u3002</p> <p>\u9875\u9762\u7684\u5927\u5c0f\u4e00\u822c\u662f4KB\uff0c\u5982\u679c\u8981\u6620\u5c04\u6574\u4e2a4GB\u5730\u5740\u7a7a\u95f4\uff0c\u9700\u89814GB/4KB=2<sup>20</sup>\u4e2a\u9875\u8868\u9879\uff0c\u6bcf\u4e2a\u9875\u8868\u9879\u5360\u75284\u5b57\u8282\uff0c\u6700\u7ec8\u9700\u89814MB\u5927\u5c0f\u7684\u7269\u7406\u5185\u5b58\u6765\u5b58\u653e\u8fd9\u5f20\u9875\u8868\u3002\u5728\u591a\u8fdb\u7a0b\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u62e5\u6709\u81ea\u5df1\u7684\u4e00\u5957\u9875\u8868\uff0c\u6bcf\u6b21\u90fd\u8981\u5206\u914d4MB\u7684\u7269\u7406\u5185\u5b58\uff0c\u8fd9\u662f\u65e0\u6cd5\u63a5\u53d7\u7684\u3002\u56e0\u6b64\u5185\u6838\u5f80\u5f80\u4f1a\u4f7f\u7528\u591a\u7ea7\u9875\u8868\uff0c\u5f53\u5904\u7406\u5668\u6267\u884c\u7a0b\u5e8f\u65f6\uff0c\u53ea\u52a0\u8f7d\u4e00\u7ea7\u9875\u8868\uff0c\u6839\u636e\u7269\u7406\u5185\u5b58\u7684\u4f7f\u7528\u60c5\u51b5\u9010\u6b65\u521b\u5efa\u548c\u5206\u914d\u5269\u4f59\u7684\u9875\u8868\u3002</p>"},{"location":"arm/mm/#_2","title":"\u6e90\u7801\u6587\u4ef6","text":"<ul> <li>arch/arm64/include/asm/pgtable-types.h\uff1a\u5b9a\u4e49<code>pgd_t</code>\u3001<code>pud_t</code>\u3001<code>pmd_t</code>\u3001<code>pte_t</code>\u7b49\u7c7b\u578b</li> <li>arch/arm64/include/asm/pgtable-prot.h\uff1a\u9875\u8868\u7684\u6743\u9650\u8bbe\u7f6e</li> <li>arch/arm64/include/asm/pgtable.h\uff1a\u9875\u8868\u8bbe\u7f6e\u76f8\u5173</li> </ul> <p>\u5f53CONFIG_PGTABLE_LEVELS=3\u65f6\uff0c\u6ca1\u6709PUD\u9875\u8868\uff1b\u5f53CONFIG_PGTABLE_LEVELS=2\u65f6\uff0c\u6ca1\u6709PUD\u548cPMD\u9875\u8868\u3002</p>"},{"location":"arm/mm/#_3","title":"\u865a\u62df\u5730\u5740\u7a7a\u95f4","text":"<p>ARMv8\u4e2d\uff0c\u5185\u6838\u7a7a\u95f4\u7684\u9875\u8868\u57fa\u5730\u5740\u5b58\u653e\u5728TTBR1_EL1\u5bc4\u5b58\u5668\u4e2d\uff0c\u7528\u6237\u7a7a\u95f4\u7684\u9875\u8868\u57fa\u5730\u5740\u5b58\u653e\u5728TTBR0_EL1\u5bc4\u5b58\u5668\u4e2d\u3002\u5185\u6838\u7a7a\u95f4\u7684\u9ad8\u4f4d\u5168\u4e3a1\uff0c\u7528\u6237\u7a7a\u95f4\u7684\u9ad8\u4f4d\u5168\u4e3a0\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>AArch64\u4f53\u7cfb\u7ed3\u6784\u4e2d\u7684\u9875\u8868\u652f\u6301\u4ee5\u4e0b\u7279\u6027\uff1a</p> <ul> <li>\u652f\u6301\u81f3\u5c11\u4e24\u7ea7\u9875\u8868\uff0c\u6700\u591a4\u7ea7\u9875\u8868</li> <li>\u8f93\u5165\u5730\u5740\u7684\u6700\u5927\u4f4d\u5bbd\u4e3a48\u4f4d</li> <li>\u9875\u9762\u7c92\u5ea6\u53ef\u4ee5\u662f4KB\u300116KB\u621664KB</li> </ul> <p>\u4ee5PAGE_SIZE\u4e3a4KB\u4e3a\u4f8b\uff0c\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u5982\u4e0b\uff1a</p> <p></p> <p>\u6574\u4e2a\u5730\u5740\u7ffb\u8bd1\u7684\u8fc7\u7a0b\u662f\u8fd9\u6837\u7684\uff1a\u9996\u5148\u901a\u8fc7\u865a\u62df\u5730\u5740\u7684\u9ad8\u4f4d\u53ef\u4ee5\u77e5\u9053\u662f\u5c5e\u4e8euserspace\u8fd8\u662fkernel space\uff0c\u5206\u522b\u9009\u62e9\u5bf9\u5e94\u7684TTBR\u5bc4\u5b58\u5668\u3002\u8fd9\u4e2a\u5bc4\u5b58\u5668\u4e2d\u4fdd\u5b58\u4e86PGD\u7684\u57fa\u5730\u5740\uff0c\u6307\u5411\u4e86\u4e00\u4e2alookup table\uff0c\u6bcf\u4e00\u4e2aentry\u90fd\u662f\u63cf\u8ff0\u7b26\uff0c\u53ef\u80fd\u662fTable descriptor\u3001block descriptor\u6216\u8005\u662fpage descriptor\u3002\u5982\u679c\u547d\u4e2d\u4e86\u4e00\u4e2ablock descriptor\uff0c\u90a3\u4e48\u5730\u5740\u7ffb\u8bd1\u8fc7\u7a0b\u5c31\u7ed3\u675f\u4e86\uff0c\u5f53\u7136\u5bf9\u4e8e4-level\u7684\u5730\u5740\u7ffb\u8bd1\u8fc7\u7a0b\uff0cPGD\u4e2d\u5f53\u7136\u4fdd\u5b58\u7684\u662fTable descriptor\uff0c\u4ece\u800c\u6307\u5411\u4e86\u4e0b\u4e00\u8282\u7684Translation table\uff0c\u5728kernel\u4e2d\u79f0\u4e4bPUD\u3002\u968f\u540e\u7684\u5730\u5740\u7ffb\u8bd1\u6982\u5ff5\u7c7b\u4f3c\uff0c\u662f\u4e00\u4e2aPMD\u8fc7\u7a0b\uff0c\u6700\u540e\u4e00\u4e2alevel\u662fPTE\uff0c\u4e5f\u5c31\u662f\u4f20\u8bf4\u4e2d\u7684page table entry\u4e86\uff0c\u5230\u4e86\u6700\u540e\u7684\u5730\u5740\u7ffb\u8bd1\u9636\u6bb5\u3002\u8fd9\u65f6\u5019PTE\u4e2d\u90fd\u662f\u4e00\u4e2a\u4e2a\u7684page descriptor\uff0c\u4ece\u800c\u5b8c\u6210\u4e86\u6700\u540e\u7684\u5730\u5740\u7ffb\u8bd1\u8fc7\u7a0b\u3002 </p>"},{"location":"arm/mm/#_4","title":"\u9875\u8868\u9879\u5c5e\u6027","text":"<p>1.\u5171\u4eab\u6027\u4e0e\u7f13\u5b58\u6027</p> <p>\u7f13\u5b58\u6027\u662f\u6307\u9875\u9762\u662f\u5426\u4f7f\u80fd\u4e86\u9ad8\u901f\u7f13\u5b58\uff0c\u53e6\u5916\u8fd8\u80fd\u6307\u5b9a\u9ad8\u901f\u7f13\u5b58\u662f\u5185\u90e8\u5171\u4eab\u8fd8\u662f\u5916\u90e8\u5171\u4eab\u3002\u5171\u4eab\u6027\u662f\u6307\u5728SMP\u7cfb\u7edf\u4e2d\uff0c\u67d0\u4e2a\u5185\u5b58\u533a\u57df\u7684\u9ad8\u901f\u7f13\u5b58\u53ef\u4ee5\u88ab\u54ea\u4e9b\u89c2\u5bdf\u8005\u89c2\u5bdf\u5230\u3002</p> <p>2.\u8bbf\u95ee\u6743\u9650</p> <p>\u63a7\u5236\u9875\u9762\u7684\u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c\u6743\u9650\u3002</p> <p>3.\u8bbf\u95ee\u6807\u5fd7\u4f4d</p> <p>AF(Access Flag)\u7528\u6765\u6307\u793a\u9875\u9762\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7\uff1a1\u8868\u793a\u5df2\u7ecf\u88ab\u8bbf\u95ee\u8fc7\u3002</p> <p>4.\u5168\u5c40\u548c\u8fdb\u7a0b\u7279\u6709TLB</p> <p>\u7528\u6765\u8bbe\u7f6eTLB\u7684\u7c7b\u578b\u3002</p>"},{"location":"arm/mm/#_5","title":"\u5730\u5740\u8f6c\u6362\u63a7\u5236\u5bc4\u5b58\u5668","text":"<p>\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u4e2a\uff1a</p> <ul> <li>\u8f6c\u6362\u63a7\u5236\u5bc4\u5b58\u5668(TCR)\uff1a\u5305\u542b\u4e0e\u5730\u5740\u8f6c\u6362\u76f8\u5173\u7684\u63a7\u5236\u4fe1\u606f\u4ee5\u53ca\u4e0e\u9ad8\u901f\u7f13\u5b58\u76f8\u5173\u7684\u914d\u7f6e\u4fe1\u606f</li> <li>\u7cfb\u7edf\u63a7\u5236\u5bc4\u5b58\u5668(SCTLR)\uff1a\u7528\u4e8e\u63a7\u5236\u5904\u7406\u5668\u7684\u4e00\u4e9b\u57fa\u672c\u7cfb\u7edf\u7ea7\u522b\u7684\u914d\u7f6e\u548c\u884c\u4e3a</li> <li>\u8f6c\u6362\u9875\u8868\u57fa\u5730\u5740\u5bc4\u5b58\u5668(TTBR)\uff1a\u5b58\u50a8\u9875\u8868\u7684\u57fa\u5730\u5740</li> </ul>"},{"location":"arm/secure_boot/","title":"\u5b89\u5168\u542f\u52a8","text":"<p>Secure boot \u662f\u4e00\u79cd\u5b89\u5168\u673a\u5236\uff0c\u5b83\u7684\u6839\u672c\u76ee\u7684\u662f\u4e3a\u4e86\u9632\u6b62\u6d88\u8d39\u8005\u4ece\u8f6f\u786c\u4ef6\u5c42\u9762\u5bf9\u4ea7\u54c1\u7684\u90e8\u5206\u5173\u952e\u7cfb\u7edf\u8fdb\u884c\u8bfb\u5199\u3001\u8c03\u8bd5\u7b49\u9ad8\u6743\u9650\u7684\u64cd\u4f5c\uff0c\u6765\u8fbe\u5230\u4fdd\u62a4\u4ea7\u54c1\u7684\u5546\u4e1a\u673a\u5bc6\u3001\u77e5\u8bc6\u4ea7\u6743\u7b49\u5382\u5bb6\u6743\u76ca\u7684\u76ee\u7684\u3002\u5f53\u7136\u5546\u5bb6\u5ba3\u4f20\u7684\u65f6\u5019\u4f1a\u8bf4\u8fd9\u9879\u6280\u672f\u662f\u7528\u6765\u4fdd\u62a4\u7528\u6237\u7684\u9690\u79c1\uff0c\u9632\u6b62\u6076\u610f\u8f6f\u4ef6\u7be1\u6539\u7cfb\u7edf\u3002</p> <p>\u5b89\u5168\u542f\u52a8\u4e3b\u8981\u5173\u6ce8\u4e24\u4ef6\u4e8b\uff1a</p> <ol> <li>\u600e\u4e48\u4ece bootrom \u5f00\u59cb\u6784\u5efa image \u7684\u4fe1\u4efb\u94fe\uff1f</li> <li>\u4f7f\u7528\u4ec0\u4e48\u52a0\u5bc6\u7b97\u6cd5\u6821\u9a8c\u4e0d\u4f1a\u88ab\u7834\u89e3\uff1f</li> </ol> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u5b89\u5168\u542f\u52a8\u7684\u6d41\u7a0b\uff1a</p> <p>ATF\uff1aArm Trust Firmware\uff0c\u4e5f\u53eb TF-A\uff0c\u8fd0\u884c\u5728\u6700\u9ad8\u5f02\u5e38\u7ea7\u522b\u2014\u2014 EL3\uff0c\u8d1f\u8d23\u542f\u52a8\u8fc7\u7a0b\u7684\u5b89\u5168\u68c0\u67e5\u548c\u8ba4\u8bc1\u3002ATF = BL1\u3001BL2\u3001BL31\u3001BL32\u3001BL33\u3002</p> <ul> <li>BL1\uff1a\u4e5f\u53eb bootrom\uff0c\u82af\u7247\u51fa\u5382\u65f6\u5c31\u88ab\u5199\u6b7b\uff0c\u662f SoC \u4e0a\u7535\u540e\u6267\u884c\u7684\u7b2c\u4e00\u6bb5\u4ee3\u7801\uff0c\u8d1f\u8d23\u5bf9\u955c\u50cf\u8fdb\u884c\u6821\u9a8c\u548c\u89e3\u5bc6\u3002</li> <li>BL2\uff1a\u5b58\u653e\u5728 flash \u4e2d\u7684\u4e00\u6bb5\u53ef\u4fe1\u5b89\u5168\u542f\u52a8\u4ee3\u7801\uff0c\u4e3b\u8981\u5b8c\u6210\u4e00\u4e9b\u5e73\u53f0\u76f8\u5173\u7684\u521d\u59cb\u5316\uff0c\u6bd4\u5982\u5bf9 ddr \u7684\u521d\u59cb\u5316\u7b49\u3002BL1 \u548c BL2 \u4e3b\u8981\u8d1f\u8d23 runtime \u4e4b\u524d\u7684\u521d\u59cb\u5316\u5de5\u4f5c\u3002</li> <li>BL31\uff1a\u4f5c\u4e3a EL3 \u6700\u540e\u7684\u5b89\u5168\u5821\u5792\uff0c\u5b83\u4e0d\u50cf BL1 \u548c BL2 \u662f\u4e00\u6b21\u6027\u8fd0\u884c\u7684\u3002\u5982\u5b83\u7684 runtime \u540d\u5b57\u6697\u793a\u7684\u90a3\u6837\uff0c\u5b83\u901a\u8fc7 SMC \u6307\u4ee4\u4e3a Non-Secure OS \u6301\u7eed\u63d0\u4f9b\u8bbe\u8ba1\u5b89\u5168\u7684\u670d\u52a1\uff0c\u5728 Secure World \u548c Non-Secure World \u4e4b\u95f4\u8fdb\u884c\u5207\u6362\u3002\u662f\u5bf9\u786c\u4ef6\u6700\u57fa\u7840\u7684\u62bd\u8c61\uff0c\u5bf9 OS \u63d0\u4f9b\u670d\u52a1\u3002\u4f8b\u5982\u4e00\u4e2a EL3 \u7ea7\u522b\u7684\u7279\u6743\u6307\u4ee4\uff0c\u6bd4\u5982\u5173\u673a\u3001\u4f11\u7720\u7b49 OS \u662f\u65e0\u6743\u5904\u7406\u7684\uff0c\u5c31\u4f1a\u4ea4\u7ed9 BL31 \u6765\u7ee7\u7eed\u64cd\u4f5c\u786c\u4ef6\u5904\u7406\u3002</li> <li>BL32\uff1a\u662f\u6240\u8c13\u7684 secure os\uff0c\u8fd0\u884c\u5728 secure mode\u3002\u5728 ARM \u5e73\u53f0\u4e0b\u662f ARM \u5bb6\u7684 Trusted Execution Environment\uff08TEE\uff09\u5b9e\u73b0\u3002OP-TEE \u662f\u57fa\u4e8e ARM TrustZone \u786c\u4ef6\u67b6\u6784\u6240\u5b9e\u73b0\u7684\u8f6f\u4ef6 Secure OS\u3002</li> <li>BL33\uff1a\u5c31\u662f\u6240\u8c13\u7684 uboot\uff0c\u4e4b\u540e\u5c31\u4f1a\u542f\u52a8 linux \u5185\u6838\u4e86\u3002</li> </ul> <p>\u6bcf\u4e00\u4e2a\u9636\u6bb5\uff0c\u4e0a\u4e00\u9636\u6bb5\u90fd\u4f1a\u5bf9\u4e0b\u4e00\u4e2a\u9636\u6bb5\u7684\u955c\u50cf\u8fdb\u884c\u6821\u9a8c\uff0c\u53d1\u73b0\u6709\u6539\u52a8\u5c31\u7ec8\u6b62\u542f\u52a8\u4e86\uff0c\u4e3b\u6253\u4e00\u4e2a\u9632\u7be1\u6539\u3002\u542f\u52a8 BL1\u3001BL2\u3001BL31\u3001BL32\u3001BL33\u3001Linux \u662f\u4e00\u4e2a\u5b8c\u6574\u7684 ATF \u4fe1\u4efb\u94fe\u5efa\u7acb\u6d41\u7a0b\uff0c\u8d1f\u8d23\u52a0\u8f7d\u955c\u50cf\u7684 BL1\u3001BL2\u3001BL33 \u90fd\u4e0d\u662f runtime\uff0c\u53ea\u8981 Linux \u7cfb\u7edf\u542f\u52a8\uff0c\u5c31\u4e0d\u4f1a\u518d\u6709\u52a0\u8f7d\u955c\u50cf\u7684\u673a\u4f1a\u4e86\u3002</p> <p>\u4e0b\u9762\u4ee5arm-trusted-firmware\u9879\u76ee\u4e3a\u4f8b\uff0c\u5927\u81f4\u7684\u542f\u52a8\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p>"},{"location":"arm/secure_boot/#bl1","title":"BL1 \u542f\u52a8\u6d41\u7a0b","text":"<p>BL1 \u901a\u5e38\u53c8\u79f0\u4e3a bootrom\uff0c\u662f SoC \u4e0a\u7535\u540e\u6267\u884c\u7684\u7b2c\u4e00\u6bb5\u4ee3\u7801\uff0c\u5b83\u7684\u542f\u52a8\u5730\u5740\u53ef\u4ee5\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>aarch64\uff1aboot address \u5141\u8bb8\u914d\u7f6e</li> <li>aarch32\uff1aboot address \u5728 0x00000000 \u548c 0xffff0000 \u4e8c\u9009\u4e00</li> <li>ARM M \u7cfb\u5217\uff1aboot address \u56fa\u5b9a\u5728 0x00000000\uff0c\u4e0d\u5141\u8bb8\u66f4\u6539</li> </ul> <p>bl1.ld.S \u6587\u4ef6\u5b9a\u4e49\u4e86 BL1 \u4ee3\u7801\u7684\u4f4d\u7f6e\u5206\u5e03\uff0c\u5176\u4e2d\u5b9a\u4e49\u4e86<code>bl1_entrypoint()</code>\u51fd\u6570\uff0c\u4f5c\u4e3a BL1 \u542f\u52a8\u7684\u5165\u53e3\u51fd\u6570\u3002</p> <p>BL1 \u542f\u52a8\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>bl1_entrypoint()\n    |--&gt;el3_entrypoint_common()\n    |--&gt;bl1_setup()\n        |--&gt;plat_setup_early_console()\n        |--&gt;bl1_early_platform_setup()\n        |--&gt;bl1_plat_arch_setup()\n    |--&gt;bl1_main()\n        |--&gt;bl1_arch_setup()\n        |--&gt;crypto_mod_init()\n        |--&gt;auth_mod_init()\n        |--&gt;bl1_plat_mboot_init()\n        |--&gt;bl1_platform_setup()\n        |--&gt;bl1_plat_get_next_image_id()\n        |--&gt;bl1_plat_mboot_finish()\n        |--&gt;bl1_prepare_next_image()\n    |--&gt;el3_exit()\n</code></pre>"},{"location":"arm/secure_boot/#bl2","title":"BL2 \u542f\u52a8\u6d41\u7a0b","text":"<p>BL2 \u7684\u542f\u52a8\u65b9\u5f0f\u6709\u4e24\u79cd\uff0c\u4e5f\u6709\u4e24\u4e2a ld \u6587\u4ef6\uff0c\u5206\u522b\u662f\uff1abl2.ld.S \u548c bl2_el3.ld.S\u3002\u53d6\u51b3\u4e8e\u82af\u7247\u5382\u5bb6\u662f\u5426\u9700\u8981\u5c06 BL2 \u8dd1\u5728 EL3 \u6a21\u5f0f\u3002</p> <ol> <li> <p>BL2 \u8dd1\u5728 EL1 \u6a21\u5f0f\uff1a</p> <pre><code>bl2_entrpoint()\n    |--&gt;bl2_setup()\n        |--&gt;bl2_early_platfrom_setup2()\n        |--&gt;bl2_plat_arch_setup()\n    |--&gt;bl2_main()\n        |--&gt;bl2_arch_setup()\n        |--&gt;crypto_mod_init()\n        |--&gt;auth_mod_init()\n        |--&gt;bl2_plat_mboot_init()\n        |--&gt;bl2_plat_preload_setup()\n        |--&gt;bl2_load_images()\n        |--smc(BL1_SMC_RUN_IMAGE, (unsigned long)next_bl_ep_info, 0, 0, 0, 0, 0, 0)\n</code></pre> </li> <li> <p>BL2 \u8dd1\u5728 EL3 \u6a21\u5f0f\uff1a</p> <pre><code>bl2_el3_entrypoint()\n    |--&gt;el3_entrypoint_common()\n    |--&gt;bl2_el3_setup()\n        |--&gt;bl2_early_platform_setup2()\n        |--&gt;bl2_plat_arch_setup()\n    |--&gt;bl2_main()\n        |--&gt;bl2_arch_setup()\n        |--&gt;crypto_mod_init()\n        |--&gt;auth_mod_init()\n        |--&gt;bl2_plat_mboot_init()\n        |--&gt;bl2_plat_preload_setup()\n        |--&gt;bl2_load_images()\n        |--&gt;bl2_run_next_image()\n</code></pre> </li> </ol>"},{"location":"arm/secure_boot/#bl3","title":"BL3 \u542f\u52a8\u6d41\u7a0b","text":"<p>BL3 \u542f\u52a8\u6d41\u7a0b\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>BL31\uff1aruntime \u4e4b\u524d\u7684\u521d\u59cb\u5316\u5de5\u4f5c\uff0c\u6240\u6709\u6ce8\u518c\u7684 runtime service \u90fd\u4f1a\u5728<code>runtime_svc_init()</code>\u51fd\u6570\u4e2d\u521d\u59cb\u5316\u3002</li> <li>BL32\uff1a\u8df3\u8f6c\u5230 optee\uff0c\u8fdb\u884c secure os \u7684\u521d\u59cb\u5316\u3002</li> <li>BL33\uff1a\u8df3\u8f6c\u5230 uboot\uff0c\u4e4b\u540e\u5c31\u4f1a\u542f\u52a8 linux \u5185\u6838\u4e86\u3002</li> </ul> <pre><code>bl32_entrypoint()\n    |--&gt;el3_entrypoint_common()\n    |--&gt;bl31_setup()\n        |--&gt;bl31_early_platform_setup2()\n        |--&gt;bl32_plat_arch_setup()\n    |--&gt;bl31_main()\n        |--&gt;bl31_platform_setup()\n        |--&gt;bl31_lib_init()\n        |--&gt;runtime_svc_init()\n        |--&gt;(*bl32_init)\n        |--&gt;bl31_prepare_next_image_entry()\n        |--&gt;bl1_plat_runtime_setup()\n    |--&gt;el3_exit()\n</code></pre> <p>\u91cd\u70b9\u5173\u6ce8<code>runtime_svc_init()</code>\u51fd\u6570\uff0c\u5b83\u4f1a\u6ce8\u518c\u6240\u6709\u7684 runtime service arm-trusted-firmware/common/runtime_svc.c<pre><code>void __init runtime_svc_init(void)\n{\n    ......\n    // \u904d\u5386\u6240\u6709\u7684 runtime service\uff0c\u5e76\u8c03\u7528\u6ce8\u518c\u51fd\u6570\n    for(index = 0U; index &lt; RT_SVC_DECS_NUM; index++){\n        rt_svc_desc_t *service = &amp;rt_svc_desc_array[index];\n        rc = validate_rt_svc_desc(service);\n\n        if(service-&gt;init != NULL) {\n            rc = service-&gt;init();\n        }\n    }\n    ......\n}\n</code></pre></p> <p>\u5bf9\u4e8e opteed service \u6765\u8bf4\uff0c\u5b8f<code>DECLARE_RT_SVC()</code>\u6ce8\u518c\u4e86 opteed \u7684 setup \u51fd\u6570<code>opteed_setup()</code>\uff1a</p> arm-trusted-firmware/services/spd/opteed/opteed_main.c<pre><code>DECLARE_RT_SVC(\n    opteed_fast,\n\n    OEN_TOS_START,\n    OEN_TOS_END,\n    SMC_TYPE_FAST,\n    opteed_setup,\n    opteed_smc_handler\n);\n\nstatic int32_t opteed_setup(void)\n{\n    ......\n    entry_point_info_t *optee_ep_info;\n    optee_ep_info = bl31_plat_get_next_image_ep_info(SECURE);\n    ......\n    opteed_init_optee_ep_state(optee_ep_info, opteed_rw, optee_ep_info-&gt;pc,\n                arg0, arg1, arg2, arg3,\n                &amp;opteed_sp_context[linear_id]);\n    // \u771f\u6b63\u7684\u5165\u53e3\u51fd\u6570\n    bl31_register_bl32_init(&amp;opteed_init);\n    return 0;\n}\n</code></pre> <p>\u5176\u4e2d\uff0c<code>entry_point_info_t</code>\u7ed3\u6784\u4f53\u5b9a\u4e49\u4e86 secure os \u7684\u5165\u53e3\u70b9\u4fe1\u606f\uff0c\u6bd4\u5982 PC \u6307\u9488\u3001SPSR \u5bc4\u5b58\u5668\u3001AAPCS \u5bc4\u5b58\u5668\u7b49\uff1a</p> <pre><code>typedef struct entry_point_info {\n    param_header_t h;\n    uintptr_t pc;\n    uint32_t spsr;\n#ifdef __aarch64__\n    aapcs64_params_t args;\n#else\n    aapcs32_params_t args;\n#endif\n} entry_point_info_t;\n</code></pre> <p><code>bl31_plat_get_next_image_ep_info()</code>\u51fd\u6570\u4e3a\u865a\u51fd\u6570\uff0c\u5176\u5b9a\u4e49\u7531\u5404\u5bb6\u5e73\u53f0\u5b9e\u73b0\uff0cARM \u9ed8\u8ba4\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a</p> arm-trusted-firmware/plat/arm/common/arm_bl31_setup.c<pre><code>#pragma weak bl31_plat_get_next_image_ep_info\n\nstruct entry_point_info *bl31_plat_get_next_image_ep_info(uint32_t type)\n{\n    entry_point_info_t *next_image_info;\n\n    assert(sec_state_is_valid(type));\n    if (type == NON_SECURE) {\n#if TRANSFER_LIST &amp;&amp; !RESET_TO_BL31\n        next_image_info = transfer_list_set_handoff_args(\n            ns_tl, &amp;bl33_image_ep_info);\n#else\n        next_image_info = &amp;bl33_image_ep_info;\n#endif\n    }\n#if ENABLE_RME\n    else if (type == REALM) {\n        next_image_info = &amp;rmm_image_ep_info;\n    }\n#endif\n    else {\n        next_image_info = &amp;bl32_image_ep_info;\n    }\n\n    /*\n     * None of the images on the ARM development platforms can have 0x0\n     * as the entrypoint\n     */\n    if (next_image_info-&gt;pc)\n        return next_image_info;\n    else\n        return NULL;\n}\n</code></pre>"},{"location":"arm/secure_boot/#atf","title":"ATF \u521d\u59cb\u5316","text":""},{"location":"arm/secure_boot/#rsa","title":"\u955c\u50cf\u52a0\u5bc6\u7b97\u6cd5RSA","text":"<p>RSA \u52a0\u5bc6\u7b97\u6cd5\u662f\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff0c\u5373\u52a0\u5bc6\u548c\u89e3\u5bc6\u4e0d\u4f7f\u7528\u540c\u6837\u7684\u5bc6\u7801\u548c\u89c4\u5219\uff0c\u53ea\u8981\u8fd9\u4e24\u79cd\u89c4\u5219\u4e4b\u95f4\u5b58\u5728\u67d0\u79cd\u5bf9\u5e94\u5173\u7cfb\u5373\u53ef\u3002\u8fd9\u79cd\u7b97\u6cd5\u975e\u5e38\u53ef\u9760\uff0c\u5bc6\u94a5\u8d8a\u957f\uff0c\u5b83\u5c31\u8d8a\u96be\u7834\u89e3\u3002\u6839\u636e\u5df2\u7ecf\u62ab\u9732\u7684\u6587\u732e\uff0c\u76ee\u524d\u88ab\u7834\u89e3\u7684\u6700\u957f RSA \u5bc6\u94a5\u662f 768\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u957f\u5ea6\u8d85\u8fc7 768 \u4f4d\u7684\u5bc6\u94a5\uff0c\u8fd8\u65e0\u6cd5\u7834\u89e3\uff08\u81f3\u5c11\u6ca1\u4eba\u516c\u5f00\u5ba3\u5e03\uff09\u3002\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\uff0c1024 \u4f4d\u7684 RSA \u5bc6\u94a5\u57fa\u672c\u5b89\u5168\uff0c2048 \u4f4d\u7684\u5bc6\u94a5\u6781\u5176\u5b89\u5168\u3002</p> <p>Secure boot\u4e2d\u4f7f\u7528 RSA \u52a0\u5bc6\u7b97\u6cd5\u5bf9\u955c\u50cf\u8fdb\u884c\u7b7e\u540d\uff0c\u5177\u4f53\u6b65\u9aa4\u4e3a\uff1a</p> <ol> <li>\u4f7f\u7528 hash \u7b97\u6cd5\u8ba1\u7b97\u955c\u50cf\u7684 hash \u503c</li> <li>\u7f16\u8bd1\u65f6\u7528\u79c1\u94a5\u5c06 hash \u503c\u7b7e\u540d\uff0c\u5e76\u5b58\u5165\u955c\u50cf\u4e2d\uff0c\u653e\u5728\u6307\u5b9a\u4f4d\u7f6e</li> <li>\u542f\u52a8\u4e0a\u7535\u540e\u62ff\u5230\u516c\u94a5\uff0c\u5c06\u5b58\u50a8\u5728\u955c\u50cf\u4e2d\u7279\u5b9a\u4f4d\u7f6e\u7684 hash \u503c\u89e3\u5bc6</li> <li>\u5bf9\u6bd4\u89e3\u5bc6\u540e\u7684 hash \u503c\u548c\u8ba1\u7b97\u51fa\u7684 hash \u503c\u662f\u5426\u4e00\u81f4\uff0c\u5982\u679c\u4e00\u81f4\uff0c\u5219\u8ba4\u4e3a\u955c\u50cf\u6ca1\u6709\u88ab\u7be1\u6539\uff0c\u53ef\u4ee5\u6b63\u5e38\u542f\u52a8</li> </ol>"},{"location":"arm/standard/","title":"\u7f16\u7a0b\u89c4\u8303","text":""},{"location":"arm/standard/#_2","title":"\u6570\u636e\u7c7b\u578b","text":""},{"location":"arm/standard/#_3","title":"\u51fd\u6570\u8c03\u7528\u6807\u51c6","text":"<p>ARMv8\u89c4\u5b9a\u51fd\u6570\u8c03\u7528\u7684\u6807\u51c6\u5982\u4e0b\uff1a</p> <ol> <li>\u51fd\u6570\u7684\u524d8\u4e2a\u53c2\u6570\u7528 X0 ~ X7 \u5bc4\u5b58\u5668\u4f20\u9012</li> <li>\u591a\u4e8e\u7684\u53c2\u6570\u7528\u6808\u6765\u4f20\u9012</li> <li>\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4fdd\u5b58\u5728 X0 \u5bc4\u5b58\u5668</li> <li>\u51fd\u6570\u7684\u8fd4\u56de\u5730\u5740\u4fdd\u5b58\u5728 X30 \u5bc4\u5b58\u5668</li> </ol>"},{"location":"arm/tlb/","title":"TLB\u7ba1\u7406","text":""},{"location":"arm/tlb/#_1","title":"\u57fa\u7840\u77e5\u8bc6","text":"<p>\u5904\u7406\u5668\u5728\u8bbf\u95ee\u5185\u5b58\u65f6\u90fd\u9700\u8981\u7ecf\u8fc7\u5730\u5740\u7ffb\u8bd1\uff0c\u5c06\u865a\u62df\u5730\u5740\u7ffb\u8bd1\u6210\u7269\u7406\u5730\u5740\u3002\u5730\u5740\u7ffb\u8bd1\u662f\u4e00\u4e2a\u6f2b\u957f\u7684\u8fc7\u7a0b\uff0cARMv8\u652f\u6301\u56db\u7ea7\u9875\u8868\u4e5f\u5c31\u662f\u8bf4\u8981\u7ecf\u8fc7\u56db\u6b21\u7ffb\u8bd1\u624d\u80fd\u627e\u5230\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\u3002\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u786c\u4ef6\u8bbe\u8ba1\u5e08\u5728MMU\u4e2d\u65b0\u589e\u4e86\u4e00\u4e2a\u53ebTLB\u7684\u5355\u5143\uff0c\u628a\u7ffb\u8bd1\u597d\u7684\u5730\u5740\u4fdd\u5b58\u5728\u8fd9\u4e2a\u7f13\u5b58\u4e2d\uff0c\u4ece\u800c\u8df3\u8fc7\u7e41\u6742\u7684\u5730\u5740\u7ffb\u8bd1\u8fc7\u7a0b\u3002</p> <p>CPU\u5728\u67e5\u8be2\u5730\u5740\u65f6\uff0c\u4f1a\u5148\u5728TLB\u4e2d\u67e5\u8be2\u3002\u5982\u679c\u627e\u5230\uff0c\u79f0\u4e3aTLB\u547d\u4e2d\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u624d\u4f1a\u6267\u884c\u5730\u5740\u7ffb\u8bd1\uff0c\u5e76\u628a\u7ed3\u679c\u7f13\u5b58\u5230TLB\u4e2d\uff0c\u4ee5\u4fbf\u4e0b\u6b21\u67e5\u8be2\uff0c\u8fd9\u4e2a\u53eb\u505aTLB\u672a\u547d\u4e2d\u3002</p> <p>\u4e00\u4e2aTLB\u9879\u53ef\u4ee5\u5305\u62ec\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ul> <li>VPN\uff1a\u865a\u62df\u5730\u5740\u9875\u5e27\u53f7</li> <li>PFN\uff1a\u7269\u7406\u5730\u5740\u9875\u5e27\u53f7</li> <li>V\uff1a\u6709\u6548\u4f4d</li> <li>nG\uff1a\u8868\u660e\u662f\u5426\u662f\u5168\u5c40TLB\u6216\u8fdb\u7a0b\u72ec\u6709TLB</li> <li>D\uff1a\u810f\u4f4d</li> <li>AP\uff1a\u8bbf\u95ee\u6743\u9650</li> <li>ASID\uff1a\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4ID</li> </ul>"},{"location":"arm/tlb/#_2","title":"\u540c\u540d\u95ee\u9898","text":"<p>\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5141\u8bb8\u8fdb\u7a0b\u62e5\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u4f46\u662f\u8fd9\u5bb9\u6613\u5f15\u53d1\u540c\u540d\u95ee\u9898\u3002\u6240\u8c13\u540c\u540d\u95ee\u9898\u5c31\u662f\u8fdb\u7a0bA\u4e0e\u8fdb\u7a0bB\u62e5\u6709\u76f8\u540c\u7684\u865a\u62df\u5730\u5740\uff0c\u4f46\u662f\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\u4e0d\u540c\uff0c\u5728\u8fdb\u884c\u8fdb\u7a0b\u5207\u6362\u65f6\uff0c\u65b0\u7684\u8fdb\u7a0b\u53bbTLB\u4e2d\u67e5\u8be2\u65f6\uff0c\u53ef\u80fd\u4f1a\u8fd4\u56de\u65e7\u8fdb\u7a0b\u7684\u7269\u7406\u5730\u5740\uff0c\u4ece\u800c\u5bfc\u81f4\u9519\u8bef\u3002</p> <p>\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u662f\u6bcf\u6b21\u8fdb\u7a0b\u5207\u6362\u65f6\u5c31\u5237\u65b0TLB\u4f7f\u5f97TLB\u5931\u6548\uff0c\u4f46\u662f\u8fd9\u4f1a\u5bf9\u6027\u80fd\u9020\u6210\u4e25\u91cd\u7684\u5f71\u54cd\u3002\u56e0\u4e3a\u5728\u53d1\u751f\u8fdb\u7a0b\u5207\u6362\u4e4b\u540e\uff0c\u65b0\u8fdb\u7a0b\u9762\u5bf9\u7684\u662f\u4e00\u4e2a\u7a7a\u767d\u7684TLB\uff0c\u76f8\u5f53\u4e8e\u51b7\u542f\u52a8\uff0c\u4ee5\u524d\u5efa\u7acb\u7684TLB\u5168\u90fd\u4e0d\u80fd\u7528\u4e86\uff0c\u800c\u91cd\u5efaTLB\u9700\u8981\u82b1\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u3002</p> <p>\u4e3a\u4e86\u63d0\u9ad8TLB\u7684\u6027\u80fd\uff0c\u51e0\u5341\u5e74\u6765\u82af\u7247\u8bbe\u8ba1\u4eba\u5458\u548c\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u4eba\u5458\u4ed8\u51fa\u4e86\u5de8\u5927\u7684\u52aa\u529b\u3002\u4ece\u5185\u6838\u89d2\u5ea6\u770b\uff0c\u5730\u5740\u7a7a\u95f4\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff1a\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\uff0c\u56e0\u6b64TLB\u5bf9\u5e94\u5730\u4e5f\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ul> <li>\u5168\u5c40TLB\uff1a\u7f13\u5b58\u4e86\u5185\u6838\u7a7a\u95f4\u7684\u6620\u5c04\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u4e0d\u4f1a\u53d8\u5316\u3002</li> <li>\u8fdb\u7a0b\u72ec\u6709TLB\uff1a\u7f13\u5b58\u4e86\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u7528\u6237\u7a7a\u95f4\u6620\u5c04\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u4f1a\u968f\u7740\u8fdb\u7a0b\u5207\u6362\u800c\u53d8\u5316\u3002</li> </ul> <p>\u4e3a\u4e86\u652f\u6301\u8fdb\u7a0b\u72ec\u6709TLB\uff0cARM\u4f53\u7cfb\u7ed3\u6784\u63d0\u4f9b\u4e86\u786c\u4ef6\u4e0a\u7684\u652f\u6301\uff1a\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4ID(ASID)\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u7684ASID\u90fd\u4e0d\u540c\u3002TLB\u547d\u4e2d\u7684\u67e5\u8be2\u8fc7\u7a0b\u9700\u8981\u5305\u542b\u5bf9ASID\u7684\u68c0\u67e5\uff0c\u53ea\u6709\u5f53ASID\u5339\u914d\u65f6\uff0c\u624d\u5141\u8bb8TLB\u547d\u4e2d\u3002\u800cTLB\u9879\u7684nG\u4f4d\u5219\u7528\u6765\u6807\u8bc6\u8be5TLB\u662f\u8fdb\u7a0b\u72ec\u6709\u8fd8\u662f\u5168\u5c40\u7684\u3002</p>"},{"location":"arm/tlb/#_3","title":"\u7ba1\u7406\u6307\u4ee4","text":"<p>ARMv8\u4f53\u7cfb\u7ed3\u6784\u63d0\u4f9b\u4e86TLB\u7ba1\u7406\u6307\u4ee4\u6765\u5e2e\u52a9\u5237\u65b0TLB\uff0c\u6709\u4e9b\u573a\u666f\u9700\u8981\u6211\u4eec\u624b\u52a8\u4f7f\u7528TLB\u7ba1\u7406\u6307\u4ee4\u6765\u7ef4\u62a4TLB\u4e00\u81f4\u6027\u3002</p> <p>ARMv8\u4f53\u7cfb\u7ed3\u6784\u63d0\u4f9b\u7684\u6307\u4ee4\u6709\uff1a</p> <ul> <li>\u4f7f\u6240\u6709TLB\u9879\u5931\u6548</li> <li>\u4f7fASID\u5bf9\u5e94\u7684\u67d0\u4e2aTLB\u9879\u5931\u6548</li> <li>\u4f7fASID\u5bf9\u5e94\u7684\u6240\u6709TLB\u9879\u5931\u6548</li> <li>\u4f7f\u865a\u62df\u5730\u5740\u5bf9\u5e94\u7684\u6240\u6709TLB\u9879\u5931\u6548</li> </ul> <p>TLBI\u6307\u4ee4\u7528\u4e8e\u7ba1\u7406TLB\uff0c\u683c\u5f0f\u5982\uff1a<code>TLBI &lt;type&gt;&lt;level&gt;{IS} {&lt;Xt&gt;}</code>\u3002</p> <p>\u6ce8\u610f\uff0c\u5982\u679c\u60f3\u8981\u4fdd\u8bc1TLB\u7ba1\u7406\u6307\u4ee4\u7684\u6267\u884c\u6b21\u5e8f\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u4f7f\u7528\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\u3002</p> <p>ARM64\u4f53\u7cfb\u7ed3\u6784\u7f16\u7a0b\u4e0e\u5b9e\u8df5\u4e00\u4e66\u4e2dP278\u9875 ~ P286\u9875\u5bf9\u4e8eTLB\u6848\u4f8b\u7684\u5206\u6790\u975e\u5e38\u7cbe\u5f69\uff0c\u63a8\u8350\u9605\u8bfb\u3002</p>"},{"location":"cloud/","title":"\u4e91\u8ba1\u7b97","text":""},{"location":"cloud/docker/","title":"\u5bb9\u5668\u6280\u672f","text":"<p>Docker \u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u3001\u9ad8\u6027\u80fd\u7684\u865a\u62df\u5316\u6280\u672f\uff0c\u53ef\u4ee5\u8ba9\u5f00\u53d1\u8005\u5c06\u5e94\u7528\u548c\u4f9d\u8d56\u6253\u5305\u81f3\u4e00\u4e2a\u53ef\u79fb\u690d\u7684\u955c\u50cf\u4e2d\uff0c\u7136\u540e\u53d1\u5e03\u5230\u4efb\u4f55 Linux \u673a\u5668\u4e0a\u8fd0\u884c\u3002</p> <p>\u955c\u50cf\u5c31\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u3001\u72ec\u7acb\u7684\u8fd0\u884c\u5355\u5143\uff0c\u5b83\u5305\u542b\u4e86\u5e94\u7528\u7a0b\u5e8f\u53ca\u5176\u6240\u9700\u7684\u6240\u6709\u7ec4\u4ef6\uff08\u5982\u5e93\u3001\u4f9d\u8d56\u9879\u3001\u73af\u5883\u53d8\u91cf\u7b49\uff09\u3002\u6bcf\u4e2a\u955c\u50cf\u76f8\u4e92\u9694\u79bb\uff0c\u4e0d\u4f1a\u4ea7\u751f\u51b2\u7a81\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u652f\u6301 Docker \u7684\u73af\u5883\u4e2d\u8fd0\u884c\u3002</p> <p>Docker \u8fd8\u63d0\u4f9b\u4e86\u4e00\u5957\u5de5\u5177\u548c\u547d\u4ee4\u884c\u754c\u9762\uff0c\u4f7f\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u8f7b\u677e\u5730\u6784\u5efa\u3001\u6253\u5305\u3001\u53d1\u5e03\u548c\u7ba1\u7406 Docker \u955c\u50cf\u3002\u8fd9\u4f7f\u5f97\u5e94\u7528\u7a0b\u5e8f\u7684\u4ea4\u4ed8\u548c\u90e8\u7f72\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u548c\u53ef\u91cd\u590d\uff0c\u52a0\u901f\u4e86\u5f00\u53d1\u5468\u671f\u5e76\u63d0\u9ad8\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u53ef\u79fb\u690d\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002</p> <p>Docker \u7684\u6574\u4f53\u67b6\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u8981\u6784\u5efa\u4e00\u4e2a\u955c\u50cf\uff0c\u53ef\u4ee5\u6709\u591a\u79cd\u65b9\u5f0f\uff1a</p> <ol> <li>\u4ece Docker \u5b98\u65b9\u4ed3\u5e93\u4e0b\u8f7d</li> <li>\u4ece\u672c\u5730\u5bb9\u5668\u6784\u5efa</li> <li>\u4ece\u538b\u7f29\u6587\u4ef6 tar \u6784\u5efa</li> <li>\u4ece Dockerfile \u6784\u5efa</li> </ol> <p>\u7531\u4e8e\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0cdocker \u5728\u56fd\u5185\u8bbf\u95ee\u53d7\u9650\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u53ef\u884c\u7684\u62c9\u53d6 docker \u955c\u50cf\u7684\u914d\u7f6e\uff1a</p> <pre><code>$ cat /etc/docker/daemon.json \n{\n  \"registry-mirrors\": [\n    \"https://dockerhub.azk8s.cn\",\n    \"https://reg-mirror.qiniu.com\",\n    \"https://registry.docker-cn.com\",\n    \"http://hub-mirror.c.163.com\",\n    \"https://3laho3y3.mirror.aliyuncs.com\",\n    \"http://f1361db2.m.daocloud.io\",\n    \"https://mirror.ccs.tencentyun.com\",\n    \"https://docker.m.daocloud.io\",\n    \"https://noohub.ru\",\n    \"https://huecker.io\",\n    \"https://dockerhub.timeweb.cloud\"\n  ]\n}\n</code></pre>"},{"location":"cloud/docker/#docker","title":"Docker\u5e38\u7528\u547d\u4ee4","text":"<p>Docker API \u53c2\u8003\uff1aDocker\u547d\u4ee4</p> <p>\u8fd9\u91cc\u53ea\u5217\u51fa\u4e00\u4e9b\u5e38\u7528\u7684\u547d\u4ee4\uff1a</p> <p>\u955c\u50cf\u7ba1\u7406\uff1a</p> \u547d\u4ee4 \u63cf\u8ff0 docker images \u67e5\u770b\u672c\u5730\u955c\u50cf docker search \u5728 Docker Hub \u4e0a\u641c\u7d22\u955c\u50cf docker pull \u62c9\u53d6\u955c\u50cf docker rmi \u5220\u9664\u955c\u50cf docker ps \u67e5\u770b\u5bb9\u5668 docker commit \u63d0\u4ea4\u5bb9\u5668\u4e3a\u65b0\u7684\u955c\u50cf docker save \u4fdd\u5b58\u955c\u50cf\u5230\u6587\u4ef6 docker load \u4ece\u6587\u4ef6\u4e2d\u52a0\u8f7d\u955c\u50cf <p>\u5bb9\u5668\u7ba1\u7406\uff1a</p> \u547d\u4ee4 \u63cf\u8ff0 docker create \u4ece\u955c\u50cf\u4e2d\u521b\u5efa\u4e00\u4e2a\u5bb9\u5668 docker ps \u67e5\u770b\u672c\u5730\u5bb9\u5668 docker start \u542f\u52a8\u4e00\u4e2a\u505c\u6b62\u7684\u5bb9\u5668 docker stop \u505c\u6b62\u4e00\u4e2a\u8fd0\u884c\u7684\u5bb9\u5668 docker rm \u5220\u9664\u5bb9\u5668 docker exec \u8fdb\u5165\u5bb9\u5668 docker export \u5bfc\u51fa\u5bb9\u5668\u5230\u672c\u5730\u6587\u4ef6 docker cp \u5728\u672c\u5730\u548c\u5bb9\u5668\u4e4b\u95f4\u590d\u5236\u6587\u4ef6 docker update \u66f4\u65b0\u5bb9\u5668\u7684\u914d\u7f6e docker stats \u67e5\u770b\u5bb9\u5668\u7684\u8d44\u6e90\u5360\u7528\u60c5\u51b5 <p>Docker \u547d\u4ee4\u603b\u7ed3\uff1a</p> <p></p>"},{"location":"cloud/docker/#dockerfile","title":"Dockerfile","text":"<p>Dockerfile \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u811a\u672c\u6587\u4ef6\uff0c\u53ef\u4ee5\u7531 Docker Runtime \u8bc6\u522b\u5e76\u4ece\u4e2d\u6784\u5efa\u955c\u50cf\uff0c\u5b83\u7684\u8bed\u6cd5\u6bd4\u8f83\u7b80\u5355\uff0c\u53ef\u4ee5\u53c2\u8003\uff1aDockerfile</p> <p>Dockerfile \u5e38\u7528\u6307\u4ee4\uff1a</p> <pre><code>FROM \u6307\u5b9a\u57fa\u7840\u955c\u50cf\n\nMAINTAINER \u6307\u5b9a\u7ef4\u62a4\u8005\u4fe1\u606f\n\nWORKDIR \u8bbe\u7f6e\u5de5\u4f5c\u76ee\u5f55\n\nENV \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\n\nLABEL \u4e3a\u955c\u50cf\u6dfb\u52a0\u5143\u6570\u636e\n\nRUN \u6267\u884c\u547d\u4ee4\n\nCMD \u542f\u52a8\u65f6\u9ed8\u8ba4\u6267\u884c\u7684\u547d\u4ee4\uff0c\u53ea\u80fd\u6709\u4e00\u6761\n\nCOPY \u590d\u5236\u6587\u4ef6\u81f3\u5bb9\u5668\u4e2d\n\nEXPOSE \u6307\u5b9a\u76d1\u542c\u7aef\u53e3\n\nVOLUME \u8bbe\u7f6e\u6302\u8f7d\u70b9\n\nUSER \u6307\u5b9a\u8fd0\u884c\u65f6\u7684\u7528\u6237\u540d\n\nARG \u5b9a\u4e49\u6784\u5efa\u65f6\u7684\u53d8\u91cf\uff0c\u542f\u52a8\u65f6\u4ee5\u53c2\u6570--build-arg\u6307\u5b9a\n\nSTOPSIGNAL \u5b9a\u4e49\u505c\u6b62\u5bb9\u5668\u65f6\u7684\u4fe1\u53f7\n\nONBUILD \u5728\u5f53\u524d\u955c\u50cf\u88ab\u4f5c\u4e3a\u57fa\u7840\u955c\u50cf\u65f6\uff0c\u89e6\u53d1\u7684\u6307\u4ee4\n\nHEALTHCHECK \u5065\u5eb7\u68c0\u67e5\n\nSHELL \u6307\u5b9a\u5bb9\u5668\u5185\u7684 shell\n</code></pre> <p>\u5728\u7f16\u5199\u5b8c Dockerfile \u4e4b\u540e\uff0c\u4f7f\u7528<code>docker build</code>\u547d\u4ee4\u6765\u542f\u52a8 docker\u3002</p>"},{"location":"linux/","title":"Linux\u5185\u6838\u4f53\u7cfb","text":"<p>\"Most good programmers do programming not because they expect to get paid or get adulation by the public, but because it is fun to program.\"</p> <p>-- Linus Torvalds</p> <ul> <li>\u5185\u6838\u5256\u6790</li> <li>\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f</li> <li>\u6027\u80fd\u8c03\u4f18</li> <li>\u6027\u80fd\u89c2\u6d4b</li> </ul>"},{"location":"linux/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li> <p>\u6df1\u5165\u7406\u89e3Linux\u8fdb\u7a0b\u4e0e\u5185\u5b58</p> </li> <li> <p>\u8da3\u8c08Linux\u64cd\u4f5c\u7cfb\u7edf</p> </li> <li> <p>\u6df1\u5165Linux\u5185\u6838\u67b6\u6784</p> </li> <li> <p>\u7cbe\u901a\u5d4c\u5165\u5f0fLinux\u7f16\u7a0b</p> </li> <li> <p>\u6df1\u5165\u7406\u89e3LINUX\u5185\u6838(\u7b2c3\u7248)</p> </li> <li> <p>Linux\u5185\u6838\u8bbe\u8ba1\u4e0e\u5b9e\u73b0(\u7b2c3\u7248)</p> </li> <li> <p>UNIX\u73af\u5883\u9ad8\u7ea7\u7f16\u7a0b\uff08\u7b2c3\u7248)</p> </li> <li> <p>Linux\u547d\u4ee4\u884c\u4e0eshell\u811a\u672c\u7f16\u7a0b\u5927\u5168\uff08\u7b2c4\u7248)</p> </li> <li> <p>\u91ce\u706bLinux\u5f00\u53d1\u5b9e\u6218\u6307\u5357</p> </li> <li> <p>\u8717\u58f3\u79d1\u6280</p> </li> <li> <p>Linux\u6027\u80fd\u4f18\u5316\u5b9e\u6218</p> </li> <li> <p>Linux\u9a71\u52a8\u4ee3\u7801\u793a\u4f8b</p> </li> </ul>"},{"location":"linux/drivers/","title":"\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f","text":""},{"location":"linux/drivers/#_2","title":"\u57fa\u7840\u77e5\u8bc6","text":"<ul> <li>\u786c\u4ef6\u77e5\u8bc6</li> <li>\u901a\u4fe1\u534f\u8bae</li> <li>\u5185\u6838\u6a21\u5757</li> <li>\u8bbe\u5907\u6811</li> <li>\u4e2d\u65ad\u5b50\u7cfb\u7edf</li> <li>\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee</li> </ul>"},{"location":"linux/drivers/#_3","title":"\u8bbe\u5907\u6a21\u578b\u6846\u67b6","text":"<ul> <li>\u8bbe\u5907\u6a21\u578b</li> <li>\u5e73\u53f0\u603b\u7ebf\u6a21\u578b</li> </ul>"},{"location":"linux/drivers/#_4","title":"\u5b57\u7b26\u3001\u5757\u548c\u7f51\u7edc","text":"<ul> <li>\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f</li> <li>\u5757\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f</li> <li>\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f</li> </ul>"},{"location":"linux/drivers/#_5","title":"\u4f4e\u901f\u8bbe\u5907\u9a71\u52a8","text":"<ul> <li>Pinctrl\u5b50\u7cfb\u7edf</li> <li>GPIO\u5b50\u7cfb\u7edf</li> <li>I2C\u5b50\u7cfb\u7edf</li> <li>SPI\u5b50\u7cfb\u7edf</li> <li>UART\u5b50\u7cfb\u7edf</li> <li>Input\u5b50\u7cfb\u7edf</li> </ul>"},{"location":"linux/drivers/#_6","title":"\u9ad8\u901f\u8bbe\u5907\u9a71\u52a8","text":"<ul> <li>\u4ee5\u592a\u7f51</li> <li>PCIE</li> <li>USB</li> <li>WIFI</li> <li>\u84dd\u7259</li> </ul>"},{"location":"linux/drivers/#_7","title":"\u5176\u4ed6\u8bbe\u5907\u9a71\u52a8","text":"<ul> <li>Socket Can</li> </ul>"},{"location":"linux/drivers/blkdev/","title":"\u5757\u8bbe\u5907\u9a71\u52a8","text":""},{"location":"linux/drivers/bluetooth/","title":"\u84dd\u7259","text":""},{"location":"linux/drivers/chardev/","title":"\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8","text":"<p>\u5b57\u7b26\u8bbe\u5907\u662f\u6700\u5e38\u89c1\u7684\u8bbe\u5907\uff0c\u8fd9\u79cd\u8bbe\u5907\u7684\u8bfb\u5199\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u800c\u65e0\u9700\u7ecf\u8fc7\u7f13\u51b2\u533a\u3002\u4ece\u7528\u6237\u6001\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6I/O\u64cd\u4f5c\u6765\u8bbf\u95ee\u5b57\u7b26\u8bbe\u5907\u3002</p> <p>\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u6846\u67b6\u5982\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u5185\u6838\u4f7f\u7528<code>struct cdev</code>\u7ed3\u6784\u4f53\u6765\u63cf\u8ff0\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907\uff1a</p> <pre><code>struct cdev {\n    struct kobject kobj;            \n    struct module *owner;           \n    struct file_operations *ops;\n    struct list_head list;\n    dev_t dev;\n    unsigned int count;\n};\n</code></pre>"},{"location":"linux/drivers/chardev/#_2","title":"\u5feb\u901f\u53c2\u8003","text":"<pre><code>#include &lt;linux/types.h&gt;\n\ndev_t devID;\n\nint MAJOR(dev_t dev);\n\nint MINOR(dev_t dev);\n\ndev_t MKDEV(unsigned int major, unsigned int minor);\n</code></pre> <pre><code>#include &lt;linux/fs.h&gt;\n\nint register_chrdev_region(dev_t first, unsigned int count, char *name);\n\nint alloc_chrdev_region(dev_t *dev, unsigned int firstminor, unsigned int count, char *name);\n\nvoid unregister_chrdev_region(dev_t first, unsigned int count);\n\nint register_chrdev(unsigned int major, const char *name, struct file_operations *fops);\n\nint unregister_chrdev(unsigned int major, const char *name);\n\nstruct file_operations;\n\nstruct file;\n\nstruct inode;\n</code></pre> <pre><code>#include &lt;linux/cdev.h&gt;\n\nstruct cdev *cdev_alloc(void);\n\nvoid cdev_init(struct cdev *dev, dev_t num, unsigned int count);\n\nint cdev_add(struct cdev *cdev, dev_t num, unsigned int count);\n\nvoid cdev_del(struct cdev *dev);\n</code></pre> <pre><code>#include &lt;linux/kernel.h&gt;\n\ncontainer_of(pointer, type, field);\n\n#include &lt;asm/uaccess.h&gt;\n\nunsigned long copy_from_user(void *to, const void *from, unsigned long count);\n\nunsigned long copy_to_user(void *to, const void *from, unsigned long count);\n</code></pre>"},{"location":"linux/drivers/chardev/#_3","title":"\u8bbe\u5907\u53f7\u521d\u59cb\u5316","text":"<p>\u5b57\u7b26\u8bbe\u5907\u901a\u8fc7\u4e3b\u3001\u6b21\u8bbe\u5907\u53f7\u6765\u6807\u8bc6\u3002\u4e3b\u8bbe\u5907\u53f7\u7528\u6765\u8bc6\u522b\u8bbe\u5907\u5bf9\u5e94\u7684\u9a71\u52a8\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u73b0\u4ee3Linux\u5185\u6838\u5141\u8bb8\u591a\u4e2a\u9a71\u52a8\u5171\u4eab\u4e3b\u8bbe\u5907\u53f7\uff0c\u6240\u4ee5\u8fd8\u9700\u8981\u6b21\u8bbe\u5907\u53f7\u7528\u4e8e\u6b63\u786e\u786e\u5b9a\u8bbe\u5907\u6587\u4ef6\u6240\u6307\u5411\u7684\u8bbe\u5907\u3002</p> <p><code>dev_t</code>\u6570\u636e\u7c7b\u578b\u5c31\u8868\u793a\u4e00\u4e2a\u8bbe\u5907\u53f7\u3002\u5b8f<code>MAJOR</code>\u3001<code>MINOR</code>\u7528\u4e8e\u83b7\u53d6\u4e00\u4e2a<code>dev_t</code>\u7c7b\u578b\u7684\u4e3b\u3001\u6b21\u8bbe\u5907\u53f7\u3002</p> <p>\u8bbe\u5907\u53f7\u7684\u6ce8\u518c\u4e0e\u5378\u8f7d\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u624b\u52a8\u5206\u914d\u4e0e\u52a8\u6001\u5206\u914d\u3002</p> <ul> <li>\u624b\u52a8\u5206\u914d\uff1a</li> </ul> <pre><code>int register_chrdev_region(dev_t from, unsigned count, const char *name)\n</code></pre> <p>\u8be5\u51fd\u6570\u7528\u4e8e\u8bbe\u5907\u53f7\u5df2\u77e5\u7684\u573a\u666f\uff0c\u4ec5\u5728\u6559\u5b66\u6f14\u793a\u7684\u65f6\u5019\u6709\u610f\u4e49\uff0c\u56e0\u4e3a\u4f60\u65e0\u6cd5\u786e\u5b9a\u5176\u4ed6\u673a\u5668\u4e0a\u8be5\u8bbe\u5907\u53f7\u662f\u5426\u88ab\u5360\u7528\u3002</p> <ul> <li>\u52a8\u6001\u5206\u914d\uff1a</li> </ul> <pre><code>int alloc_chrdev_region(dev_t *dev, unsigned baseminor, unsigned count, const char *name)\n\nvoid unregister_chrdev_region(dev_t first, unsigned count)\n</code></pre> <p>baseminor\uff1a\u6b21\u8bbe\u5907\u53f7\u7684\u8d77\u59cb\u503c\uff0c\u4e00\u822c\u4e3a0\u3002</p> <p>\u63a8\u8350\u4f7f\u7528\u8be5\u51fd\u6570\u7531\u5185\u6838\u52a8\u6001\u5206\u914d\u8bbe\u5907\u53f7\u3002</p>"},{"location":"linux/drivers/chardev/#file_operations","title":"file_operations\u7ed3\u6784\u4f53","text":"<p><code>struct file_operations</code>\u7ed3\u6784\u4f53\u4e2d\u7684\u51fd\u6570\u6307\u9488\u662f\u5b57\u7b26\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u4e3b\u4f53\u5185\u5bb9\u3002\u8fd9\u4e9b\u51fd\u6570\u4f1a\u5728\u5e94\u7528\u7a0b\u5e8f\u8c03\u7528\u8bf8\u5982<code>read()</code>\u3001<code>write()</code>\u7b49\u7cfb\u7edf\u8c03\u7528\u65f6\u88ab\u5185\u6838\u8c03\u7528\u3002</p> <p>\u7ed3\u6784\u4f53\u4e2d\u6700\u57fa\u672c\u7684\u51fd\u6570\u6709<code>open()</code>\u3001<code>release()</code>\u3001<code>read()</code>\u3001<code>write()</code>\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u5e94\u6587\u4ef6\u7684\u6253\u5f00\u3001\u5173\u95ed\u3001\u8bfb\u548c\u5199\u3002</p> <p>\u7531\u4e8e\u7528\u6237\u7a7a\u95f4\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u5185\u6838\u7a7a\u95f4\u7684\u5185\u5b58\uff0c\u56e0\u6b64\u9700\u8981\u501f\u52a9\u4e24\u4e2a\u51fd\u6570\u5b8c\u6210\u901a\u4fe1\uff1a</p> <pre><code>unsigned long copy_from_user(void *to, const void *from, unsigned long count);\n\nunsigned long copy_to_user(void *to, const void *from, unsigned long count);\n</code></pre>"},{"location":"linux/drivers/chardev/#cdev","title":"cdev\u7ed3\u6784\u4f53","text":"<p><code>struct cdev</code>\u7ed3\u6784\u4f53\u7528\u6765\u63cf\u8ff0\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907\uff1a</p> <pre><code>struct cdev {\n    struct kobject kobj; //\u7528\u6765\u652f\u6301\u8bbe\u5907\u6a21\u578b\uff0c\u6bcf\u4e2a\u5185\u6838\u5bf9\u8c61\uff08\u8bbe\u5907\u5bf9\u8c61\uff0c\u9a71\u52a8\u5bf9\u8c61\uff09\u90fd\u662fkobj\n    struct module *owner;//\u6307\u5411\u6a21\u5757\u7684\u6307\u9488\uff0c\u4e00\u822c\u4f7f\u7528THIS_MODULE\u6307\u9488\u5373\u53ef\u3002\n    const struct file_operations *ops; //\u5b57\u7b26\u8bbe\u5907\u5411\u4e0a\u63d0\u4f9b\u7684\u56de\u8c03\u51fd\u6570\u7684\u63a5\u53e3\u3002\n    struct list_head list;//\u5185\u6838\u7684\u5bf9\u8c61\u7684\u7ba1\u7406\u94fe\u7406\u3002\n    dev_t dev; //\u5b57\u7b26\u8bbe\u5907\u7684\u8bbe\u5907\u53f7\u3002\n    unsigned int count; //\u8bbe\u5907\u7684\u4e2a\u6570\u3002\n}__randomize_layout;\n</code></pre> <p><code>cdev_init()</code>\u51fd\u6570\u53ef\u4ee5\u5c06\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684<code>file_operations</code>\u7ed3\u6784\u4f53\u4e0e<code>struct cdev</code>\u7ed3\u6784\u4f53\u5173\u8054\u8d77\u6765\uff1a</p> <pre><code>void cdev_init(struct cdev *cdev, const struct file_operations *fops);\n</code></pre> <p>\u521d\u59cb\u5316\u5b8c\u6bd5\u4e4b\u540e\uff0c\u8c03\u7528<code>cdev_add()</code>\u51fd\u6570\u5c06<code>struct cdev</code>\u5bf9\u8c61\u6dfb\u52a0\u5230\u5185\u6838\u7ba1\u7406\u94fe\u8868\u4e2d\uff1a</p> <pre><code>int cdev_add(struct cdev *p, dev_t dev, unsigned count);\n\nvoid cdev_del(struct cdev *p);\n</code></pre>"},{"location":"linux/drivers/chardev/#_4","title":"\u81ea\u52a8\u521b\u5efa\u8bbe\u5907\u8282\u70b9","text":"<ol> <li> <p>\u521b\u5efa\u8bbe\u5907\u7c7b\uff1a</p> <pre><code>struct class *class_create(struct module *owner, const char *name);\n\nvoid class_destroy(struct class *cls);\n</code></pre> </li> <li> <p>\u521b\u5efa\u8bbe\u5907\u8282\u70b9\uff1a</p> <pre><code>struct device *device_create(struct class *cls, struct device *parent, dev_t dev, void *drvdata, const char *fmt, ...);\n\nvoid device_destroy(struct class *cls, dev_t dev);\n</code></pre> </li> </ol>"},{"location":"linux/drivers/chardev/#ioctl","title":"ioctl","text":"<p>\u5927\u90e8\u5206\u7684\u9a71\u52a8\u9664\u4e86\u5177\u5907\u57fa\u672c\u7684\u8bfb\u5199\u529f\u80fd\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u5bf9\u8bbe\u5907\u6709\u63a7\u5236\u80fd\u529b\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u901a\u8fc7<code>ioctl()</code>\u51fd\u6570\u6765\u5b9e\u73b0\uff1a</p> <p></p> <p>\u7528\u6237\u7a7a\u95f4\u7684<code>ioctl()</code>\uff1a<code>int ioctl(int fd, unsigned long request, ...)</code>\u3002</p> <p>\u9a71\u52a8\u7a0b\u5e8f\u7684<code>ioctl()</code>\uff1a<code>long (*unlocked_ioctl)(struct file *filep, unsigned int cmd, unsigned long args)</code>\u3002</p> <p><code>ioctl()</code>\u65b9\u6cd5\u7684 cmd \u53c2\u6570\u662f\u7528\u6237\u4e0e\u9a71\u52a8\u4ea4\u6d41\u7684\"\u534f\u8bae\"\uff0c\u5185\u6838\u63d0\u4f9b\u4e86\u7edf\u4e00\u7684\u547d\u540d\u683c\u5f0f\uff0c\u5c06 32 \u4f4d\u7684 int \u578b\u5212\u5206\u6210 4 \u4e2a\u6bb5\uff1a</p> <ul> <li> <p>dir\uff1a\u8868\u793a\u6570\u636e\u4f20\u8f93\u65b9\u5411\uff0c\u5360\u636e 2 \u4e2a bit\uff0c\u53ef\u4ee5\u4e3a_IOC_NONE\u3001_IOC_READ\u3001IOC_WRITE\u3001_IOC_READ|_IOC_WRITE\uff0c\u5206\u522b\u8868\u793a\u65e0\u6570\u636e\u3001\u8bfb\u6570\u636e\u3001\u5199\u6570\u636e\u3001\u8bfb\u5199\u6570\u636e\u3002</p> </li> <li> <p>type\uff1a\u8bbe\u5907\u7c7b\u578b\uff0c\u5360\u636e 8bit\uff0c\u4e3a\u4efb\u610f\u7684 char\uff0c\u4f5c\u7528\u662f\u8ba9<code>ioctl</code>\u547d\u4ee4\u6709\u552f\u4e00\u7684\u8bbe\u5907\u6807\u8bc6\u3002</p> </li> <li> <p>nr\uff1a\u7f16\u53f7\uff0c\u4e3a\u4efb\u610f\u7684 unsigned char\uff0c\u591a\u4e2a<code>ioctl</code>\u547d\u4ee4\u9012\u589e\u3002</p> </li> <li> <p>size\uff1a\u6307\u5b9a\u4e86 arg \u53c2\u6570\u7684\u6570\u636e\u7c7b\u578b\u548c\u957f\u5ea6\uff0cARM \u67b6\u6784\u4e3a 14bit\u3002</p> </li> </ul> <p>\u5185\u6838\u63d0\u4f9b\u4e86\u5b8f\u4ee5\u751f\u6210\u4e0a\u8ff0\u683c\u5f0f\u7684<code>ioctl()</code>\u547d\u4ee4\uff1a</p> <pre><code>#define _IOC(dir,type,nr,size) \\\n    (((dir)  &lt;&lt; _IOC_DIRSHIFT) | \\\n     ((type) &lt;&lt; _IOC_TYPESHIFT) | \\\n     ((nr)   &lt;&lt; _IOC_NRSHIFT) | \\\n     ((size) &lt;&lt; _IOC_SIZESHIFT))\n</code></pre> <p>\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\uff0c\u53ef\u4ee5\u7528\u884d\u751f\u5b8f_IOC()\u6765\u76f4\u63a5\u5b9a\u4e49<code>ioctl()</code>\u547d\u4ee4\uff1a</p> <pre><code>#define _IO(type,nr)        _IOC(_IOC_NONE,(type),(nr),0)\n#define _IOR(type,nr,size)  _IOC(_IOC_READ,(type),(nr),(_IOC_TYPECHECK(size)))\n#define _IOW(type,nr,size)  _IOC(_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size)))\n#define _IOWR(type,nr,size) _IOC(_IOC_READ|_IOC_WRITE,(type),(nr),(_IOC_TYPECHECK(size))\n</code></pre> <p>_IO\uff1a\u4e0d\u5e26\u53c2\u6570\u7684ioctl\u547d\u4ee4</p> <p>_IOW\uff1a\u5e26\u5199\u53c2\u6570\u7684ioctl\u547d\u4ee4</p> <p>_IOR\uff1a\u5e26\u8bfb\u53c2\u6570\u7684ioctl\u547d\u4ee4</p> <p>_IOWR\uff1a\u5e26\u8bfb\u5199\u53c2\u6570\u7684ioctl\u547d\u4ee4</p>"},{"location":"linux/drivers/chardev/#io","title":"\u9ad8\u7ea7I/O\u6a21\u578b","text":"<p>Linux \u4e00\u5171\u63d0\u4f9b\u4e94\u79cd I/O \u6a21\u578b\uff1a</p> <ol> <li> <p>\u963b\u585e I/O \u6a21\u578b\uff1a</p> <ul> <li>\u7279\u70b9\uff1a\u5e94\u7528\u7a0b\u5e8f\u53d1\u8d77 I/O \u64cd\u4f5c\u540e\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230\u6570\u636e\u51c6\u5907\u5c31\u7eea\u5e76\u88ab\u590d\u5236\u5230\u5e94\u7528\u7a0b\u5e8f\u7684\u7f13\u51b2\u533a\u4e2d\uff0c\u6b64\u671f\u95f4\u5e94\u7528\u7a0b\u5e8f\u65e0\u6cd5\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002</li> <li>\u5e95\u5c42\u539f\u7406\uff1a\u4f9d\u8d56\u5185\u6838\u6765\u7ba1\u7406\u6570\u636e\u7684\u51c6\u5907\u548c\u4f20\u8f93\u3002</li> <li>\u4f18\u52bf\uff1a\u7f16\u7a0b\u6a21\u578b\u7b80\u5355\uff0c\u4e0d\u6d88\u8017 CPU \u8d44\u6e90\u3002</li> <li>\u52a3\u52bf\uff1a\u65e0\u6cd5\u5e76\u53d1\u5904\u7406\u5176\u4ed6\u4efb\u52a1\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u7b80\u5355\u7684\u6587\u4ef6\u8bfb\u5199\u64cd\u4f5c\uff0c\u4e0d\u8981\u6c42\u9ad8\u5e76\u53d1\u7684\u5e94\u7528\u3002</li> </ul> </li> </ol> <p></p> <ol> <li> <p>\u975e\u963b\u585e I/O \u6a21\u578b\uff1a</p> <ul> <li>\u7279\u70b9\uff1a\u5e94\u7528\u7a0b\u5e8f\u53d1\u8d77 I/O \u64cd\u4f5c\u540e\u7acb\u5373\u83b7\u53d6\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002</li> <li>\u5e95\u5c42\u539f\u7406\uff1a\u5e94\u7528\u7a0b\u5e8f\u6bcf\u6b21\u53d1\u8d77 I/O \u64cd\u4f5c\uff0c\u5e95\u5c42\u90fd\u9700\u8981\u68c0\u67e5 I/O \u72b6\u6001\u3002</li> <li>\u4f18\u52bf\uff1a\u4e0d\u4f1a\u56e0\u4e3a I/O \u963b\u585e\uff0c\u63d0\u9ad8\u4e86\u54cd\u5e94\u6027\u3002</li> <li>\u52a3\u52bf\uff1a\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4e0d\u65ad\u8f6e\u8be2 I/O \u72b6\u6001\uff0c\u6d6a\u8d39 CPU \u8d44\u6e90\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u9700\u8981\u63d0\u9ad8\u7a0b\u5e8f\u54cd\u5e94\u6027\u7684\u60c5\u51b5\u3002</li> </ul> </li> </ol> <p></p> <ol> <li> <p>I/O \u591a\u8def\u590d\u7528\uff1a</p> <ul> <li>\u7279\u70b9\uff1a\u5355\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u76d1\u89c6\u591a\u4e2a I/O \u8bf7\u6c42(select\u3001poll\u3001epoll)\u3002</li> <li>\u5e95\u5c42\u539f\u7406\uff1a\u5e94\u7528\u7a0b\u5e8f\u53d1\u8d77 I/O \u8bf7\u6c42\u540e\uff0c\u5185\u6838\u4f1a\u76d1\u63a7\u6bcf\u4e2a\u8bf7\u6c42\u7684\u72b6\u6001\uff0c\u5f53\u67d0\u4e2a I/O \u5c31\u7eea\u540e\uff0c\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u3002</li> <li>\u4f18\u52bf\uff1a\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u4e2a I/O \u8bf7\u6c42\uff0c\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u5e76\u53d1\u5904\u7406\u80fd\u529b\u3002</li> <li>\u52a3\u52bf\uff1a\u7f16\u7a0b\u6a21\u578b\u590d\u6742\uff0c\u9700\u8981\u624b\u52a8\u5904\u7406 I/O \u4e8b\u4ef6\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u9ad8\u5e76\u53d1\u7f51\u7edc\u670d\u52a1</li> </ul> </li> </ol> <p></p> <ol> <li> <p>\u4fe1\u53f7\u9a71\u52a8 I/O \u6a21\u578b\uff1a</p> <ul> <li>\u7279\u70b9\uff1a\u5e94\u7528\u7a0b\u5e8f\u53d1\u8d77 I/O \u8bf7\u6c42\u540e\u7acb\u5373\u8fd4\u56de\uff0c\u5185\u6838\u68c0\u67e5 I/O \u72b6\u6001\uff0c\u5728\u6570\u636e\u5c31\u7eea\u65f6\u901a\u8fc7\u4fe1\u53f7\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u3002</li> <li>\u5e95\u5c42\u539f\u7406\uff1a\u5185\u6838\u901a\u8fc7\u4fe1\u53f7\u673a\u5236\u6765\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f I/O \u4e8b\u4ef6\u3002</li> <li>\u4f18\u52bf\uff1a\u53ef\u4ee5\u5b9e\u73b0\u5f02\u6b65 I/O\uff0c\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u54cd\u5e94\u80fd\u529b\u3002</li> <li>\u52a3\u52bf\uff1a\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u5904\u7406\u4fe1\u53f7\uff0c\u53ea\u80fd\u5b9e\u73b0\u7b80\u5355\u7684\u5e76\u53d1\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u5bf9\u5f02\u6b65\u901a\u4fe1\u8981\u6c42\u8f83\u9ad8\u7684\u573a\u666f\u3002</li> </ul> </li> </ol> <p></p> <ol> <li> <p>\u5f02\u6b65 I/O \u6a21\u578b\uff1a</p> <ul> <li>\u7279\u70b9\uff1a\u5e94\u7528\u7a0b\u5e8f\u53d1\u8d77 I/O \u8bf7\u6c42\u540e\u7acb\u5373\u8fd4\u56de\uff0c\u5f53 I/O \u64cd\u4f5c\u5b8c\u6210\u540e\u901a\u77e5\u5e94\u7528\u7a0b\u5e8f\u3002</li> <li>\u5e95\u5c42\u539f\u7406\uff1a\u4f9d\u8d56\u5185\u6838\u7684\u5f02\u6b65\u901a\u4fe1\u673a\u5236\u3002</li> <li>\u4f18\u52bf\uff1a\u5b8c\u5168\u975e\u963b\u585e\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5904\u7406\u5176\u4ed6\u4efb\u52a1\u3002</li> <li>\u52a3\u52bf\uff1a\u7f16\u7a0b\u6a21\u578b\u590d\u6742\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u5927\u89c4\u6a21\u6570\u636e\u5904\u7406\u5e94\u7528\u3002</li> </ul> </li> </ol> <p></p>"},{"location":"linux/drivers/chardev/#_5","title":"\u7b80\u5355\u793a\u4f8b","text":"<pre><code>#include &lt;linux/module.h&gt;\n#include &lt;linux/init.h&gt;\n#include &lt;linux/fs.h&gt;\n#include &lt;linux/version.h&gt;\n#include &lt;linux/device.h&gt;\n#include &lt;linux/cdev.h&gt;\n\nstatic unsigned int major; /* major number for device */\nstatic struct class *dummy_class;\nstatic struct cdev dummy_cdev;\n\nint dummy_open(struct inode * inode, struct file * filp)\n{\n    pr_info(\"Someone tried to open me\\n\");\n    return 0;\n}\n\nint dummy_release(struct inode * inode, struct file * filp)\n{\n    pr_info(\"Someone closed me\\n\");\n    return 0;\n}\n\nssize_t dummy_read (struct file *filp, char __user * buf, size_t count,\n                                loff_t * offset)\n{\n    pr_info(\"Nothing to read guy\\n\");\n    return 0;\n}\n\n\nssize_t dummy_write(struct file * filp, const char __user * buf, size_t count,\n                                loff_t * offset)\n{\n    pr_info(\"Can't accept any data guy\\n\");\n    return count;\n}\n\nstruct file_operations dummy_fops = {\n    open:       dummy_open,\n    release:    dummy_release,\n    read:       dummy_read,\n    write:      dummy_write,\n};\n\nstatic int __init dummy_char_init_module(void)\n{\n    struct device *dummy_device;\n    int error;\n    dev_t devt = 0;\n\n    /* Get a range of minor numbers (starting with 0) to work with */\n    error = alloc_chrdev_region(&amp;devt, 0, 1, \"dummy_char\");\n    if (error &lt; 0) {\n        pr_err(\"Can't get major number\\n\");\n        return error;\n    }\n    major = MAJOR(devt);\n    pr_info(\"dummy_char major number = %d\\n\",major);\n\n    /* Create device class, visible in /sys/class */\n    dummy_class = class_create(THIS_MODULE, \"dummy_char_class\");\n    if (IS_ERR(dummy_class)) {\n        pr_err(\"Error creating dummy char class.\\n\");\n        unregister_chrdev_region(MKDEV(major, 0), 1);\n        return PTR_ERR(dummy_class);\n    }\n\n    /* Initialize the char device and tie a file_operations to it */\n    cdev_init(&amp;dummy_cdev, &amp;dummy_fops);\n    dummy_cdev.owner = THIS_MODULE;\n    /* Now make the device live for the users to access */\n    cdev_add(&amp;dummy_cdev, devt, 1);\n\n    dummy_device = device_create(dummy_class,\n                                NULL,   /* no parent device */\n                                devt,    /* associated dev_t */\n                                NULL,   /* no additional data */\n                                \"dummy_char\");  /* device name */\n\n    if (IS_ERR(dummy_device)) {\n        pr_err(\"Error creating dummy char device.\\n\");\n        class_destroy(dummy_class);\n        unregister_chrdev_region(devt, 1);\n        return -1;\n    }\n\n    pr_info(\"dummy char module loaded\\n\");\n    return 0;\n}\n\nstatic void __exit dummy_char_cleanup_module(void)\n{\n    unregister_chrdev_region(MKDEV(major, 0), 1);\n    device_destroy(dummy_class, MKDEV(major, 0));\n    cdev_del(&amp;dummy_cdev);\n    class_destroy(dummy_class);\n\n    pr_info(\"dummy char module Unloaded\\n\");\n}\n\nMODULE_INIT(dummy_char_init_module);\nMODULE_EXIT(dummy_char_cleanup_module);\n\nMODULE_AUTHOR(\"John Madieu &lt;john.madieu@gmail.com&gt;\");\nMODULE_DESCRIPTION(\"Dummy character driver\");\nMODULE_LICENSE(\"GPL\");\n</code></pre>"},{"location":"linux/drivers/device_model/","title":"\u8bbe\u5907\u6a21\u578b","text":"<p>\u4e3a\u4e86\u964d\u4f4e\u786c\u4ef6\u8bbe\u5907\u7684\u591a\u6837\u6027\u5e26\u6765\u7684\u9a71\u52a8\u5f00\u53d1\u7684\u590d\u6742\u5ea6\uff0cLinux \u5f15\u5165\u4e86\u8bbe\u5907\u6a21\u578b\u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c\u5c06\u786c\u4ef6\u8bbe\u5907\u548c\u9a71\u52a8\u8bbe\u5907\u7684\u4ee3\u7801\u5206\u522b\u62bd\u8c61\u51fa\u6765\uff0c\u4e8c\u8005\u7531\u603b\u7ebf\u5173\u8054\uff0c\u5e76\u4e14\u5c06\u529f\u80fd\u76f8\u540c\u7684\u8bbe\u5907\u5f52\u5728\u4e00\u8d77\u3002</p> <p>\u6839\u636e Linux \u5185\u6838\u7684\u62bd\u8c61\u54f2\u5b66\uff0c\u5fc5\u5b9a\u4f1a\u7528\u5404\u79cd\u7ed3\u6784\u4f53\u6765\u8868\u793a\u6bcf\u4e2a\u5bf9\u8c61\uff1a</p> <ul> <li> <p>\u603b\u7ebf(bus)\uff1a\u786c\u4ef6\u8bbe\u5907\u548c\u9a71\u52a8\u4ee3\u7801\u6c9f\u901a\u7684\u6865\u6881</p> </li> <li> <p>\u8bbe\u5907\uff08device\uff09\uff1a\u6302\u8f7d\u5728\u603b\u7ebf\u7684\u7269\u7406\u8bbe\u5907</p> </li> <li> <p>\u9a71\u52a8\uff08driver\uff09\uff1a\u9a71\u52a8\u786c\u4ef6\u8bbe\u5907\u7684\u7a0b\u5e8f</p> </li> <li> <p>\u7c7b(class)\uff1a\u76f8\u4f3c\u529f\u80fd\u7684\u8bbe\u5907\u96c6\u5408</p> </li> </ul> <p>\u5185\u6838\u4f7f\u7528sysfs\u6587\u4ef6\u7cfb\u7edf\u5c06\u8bbe\u5907\u548c\u9a71\u52a8\u5bfc\u51fa\u5230\u7528\u6237\u7a7a\u95f4\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee /sys \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u6765\u67e5\u770b\u751a\u81f3\u63a7\u5236\u5185\u6838\u7684\u4e00\u4e9b\u8bbe\u5907\u3002</p> <p>/sys \u76ee\u5f55\u8bb0\u5f55\u4e86\u5404\u4e2a\u8bbe\u5907\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5176\u4e2d\uff0c/sys/bus \u76ee\u5f55\u4e0b\u7684\u6bcf\u4e2a\u5b50\u76ee\u5f55\u90fd\u662f\u5df2\u7ecf\u6ce8\u518c\u7684\u603b\u7ebf\u7c7b\u578b\u3002\u6bcf\u4e2a\u603b\u7ebf\u7c7b\u578b\u4e0b\u8fd8\u6709\u4e24\u4e2a\u6587\u4ef6\u5939\u2014\u2014 devices \u548c drivers\uff1adevices \u662f\u8be5\u603b\u7ebf\u7c7b\u578b\u4e0b\u7684\u6240\u6709\u8bbe\u5907\uff0c\u4ee5\u7b26\u53f7\u94fe\u63a5\u7684\u5f62\u5f0f\u6307\u5411\u771f\u6b63\u7684\u8bbe\u5907\uff08/sys/devices\uff09\u3002\u800c drivers \u662f\u6240\u6709\u6ce8\u518c\u5728\u8fd9\u4e2a\u603b\u7ebf\u7c7b\u578b\u4e0a\u7684\u9a71\u52a8\u3002</p> <p></p> <p>/sys/devices \u76ee\u5f55\u4e0b\u662f\u5168\u5c40\u7684\u8bbe\u5907\u7ed3\u6784\u4f53\u7cfb\uff0c\u5305\u542b\u4e86\u6240\u6709\u6ce8\u518c\u5728\u5404\u7c7b\u603b\u7ebf\u4e0a\u7684\u7269\u7406\u8bbe\u5907\u3002\u6240\u6709\u7684\u7269\u7406\u8bbe\u5907\u4ee5\u603b\u7ebf\u62d3\u6251\u7684\u7ed3\u6784\u6765\u663e\u793a\u3002</p> <p>/sys/class \u76ee\u5f55\u4e0b\u6309\u7167\u8bbe\u5907\u7684\u529f\u80fd\u8fdb\u884c\u5206\u7c7b\u3002\u6bd4\u5982\u9f20\u6807\u7684\u529f\u80fd\u662f\u4f5c\u4e3a\u4eba\u673a\u4ea4\u4e92\u7684\u8f93\u5165\uff0c\u4e8e\u662f\u88ab\u5f52\u7c7b\u5230 /sys/class/input \u76ee\u5f55\u4e0b\u3002</p> <p>\u90a3\u4e48\"\u603b\u7ebf-\u8bbe\u5907-\u9a71\u52a8\"\u662f\u5982\u4f55\u914d\u5408\u5de5\u4f5c\u7684\u5462\uff1f</p> <p></p> <p>\u5728\u603b\u7ebf\u4e0a\u6302\u8f7d\u4e86\u4e24\u4e2a\u94fe\u8868\uff0c\u5206\u522b\u7ba1\u7406\u8bbe\u5907\u6a21\u578b\u548c\u9a71\u52a8\u6a21\u578b\u3002\u5f53\u6211\u4eec\u5411\u7cfb\u7edf\u6ce8\u518c\u4e00\u4e2a\u8bbe\u5907\u65f6\uff0c\u4fbf\u4f1a\u5728\u8bbe\u5907\u7684\u94fe\u8868\u4e2d\u63d2\u5165\u65b0\u7684\u8bbe\u5907\u3002\u5728\u63d2\u5165\u7684\u540c\u65f6\u603b\u7ebf\u4f1a\u6267\u884c<code>match()</code>\u65b9\u6cd5\u5bf9\u65b0\u63d2\u5165\u7684\u8bbe\u5907/\u9a71\u52a8\u8fdb\u884c\u914d\u5bf9\u3002\u82e5\u914d\u5bf9\u6210\u529f\u5219\u8c03\u7528<code>probe()</code>\u65b9\u6cd5\u83b7\u53d6\u8bbe\u5907\u8d44\u6e90\uff0c\u5728\u79fb\u9664\u8bbe\u5907/\u9a71\u52a8\u65f6\uff0c\u8c03\u7528<code>remove()</code>\u65b9\u6cd5\u3002</p>"},{"location":"linux/drivers/device_model/#kobject","title":"kobject","text":"<p>\u8bbe\u5907\u6a21\u578b\u7684\u57fa\u672c\u5143\u7d20\u6709\u4e09\u4e2a\uff1a</p> <ul> <li>kobject\uff1asysfs \u4e2d\u7684\u4e00\u4e2a\u76ee\u5f55\uff0c\u8868\u793a\u57fa\u672c\u5bf9\u8c61\u3002</li> <li>ktype\uff1asys \u76ee\u5f55\u4e0b kobject \u6587\u4ef6\u64cd\u4f5c\u7684\u63a5\u53e3\u3002</li> <li>kset\uff1a\u4e00\u4e2a\u7279\u6b8a\u7684 kobject\uff0c\u7528\u6765\u7ba1\u7406\u7c7b\u4f3c\u7684 kobject\u3002</li> </ul> <p>\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>kobject \u662f Linux \u8bbe\u5907\u6a21\u578b\u7684\u57fa\u7840\uff0c\u662f\u4e00\u79cd\u62bd\u8c61\u7684\u3001\u7edf\u4e00\u7684\u5bf9\u786c\u4ef6\u8bbe\u5907\u7684\u63cf\u8ff0\u3002\u5b83\u4e3b\u8981\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a</p> <ol> <li>\u901a\u8fc7 parent \u6307\u9488\uff0c\u5c06\u6240\u6709 kobject \u4ee5\u6811\u72b6\u7ed3\u6784\u7684\u5f62\u5f0f\u7ec4\u5408\u8d77\u6765\u3002</li> <li>\u4f7f\u7528\u5f15\u7528\u8ba1\u6570 kref\uff0c\u6765\u8bb0\u5f55 kobject \u88ab\u5f15\u7528\u7684\u6b21\u6570\uff0c\u5728\u8ba1\u6570\u4e3a0\u65f6\u91ca\u653e\u5b83\u3002</li> <li>\u4ee3\u8868\u4e86 sysfs \u4e2d\u7684\u4e00\u4e2a\u76ee\u5f55\uff0c\u53ef\u4ee5\u88ab\u7528\u6237\u67e5\u8be2</li> </ol> <p>\u5185\u6838\u5f88\u5c11\u5355\u72ec\u521b\u5efa kobject \u5bf9\u8c61\uff0c\u800c\u662f\u5c06\u5176\u4f5c\u4e3a\u9876\u5c42\u57fa\u7c7b\uff0c\u5d4c\u5165\u5230\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u4e2d\u3002\u5f53 kobject \u4e2d\u7684\u5f15\u7528\u8ba1\u6570\u5f52\u96f6\u65f6\uff0c\u91ca\u653e kobject \u6240\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u540c\u65f6\u901a\u8fc7 ktype \u4e2d\u7684<code>release()</code>\u56de\u8c03\u51fd\u6570\uff0c\u91ca\u653e\u5185\u5d4c\u6570\u636e\u7ed3\u6784\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u6bcf\u4e00\u4e2a\u5185\u5d4c kobject \u7684\u6570\u636e\u7ed3\u6784\u90fd\u9700\u8981\u81ea\u5df1\u5b9e\u73b0 ktype \u4e2d\u7684\u56de\u8c03\u51fd\u6570\u3002</p> <p>kobject \u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>struct kobject {\n    const char      *name;\n    struct list_head    entry;\n    struct kobject      *parent;\n    struct kset     *kset;\n    struct kobj_type    *ktype;\n    struct kernfs_node  *sd; \n    struct kref     kref;\n    unsigned int state_initialized:1;\n    unsigned int state_in_sysfs:1;\n    unsigned int state_add_uevent_sent:1;\n    unsigned int state_remove_uevent_sent:1;\n    unsigned int uevent_suppress:1;\n};\n</code></pre> <p>name\uff1akobject\u7684\u540d\u79f0\uff0c\u540c\u65f6\u4e5f\u662fsysfs\u4e2d\u7684\u76ee\u5f55\u540d\u79f0\u3002\u5f53kobject\u6dfb\u52a0\u5230\u5185\u6838\u65f6\uff0c\u9700\u8981\u6839\u636ename\u6ce8\u518c\u5230sysfs\u4e2d\u3002</p> <p>entry\uff1a\u7528\u4e8e\u5c06kobject\u52a0\u5165\u5230\u94fe\u8868\u4e2d\u3002</p> <p>parent\uff1a\u6307\u5411\u7236kobject\u7684\u6307\u9488\uff0c\u5728sysfs\u4e2d\u8868\u793a\u4e0a\u4e00\u5c42\u7684\u8282\u70b9\u3002</p> <p>kset\uff1a\u8be5kobject\u6240\u5c5e\u7684kset\u3002</p> <p>ktype\uff1a\u8be5kobject\u6240\u5c5e\u7684\u7c7b\u578b\u3002</p> <p>sd\uff1a\u8be5kobject\u5728sysfs\u4e2d\u7684\u5bf9\u5e94\u76ee\u5f55\u9879\u3002</p> <p>kref\uff1a\u5f15\u7528\u8ba1\u6570\u3002</p> <p>state_initialized\uff1a\u6307\u793a\u8be5kobject\u662f\u5426\u5df2\u7ecf\u521d\u59cb\u5316\u3002</p> <p>state_in_sysfs\uff1a\u6307\u793a\u8be5kobject\u662f\u5426\u5df2\u5728sysfs\u4e2d\u5efa\u7acb\u76ee\u5f55\u3002</p> <p>state_add_uevent_sent/state_remove_uevent_sent\uff1a\u8bb0\u5f55\u662f\u5426\u5df2\u5411\u7528\u6237\u7a7a\u95f4\u53d1\u9001add uevent\u3002</p> <p>uevent_suppress\uff1a\u5982\u679c\u8be5\u5b57\u6bb5\u4e3a1\uff0c\u5219\u8868\u793a\u5ffd\u7565\u6240\u6709\u4e0a\u62a5\u7684uevent\u4e8b\u4ef6\u3002</p> <p><code>kobject_create_and_add()</code>\u7528\u6765\u521b\u5efa kobject \u5bf9\u8c61\uff0c\u5e76\u6dfb\u52a0\u5230 sysfs \u4e2d\u3002</p>"},{"location":"linux/drivers/device_model/#ktype","title":"ktype","text":"<p>ktype \u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>struct kobj_type {\n    void (*release)(struct kobject *kobj);\n    const struct sysfs_ops *sysfs_ops;\n    struct attribute **default_attrs;   /* use default_groups instead */\n    const struct attribute_group **default_groups;\n    ......\n};\n</code></pre> <p>release\uff1a\u5f53kobject\u5f15\u7528\u8ba1\u6570\u5f52\u96f6\u65f6\u8c03\u7528\u8be5\u6790\u6784\u51fd\u6570\uff0c\u8d1f\u8d23\u91ca\u653ekobject\u7684\u5185\u5b58\u3002</p> <p>default_groups\uff1a\u5b9a\u4e49\u4e86kobject\u7684\u5c5e\u6027\uff0c\u7531struct attritube\u548cstruct bin_attribute\u6784\u6210\u3002</p> <p>\u5c5e\u6027\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>struct attribute {\n    cosnt char *name;\n    umode_t mode;\n};\n</code></pre> <p>\u64cd\u4f5c\u5c5e\u6027\u7684\u65b9\u6cd5\uff1a</p> <pre><code>struct sysfs_ops {\n    ssize_t (*show)(struct kobject *kobj, struct attribute *attr, char *buf);\n    ssize_t (*store)(struct kobject *kobj, struct attribute *attr, const char *buf, size_t count);\n};\n</code></pre> <p>cat/echo \u64cd\u4f5c\uff0c\u6700\u7ec8\u4f1a\u8c03\u7528 show/store \u65b9\u6cd5\u3002</p>"},{"location":"linux/drivers/device_model/#kset","title":"kset","text":"<p>kset \u53ef\u4ee5\u4f5c\u4e3a\u9876\u5c42\u7684 kobject\uff0c\u7528\u6765\u7ba1\u7406\u4e00\u7ec4\u76f8\u5173\u7684 kobject\uff1a</p> <pre><code>struct kset {\n    struct list_head list;\n    spinlock_t list_lock;\n    struct kobject kobj;\n    const struct kset_uevent_ops *uevent_ops;\n};\n</code></pre> <p>list/list_lock\uff1a\u7528\u4e8e\u4fdd\u5b58\u8be5kset\u4e0b\u6240\u6709kobject\u5bf9\u8c61\u3002</p> <p>kobj\uff1a\u8be5kset\u81ea\u5df1\u7684kobject\u3002</p> <p>uevent_ops\uff1auevent\u662f\u7528\u6237\u7a7a\u95f4\u7684\u7f29\u5199\uff0c\u63d0\u4f9b\u4e86\u4e0e\u7528\u6237\u7a7a\u95f4\u70ed\u63d2\u62d4\u8fdb\u884c\u901a\u4fe1\u7684\u673a\u5236\u3002\u5f53\u4efb\u4f55kobject\u9700\u8981\u4e0a\u62a5uevent\u65f6\uff0c\u90fd\u8981\u8c03\u7528\u6240\u5c5e\u7684kset\u4e2duevent_ops\u4e2d\u7684\u51fd\u6570\u3002uevent\u7684\u6982\u5ff5\u7a0d\u540e\u8bf4\u660e\u3002</p> <p>\u5f53\u8bbe\u7f6e\u4e86 kset \u5e76\u628a\u5b83\u6dfb\u52a0\u5230\u7cfb\u7edf\u4e2d\uff0c\u5c06\u5728 sysfs \u4e2d\u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u5b50\u76ee\u5f55\u4e2d\u5305\u542b\u8be5 kset \u4e0b\u6240\u6709\u7684 kobject\u3002\u6bd4\u5982 /sys/bus \u5c31\u662f\u4e00\u4e2a kset \u5bf9\u8c61\u3002</p> <p></p> <p>kset \u65e2\u662f kobject \u7684\u96c6\u5408\uff0c\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a kobject\uff0c\u53ef\u4ee5\u6dfb\u52a0\u5230\u5176\u4ed6\u96c6\u5408\u4e2d\uff0c\u4ece\u800c\u6784\u5efa\u66f4\u590d\u6742\u7684\u62d3\u6251\u7ed3\u6784\u3002</p> <p>\u793a\u4f8b\u4ee3\u7801\uff1a</p> <p>\u6765\u6e90\uff1ahttps://www.cnblogs.com/LoyenWang/p/13334196.html</p> <pre><code>#include &lt;linux/kernel.h&gt;\n#include &lt;linux/module.h&gt;\n#include &lt;linux/slab.h&gt;\n#include &lt;linux/kobject.h&gt;\n\n//\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\uff0c\u5305\u542b\u4e86struct kobject\u5b50\u7ed3\u6784\nstruct test_kobj {\n    int value;\n    struct kobject kobj;\n};\n\n//\u81ea\u5b9a\u4e49\u4e2a\u5c5e\u6027\u7ed3\u6784\u4f53\uff0c\u5305\u542b\u4e86struct attribute\u7ed3\u6784\nstruct test_kobj_attribute {\n    struct attribute attr;\n    ssize_t (*show)(struct test_kobj *obj, struct test_kobj_attribute *attr, char *buf);\n    ssize_t (*store)(struct test_kobj *obj, struct test_kobj_attribute *attr, const char *buf, size_t count);\n};\n\n//\u58f0\u660e\u4e00\u4e2a\u5168\u5c40\u7ed3\u6784\u7528\u4e8e\u6d4b\u8bd5\nstruct test_kobj *obj;\n\n//\u7528\u4e8e\u521d\u59cb\u5316sysfs_ops\u4e2d\u7684\u51fd\u6570\u6307\u9488\nstatic ssize_t test_kobj_attr_show(struct kobject *kobj, struct attribute *attr, char *buf)\n{\n    struct test_kobj_attribute *test_kobj_attr;\n    ssize_t ret = -EIO;\n\n    test_kobj_attr = container_of(attr, struct test_kobj_attribute, attr);\n\n    //\u56de\u8c03\u5230\u5177\u4f53\u7684\u5b9e\u73b0\u51fd\u6570\n    if (test_kobj_attr-&gt;show)\n        ret = test_kobj_attr-&gt;show(container_of(kobj, struct test_kobj, kobj), test_kobj_attr, buf);\n\n    return ret;\n}\n\n//\u7528\u4e8e\u521d\u59cb\u5316sysfs_ops\u4e2d\u7684\u51fd\u6570\u6307\u9488\nstatic ssize_t test_kobj_attr_store(struct kobject *kobj, struct attribute *attr, const char *buf, size_t count)\n{\n    struct test_kobj_attribute *test_kobj_attr;\n    ssize_t ret = -EIO;\n\n    test_kobj_attr = container_of(attr, struct test_kobj_attribute, attr);\n\n    //\u56de\u8c03\u5230\u5177\u4f53\u7684\u5b9e\u73b0\u51fd\u6570\n    if (test_kobj_attr-&gt;store)\n        ret = test_kobj_attr-&gt;store(container_of(kobj, struct test_kobj, kobj), test_kobj_attr, buf, count);\n\n    return ret;\n}\n\n//\u7528\u4e8e\u521d\u59cb\u5316kobj_ktype\nconst struct sysfs_ops test_kobj_sysfs_ops = {\n    .show = test_kobj_attr_show,\n    .store = test_kobj_attr_store,\n};\n\n//\u7528\u4e8e\u521d\u59cb\u5316kobj_ktype\uff0c\u6700\u7ec8\u7528\u4e8e\u91ca\u653ekobject\nvoid obj_release(struct kobject *kobj)\n{\n    struct test_kobj *obj = container_of(kobj, struct test_kobj, kobj);\n\n    printk(KERN_INFO \"test kobject release %s\\n\", kobject_name(&amp;obj-&gt;kobj));\n\n    kfree(obj);\n}\n\n//\u5b9a\u4e49kobj_ktype\uff0c\u7528\u4e8e\u6307\u5b9akobject\u7684\u7c7b\u578b\uff0c\u521d\u59cb\u5316\u7684\u65f6\u5019\u4f7f\u7528\nstatic struct kobj_type test_kobj_ktype = {\n    .release = obj_release,\n    .sysfs_ops = &amp;test_kobj_sysfs_ops,\n};\n\n//show\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\nssize_t name_show(struct test_kobj *obj, struct test_kobj_attribute *attr, char *buffer)\n{\n    return sprintf(buffer, \"%s\\n\", kobject_name(&amp;obj-&gt;kobj));\n}\n\n//show\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\nssize_t value_show(struct test_kobj *obj, struct test_kobj_attribute *attr, char *buffer)\n{\n    return sprintf(buffer, \"%d\\n\", obj-&gt;value);\n}\n\n//store\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0\nssize_t value_store(struct test_kobj *obj, struct test_kobj_attribute *attr, const char *buffer, size_t size)\n{\n    sscanf(buffer, \"%d\", &amp;obj-&gt;value);\n\n    return size;\n}\n\n//\u5b9a\u4e49\u5c5e\u6027\uff0c\u6700\u7ec8\u6ce8\u518c\u8fdbsysfs\u7cfb\u7edf\nstruct test_kobj_attribute name_attribute = __ATTR(name, 0664, name_show, NULL);\nstruct test_kobj_attribute value_attribute = __ATTR(value, 0664, value_show, value_store);\nstruct attribute *test_kobj_attrs[] = {\n    &amp;name_attribute.attr,\n    &amp;value_attribute.attr,\n    NULL,\n};\n\n//\u5b9a\u4e49\u7ec4\nstruct attribute_group test_kobj_group = {\n    .name = \"test_kobj_group\",\n    .attrs = test_kobj_attrs,\n};\n\n//\u6a21\u5757\u521d\u59cb\u5316\u51fd\u6570\nstatic int __init test_kobj_init(void)\n{\n    int retval;\n    printk(KERN_INFO \"test_kobj_init\\n\");\n    obj = kmalloc(sizeof(struct test_kobj), GFP_KERNEL);\n    if (!obj) {\n        return -ENOMEM;\n    }\n\n    obj-&gt;value = 1;\n    memset(&amp;obj-&gt;kobj, 0, sizeof(struct kobject));\n    //\u6dfb\u52a0\u8fdbsysfs\u7cfb\u7edf\n    kobject_init_and_add(&amp;obj-&gt;kobj, &amp;test_kobj_ktype, NULL, \"test_kobj\");\n\n    //\u5728sys\u6587\u4ef6\u5939\u4e0b\u521b\u5efa\u6587\u4ef6\n    retval = sysfs_create_files(&amp;obj-&gt;kobj, (const struct attribute **)test_kobj_attrs);\n    if (retval) {\n        kobject_put(&amp;obj-&gt;kobj);\n        return retval;\n    }\n\n    //\u5728sys\u6587\u4ef6\u5939\u4e0b\u521b\u5efagroup\n    retval = sysfs_create_group(&amp;obj-&gt;kobj, &amp;test_kobj_group);\n    if (retval) {\n        kobject_put(&amp;obj-&gt;kobj);\n        return retval;\n    }\n\n    return 0;\n}\n\n//\u6a21\u5757\u6e05\u7406\u51fd\u6570\nstatic void __exit test_kobj_exit(void)\n{\n    printk(KERN_INFO \"test_kobj_exit\\n\");\n\n    kobject_del(&amp;obj-&gt;kobj);\n    kobject_put(&amp;obj-&gt;kobj);\n\n    return;\n}\n\nmodule_init(test_kobj_init);\nmodule_exit(test_kobj_exit);\n\nMODULE_AUTHOR(\"LoyenWang\");\nMODULE_LICENSE(\"GPL\");\n</code></pre>"},{"location":"linux/drivers/device_model/#sysfs","title":"sysfs","text":"<p>sysfs \u6587\u4ef6\u7cfb\u7edf\u662f\u4e00\u4e2a\u5904\u4e8e\u5185\u5b58\u4e2d\u7684\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b83\u63d0\u4f9b\u4e86 kobject \u5bf9\u8c61\u7684\u5c42\u6b21\u7ed3\u6784\u89c6\u56fe\u3002\u7528\u6237\u67e5\u8be2\u7cfb\u7edf\u4e2d\u5404\u79cd\u8bbe\u5907\u7684\u62d3\u6251\u7ed3\u6784\uff0c\u5c31\u50cf\u67e5\u8be2\u6587\u4ef6\u76ee\u5f55\u4e00\u6837\u7b80\u5355\u3002\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5bfc\u51fa\u6587\u4ef6\u7684\u65b9\u5f0f\uff0c\u5c06\u5185\u6838\u53d8\u91cf\u63d0\u4f9b\u7ed9\u7528\u6237\u8bfb\u53d6\u6216\u8005\u5199\u5165\u3002</p> \u76ee\u5f55 \u529f\u80fd block \u5757\u8bbe\u5907 bus \u603b\u7ebf class \u5c06\u8bbe\u5907\u6309\u7167\u529f\u80fd\u5206\u7c7b dev block\u548cchar\u4e24\u4e2a\u76ee\u5f55\uff0c\u5bf9\u5e94\u90e8\u5206\u5757\u8bbe\u5907\u548c\u5b57\u7b26\u8bbe\u5907\u7b26\u53f7\u94fe\u63a5 devices \u6240\u6709\u8bbe\u5907 firmwares \u56fa\u4ef6\u4fe1\u606f fs \u6587\u4ef6\u7cfb\u7edf hypervisor \u7a7a\u76ee\u5f55 kernel \u5185\u6838\u914d\u7f6e\u53c2\u6570 module \u6a21\u5757\u4fe1\u606f power \u7535\u6e90\u7ba1\u7406 <p>\u5176\u4e2d\u6700\u91cd\u8981\u7684\u76ee\u5f55\u662f devices\uff0cLinux \u7cfb\u7edf\u4e2d\u6240\u6709\u8bbe\u5907\u90fd\u53ef\u4ee5\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u627e\u5230\u3002\u5176\u4ed6\u76ee\u5f55\u4e2d\u7684\u8bbe\u5907\u5176\u5b9e\u90fd\u662f devices \u76ee\u5f55\u4e2d\u7684\u7b26\u53f7\u94fe\u63a5\u3002</p> <p>sysfs \u7684\u6838\u5fc3\u662f\u628a kobject \u5bf9\u8c61\u4e0e\u76ee\u5f55\u9879\uff08directory entries\uff09\u5173\u8054\u8d77\u6765\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u5730\u67e5\u770b\u6302\u8f7d\u4e8e /sys \u76ee\u5f55\u4e0b\u7684\u6574\u4e2a\u6587\u4ef6\u7cfb\u7edf\u89c6\u56fe\u3002\u5411 sysfs \u4e2d\u6dfb\u52a0 kobject\uff0c\u53ef\u4ee5\u4f7f\u7528<code>kobject_add()</code>\u548c<code>kobject_create_and_add()</code>\u51fd\u6570\u3002</p> <p>\u6211\u4eec\u5df2\u7ecf\u77e5\u9053 kobject \u53ef\u4ee5\u88ab\u6620\u5c04\u4e3a\u67d0\u4e2a\u6587\u4ef6\u76ee\u5f55\uff0c\u4ec5\u6709\u5982\u6b64\u8fd8\u4e0d\u591f\u3002\u56e0\u4e3a\u8fd9\u6837\u7684 sysfs \u4ec5\u4ec5\u53ea\u662f\u4e00\u68f5\u6811\uff0c\u4f46\u6ca1\u6709\u63d0\u4f9b\u5b9e\u9645\u6570\u636e\u7684\u6587\u4ef6\u3002\u4e3a\u4e86\u80fd\u591f\u8bfb\u5199\u8fd9\u68f5\u6811\uff0c\u5185\u6838\u63d0\u4f9b\u4e86<code>attribute</code>\u548c<code>bin_attribute</code>\u4e24\u79cd\u5c5e\u6027\u3002</p> <p>\u5728\u524d\u9762 ktype \u7684\u5b9a\u4e49\u4e2d\uff0c\u6210\u5458<code>struct attribute_group</code>\u5305\u542b\u4e86\u8fd9\u4e24\u79cd\u5c5e\u6027\uff1a</p> <pre><code>struct attribute_group {\n    const char *name;\n    struct attribute **attrs;\n    struct bin_attribute **bin_attrs;\n};\n</code></pre> <p><code>attribute</code>\u548c<code>bin_attribute</code>\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>struct attribute {\n    const char *name;   //\u5c5e\u6027\u7684\u540d\u5b57\n    umode_t mode;       //\u5c5e\u6027\u7684\u6743\u9650\n};\n\nstruct bin_attribute {\n    struct attribute attr;\n    size_t size;\n    void *private;\n    struct address_space *(*f_mapping)(void);\n    ssize_t (*read)(struct file *, struct kobject *, struct bin_attribute *,\n            char *, loff_t, size_t);\n    ssize_t (*write)(struct file *, struct kobject *, struct bin_attribute *,\n             char *, loff_t, size_t);\n    int (*mmap)(struct file *, struct kobject *, struct bin_attribute *attr,\n            struct vm_area_struct *vma);\n};\n</code></pre> <p>\u5bf9\u4e8e\u9ed8\u8ba4\u5c5e\u6027\u7684\u5b9e\u73b0\uff0c\u7531 ktype-&gt;sysfs_ops \u6210\u5458\u63cf\u8ff0\uff1a</p> <pre><code>struct sysfs_ops {\n    ssize_t (*show)(struct kobject *, struct attribute *, char *);\n    ssize_t (*store)(struct kobject *, struct attribute *, const char *, size_t);\n};\n</code></pre> <p>\u5f53\u7528\u6237\u7a7a\u95f4\u8bfb\u53d6\u4e00\u4e2a\u5c5e\u6027\u65f6\uff0c\u5185\u6838\u4f1a\u8c03\u7528<code>show()</code>\u65b9\u6cd5\uff1b\u5f53\u5199\u4e00\u4e2a\u5c5e\u6027\u65f6\uff0c\u8c03\u7528<code>store()</code>\u65b9\u6cd5\u3002</p> <p><code>struct attribute</code>\u4e3a\u666e\u901a\u7684attribute\uff0c\u4f7f\u7528\u8be5 attribute \u751f\u6210\u7684 sysfs \u6587\u4ef6\uff0c\u53ea\u80fd\u7528\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8bfb\u5199\u3002\u800c<code>struct bin_attribute</code>\u5728<code>struct attribute</code>\u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86<code>read()</code>\u3001<code>write()</code>\u7b49\u51fd\u6570\uff0c\u56e0\u6b64\u5b83\u6240\u751f\u6210\u7684 sysfs \u6587\u4ef6\u53ef\u4ee5\u7528\u4efb\u4f55\u65b9\u5f0f\u8bfb\u5199\u3002 </p>"},{"location":"linux/drivers/device_model/#uevent","title":"uevent","text":"<p>uevent \u662f kobject \u529f\u80fd\u7684\u4e00\u90e8\u5206\uff0c\u7528\u4e8e\u5728 kobject \u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6\uff0c\u6bd4\u5982\u6dfb\u52a0\u3001\u79fb\u9664\uff0c\u901a\u77e5\u7528\u6237\u7a7a\u95f4\u3002\u7528\u6237\u7a7a\u95f4\u6536\u5230\u8baf\u606f\u540e\uff0c\u505a\u51fa\u76f8\u5e94\u7684\u5904\u7406\u3002</p> <p>\u8be5\u673a\u5236\u901a\u5e38\u662f\u7528\u6765\u652f\u6301\u70ed\u63d2\u62d4\uff08hotplug\uff09\u8bbe\u5907\u7684\uff0c\u4f8b\u5982\u5f53U\u76d8\u63d2\u5165\u540e\uff0cUSB \u76f8\u5173\u7684\u9a71\u52a8\u4f1a\u52a8\u6001\u521b\u5efa\u7528\u4e8e\u8868\u793a\u8be5U\u76d8\u7684 device \u7ed3\u6784\uff0c\u5e76\u544a\u77e5\u7528\u6237\u7a7a\u95f4\u4e3a\u8be5U\u76d8\u52a8\u6001\u521b\u5efa /dev/ \u76ee\u5f55\u4e0b\u7684\u8bbe\u5907\u8282\u70b9\u3002</p> <p>uevent \u673a\u5236\u6bd4\u8f83\u7b80\u5355\uff0c\u5f53\u8bbe\u5907\u6a21\u578b\u4e2d\u4efb\u4f55\u8bbe\u5907\u6709\u4e8b\u4ef6\u9700\u8981\u4e0a\u62a5\u65f6\uff0c\u90fd\u4f1a\u89e6\u53d1 uevent \u63d0\u4f9b\u7684\u63a5\u53e3\u3002uevent \u6a21\u5757\u53ef\u4ee5\u901a\u8fc7\u4e24\u4e2a\u9014\u5f84\u628a\u4e8b\u4ef6\u4e0a\u62a5\u5230\u7528\u6237\u7a7a\u95f4\uff1a\u4e00\u79cd\u662f\u901a\u8fc7kmod\u6a21\u5757\uff0c\u53e6\u4e00\u79cd\u662f\u901a\u8fc7netlink\u901a\u4fe1\u673a\u5236\u3002</p> <p>uevent \u7684\u4ee3\u7801\u4e3b\u8981\u4f4d\u4e8e kobject.h \u548c kobject_uevent.c \u4e24\u4e2a\u6587\u4ef6\u3002</p> <p><code>kobject_action</code>\u5b9a\u4e49\u4e86uevent\u7684\u7c7b\u578b\uff1a</p> <pre><code>enum kobject_action {\n    KOBJ_ADD,\n    KOBJ_REMOVE,\n    KOBJ_CHANGE,\n    KOBJ_MOVE,\n    KOBJ_ONLINE,\n    KOBJ_OFFLINE,\n    KOBJ_BIND,\n    KOBJ_UNBIND,\n};\n</code></pre> <p>ADD/REMOVE\uff1akobject\u7684\u6dfb\u52a0/\u79fb\u9664\u4e8b\u4ef6\u3002</p> <p>CHANGE\uff1akobject\u72b6\u6001\u6216\u8005\u5185\u5bb9\u53d1\u751f\u6539\u53d8\u3002</p> <p>MOVE\uff1akobject\u66f4\u6539\u540d\u79f0\u6216\u8005\u66f4\u6539\u4e86parent\u3002</p> <p>ONLINE/OFFLINE\uff1akobject\u7684\u4e0a\u7ebf/\u4e0b\u7ebf\u4e8b\u4ef6</p> <p>BIND/UNBIND\uff1akobject\u7684\u7ed1\u5b9a/\u89e3\u7ed1\u4e8b\u4ef6</p> <p><code>kobj_uevent_env</code>\u5b9a\u4e49\u4e86\u4e8b\u4ef6\u4e0a\u62a5\u65f6\u7684\u73af\u5883\u53d8\u91cf\uff1a</p> <pre><code>struct kobj_uevent_env {\n    char *argv[3];\n    char *envp[UEVENT_NUM_ENVP];\n    int envp_idx;\n    char buf[UEVENT_BUFFER_SIZE];\n    int buflen;\n};\n</code></pre> <p>argv\uff1a\u6307\u9488\u6570\u7ec4\uff0c\u53ef\u4ee5\u4fdd\u5b58\u547d\u4ee4\u884c\u53c2\u6570\uff0c\u6700\u5927\u4e3a3\u4e2a\u3002</p> <p>envp\uff1a\u6307\u9488\u6570\u7ec4\uff0c\u7528\u4e8e\u4fdd\u5b58\u6bcf\u4e2a\u73af\u5883\u53d8\u91cf\u7684\u5730\u5740\u3002</p> <p>envp_idx\uff1a\u8bbf\u95eeenvp\u6570\u7ec4\u7684\u7d22\u5f15\u3002</p> <p>buf\uff1a\u4fdd\u5b58uevent\u6d88\u606f\u7684\u7f13\u51b2\u533a</p> <p>buflen\uff1a\u5b58\u50a8\u7f13\u51b2\u533a\u7684\u5927\u5c0f</p> <p><code>kset_uevent_ops</code>\u5b9a\u4e49\u4e86 kset \u7684 uevent \u63a5\u53e3\u64cd\u4f5c\uff1a</p> <pre><code>struct kset_uevent_ops {\n    int (* const filter)(struct kset *kset, struct kobject *kobj);\n    const char *(* const name)(struct kset *kset, struct kobject *kobj);\n    int (* const uevent)(struct kset *kset, struct kobject *kobj, struct kobj_uevent_env *env);\n};\n</code></pre> <p>filter\uff1a\u5f53kobject\u9700\u8981\u4e0a\u62a5uevent\u65f6\uff0c\u5b83\u6240\u5c5e\u7684kset\u53ef\u4ee5\u901a\u8fc7\u6b64\u63a5\u53e3\u8fc7\u6ee4\u6389\u4e0d\u5e0c\u671b\u4e0a\u62a5\u7684uevent\u3002</p> <p>name\uff1a\u7528\u4e8e\u83b7\u53d6kset\u4e2dkobject\u7684uevent\u540d\u79f0\uff0c\u8fd9\u4e2a\u540d\u79f0\u901a\u5e38\u4e0euevent\u4e2d\u7684ACTION\u5b57\u6bb5\u76f8\u5bf9\u5e94\u3002</p> <p>uevent\uff1a\u5f53\u4e00\u4e2akobject\u9700\u8981\u4e0a\u62a5uevent\u65f6\uff0cuevent\u51fd\u6570\u4f1a\u88ab\u8c03\u7528\uff0c\u5b83\u53ef\u4ee5\u4e3auevent\u6dfb\u52a0\u73af\u5883\u53d8\u91cf\u3002</p> <p>uevent \u7684\u4e00\u4e9b\u64cd\u4f5c API\uff1a</p> <pre><code>int kobject_uevent(struct kobject *kobj, enum kobject_action action);\nint kobject_uevent_env(struct kobject *kobj, enum kobject_action action, char *envp[]);\nint kobject_synth_uevent(struct kobject *kobj, const char *buf, size_t count);\nint add_uevent_var(struct kobj_uevent_env *env, const char *format, ...);\n</code></pre> <p>kobject_uevent_env\uff1a\u4ee5envp\u4e3a\u73af\u5883\u53d8\u91cf\uff0c\u4e0a\u62a5\u4e00\u4e2a\u6307\u5b9aaction\u7684uevent\u3002</p> <p>kobject_synth_uevent\uff1a\u5141\u8bb8\u53d1\u9001\u4e00\u4e2a\u5408\u6210\u7684uevent\u3002 </p> <p>add_uevent_var\uff1a\u4ee5\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\uff0c\u5411uevent\u6dfb\u52a0\u65b0\u7684\u73af\u5883\u53d8\u91cf\u3002</p>"},{"location":"linux/drivers/device_model/#devicedevice_driver","title":"device\u548cdevice_driver","text":"<p><code>device</code>\u548c<code>device_driver</code>\u662f Linux \u9a71\u52a8\u5f00\u53d1\u7684\u57fa\u672c\u6982\u5ff5\u3002\u9a71\u52a8\u5f00\u53d1\uff0c\u5176\u5b9e\u5c31\u662f\u5f00\u53d1\u6307\u5b9a\u7684\u8f6f\u4ef6\uff08driver\uff09\u4ee5\u53ca\u9a71\u52a8\u6307\u5b9a\u7684\u8bbe\u5907\uff08device\uff09\u3002\u5185\u6838\u4e3a\u6b64\u5b9a\u4e49\u4e86\u4e24\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5206\u522b\u662f<code>struct device</code>\u548c<code>struct device_driver</code>\u3002\u5728&lt;include/linux/device.h&gt;\u4e2d\u53ef\u4ee5\u627e\u5230\u8fd9\u4e24\u4e2a\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u3002</p> <p>\u5185\u6838\u7528<code>struct device</code>\u7ed3\u6784\u4f53\u6765\u8868\u793a\u4e00\u4e2a\u8bbe\u5907\uff1a</p> <pre><code>struct device {\n    struct kobject kobj;\n    struct device *parent;\n\n    struct device_private *p;\n\n    const char *init_name; \n    const struct device_type *type;\n\n    struct bus_type *bus;       \n    struct device_driver *driver;   \n    void *platform_data;    \n    void *driver_data;  \n\n    void (*release)(struct device *dev);\n};\n</code></pre> <p>kobj\uff1a\u8fde\u63a5\u5230\u5185\u6838\u7684\u8bbe\u5907\u6a21\u578b\u4f53\u7cfb\u4e2d\u3002</p> <p>parent\uff1a\u8bbe\u5907\u7684\u7236\u8bbe\u5907\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u7236\u8bbe\u5907\u662f\u67d0\u79cdbus\u6216\u8005\u662fhost controller\u3002</p> <p>p\uff1a\u8bbe\u5907\u7684\u79c1\u6709\u6570\u636e\u3002</p> <p>init_name\uff1a\u8bbe\u5907\u7684\u521d\u59cb\u540d\u79f0\u3002</p> <p>type\uff1a\u8bbe\u5907\u7684\u7c7b\u578b\u3002</p> <p>bus\uff1abus\u7684\u7c7b\u578b\u3002</p> <p>driver\uff1a\u5bf9\u5e94\u7684\u9a71\u52a8\u7a0b\u5e8f\u3002</p> <p>platform_data\uff1a\u8bbe\u5907\u79c1\u6709\u7684\u5e73\u53f0\u6570\u636e\u3002</p> <p>driver_data\uff1a\u9a71\u52a8\u7684\u79c1\u6709\u6570\u636e\u3002</p> <p>release\uff1a\u8bbe\u5907\u5378\u8f7d\u65f6\uff0c\u8c03\u7528\u8be5\u56de\u8c03\u51fd\u6570\u3002</p> <p>\u8bbe\u5907\u7684\u6ce8\u518c\u548c\u6ce8\u9500\u51fd\u6570\u662f\uff1a</p> <pre><code>int device_register(struct device *dev);\n\nvoid device_unregister(struct device *dev);\n</code></pre> <p>\u5185\u6838\u7528<code>struct device_driver</code>\u6765\u8868\u793a\u9a71\u52a8\u7a0b\u5e8f\uff1a</p> <pre><code>struct device_driver {\n    const char *name;\n    struct bus_type *bus;\n    struct module *owner;   \n\n    enum probe_type probe_type;\n\n    int (*probe) (struct device *dev);\n    int (*remove) (struct device *dev);\n\n    const struct attribute_group **groups;\n    const struct attribute_group **dev_groups;\n\n    struct driver_private *p;\n};\n</code></pre> <p>probe_type\uff1a\u6307\u5b9a\u4ee5\u4ec0\u4e48\u65b9\u5f0f\u6267\u884cprobe\uff08\u5f02\u6b65\u6216\u540c\u6b65\uff09\u3002</p> <p>probe/remove\uff1a\u5728\u6ce8\u518c\u4e0e\u6ce8\u9500\u65f6\u88ab\u8c03\u7528\u3002</p> <p>\u9a71\u52a8\u7a0b\u5e8f\u7684\u6ce8\u518c\u548c\u6ce8\u9500\u51fd\u6570\u662f\uff1a</p> <pre><code>int driver_register(struct device_driver *drv);\n\nvoid driver_unregister(struct device_drvier *drv);\n</code></pre> <p>Linux \u8bbe\u5907\u6a21\u578b\u6846\u67b6\u4f53\u7cfb\u4e0b\u5f00\u53d1\uff0c\u4e3b\u8981\u5305\u62ec\u4e24\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u5206\u914d\u4e00\u4e2a<code>struct device</code>\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u586b\u5145\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u5176\u6ce8\u518c\u5230\u5185\u6838\u3002</p> </li> <li> <p>\u5206\u914d\u4e00\u4e2a<code>struct device_driver</code>\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u586b\u5145\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u5176\u6ce8\u518c\u5230\u5185\u6838\u3002</p> </li> </ol> <p>\u5185\u6838\u4f1a\u5728\u5408\u9002\u7684\u65f6\u673a\uff0c\u8c03\u7528<code>struct device_driver</code>\u4e2d\u7684\u5404\u7c7b\u56de\u8c03\u51fd\u6570\uff0c\u4ece\u800c\u89e6\u53d1\u540e\u8005\u8bbe\u5907\u9a71\u52a8\u7684\u6267\u884c\u3002\u800c\u6240\u6709\u7684\u9a71\u52a8\u7a0b\u5e8f\u903b\u8f91\uff0c\u5176\u5b9e\u90fd\u662f\u7531\u8fd9\u4e9b\u56de\u8c03\u51fd\u6570\u6765\u5b9e\u73b0\u7684\u3002</p> <p>\u5f53\u7136\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0cLinux \u9a71\u52a8\u5f00\u53d1\u5f88\u5c11\u76f4\u63a5\u64cd\u4f5c\u4e0a\u9762\u4e24\u4e2a\u7ed3\u6784\u4f53\uff0c\u56e0\u4e3a\u5185\u6838\u53c8\u5c01\u88c5\u4e86\u4e00\u5c42\uff0c\u6bd4\u5982<code>platform_device</code>\uff0c\u5c01\u88c5\u540e\u7684\u63a5\u53e3\u66f4\u4e3a\u7b80\u5355\u6613\u7528\u3002<code>device</code>\u548c<code>device_driver</code>\u5fc5\u987b\u6302\u5728\u5728\u540c\u4e00\u4e2abus\u4e4b\u4e0b\uff0c\u540d\u79f0\u4e5f\u5fc5\u987b\u4e00\u6837\uff0c\u5185\u6838\u624d\u80fd\u5b8c\u6210\u5339\u914d\u64cd\u4f5c\u3002</p> <p>\u5982\u679c\u5339\u914d\u5230\u4e86\u76f8\u540c\u540d\u79f0\u7684<code>device</code>\u548c<code>device_driver</code>\uff0c\u5185\u6838\u5c31\u4f1a\u6267\u884c<code>device_driver</code>\u4e2d\u7684<code>probe()</code>\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u662f\u6240\u6709<code>driver</code>\u7684\u5165\u53e3\u51fd\u6570\uff0c\u7528\u6765\u6267\u884c\u8bf8\u5982\u786c\u4ef6\u8bbe\u5907\u521d\u59cb\u5316\u3001\u5b57\u7b26\u8bbe\u5907\u6ce8\u518c\u3001\u6587\u4ef6\u64cd\u4f5cops\u6ce8\u518c\u7b49\u52a8\u4f5c\uff08\u5bf9\u5e94<code>remove()</code>\u51fd\u6570\uff09\u3002</p>"},{"location":"linux/drivers/device_model/#bus","title":"bus","text":"<p>\u603b\u7ebf\u662f\u8fde\u63a5\u5904\u7406\u5668\u548c\u8bbe\u5907\u4e4b\u95f4\u7684\u901a\u9053\u3002\u4e3a\u4e86\u65b9\u4fbf\u8bbe\u5907\u6a21\u578b\u7684\u5b9e\u73b0\uff0c\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e2a\u8bbe\u5907\u90fd\u9700\u8981\u8fde\u63a5\u5728\u4e00\u4e2a\u603b\u7ebf\u4e0a\uff0c\u8fd9\u4e2a\u603b\u7ebf\u53ef\u4ee5\u662f\u5185\u90e8\u603b\u7ebf\u3001\u865a\u62df\u603b\u7ebf\u6216\u8005\u662f\u5e73\u53f0\u603b\u7ebf\u3002</p> <p>\u603b\u7ebf\u9a71\u52a8\u5219\u8d1f\u8d23\u5b9e\u73b0\u603b\u7ebf\u7684\u5404\u79cd\u884c\u4e3a\uff0c\u5176\u7ba1\u7406\u7740\u4e24\u4e2a\u94fe\u8868\u2014\u2014klist_devices \u548c klist_drivers\uff0c\u5206\u522b\u4ee3\u8868\u8be5\u603b\u7ebf\u4e0b\u7684\u8bbe\u5907\u548c\u9a71\u52a8\u3002\u5f53\u4f60\u5411\u603b\u7ebf\u6dfb\u52a0\uff08\u79fb\u9664\uff09\u4e00\u4e2a\u8bbe\u5907\uff08\u9a71\u52a8\uff09\u65f6\uff0c\u4fbf\u4f1a\u5728\u5bf9\u5e94\u7684\u5217\u8868\u4e0a\u6dfb\u52a0\uff08\u79fb\u9664\uff09\u8282\u70b9\uff0c\u540c\u65f6\u5bf9\u6302\u8f7d\u5728\u8be5\u603b\u7ebf\u7684\u9a71\u52a8\u4ee5\u53ca\u8bbe\u5907\u8fdb\u884c\u5339\u914d\uff0c\u5728\u5339\u914d\u8fc7\u7a0b\u4e2d\u4f1a\u5ffd\u7565\u6389\u90a3\u4e9b\u5df2\u7ecf\u6709\u9a71\u52a8\u5339\u914d\u7684\u8bbe\u5907\u3002</p> <p></p> <p>\u9a71\u52a8\u7ed1\u5b9a\u8bbe\u5907\u7684\u65f6\u673a</p> <ol> <li> <p>\u9a71\u52a8\u88ab\u6ce8\u518c\u65f6\uff08\u5982\u679c\u8bbe\u5907\u5df2\u7ecf\u5b58\u5728\uff09</p> </li> <li> <p>\u8bbe\u5907\u88ab\u521b\u5efa\u65f6\uff08\u5982\u679c\u9a71\u52a8\u5df2\u7ecf\u6ce8\u518c\uff09</p> </li> </ol> <p>\u5185\u6838\u7528<code>struct bus_type</code>\u7ed3\u6784\u4f53\u62bd\u8c61\u51fa\u603b\u7ebf\uff1a</p> <pre><code>struct bus_type {\n    const char *name;\n    const char *dev_name;\n    struct device *dev_root;\n    const struct attribute_group **bus_groups;\n    const struct attribute_group **dev_groups;\n    const struct attribute_group **drv_groups;\n\n    int (*match)(struct device *dev, struct device_driver *drv);\n    int (*uevent)(struct device *dev, struct kobj_uevent_env *env);\n    int (*probe)(struct device *dev);\n    int (*remove)(struct device *dev);\n\n    struct subsys_private *p;\n};\n</code></pre> <p>name\uff1a\u8be5bus\u7684\u540d\u79f0\uff0c\u5728sysfs\u4e2d\u4ee5\u76ee\u5f55\u5f62\u5f0f\u5b58\u5728\uff0c\u6bd4\u5982platform bus\u8868\u73b0\u4e3a/sys/bus/platform\u3002</p> <p>dev_name\uff1a\u6ce8\u518c\u5230bus\u7684\u8bbe\u5907\u540d\u79f0\u3002</p> <p>dev_root\uff1a\u6839\u8bbe\u5907\u3002</p> <p>bus_groups\uff1abus\u7684\u9ed8\u8ba4\u5c5e\u6027\u3002</p> <p>dev_groups\uff1abus\u4e0adevice\u7684\u9ed8\u8ba4\u5c5e\u6027\u3002</p> <p>drv_groups\uff1abus\u4e0adevice_driver\u7684\u9ed8\u8ba4\u5c5e\u6027\u3002</p> <p>match\uff1a\u5f53\u5c5e\u4e8e\u8be5bus\u7684device\u6216\u8005device_driver\u6dfb\u52a0\u5230\u5185\u6838\u65f6\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u3002</p> <p>uevent\uff1a\u5f53\u5c5e\u4e8e\u8be5bus\u7684device\uff0c\u53d1\u751f\u6dfb\u52a0\u3001\u79fb\u9664\u6216\u8005\u5176\u4ed6\u52a8\u4f5c\u65f6\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u3002</p> <p>probe\u3001remove\uff1a\u5f53\u5c5e\u4e8e\u8be5bus\u7684device\uff0c\u53d1\u751f\u521d\u59cb\u5316\u548c\u79fb\u9664\u65f6\uff0c\u8c03\u7528\u8be5\u51fd\u6570\u3002</p> <p>p\uff1a\u4fdd\u5b58\u4e86bus\u6a21\u5757\u7684\u4e00\u4e9b\u79c1\u6709\u6570\u636e\uff0c\u8bbe\u5907\u548c\u9a71\u52a8\u7684\u94fe\u8868\u5c31\u5b58\u653e\u5728\u8fd9\u91cc\u3002</p> <p><code>struct subsys_private</code>\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>struct subsys_private {\n    struct kset subsys;     //bus\u9876\u5c42\u76ee\u5f55\n    struct kset *devices_kset;  //\u8be5bus\u4e0b\u6240\u6709\u8bbe\u5907\u96c6\u5408\n    struct list_head interfaces;\n    struct mutex mutex;\n\n    struct kset *drivers_kset;  //\u8be5bus\u4e0b\u6240\u6709\u9a71\u52a8\u96c6\u5408\n    struct klist klist_devices;\n    struct klist klist_drivers;\n    struct blocking_notifier_head bus_notifier;\n    unsigned int drivers_autoprobe:1;\n    struct bus_type *bus;\n\n    struct kset glue_dirs;\n    struct class *class;\n};\n</code></pre> <p>bus \u5c5e\u6027\uff1a</p> <pre><code>struct bus_attribute{\n    struct attribute attr;\n    ssize_t (*show)(struct bus_type *bus, char *buf);\n    ssize_t (*store)(struct bus_type *bus, const char *buf, size_t count);\n};\n</code></pre> <p>bus \u6a21\u5757\u7684\u4e3b\u8981\u529f\u80fd\u662f\uff1a</p> <ul> <li>bus \u7684\u6ce8\u518c\u548c\u6ce8\u9500</li> <li>\u5904\u7406\u8bbe\u5907\u6216\u8005\u9a71\u52a8\u7684\u6ce8\u518c\u4e0e\u6ce8\u9500</li> <li>\u5b9e\u73b0\u9a71\u52a8\u7684<code>probe()</code>\u51fd\u6570</li> <li>\u7ba1\u7406 bus \u4e0b\u6240\u6709\u7684\u8bbe\u5907\u548c\u9a71\u52a8</li> </ul> <p>\u5185\u6838\u63d0\u4f9b\u4e86<code>bus_register()</code>\u51fd\u6570\u6765\u6ce8\u518c\u603b\u7ebf\uff0c<code>bus_unregister()</code>\u51fd\u6570\u6765\u6ce8\u9500\u603b\u7ebf\u3002</p> <pre><code>int bus_register(struct bus_type *bus);\n\nvoid bus_unregister(struct bus_type *bus);\n</code></pre> <p>\u5f53\u6211\u4eec\u6210\u529f\u6ce8\u518c\u603b\u7ebf\u65f6\uff0c\u4f1a\u5728 /sys/bus/ \u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u65b0\u76ee\u5f55\uff0c\u76ee\u5f55\u540d\u4e3a\u6211\u4eec\u65b0\u6ce8\u518c\u7684\u603b\u7ebf\u540d\u3002bus \u76ee\u5f55\u4e2d\u5305\u542b\u4e86\u5f53\u524d\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u6ce8\u518c\u4e86\u7684\u6240\u6709\u603b\u7ebf\uff0c\u4f8b\u5982 I2C\u3001SPI\u3001platform \u7b49\u3002</p>"},{"location":"linux/drivers/device_model/#class","title":"class","text":"<p>\u6700\u540e\u4e00\u4e2a\u8bbe\u5907\u6a21\u578b\u6982\u5ff5\u662f class\u3002class \u662f\u4e00\u4e2a\u8bbe\u5907\u7684\u9ad8\u7ea7\u89c6\u56fe\uff0c\u5b83\u62bd\u8c61\u51fa\u4e86\u5e95\u5c42\u7684\u5b9e\u73b0\u7ec6\u8282\u3002\u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u770b\u5230\u56fa\u6001\u786c\u76d8\u6216\u5149\u76d8\uff0c\u4f46\u662f\u5728 class \u7684\u5c42\u6b21\u4e0a\uff0c\u5b83\u4eec\u90fd\u53ea\u662f\u78c1\u76d8\u800c\u5df2\u3002class \u5141\u8bb8\u7528\u6237\u7a7a\u95f4\u4f7f\u7528\u8bbe\u5907\u6240\u63d0\u4f9b\u7684\u529f\u80fd\uff0c\u800c\u4e0d\u5173\u5fc3\u8bbe\u5907\u662f\u5982\u4f55\u8fde\u63a5\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u5de5\u4f5c\u7684\u3002</p> <p>\u51e0\u4e4e\u6240\u6709\u7684 class \u90fd\u663e\u793a\u5728 /sys/class \u76ee\u5f55\u4e2d\u3002\u6bd4\u5982\u6240\u6709\u7684\u7f51\u7edc\u63a5\u53e3\u90fd\u51e0\u79cd\u5728 /sys/class/net \u4e0b\uff0c\u8f93\u5165\u8bbe\u5907\u5728 /sys/class/input \u4e0b\uff0c\u4e32\u884c\u8bbe\u5907\u5728 /sys/class/tty \u4e0b\u3002</p> <p>class \u7684\u7ed3\u6784\u4f53\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>struct class {\n    const char *name;\n\n    const struct attribute_group **class_groups;\n    const struct attribute_group **dev_groups;\n\n    struct kobject *dev_kobj;\n\n    int (*dev_uevent)(struct device *dev, struct kobj_uevent_env *env);\n    char *(*devnode)(struct device *dev, umode_t *mode);\n\n    void (*class_release)(struct class *class);\n    void (*dev_release)(struct device *dev);\n\n    struct subsys_private *p;\n};\n</code></pre> <p>name\uff1aclass\u7684\u540d\u79f0\uff0c\u4f53\u73b0\u5728/sys/class\u76ee\u5f55\u4e0b\u3002</p> <p>class_groups\uff1aclass\u5c5e\u6027\u3002</p> <p>dev_groups\uff1adev\u5c5e\u6027\u3002</p> <p>dev_uevent\uff1a\u8bbe\u5907\u7684uevent\u56de\u8c03\u51fd\u6570\u3002</p> <p>class_release/dev_release\uff1arelease\u56de\u8c03\u51fd\u6570\u3002</p> <p>p\uff1a\u5b50\u7cfb\u7edf\u7684\u79c1\u6709\u6570\u636e\u3002</p> <p>\u5bf9\u4e8e\u5b50\u7cfb\u7edf\u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\u3002/sys/class \u548c device_name \u4e4b\u95f4\u7684\u90a3\u90e8\u5206\u76ee\u5f55\u79f0\u4e3a subsystem\u3002\u4e5f\u5c31\u662f\u6bcf\u4e2a dev \u5c5e\u6027\u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84\u90fd\u53ef\u8868\u793a\u4e3a /sys/class/subsystem/device_name/dev\u3002\u4f8b\u5982\uff0c<code>cat /sys/class/tty/tty0/dev</code>\u4f1a\u5f97\u5230 4:0\uff0c\u8fd9\u91cc subsystem \u4e3atty\uff0cdevice_name \u4e3atty0\u3002</p> <p>\u5728 /sys/class \u76ee\u5f55\u4e0b\u521b\u5efa/\u5220\u9664\u65b0\u7684\u6761\u76ee\uff1a</p> <pre><code>#define class_create(owner, name)\nvoid class_destroy(struct class *cls)\n</code></pre>"},{"location":"linux/drivers/dma/","title":"\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee","text":"<p>\u5728\u8f6f\u4ef6\u5c42\u9762\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u865a\u62df\u5730\u5740\u8bbf\u95ee\u5185\u5b58\u3002\u5728\u786c\u4ef6\u5c42\u9762\uff0c\u4e00\u4e9b\u5916\u8bbe\u4e5f\u6709\u5185\u5b58\u7684\u9700\u6c42\uff0c\u5b83\u4eec\u5e0c\u671b\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58\u800c\u4e0d\u9700\u8981\u7ecf\u8fc7CPU\uff0c\u6216\u8005\u7ecf\u8fc7\u67d0\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6620\u5c04\u6210CPU\u7684\u89c6\u89d2\uff0c\u4ece\u800c\u8ba9CPU\u8bbf\u95ee\uff0c\u5b9e\u73b0\u4e0e\u5e94\u7528\u7a0b\u5e8f\u7684\u4ea4\u4e92\u3002</p> <p>\u5728\u7f16\u5199\u8bbe\u5907\u9a71\u52a8\u65f6\uff0c\u4e00\u4e9b\u8bbe\u5907\u8981\u6c42\u5206\u914d\u4e00\u5927\u5757\u8fde\u7eed\u7684\u5185\u5b58\uff0c\u6bd4\u5982\u56fe\u50cf\u3001\u89c6\u9891\u7b49\u5916\u8bbe\u3002\u5185\u6838\u63d0\u4f9b\u4e86DMA mapping\u7684\u529f\u80fd\uff0c\u4ee5\u4fbf\u8fd9\u4e9b\u5185\u5b58\u53ef\u4ee5\u76f4\u63a5\u88ab\u8bbe\u5907\u8bbf\u95ee\u3002\u5728\u67d0\u4e9b\u5e94\u7528\u573a\u666f\u4e0b\uff0c\u4e0d\u540c\u8bbe\u5907\u4e4b\u95f4\u53ef\u4ee5\u5171\u4eab\u5185\u5b58\uff0c\u8fd9\u5c31\u662fDMA buffer sharing\u673a\u5236\uff1a</p> <p></p>"},{"location":"linux/drivers/dma/#_2","title":"\u4ea4\u6362\u6570\u636e","text":"<p>1.\u5355\u53d8\u91cf\u8bbf\u95ee\uff1a</p> <pre><code>get_user(type val, type *address);\n\nput_user(type val, type *address);\n</code></pre> <p>2.\u6570\u7ec4\u8bbf\u95ee\uff1a</p> <pre><code>unsigned long copy_to_user(void *to, const void *from, unsigned long n);\n\nunsigned long copy_from_user(void *to, const void *from, unsigned long n);\n</code></pre> <p>3.\u5185\u5b58\u6620\u5c04I/O\u8bbf\u95ee</p> <p>\u5c06\u786c\u4ef6\u5730\u5740\u6620\u5c04\u4e3a\u865a\u62df\u5730\u5740\uff1a</p> <pre><code>void __iomem *ioremap(phys_addr_t phys_addr, size_t size);\n\nvoid iounmap(volatile void __iomem *addr);\n</code></pre> <p>\u8bbf\u95eeI/O\u865a\u62df\u5730\u5740\uff1a</p> <pre><code>unsigned int ioread8(void __iomem *addr);\nunsigned int ioread16(void __iomem *addr);\nunsigned int ioread32(void __iomem *addr);\n\nvoid iowrite8(u8 value, void __iomem *addr);\nvoid iowrite16(u16 value, void __iomem *addr);\nvoid iowrite32(u32 value, void __iomem *addr);\n</code></pre>"},{"location":"linux/drivers/dts/","title":"\u8bbe\u5907\u6811","text":"<p>\u8bbe\u5907\u6811\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u4e13\u95e8\u7528\u4e8e\u63cf\u8ff0\u786c\u4ef6\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u7531\u4e00\u7cfb\u5217\u8282\u70b9\uff08node\uff09\u548c\u5c5e\u6027\uff08property\uff09\u7ec4\u6210\uff0c\u8282\u70b9\u672c\u8eab\u8fd8\u53ef\u4ee5\u5305\u542b\u5b50\u8282\u70b9\uff0c\u5c31\u50cf\u4e00\u68f5\u6811\u72b6\u7ed3\u6784\u4e00\u6837\u3002\u8bbe\u5907\u6811\u4e2d\u53ef\u4ee5\u63cf\u8ff0\u7684\u4fe1\u606f\u5305\u62ec\uff1a</p> <ul> <li>CPU \u7684\u6570\u91cf\u548c\u7c7b\u522b</li> <li>\u5185\u5b58\u57fa\u5730\u5740\u548c\u5927\u5c0f</li> <li>\u603b\u7ebf\u548c\u6865\u7684\u914d\u7f6e</li> <li>\u786c\u4ef6\u5916\u8bbe\u7684\u5730\u5740</li> <li>\u4e2d\u65ad\u63a7\u5236\u5668\u548c\u4e2d\u65ad\u4f7f\u7528\u60c5\u51b5</li> <li>GPIO \u63a7\u5236\u5668\u548c GPIO \u4f7f\u7528\u60c5\u51b5</li> <li>\u65f6\u949f\u63a7\u5236\u5668\u548c\u65f6\u949f\u4f7f\u7528\u60c5\u51b5</li> </ul>"},{"location":"linux/drivers/dts/#_2","title":"\u8bbe\u5907\u6811\u7684\u7531\u6765","text":"<p>\u73b0\u4ee3\u9a71\u52a8\u6a21\u578b\uff1a \u8bbe\u5907  +  \u603b\u7ebf  +  \u9a71\u52a8 \uff0c\u8bbe\u5907\u6811\u5c31\u662f\u7528\u6765\u66ff\u6362\u9a71\u52a8\u6a21\u578b\u4e2d\u7684\u8bbe\u5907\u6a21\u5757\u7684\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u5b9e\u73b0\u8bbe\u5907\u8d44\u6e90\u4fe1\u606f\u4e0e\u5185\u6838\u5206\u79bb\u3002</p> <p></p> <p>\u5206\u79bb\u4e4b\u540e\uff0c\u7531 uboot \u6216\u8005\u5176\u4ed6 bootloader \u5c06\u5185\u6838\u955c\u50cf\u53ca\u8bbe\u5907\u6811\u4e8c\u8fdb\u5236\u6587\u4ef6\u52a0\u8f7d\u5230\u4e0d\u540c\u7684\u5185\u5b58\u5730\u5740\u5904\uff0c\u5185\u6838\u8d1f\u8d23\u89e3\u6790\u8bbe\u5907\u6811\uff0c\u5e76\u6839\u636e\u8bbe\u5907\u6811\u4e2d\u7684\u4fe1\u606f\u914d\u7f6e\u8bbe\u5907\u3002</p> <p></p> <p>\u8be6\u7ec6\u8fc7\u7a0b\u89c1\uff1asetup_arch</p>"},{"location":"linux/drivers/dts/#dtsdtbdtc","title":"DTS\u3001DTB\u548cDTC","text":"<ul> <li>dtsi\uff1a\u63cf\u8ff0\u8bbe\u5907\u5171\u6709\u4fe1\u606f</li> <li>dts\uff1a\u63cf\u8ff0\u8bbe\u5907\u72ec\u6709\u4fe1\u606f</li> <li>dtc\uff1a\u8bbe\u5907\u6811\u7f16\u8bd1\u5668</li> <li>dtb\uff1a\u8bbe\u5907\u6811\u4e8c\u8fdb\u5236\u6587\u4ef6</li> </ul> <p>\u4f7f\u7528 DTC \u5de5\u5177\u7f16\u8bd1\u751f\u6210 .dtb \u6587\u4ef6\uff1a</p> <pre><code>dtc -I dts -O dtb -o [output].dtb [input].dts\n</code></pre> <p>\u53cd\u8fc7\u6765\u53ef\u4ee5\u751f\u6210 .dts \u6587\u4ef6\uff1a</p> <pre><code>dtc -I dtb -O dts -o [output].dts [input].dtb\n</code></pre> <p><code>make dtbs</code>\u4f1a\u7f16\u8bd1\u6240\u6709\u7684 .dts \u6587\u4ef6\uff0c\u5982\u679c\u8981\u7f16\u8bd1\u6307\u5b9a\u7684 .dtb\uff0c\u8bf7\u4f7f\u7528<code>make board_name.dtb</code>\u3002</p>"},{"location":"linux/drivers/dts/#dts","title":"DTS\u57fa\u672c\u8bed\u6cd5","text":"<p>\u8bbe\u5907\u6811\u7ed1\u5b9a\u6587\u6863</p> <p>\u4f4d\u4e8e&lt;Documentation/devicetree/bindings&gt;\u76ee\u5f55\u4e0b\uff0c\u4e3b\u8981\u5185\u5bb9\u5305\u62ec\uff1a</p> <ul> <li>\u8be5\u6a21\u5757\u7684\u57fa\u672c\u63cf\u8ff0</li> <li>\u5fc5\u987b\u5c5e\u6027</li> <li>\u53ef\u9009\u5c5e\u6027</li> <li>\u4e00\u4e2a\u4f8b\u5b50</li> </ul> <p>\u8bbe\u5907\u6811\u5c31\u662f\u7531\u4e00\u7cfb\u5217 node \u548c child node \u7ec4\u6210\u7684\uff0c\u6bcf\u4e2a node \u90fd\u5305\u542b\u4e00\u4e9b\u5c5e\u6027\u7528\u6765\u63cf\u8ff0\u8fd9\u4e2a node \u7684\u4fe1\u606f\u3002</p> <pre><code>/dts-v1/;\n/{\n    node1 {\n        property1 = \"xxx\";\n        property2 = \"xxx;\n    };\n\n    node2 {\n\n    };\n};\n</code></pre> <p>\u5c5e\u6027\u503c\u6807\u8bc6\u4e86\u8bbe\u5907\u7684\u7279\u6027\uff0c\u5b83\u7684\u503c\u53ef\u4ee5\u662f\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ol> <li>\u53ef\u80fd\u4e3a\u7a7a\u3002</li> <li>\u53ef\u80fd\u662f\u4e00\u4e2a u32\u3001u64 \u7684\u6570\u503c\uff0c\u4e5f\u53ef\u4ee5\u662f\u6570\u7ec4\u3002</li> <li>\u53ef\u80fd\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6216\u8005\u662f string list\u3002</li> </ol>"},{"location":"linux/drivers/dts/#_3","title":"\u8282\u70b9\u547d\u540d","text":"<p>\u6bcf\u4e2a\u8282\u70b9\u5fc5\u987b\u6709\u4e2a\u547d\u540d\uff0c\u683c\u5f0f\u4e3a label:name@unit-address\u3002</p> <ul> <li>label\uff1a\u8282\u70b9\u522b\u540d</li> <li>name\uff1a\u8282\u70b9\u540d\u79f0</li> <li>unit-address\uff1a\u8282\u70b9\u5730\u5740</li> </ul>"},{"location":"linux/drivers/dts/#_4","title":"\u7279\u6b8a\u8282\u70b9","text":"<p>\u522b\u540d\u8282\u70b9<code>aliases</code>\uff1a\u7528\u6765\u7ed9 device-node \u5b9a\u4e49\u522b\u540d\uff0c\u56e0\u4e3a\u6bcf\u6b21\u5199\u4e00\u957f\u4e32\u8def\u5f84\u6bd4\u8f83\u9ebb\u70e6\u3002</p> <p><code>chosen</code>\u8282\u70b9\uff1a\u7528\u6765\u5b9a\u4e49\u542f\u52a8\u53c2\u6570\uff0c\u5176\u7236\u8282\u70b9\u5fc5\u987b\u662f\u6839\u8282\u70b9\u3002\u5185\u6838\u7684\u4e00\u4e9b\u542f\u52a8\u53c2\u6570\u53ef\u4ee5\u901a\u8fc7<code>chosen</code>\u8282\u70b9\u4e0b\u7684<code>bootargs</code>\u5c5e\u6027\u6765\u8bbe\u7f6e\uff0c\u5b83\u53ef\u4ee5\u88ab bootloader \u8bfb\u53d6\uff1a</p> <pre><code>chosen {\n    bootargs = \"root=/dev/nfs rw nfsroot=192.168.1.1 console=ttyS0,115200\";\n};\n</code></pre>"},{"location":"linux/drivers/dts/#_5","title":"\u5c5e\u6027","text":"<p>\u8282\u70b9\u7531\u4e00\u5806\u5c5e\u6027\u7ec4\u6210\uff0cSoC \u5382\u5546\u6709\u5404\u81ea\u4e0d\u540c\u7684\u5b9a\u4e49\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u5e38\u7528\u5c5e\u6027\uff0c\u66f4\u5177\u4f53\u7684\u53ef\u4ee5\u53c2\u8003\u76f8\u5173\u624b\u518c\u3002</p>"},{"location":"linux/drivers/dts/#compatible","title":"compatible","text":"<p><code>compatible</code>\u5c5e\u6027\u6307\u5b9a\u4e86\u8bbe\u5907\u7684\u578b\u53f7\uff0c\u7528\u6765\u4e0e\u9a71\u52a8\u5339\u914d\u3002\u5b83\u7684\u683c\u5f0f\u4e3a\uff1a(\u5236\u9020\u5546\uff0c\u578b\u53f7)\u3002<code>compatible</code>\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\u5c5e\u6027\u503c\uff0c\u6309\u7167\u4f18\u5148\u7ea7\u7684\u987a\u5e8f\u8fdb\u884c\u5339\u914d\u3002</p> <p>\u5bf9\u4e8e<code>platform_drvier</code>\u800c\u8a00\uff0c\u5728\u7a0b\u5e8f\u4e2d\u6307\u660e\u4e00\u4e2a of \u5339\u914d\u8868\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u548c\u5bf9\u5e94\u7684\u8bbe\u5907\u6811\u8282\u70b9\u8fdb\u884c\u5339\u914d\uff0c\u7136\u540e\u8c03\u7528<code>probe()</code>\u51fd\u6570\uff0c\u505a\u4e00\u4e9b\u521d\u59cb\u5316\u64cd\u4f5c\uff1a</p> <pre><code>static const struct of_device_id rockchip_rk3399_match[] = {\n    { .compatible = \"rockchip,rk3399\" },\n    {/*empty*/},\n};\n</code></pre>"},{"location":"linux/drivers/dts/#status","title":"status","text":"<p><code>status</code>\u5c5e\u6027\u7684\u503c\u4e0e\u8bbe\u5907\u72b6\u6001\u6709\u5173\uff0c\u5982\u679c\u67d0\u8282\u70b9\u7684<code>status</code>\u5c5e\u6027\u4e3a\"okay\"\u4e14\u6709<code>compatible</code>\u5c5e\u6027\uff0c\u5219\u5185\u6838\u4f1a\u5c06\u5176\u8f6c\u6362\u4e3a<code>platform_device</code>\u8bbe\u5907\uff0c\u6700\u7ec8\u4e0e\u9a71\u52a8\u7ed1\u5b9a\u3002</p>"},{"location":"linux/drivers/dts/#reg","title":"reg","text":"<p>\u5185\u5b58\u6620\u5c04\u8bbe\u5907\u5c06\u6709\u4ee5\u4e0b\u5c5e\u6027\u7684\u8282\u70b9\u6620\u5c04\u5230\u8bbe\u5907\u6811\u4e2d\uff1a</p> <ul> <li>reg</li> <li>#address-cells</li> <li>#size-cells</li> </ul> <p>\u6bcf\u4e2a\u5185\u5b58\u6620\u5c04\u8bbe\u5907\u90fd\u6709\u4e00\u4e2a<code>reg</code>\u5c5e\u6027\uff0c\u683c\u5f0f\u4e3a<code>reg=&lt;address1 length1 [address2 length2] ....&gt;</code>\u3002\u6bcf\u4e2a\u5730\u5740\u503c\u548c\u957f\u5ea6\u90fd\u662f\u4e00\u4e2a 32 \u4f4d\u7684\u6574\u6570\uff0c\u79f0\u4e3a cells\u3002<code>reg</code>\u5c5e\u6027\u7684\u5185\u5bb9\u7531\u7236\u8282\u70b9\u7684 #address-cells \u548c #size-cells \u5c5e\u6027\u51b3\u5b9a\u3002</p> <pre><code>cpus {\n    #address-cells = &lt;1&gt;;\n    #size-cells = &lt;0&gt;;\n    cpu@0 {\n        compatible = \"arm, cortext-a9\";\n        reg = &lt;0x0&gt;;\n    };\n\n    cpu@1 {\n        compatible = \"arm, cortext-a9\";\n        reg = &lt;0x1&gt;;\n    };\n}\n</code></pre> <p>\u5728 cpus \u8282\u70b9\u4e2d\uff0c#address-cells \u88ab\u8bbe\u7f6e\u4e3a1\uff0c\u800c #size-cells \u88ab\u8bbe\u7f6e\u4e3a0\u3002\u8fd9\u610f\u5473\u7740\u5b50\u8282\u70b9\u7684<code>reg</code>\u503c\u662f\u4e00\u4e2a\u5355\u72ec\u7684u32\uff0c\u53ea\u8868\u793a\u5730\u5740\uff0c\u6ca1\u6709\u957f\u5ea6\u4fe1\u606f\u3002</p> <p>\u6ce8\u610f<code>reg</code>\u503c\u5fc5\u987b\u5339\u914d\u8282\u70b9\u540d\u79f0\u4e2d\u7684\u5355\u5143\u5730\u5740\u3002</p> <pre><code>/dts-v1/;\n\n/ {\n    #address-cells = &lt;1&gt;;\n    #size-cells = &lt;1&gt;;\n\n    ...\n\n    serial@101f0000 {\n        compatible = \"arm,pl011\";\n        reg = &lt;0x101f0000 0x1000 &gt;;\n    };\n\n    serial@101f2000 {\n        compatible = \"arm,pl011\";\n        reg = &lt;0x101f2000 0x1000 &gt;;\n    };\n\n    gpio@101f3000 {\n        compatible = \"arm,pl061\";\n        reg = &lt;0x101f3000 0x1000\n               0x101f4000 0x0010&gt;;\n    };\n\n    interrupt-controller@10140000 {\n        compatible = \"arm,pl190\";\n        reg = &lt;0x10140000 0x1000 &gt;;\n    };\n\n    spi@10115000 {\n        compatible = \"arm,pl022\";\n        reg = &lt;0x10115000 0x1000 &gt;;\n    };\n\n    ...\n\n};\n</code></pre> <p>\u4ee5\u4e0a\u6bcf\u4e2a\u8bbe\u5907\u90fd\u88ab\u5206\u914d\u4e86\u4e00\u4e2a\u957f\u5ea6\u4e3a 32 \u4f4d\u7684\u57fa\u5730\u5740\u3002\u8fd8\u6709\u4e00\u4e9b\u8bbe\u5907\u4f9d\u8d56\u4e8e\u5916\u90e8\u603b\u7ebf\uff1a</p> <pre><code>external-bus {\n    #address-cells = &lt;2&gt;;\n    #size-cells = &lt;1&gt;;\n\n    ethernet@0,0 {\n        compatible = \"smc,smc91c111\";\n        reg = &lt;0 0 0x1000&gt;;\n    };\n\n    i2c@1,0 {\n        compatible = \"acme,a1234-i2c-bus\";\n        reg = &lt;1 0 0x1000&gt;;\n        rtc@58 {\n            compatible = \"maxim,ds1338\";\n        };\n    };\n\n    flash@2,0 {\n        compatible = \"samsung,k8f1315ebm\", \"cfi-flash\";\n        reg = &lt;2 0 0x4000000&gt;;\n    };\n};\n</code></pre> <p>external-bus \u4f7f\u7528 2 \u4e2a\u5730\u5740\u5355\u5143\u6765\u63cf\u8ff0\u8282\u70b9\uff0c\u7b2c\u4e00\u4f4d\u8868\u793a chipselect \u7f16\u53f7\uff0c\u7b2c\u4e8c\u4f4d\u8868\u793a offset\u3002\u6240\u4ee5\u6bcf\u4e2a<code>reg</code>\u5c5e\u6027\u503c\u5305\u542b\u4e86 3 \u4e2a cells\u3002</p> <p>\u8fd8\u6709\u4e00\u4e9b\u8bbe\u5907\u5e76\u4e0d\u7531 CPU \u8bbf\u95ee\uff0c\u6bd4\u5982 i2c \u603b\u7ebf\u4e0a\u7684\u8282\u70b9\uff1a</p> <pre><code>i2c@1,0 {\n    compatible = \"acme,a1234-i2c-bus\";\n    #address-cells = &lt;1&gt;;\n    #size-cells = &lt;0&gt;;\n    reg = &lt;1 0 0x1000&gt;;\n    rtc@58 {\n        compatible = \"maxim,ds1338\";\n        reg = &lt;58&gt;;\n    };\n};\n</code></pre> <p>\u7531\u4e8e i2c \u603b\u7ebf\u8bbf\u95ee\u8bbe\u5907\u9700\u8981\u5730\u5740\u53f7\uff0c\u4f46\u5e76\u4e0d\u9700\u8981\u957f\u5ea6\u4fe1\u606f\uff0c\u56e0\u6b64<code>reg</code>\u5c5e\u6027\u53ea\u5305\u542b\u4e00\u4e2a cell\u3002</p>"},{"location":"linux/drivers/dts/#ranges","title":"ranges","text":"<p><code>range</code>\u662f\u5730\u5740\u6620\u5c04\u8868\uff0c\u6309\u7167\uff08\u5b50\u5730\u5740\uff0c\u7236\u5730\u5740\uff0c\u6620\u5c04\u957f\u5ea6\uff09\u7684\u683c\u5f0f\u7f16\u5199\u3002</p> <p>\u5b50\u5730\u5740\u7531 ranges \u6240\u5728\u8282\u70b9\u7684\"#address-cells\"\u5c5e\u6027\u51b3\u5b9a\uff0c\u7236\u5730\u5740\u7531 ranges \u7236\u8282\u70b9\u7684\"#address-cells\"\u5c5e\u6027\u51b3\u5b9a\uff0c\u6620\u5c04\u957f\u5ea6\u7531 ranges \u7236\u8282\u70b9\u7684\"#size-cells\"\u5c5e\u6027\u51b3\u5b9a\u3002</p> <p>\u4ee5 ranges=&lt;0x0 0x10 0x20&gt; \u4e3a\u4f8b\uff0c\u8868\u793a\u5c06\u5b50\u5730\u5740\u7684 0x0 \u6620\u5c04\u5230\u7236\u5730\u5740\u7684 0x10\uff0c\u5171\u6620\u5c04 0x20 \u4e2a\u5b57\u8282\u3002</p> <p><code>ranges</code>\u5c5e\u6027\u7528\u6765\u6307\u5b9a\u67d0\u4e2a\u8bbe\u5907\u7684\u5730\u5740\u8303\u56f4\u6216\u8005IO\u8303\u56f4\uff0c\u8fd9\u662f\u5bf9\u8bbe\u5907\u8fdb\u884c\u5bfb\u5740\u7684\u91cd\u8981\u4fe1\u606f\u3002\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7<code>ranges</code>\u5c5e\u6027\u83b7\u77e5\u54ea\u4e9b\u5185\u5b58\u533a\u57df\u6216\u8005IO\u7aef\u53e3\u662f\u88ab\u786c\u4ef6\u8bbe\u5907\u6240\u5360\u7528\u7684\u3002</p> <p>\u6839\u636e ranges \u5c5e\u6027\u7684\u4e0d\u540c\u628a\u8bbe\u5907\u5206\u6210\u4e09\u7c7b\uff1a</p> <ul> <li>ranges \u5c5e\u6027\u4e0d\u4e3a\u7a7a\uff1a\u975e\u5185\u5b58\u6620\u5c04\u578b\u8bbe\u5907\uff0cCPU \u4e0d\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u9700\u8981\u901a\u8fc7\u5730\u5740\u6620\u5c04</li> <li>ranges \u5c5e\u6027\u4e3a\u7a7a\uff1a\u5185\u5b58\u6620\u5c04\u578b\u8bbe\u5907\uff0cCPU \u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee</li> <li>\u6ca1\u6709 ranges \u5c5e\u6027\uff1a\u53ea\u80fd\u88ab\u7236\u8282\u70b9\u8bbf\u95ee</li> </ul>"},{"location":"linux/drivers/dts/#intc","title":"intc","text":"<p>\u7528\u4e8e\u8868\u793a\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u53ef\u4ee5\u5305\u542b\u4ee5\u4e0b\u4fe1\u606f\uff1a</p> <ul> <li>interrupt-controller</li> <li>interrupt-cells</li> <li>interrupt-parent</li> <li>interrupts</li> </ul> <p>\u4e2d\u65ad\u63a7\u5236\u5668\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\u89c1\u4e2d\u65ad\u5b50\u7cfb\u7edf\u3002</p>"},{"location":"linux/drivers/dts/#_6","title":"\u8bbe\u5907\u6811\u64cd\u4f5c\u51fd\u6570","text":"<p>\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u51fd\u6570\u6765\u64cd\u4f5c\u8bbe\u5907\u6811\u4e2d\u7684\u8282\u70b9\u548c\u5c5e\u6027\u4fe1\u606f\uff0c\u8fd9\u4e9b\u51fd\u6570\u7edf\u4e00\u4ee5<code>of</code>\u5f00\u5934\uff0c\u5b9a\u4e49\u5728&lt;include/linux/of.h&gt;\u4e2d\u3002</p> <p>\u5185\u6838\u4f7f\u7528<code>device_node</code>\u7ed3\u6784\u4f53\u6765\u63cf\u8ff0\u4e00\u4e2a\u8282\u70b9\uff1a <pre><code>struct device_node {\n    const char *name;\n    phandle phandle;\n    const char *full_name;\n    struct fwnode_handle fwnode;\n\n    struct  property *properties;\n    struct  property *deadprops;    /* removed properties */\n    struct  device_node *parent;\n    struct  device_node *child;\n    struct  device_node *sibling;\n#if defined(CONFIG_OF_KOBJ)\n    struct  kobject kobj;\n#endif\n    unsigned long _flags;\n    void    *data;\n#if defined(CONFIG_SPARC)\n    unsigned int unique_id;\n    struct of_irq_controller *irq_trans;\n#endif\n};\n</code></pre></p> <p>name\uff1a\u8282\u70b9\u4e2d\u7684name\u5c5e\u6027</p> <p>phandle\uff1a\u8282\u70b9\u5f15\u7528\u503c\uff0c\u7c7b\u4f3c\u4e8e\u5f15\u7528\u8ba1\u6570</p> <p>full_name\uff1a\u8282\u70b9\u7684\u540d\u5b57</p> <p>properties\uff1a\u5c5e\u6027</p> <p><code>struct property</code>\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>struct property{\n    char *name;    //\u5c5e\u6027\u540d\n    int length;    //\u5c5e\u6027\u503c\u7684\u957f\u5ea6\n    void *value;   //\u6307\u5411\u5c5e\u6027\u503c\u7684\u6307\u9488\n    struct property *next;      //\u6307\u5411\u4e0b\u4e00\u4e2a\u5c5e\u6027\u7684\u6307\u9488\n    unsigned long _flags;       //\u8868\u793a\u5c5e\u6027\u7684\u7c7b\u522b\n    unsigned int unique_id;     //\u6807\u8bc6\u8bbe\u5907\u7684\u552f\u4e00\u5c5e\u6027\n    struct bin_attribute attr;  //\u8868\u793a\u5c5e\u6027\u7684\u4e00\u4e9b\u5143\u6570\u636e\n};\n</code></pre>"},{"location":"linux/drivers/dts/#_7","title":"\u67e5\u627e\u8282\u70b9","text":"<ol> <li> <p>\u901a\u8fc7\u8282\u70b9\u540d\u5b57\u67e5\u627e\u6307\u5b9a\u8282\u70b9</p> <pre><code>struct device_node *of_find_node_by_name(struct device_node *from, const char *name);\n</code></pre> <p>from\uff1a\u5f00\u59cb\u67e5\u627e\u7684\u8282\u70b9\uff0cNULL\u5219\u8868\u793a\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u67e5\u627e</p> <p>name\uff1a\u8981\u67e5\u627e\u7684\u8282\u70b9\u540d</p> <p>\u8fd4\u56de\u503c\uff1a\u627e\u5230\u7684\u8282\u70b9\uff0cNULL\u8868\u793a\u5931\u8d25</p> </li> <li> <p>\u901a\u8fc7<code>device_type</code>\u548c<code>compatible</code>\u4e24\u4e2a\u5c5e\u6027\u6765\u67e5\u627e\u6307\u5b9a\u8282\u70b9</p> <pre><code>struct device_node *of_find_compatible_node(struct device_node *from, const char *type, const char *compatible)\n</code></pre> </li> <li> <p>\u901a\u8fc7<code>of_device_id</code>\u5339\u914d\u8868\u6765\u67e5\u627e\u6307\u5b9a\u8282\u70b9</p> <pre><code>struct device_node *of_find_matching_node_and_match(struct device_node *from, const struct of_device_id *matches, const struct of_device_id **match)\n</code></pre> </li> <li> <p>\u901a\u8fc7\u8def\u5f84\u6765\u67e5\u627e\u6307\u5b9a\u8282\u70b9</p> <pre><code>inline struct device_node *of_find_node_by_path(const char *path)\n</code></pre> <p>path\uff1a\u5e26\u6709\u5168\u8def\u5f84\u7684\u8282\u70b9\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528\u8282\u70b9\u7684\u522b\u540d</p> </li> <li> <p>\u901a\u8fc7\u4eb2\u7f18\u5173\u7cfb\u6765\u67e5\u627e\u8282\u70b9\uff1a</p> <pre><code>struct device_node *of_get_parent(const struct device_node *node)\n\nstruct device_node *of_get_next_child(const struct device_node *node, struct device_node *prev)\n\nstruct device_node *of_get_child_by_name(const struct device_node *node, const char *name)\n</code></pre> </li> </ol>"},{"location":"linux/drivers/dts/#_8","title":"\u63d0\u53d6\u5c5e\u6027\u503c","text":"<ol> <li> <p>\u67e5\u627e\u6307\u5b9a\u7684\u5c5e\u6027</p> <pre><code>struct property *of_find_property(const struct device_node *np, const char *name, int *lenp)\n</code></pre> <p>np\uff1a\u8bbe\u5907\u8282\u70b9</p> <p>name\uff1a\u5c5e\u6027\u540d\u5b57</p> <p>lenp\uff1a\u5c5e\u6027\u503c\u7684\u5b57\u8282\u6570</p> </li> <li> <p>\u83b7\u53d6\u5c5e\u6027\u4e2d\u5143\u7d20\u7684\u6570\u91cf</p> <pre><code>int of_property_count_elems_of_size(const struct device_node *np, const char *propname, int elem_size)\n</code></pre> </li> <li> <p>\u4ece\u5c5e\u6027\u4e2d\u83b7\u53d6\u6307\u5b9a\u6807\u53f7\u7684 u32 \u7c7b\u578b\u6570\u636e</p> <pre><code>int of_property_read_u32_index(const struct device_node *np, const char *propname, u32 index, u32 *out_value)\n</code></pre> <p>propname\uff1a\u8981\u8bfb\u53d6\u7684\u5c5e\u6027\u540d</p> <p>index\uff1a\u8bfb\u53d6\u8be5\u5c5e\u6027\u4e0b\u7684\u7b2c\u51e0\u4e2a\u503c</p> <p>out_value\uff1a\u8bfb\u53d6\u5230\u7684\u503c</p> </li> <li> <p>\u8bfb\u53d6 u32 \u6570\u7ec4\u7c7b\u578b\u7684\u6570\u636e</p> <pre><code>int of_property_read_u32_array(const struct device_node *np, const char *propname, u32 *out_values, size_t sz_min, size_t sz_max)\n</code></pre> </li> <li> <p>\u8bfb\u53d6\u5c5e\u6027\u4e2d\u5b57\u7b26\u4e32\u7684\u503c</p> <pre><code>int of_property_read_string_index(const struct device_node *np,const char *propname, int index,const char **out_string)\n</code></pre> </li> <li> <p>\u5185\u5b58\u6620\u5c04</p> <p>\u8be5\u51fd\u6570\u53ef\u4ee5\u81ea\u52a8\u5b8c\u6210\u7269\u7406\u5730\u5740\u5230\u865a\u62df\u5730\u5740\u7684\u8f6c\u6362\uff1a</p> <pre><code>void __iomem *of_iomap(struct device_node *np, int index)\n</code></pre> </li> </ol>"},{"location":"linux/drivers/gpio/","title":"GPIO\u5b50\u7cfb\u7edf","text":"<p>\u5bf9\u4e8e\u50cf LED \u8fd9\u6837\u76f4\u63a5\u8fde\u63a5\u5230 GPIO \u63a7\u5236\u5668\u7684\u8bbe\u5907\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 GPIO \u5b50\u7cfb\u7edf\u7684\u65b9\u5f0f\u6765\u63cf\u8ff0\u8bbe\u5907\u6240\u4f7f\u7528\u7684 GPIO \u8d44\u6e90\u3002</p> <p></p>"},{"location":"linux/drivers/gpio/#_1","title":"\u8bbe\u5907\u6811\u63cf\u8ff0","text":"<p>\u5bf9\u4e8e GPIO \u63a7\u5236\u5668\uff0c\u5bf9\u5e94\u7684\u8bbe\u5907\u8282\u70b9\u9700\u8981\u58f0\u660e gpio-controller \u5c5e\u6027\uff0c\u5e76\u8bbe\u7f6e #gpio-cells \u7684\u5927\u5c0f\uff0c\u6bd4\u5982 rk3399 \u7684 GPIO \u63a7\u5236\u5668\u800c\u8a00\uff0c\u7531\u539f\u5382 BSP \u5de5\u7a0b\u5e08\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a</p> rk3399.dtsi<pre><code>gpio0: gpio0@ff720000 {\n    compatible = \"rockchip,gpio-bank\";\n    reg = &lt;0x0 0xff720000 0x0 0x100&gt;;\n    clocks = &lt;&amp;pmucru PCLK_GPIO0_PMU&gt;;\n    interrupts = &lt;GIC_SPI 14 IRQ_TYPE_LEVEL_HIGH 0&gt;;\n\n    gpio-controller;\n    #gpio-cells = &lt;0x2&gt;;\n\n    interrupt-controller;\n    #interrupt-cells = &lt;0x2&gt;;\n};\n\ngpio1: gpio1@ff730000 {\n    compatible = \"rockchip,gpio-bank\";\n    reg = &lt;0x0 0xff730000 0x0 0x100&gt;;\n    clocks = &lt;&amp;pmucru PCLK_GPIO1_PMU&gt;;\n    interrupts = &lt;GIC_SPI 15 IRQ_TYPE_LEVEL_HIGH 0&gt;;\n\n    gpio-controller;\n    #gpio-cells = &lt;0x2&gt;;\n\n    interrupt-controller;\n    #interrupt-cells = &lt;0x2&gt;;\n};\n</code></pre> <p>\u9a71\u52a8\u5f00\u53d1\u4eba\u5458\u5982\u679c\u9700\u8981\u8ba9\u67d0\u4e2a\u8bbe\u5907\u5f15\u7528 GPIO \u8d44\u6e90\uff0c\u5219\u53ef\u4ee5\u5728\u8bbe\u5907\u6811\u4e2d\u76f4\u63a5\u6dfb\u52a0\u63cf\u8ff0\u3002\u6ce8\u610f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u53ea\u80fd\u5728 BSP \u539f\u5382\u5de5\u7a0b\u5e08\u5df2\u7ecf\u6dfb\u52a0\u4e86 GPIO \u63a7\u5236\u5668\u7684\u63cf\u8ff0\u65f6\u4f7f\u7528\uff1a</p> rk3399-firefly.dts<pre><code>leds {\n    compatible = \"gpio-leds\";\n    pinctrl-names = \"default\";\n    pinctrl-0 = &lt;&amp;work_led_pin&gt;, &lt;&amp;diy_led_pin&gt;;\n\n    work_led: led-0 {\n        label = \"work\";\n        default-state = \"on\";\n        gpios = &lt;&amp;gpio2 RK_PD3 GPIO_ACTIVE_HIGH&gt;;\n    };\n\n    diy_led: led-1 {\n        label = \"diy\";\n        default-state = \"off\";\n        gpios = &lt;&amp;gpio0 RK_PB5 GPIO_ACTIVE_HIGH&gt;;\n    };\n};\n</code></pre> <p>GPIO \u8fd8\u53ef\u4ee5\u6709\u5176\u4ed6\u5c5e\u6027\uff0c\u6bd4\u5982\uff1a</p> <ul> <li>ngpios=&lt;18&gt;\uff1a\u8868\u793a\u8be5 GPIO \u63a7\u5236\u5668\u6709 18 \u4e2a\u5f15\u811a</li> <li>gpio-ranges=&lt;&amp;pinctrl1 0 20 10&gt;\uff1a\u8868\u793a\u8be5 GPIO \u7684 0 ~ 9 \u5f15\u811a\u6620\u5c04\u5230 pinctrl1 \u7684 20 ~ 29 \u5f15\u811a</li> </ul>"},{"location":"linux/drivers/gpio/#_2","title":"\u6570\u636e\u7ed3\u6784","text":"<pre><code>struct gpio_device {\n    int         id;\n    struct device       dev;\n    struct cdev     chrdev;\n    struct device       *mockdev;\n    struct module       *owner;\n    struct gpio_chip    *chip;\n    struct gpio_desc    *descs;\n    int         base;\n    u16         ngpio;\n    const char      *label;\n    void            *data;\n    struct list_head        list;\n    struct blocking_notifier_head notifier;\n    struct rw_semaphore sem;\n\n#ifdef CONFIG_PINCTRL\n    /*\n     * If CONFIG_PINCTRL is enabled, then gpio controllers can optionally\n     * describe the actual pin range which they serve in an SoC. This\n     * information would be used by pinctrl subsystem to configure\n     * corresponding pins for gpio usage.\n     */\n    struct list_head pin_ranges;\n#endif\n};\n</code></pre> <p>\u6bcf\u4e2a GPIO controller \u90fd\u4f1a\u7528\u4e00\u4e2a<code>struct gpio_device</code>\u7ed3\u6784\u4f53\u6765\u8868\u793a\uff0c\u5176\u4e2d\uff1a</p> <ul> <li> <p>\u5728<code>struct gpio_chip</code>\u4e2d\u63d0\u4f9b\u5f15\u811a\u64cd\u4f5c\u51fd\u6570</p> </li> <li> <p>\u5728<code>struct gpio_desc</code>\u4e2d\u63d0\u4f9b\u6bcf\u4e2a\u5f15\u811a\u7684\u4fe1\u606f</p> </li> </ul> <pre><code>struct gpio_chip {\n    const char      *label;\n    struct gpio_device  *gpiodev;\n    struct device       *parent;\n    struct module       *owner;\n\n    int         (*request)(struct gpio_chip *gc,\n                        unsigned int offset);\n    void            (*free)(struct gpio_chip *gc,\n                        unsigned int offset);\n    int         (*get_direction)(struct gpio_chip *gc,\n                        unsigned int offset);\n    int         (*direction_input)(struct gpio_chip *gc,\n                        unsigned int offset);\n    int         (*direction_output)(struct gpio_chip *gc,\n                        unsigned int offset, int value);\n    int         (*get)(struct gpio_chip *gc,\n                        unsigned int offset);\n    int         (*get_multiple)(struct gpio_chip *gc,\n                        unsigned long *mask,\n                        unsigned long *bits);\n    void            (*set)(struct gpio_chip *gc,\n                        unsigned int offset, int value);\n    void            (*set_multiple)(struct gpio_chip *gc,\n                        unsigned long *mask,\n                        unsigned long *bits);\n    int         (*set_config)(struct gpio_chip *gc,\n                          unsigned int offset,\n                          unsigned long config);\n    int         (*to_irq)(struct gpio_chip *gc,\n                        unsigned int offset);\n\n    void            (*dbg_show)(struct seq_file *s,\n                        struct gpio_chip *gc);\n\n    int         (*init_valid_mask)(struct gpio_chip *gc,\n                           unsigned long *valid_mask,\n                           unsigned int ngpios);\n\n    int         (*add_pin_ranges)(struct gpio_chip *gc);\n\n    int         base;\n    u16         ngpio;\n    u16         offset;\n    const char      *const *names;\n    bool            can_sleep;\n};\n</code></pre> <p>label\uff1aGPIO\u63a7\u5236\u5668\u540d\u79f0</p> <p>gpiodevice\uff1aGPIO\u63a7\u5236\u5668\u8bbe\u5907</p> <p>parent\uff1aGPIO\u63a7\u5236\u5668\u7236\u8bbe\u5907</p> <p>base\uff1aGPIO\u5f15\u811a\u57fa\u503c</p> <p>ngpio\uff1aGPIO\u5f15\u811a\u6570\u91cf</p> <p>offset\uff1aGPIO\u5f15\u811a\u504f\u79fb</p> <p>names\uff1aGPIO\u5f15\u811a\u540d\u79f0</p> <p>can_sleep\uff1a\u662f\u5426\u53ef\u4ee5\u5728\u7761\u7720\u72b6\u6001\u4e0b\u8bbf\u95eeGPIO</p> <p>\u4f7f\u7528<code>gpiochip_add_data()</code>\u5b8f\u6765\u6ce8\u518c<code>struct gpio_chip</code>\u3002</p> <p>GPIO \u4e2d\u7684\u6bcf\u4e2a\u5f15\u811a\u90fd\u5bf9\u5e94\u4e00\u4e2a<code>struct gpio_desc</code>\uff0c\u5f15\u811a\u4fe1\u606f\u88ab\u4fdd\u5b58\u5728\u4e00\u4e2a\u94fe\u8868\u4e2d\uff1a</p> <pre><code>struct gpio_desc {\n    struct gpio_device  *gdev;\n    unsigned long       flags;\n/* flag symbols are bit numbers */\n#define FLAG_REQUESTED  0\n#define FLAG_IS_OUT 1\n#define FLAG_EXPORT 2   /* protected by sysfs_lock */\n#define FLAG_SYSFS  3   /* exported via /sys/class/gpio/control */\n#define FLAG_ACTIVE_LOW 6   /* value has active low */\n#define FLAG_OPEN_DRAIN 7   /* Gpio is open drain type */\n#define FLAG_OPEN_SOURCE 8  /* Gpio is open source type */\n#define FLAG_USED_AS_IRQ 9  /* GPIO is connected to an IRQ */\n#define FLAG_IRQ_IS_ENABLED 10  /* GPIO is connected to an enabled IRQ */\n#define FLAG_IS_HOGGED  11  /* GPIO is hogged */\n#define FLAG_TRANSITORY 12  /* GPIO may lose value in sleep or reset */\n#define FLAG_PULL_UP    13  /* GPIO has pull up enabled */\n#define FLAG_PULL_DOWN  14  /* GPIO has pull down enabled */\n#define FLAG_BIAS_DISABLE    15 /* GPIO has pull disabled */\n#define FLAG_EDGE_RISING     16 /* GPIO CDEV detects rising edge events */\n#define FLAG_EDGE_FALLING    17 /* GPIO CDEV detects falling edge events */\n#define FLAG_EVENT_CLOCK_REALTIME   18 /* GPIO CDEV reports REALTIME timestamps in events */\n\n    /* Connection label */\n    const char      *label;\n    /* Name of the GPIO */\n    const char      *name;\n#ifdef CONFIG_OF_DYNAMIC\n    struct device_node  *hog;\n#endif\n#ifdef CONFIG_GPIO_CDEV\n    /* debounce period in microseconds */\n    unsigned int        debounce_period_us;\n#endif\n};\n</code></pre> <p>gdev\uff1a\u5c5e\u4e8e\u54ea\u4e2aGPIO controller</p> <p>flags\uff1a\u6807\u5fd7\u4f4d\uff0c\u8868\u793a\u5f15\u811a\u7684\u72b6\u6001</p> <p>label\uff1a\u4e00\u822c\u7b49\u4e8e<code>struct gpio_chip</code>\u7684label</p> <p>name\uff1a\u5f15\u811a\u540d</p>"},{"location":"linux/drivers/gpio/#gpio_1","title":"GPIO\u51fd\u6570\u63a5\u53e3","text":"<p>GPIO \u7684\u51fd\u6570\u63a5\u53e3\u6709\u4e24\u5957\uff1alegacy \u6a21\u5f0f\u548c\u57fa\u4e8e descriptor \u7684\u3002\u7531\u4e8e\u7b2c\u4e00\u5957\u5df2\u88ab\u5e9f\u5f03\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u57fa\u4e8e descriptor \u7684\u3002</p>"},{"location":"linux/drivers/gpio/#gpio_2","title":"\u83b7\u53d6GPIO\u63cf\u8ff0\u7b26","text":"<pre><code>struct gpio_desc *gpiod_get(struct device *dev,\n                     const char *con_id,\n                     enum gpiod_flags flags);\nstruct gpio_desc *gpiod_get_index(struct device *dev,\n                           const char *con_id,\n                           unsigned int idx,\n                           enum gpiod_flags flags);\nstruct gpio_descs *gpiod_get_array(struct device *dev,\n                        const char *con_id,\n                        enum gpiod_flags flags);\n\nstruct gpio_desc *devm_gpiod_get(struct device *dev,\n                          const char *con_id,\n                          enum gpiod_flags flags);\nstruct gpio_desc *devm_gpiod_get_index(struct device *dev,\n                            const char *con_id,\n                            unsigned int idx,\n                            enum gpiod_flags flags);\nstruct gpio_descs *devm_gpiod_get_array(struct device *dev,\n                             const char *con_id,\n                             enum gpiod_flags flags);\n</code></pre> <p>\u5176\u4e2d gpiod_flags \u5982\u4e0b\uff1a <pre><code>enum gpiod_flags {\n    GPIOD_ASIS  = 0,\n    GPIOD_IN    = GPIOD_FLAGS_BIT_DIR_SET,\n    GPIOD_OUT_LOW   = GPIOD_FLAGS_BIT_DIR_SET | GPIOD_FLAGS_BIT_DIR_OUT,\n    GPIOD_OUT_HIGH  = GPIOD_FLAGS_BIT_DIR_SET | GPIOD_FLAGS_BIT_DIR_OUT |\n              GPIOD_FLAGS_BIT_DIR_VAL,\n    GPIOD_OUT_LOW_OPEN_DRAIN = GPIOD_OUT_LOW | GPIOD_FLAGS_BIT_OPEN_DRAIN,\n    GPIOD_OUT_HIGH_OPEN_DRAIN = GPIOD_OUT_HIGH | GPIOD_FLAGS_BIT_OPEN_DRAIN,\n};\n</code></pre></p> <p>\u91cd\u8981\u6807\u5fd7\u4f4d</p> <ul> <li>GPIOD_ASIS\uff1a\u4e0d\u521d\u59cb\u5316GPIO</li> <li>GPIOD_IN\uff1a\u5c06GPIO\u521d\u59cb\u5316\u4e3a\u8f93\u5165\u7aef</li> <li>GPIOD_OUT_LOW\uff1a\u5c06GPIO\u521d\u59cb\u5316\u4e3a\u8f93\u51fa\u7aef\uff0c\u5e76\u5c06\u503c\u8bbe\u7f6e\u4e3a0</li> <li>GPIOD_OUT_HIGH\uff1a\u5c06GPIO\u521d\u59cb\u5316\u4e3a\u8f93\u51fa\u7aef\uff0c\u5e76\u5c06\u503c\u8bbe\u7f6e\u4e3a1</li> </ul> <p>\u5047\u5982\u6709\u8bbe\u5907\u6811\u63cf\u8ff0\u5982\u4e0b\u6240\u793a\uff1a <pre><code>foo_device {\n    compatible = \"acme, foo\";\n    ...\n    led-gpios  &lt;&amp;gpioa 15 GPIO_ACTIVE_HIGH&gt;,    /*red*/\n               &lt;&amp;gpiob 16 GPIO_ACTIVE_HIGH&gt;,    /*green*/\n               &lt;&amp;gpioc 17 GPIO_ACTIVE_HIGH&gt;;    /*blue*/\n\n    power-gpios = &lt;&amp;gpiob 1 GPIO_ACTIVE_LOW&gt;;   \n};\n</code></pre></p> <p>\u8fd9\u91cc led-gpios \u4e2d\u7684 led \u5c31\u662f function\uff0c&amp;gpioa \u662f\u7279\u5b9a GPIO \u63a7\u5236\u5668\u8282\u70b9\u7684 pointer handle\uff0c\u6570\u5b57 15\u300116\u300117 \u662f\u6bcf\u4e2a GPIO \u63a7\u5236\u5668\u7684\u7f16\u53f7\uff0cGPIO_ACTIVE_HIGH \u5c31\u662f\u6807\u5fd7\u4f4d\u3002\u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u83b7\u53d6 GPIO \u8d44\u6e90\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a</p> <pre><code>struct gpio_desc *gpio_red = gpiod_get_index(dev, \"led\", 0, GPIO_ACTIVE_HIGH);\nstruct gpio_desc *gpio_green = gpiod_get_index(dev, \"led\", 1, GPIO_ACTIVE_HIGH);\nstruct gpio_desc *gpio_blue = gpiod_get_index(dev, \"led\", 2, GPIO_ACTIVE_HIGH);\nstruct gpio_desc *gpio_power = gpiod_get(dev, \"power\", GPIO_ACTIVE_LOW);\n</code></pre>"},{"location":"linux/drivers/gpio/#gpio_3","title":"\u8bbe\u7f6eGPIO\u65b9\u5411","text":"<p>\u7f16\u5199\u9700\u8981\u63a7\u5236 GPIO \u7684\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u5fc5\u987b\u6307\u5b9a\u65b9\u5411\u3002\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5e26 flags \u53c2\u6570\u7684<code>devm_gpio_get()</code>\u51fd\u6570\uff0c\u6216\u8005\u5982\u679c flags \u8bbe\u7f6e\u4e3a GPIOD_ASIS \u65f6\uff0c\u5c31\u53ef\u4ee5\u5728\u968f\u540e\u8c03\u7528<code>gpiod_direction_input()</code>\u6216<code>gpiod_direction_output()</code>\u6765\u8bbe\u7f6e\u65b9\u5411\uff1a</p> <pre><code>int gpiod_direction_input(struct gpio_desc *desc);\nint gpiod_direction_output(struct gpio_desc *desc, int value);\n</code></pre>"},{"location":"linux/drivers/gpio/#gpio_4","title":"\u83b7\u53d6GPIO\u7535\u5e73","text":"<pre><code>int gpiod_get_value(const struct gpio_desc *desc);\nvoid gpiod_set_value(struct gpio_desc *desc, int value);\n</code></pre> <p>Linux \u9a71\u52a8\u7a0b\u5e8f\u4e0d\u5173\u6ce8\u7269\u7406\u7535\u8def\u7684\u5b9e\u73b0\uff0c\u6240\u6709\u7684<code>gpoid_set_value_xxx()</code>\u51fd\u6570\u5747\u4f7f\u7528\u903b\u8f91\u503c\u8fdb\u884c\u64cd\u4f5c\u2014\u2014\u5c06\u53c2\u6570 value \u89e3\u91ca\u4e3a\u201c\u6709\u6548\u201d\uff08\u201c1\u201d\uff09\u6216\u8005\u201c\u65e0\u6548\u201d\uff08\u201c0\u201d\uff09\uff0c\u51fd\u6570\u4f1a\u81ea\u52a8\u5730\u8bbe\u7f6e\u54cd\u5e94\u7684\u7269\u7406\u7535\u8def\u3002</p> <p>\u5728 GPIO \u7684\u4e16\u754c\u4e2d\uff0c\u6709\u4e24\u79cd\u5e38\u89c1\u7684\u903b\u8f91\u7535\u5e73\uff1a</p> <ul> <li>\u9ad8\u7535\u5e73\u6709\u6548\uff08High Active\uff09\uff1a\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\uff0c\u903b\u8f91\u9ad8\uff08\u901a\u5e38\u662f1\u62163V\u4ee5\u4e0a\uff09\u8868\u793a\u5f15\u811a\u7684\u6fc0\u6d3b\u72b6\u6001\u3002</li> <li>\u4f4e\u7535\u5e73\u6709\u6548\uff08Low Active\uff09\uff1a\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\uff0c\u903b\u8f91\u4f4e\uff08\u901a\u5e38\u662f0V\u6216GND\uff09\u8868\u793a\u5f15\u811a\u7684\u6fc0\u6d3b\u72b6\u6001\u3002</li> </ul> <p>\u5982\u679c\u4e00\u6761\u7269\u7406\u7ebf\u8def\u88ab\u8bbe\u7f6e\u4e3a\u4f4e\u7535\u5e73\u6709\u6548\uff0c\u5f53\u8c03\u7528<code>gpio_set_value(gpio, 1)</code>\u65f6\uff0c\u4f1a\u81ea\u52a8\u8bbe\u7f6e\u7269\u7406\u7535\u8def\u4e3a\u4f4e\u7535\u5e73\u3002</p> <p>\u76f8\u5173\u51fd\u6570\u6c47\u603b</p> \u51fd\u6570\u540d \u7535\u5e73\u6709\u6548\u5c5e\u6027 \u7269\u7406\u7ebf\u8def gpiod_set_value(gpio, 0) \u9ad8\u7535\u5e73\u6709\u6548 \u914d\u7f6e\u4e3a\u4f4e\u7535\u5e73 gpiod_set_value(gpio, 1) \u9ad8\u7535\u5e73\u6709\u6548 \u914d\u7f6e\u4e3a\u9ad8\u7535\u5e73 gpiod_set_value(gpio, 0) \u4f4e\u7535\u5e73\u6709\u6548 \u914d\u7f6e\u4e3a\u9ad8\u7535\u5e73 gpiod_set_value(gpio, 1) \u4f4e\u7535\u5e73\u6709\u6548 \u914d\u7f6e\u4e3a\u4f4e\u7535\u5e73"},{"location":"linux/drivers/gpio/#gpio_5","title":"\u83b7\u53d6GPIO\u4e2d\u65ad\u53f7","text":"<p>\u4e2d\u65ad\u8bf7\u6c42\u53ef\u4ee5\u901a\u8fc7 GPIO \u89e6\u53d1\uff0c\u4f7f\u7528\u4ee5\u4e0b\u51fd\u6570\u83b7\u53d6\u4e0e\u7ed9\u5b9a GPIO \u5bf9\u5e94\u7684 irq \u53f7\uff1a <pre><code>int gpiod_to_irq(const struct gpio_desc *desc);\n</code></pre></p> <p>\u8be5\u51fd\u6570\u901a\u8fc7\u4f20\u9012\u4e00\u4e2a GPIO descriptor\uff0c\u8fd4\u56de irq \u53f7\uff0c\u5982\u679c\u8be5 GPIO \u6ca1\u6709\u4e0e\u4e2d\u65ad\u63a7\u5236\u5668\u8fde\u63a5\uff0c\u5219\u8fd4\u56de -EINVAL\u3002</p> <p>\u8be5\u51fd\u6570\u8fd4\u56de\u7684 irq \u53f7\u53ef\u4ee5\u7528\u5728<code>request_irq()</code>\u548c<code>free_irq()</code>\u51fd\u6570\u4e2d\u3002</p> <p>\u91ca\u653eGPIO\uff1a <pre><code>void gpiod_put(struct gpio_desc *desc);\nvoid gpiod_put_array(struct gpio_descs *descs);\n</code></pre></p>"},{"location":"linux/drivers/gpio/#pinctrl","title":"\u4e0ePinctrl\u5b50\u7cfb\u7edf\u4ea4\u4e92","text":"<ol> <li>\u5728 GPIO \u8bbe\u5907\u6811\u4e2d\u4f7f\u7528<code>gpio-ranges</code>\u6765\u63cf\u8ff0\u5b83\u4eec\u4e4b\u95f4\u7684\u8054\u7cfb</li> <li>\u89e3\u6790\u8fd9\u4e9b\u8054\u7cfb\uff0c\u5728\u6ce8\u518c<code>struct gpio-chip</code>\u65f6\u81ea\u52a8\u8c03\u7528</li> <li>\u5728 GPIO \u9a71\u52a8\u7a0b\u5e8f\u4e2d\uff0c\u63d0\u4f9b<code>gpio_chip-&gt;request</code>\u51fd\u6570\uff1b\u5728 Pinctrl \u5b50\u7cfb\u7edf\u4e2d\uff0c\u63d0\u4f9b<code>pmxops-&gt;gpio_request_enable()</code>\u51fd\u6570\u6216\u8005<code>pmxops-&gt;request()</code>\u51fd\u6570</li> </ol>"},{"location":"linux/drivers/gpio/#_3","title":"\u7b80\u5355\u793a\u4f8b","text":"<pre><code>#include &lt;linux/init.h&gt;\n#include &lt;linux/module.h&gt;\n#include &lt;linux/kernel.h&gt;\n#include &lt;linux/platform_device.h&gt;      /* For platform devices */\n#include &lt;linux/gpio/consumer.h&gt;        /* For GPIO Descriptor interface */\n#include &lt;linux/interrupt.h&gt;            /* For IRQ */\n#include &lt;linux/of.h&gt;                   /* For DT*/\n\n/*\n * Let us consider the bellow mapping\n *\n *    foo_device {\n *       compatible = \"packt,gpio-descriptor-sample\";\n *       led-gpios = &lt;&amp;gpio2 15 GPIO_ACTIVE_HIGH&gt;, // red \n *                   &lt;&amp;gpio2 16 GPIO_ACTIVE_HIGH&gt;, // green \n *\n *       btn1-gpios = &lt;&amp;gpio2 1 GPIO_ACTIVE_LOW&gt;;\n *       btn2-gpios = &lt;&amp;gpio2 1 GPIO_ACTIVE_LOW&gt;;\n *   };\n */\n\nstatic struct gpio_desc *red, *green, *btn1, *btn2;\nstatic int irq;\n\nstatic irqreturn_t btn1_pushed_irq_handler(int irq, void *dev_id)\n{\n    int state;\n\n    /* read the button value and change the led state */\n    state = gpiod_get_value(btn2);\n    gpiod_set_value(red, state);\n    gpiod_set_value(green, state);\n\n    pr_info(\"btn1 interrupt: Interrupt! btn2 state is %d)\\n\", state);\n    return IRQ_HANDLED;\n}\n\nstatic const struct of_device_id gpiod_dt_ids[] = {\n    { .compatible = \"packt,gpio-descriptor-sample\", },\n    { /* sentinel */ }\n};\n\n\nstatic int my_pdrv_probe (struct platform_device *pdev)\n{\n    int retval;\n    struct device *dev = &amp;pdev-&gt;dev;\n\n    /*\n     * We use gpiod_get/gpiod_get_index() along with the flags\n     * in order to configure the GPIO direction and an initial\n     * value in a single function call.\n     *\n     * One could have used:\n     *  red = gpiod_get_index(dev, \"led\", 0);\n     *  gpiod_direction_output(red, 0);\n     */\n    red = gpiod_get_index(dev, \"led\", 0, GPIOD_OUT_LOW);\n    green = gpiod_get_index(dev, \"led\", 1, GPIOD_OUT_LOW);\n\n    /*\n     * Configure Button GPIOs as input\n     *\n     * After this, one can call gpiod_set_debounce()\n     * only if the controller has the feature\n     * For example, to debounce  a button with a delay of 200ms\n     *  gpiod_set_debounce(btn1, 200);\n     */\n    btn1 = gpiod_get(dev, \"btn1\", GPIOD_IN);\n    btn2 = gpiod_get(dev, \"btn2\", GPIOD_IN);\n\n    irq = gpiod_to_irq(btn1);\n    retval = request_threaded_irq(irq, NULL,\n                            btn1_pushed_irq_handler,\n                            IRQF_TRIGGER_LOW | IRQF_ONESHOT,\n                            \"gpio-descriptor-sample\", NULL);\n    pr_info(\"Hello! device probed!\\n\");\n    return 0;\n}\n\nstatic int my_pdrv_remove(struct platform_device *pdev)\n{\n    free_irq(irq, NULL);\n    gpiod_put(red);\n    gpiod_put(green);\n    gpiod_put(btn1);\n    gpiod_put(btn2);\n    pr_info(\"good bye reader!\\n\");\n    return 0;\n}\n\nstatic struct platform_driver mypdrv = {\n    .probe      = my_pdrv_probe,\n    .remove     = my_pdrv_remove,\n    .driver     = {\n        .name     = \"gpio_descriptor_sample\",\n        .of_match_table = of_match_ptr(gpiod_dt_ids),  \n        .owner    = THIS_MODULE,\n    },\n};\nmodule_platform_driver(mypdrv);\n\nMODULE_AUTHOR(\"John Madieu &lt;john.madieu@gmail.com&gt;\");\nMODULE_LICENSE(\"GPL\");\n</code></pre>"},{"location":"linux/drivers/hardware/","title":"\u786c\u4ef6\u77e5\u8bc6","text":"<p>DRAM\u548cNAND Flash\u5360\u636e\u4e86\u5b58\u50a8\u82af\u7247\u768498%\u3002DRAM\u901f\u5ea6\u5f88\u5feb\uff0c\u4f46\u662f\u6389\u7535\u540e\u6570\u636e\u4f1a\u4e22\u5931\uff0cNAND Flash\u5b58\u50a8\u5bb9\u91cf\u5f88\u5927\uff0c\u6389\u7535\u4e4b\u540e\u6570\u636e\u4e5f\u4e0d\u4f1a\u4e22\u5931\u3002</p>"},{"location":"linux/drivers/i2c/","title":"I2C\u5b50\u7cfb\u7edf","text":""},{"location":"linux/drivers/i2c/#i2c_1","title":"I2C\u534f\u8bae","text":"<p>I2C \u603b\u7ebf\u4e3b\u8981\u7528\u4e8e\u77ed\u8ddd\u79bb\u3001\u4f4e\u901f\u7684\u82af\u7247\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\u5b83\u6709\u4e24\u6839\u4fe1\u53f7\u7ebf\uff0c\u6570\u636e\u7ebf SDA \u7528\u4e8e\u6536\u53d1\u6570\u636e\uff0c\u65f6\u949f\u7ebf SCL \u7528\u4e8e\u65f6\u949f\u540c\u6b65\u3002\u5c06\u82af\u7247\u4e0e\u603b\u7ebf\u5bf9\u5e94\u7684\u7ebf\u76f8\u8fde\u5373\u53ef\u901a\u4fe1\u3002</p> <p>I2C \u7269\u7406\u603b\u7ebf\u793a\u610f\u56fe\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>I2C \u652f\u6301\u4e3b\u4ece\u6a21\u5f0f\uff0c\u4e00\u4e2a\u4e3b\u8bbe\u5907\u3001\u591a\u4e2a\u4ece\u8bbe\u5907\uff0c\u5404\u8bbe\u5907\u5730\u5740\u72ec\u7acb\u3002\u4e3b\u8bbe\u5907\u8d1f\u8d23\u8c03\u5ea6\u603b\u7ebf\uff0c\u51b3\u5b9a\u67d0\u4e2a\u4e8b\u4ef6\u548c\u5176\u4e2d\u4e00\u4e2a\u4ece\u8bbe\u5907\u901a\u4fe1\uff0c\u5176\u4ed6\u4ece\u8bbe\u5907\u8981\u60f3\u901a\u4fe1\u53ea\u80fd\u7b49\u5f85\u3002\u5f53 SCL \u4e0e SDA \u540c\u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u4e3a\u7a7a\u95f2\u6001\u3002</p> <p>\u4e3b\u673a\u5728\u53d1\u9001\u8d77\u59cb\u4fe1\u53f7\u540e\uff0c\u5fc5\u987b\u5148\u53d1\u9001\u4e00\u4e2a\u5b57\u8282(8bit)\u7684\u6570\u636e\uff0c\u8be5\u6570\u636e\u7684\u524d7\u4f4d\u8868\u793a\u4ece\u673a\u5730\u5740\uff0c\u6700\u540e\u4e00\u4f4d\u8868\u793a\u5b57\u8282\u7684\u4f20\u9001\u65b9\u5411\u3002\u603b\u7ebf\u4e0a\u6240\u6709\u7684\u4ece\u673a\u90fd\u4f1a\u6536\u5230\u8be5\u6570\u636e\uff0c\u7136\u540e\u4e0e\u81ea\u5df1\u7684\u5730\u5740\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u7b26\u5408\u5c31\u8fd4\u56de\u4e00\u4e2a ACK \u4fe1\u53f7\uff0c\u518d\u6839\u636e\u6570\u636e\u4f20\u9001\u65b9\u5411\u5c06\u81ea\u5df1\u5b9a\u4f4d\u4e3a\u53d1\u9001\u5668\u6216\u8005\u63a5\u6536\u5668\u3002</p> <p>\u901a\u4fe1\u7279\u5f81\uff1a</p> <ul> <li>\u4e32\u884c\uff1a\u53ea\u6709\u4e00\u6839\u6570\u636e\u7ebf</li> <li>\u540c\u6b65\uff1a\u4e3b\u4ece\u8bbe\u5907\u5728\u540c\u4e00\u4e2a\u65f6\u949f\u9891\u7387\u4e0b\u5de5\u4f5c</li> <li>\u534a\u53cc\u5de5\uff1a\u53ea\u80fd\u5355\u5411\u901a\u4fe1\uff0c\u4e0d\u80fd\u540c\u65f6\u6536\u53d1\u6570\u636e</li> <li>\u975e\u5dee\u5206\uff1a\u56e0\u4e3aI2C\u901a\u4fe1\u901f\u7387\u4e0d\u9ad8\uff0c\u800c\u4e14\u901a\u4fe1\u53cc\u65b9\u8ddd\u79bb\u5f88\u8fd1\uff0c\u4e00\u822c\u662f\u677f\u7ea7\u901a\u4fe1\uff0c\u6240\u4ee5\u4f7f\u7528\u7535\u5e73\u4fe1\u53f7\u901a\u4fe1</li> <li>\u4f4e\u901f\u7387\uff1a\u4f20\u8f93\u7684\u6570\u636e\u91cf\u4e0d\u5927\uff0c\u672c\u8eab\u901a\u4fe1\u901f\u7387\u5f88\u4f4e</li> </ul> <p>I2C \u7684\u901a\u4fe1\u8fc7\u7a0b\uff1a</p> <ol> <li>\u5f00\u59cb\u4fe1\u53f7\uff08S\uff09\uff1aSDA \u7ebf\u4ece\u9ad8\u7535\u5e73\u5230\u4f4e\u7535\u5e73\u8df3\u53d8\uff0c\u540c\u65f6 SCL \u7ebf\u4fdd\u6301\u9ad8\u7535\u5e73\u3002</li> <li>\u53d1\u9001\u5730\u5740\u548c\u8bfb/\u5199\u4f4d\uff1a\u4e3b\u8bbe\u5907\u901a\u8fc7 SDA \u7ebf\u53d1\u9001\u4e00\u4e2a7\u4f4d\u8bbe\u5907\u5730\u5740\uff0c\u540e\u9762\u8ddf\u7740\u4e00\u4e2a\u8bfb/\u5199\u4f4d\u3002</li> <li>\u54cd\u5e94\u4fe1\u53f7(ACK)\uff1a\u6bcf\u4e00\u6b21\u4f20\u8f93\u5fc5\u987b\u4f34\u6709\u4e00\u4e2a\u54cd\u5e94\u4fe1\u53f7\uff0c\u5728 SCL \u4e3a\u9ad8\u65f6\uff0c\u901a\u8fc7\u62c9\u4f4e SDA \u5e76\u4fdd\u6301\u4f4e\u6765\u5b9e\u73b0\u3002\u5982\u679c\u4ece\u8bbe\u5907\u5fd9\uff0c\u5b83\u53ef\u4ee5\u4f7f SCL \u4fdd\u6301\u5728\u4f4e\u7535\u5e73\uff0c\u8fd9\u4f1a\u5f3a\u5236\u4f7f\u4e3b\u8bbe\u5907\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\u3002\u5f53\u4ece\u8bbe\u5907\u7a7a\u95f2\u540e\uff0c\u5e76\u4e14\u91ca\u653e\u65f6\u949f\u7ebf\uff0c\u539f\u6765\u7684\u6570\u636e\u4f20\u8f93\u624d\u4f1a\u7ee7\u7eed\u3002</li> <li>\u6570\u636e\u4f20\u8f93\uff1aSCL \u4e3a\u4f4e\u7535\u5e73\u65f6\uff0cSDA \u53ef\u4ee5\u53d8\u5316\u9ad8\u4f4e\u7535\u5e73\u6765\u4f20\u8f93\u6570\u636e\u3002</li> <li>\u6570\u636e\u8bfb\u53d6\uff1aSCL \u4e3a\u9ad8\u7535\u5e73\u65f6\uff0c\u8bfb\u53d6\u4e00\u4f4d\u6570\u636e\uff0cSDA \u4e0d\u5141\u8bb8\u53d8\u5316\u3002</li> <li>\u505c\u6b62\u4fe1\u53f7(P)\uff1a\u6570\u636e\u4f20\u8f93\u7ed3\u675f\u65f6\uff0cSDA \u7ebf\u4ece\u4f4e\u7535\u5e73\u5230\u9ad8\u7535\u5e73\u7684\u8df3\u53d8\uff0c\u540c\u65f6 SCL \u7ebf\u4fdd\u6301\u9ad8\u7535\u5e73\uff0c\u8868\u793a\u901a\u4fe1\u7ed3\u675f\u3002</li> </ol> <p></p> <p>\u8fde\u7eed\u5b57\u8282\u7684\u5199\u5165\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p>"},{"location":"linux/drivers/i2c/#_1","title":"\u8bbe\u5907\u6811\u63cf\u8ff0","text":"<pre><code>i2c0: i2c@fdd40000 {\n    compatible = \"rockchip,rk3568-i2c\", \"rockchip,rk3399-i2c\";\n    reg = &lt;0x0 0xfdd40000 0x0 0x1000&gt;;\n    interrupts = &lt;GIC_SPI 46 IRQ_TYPE_LEVEL_HIGH&gt;;\n    clocks = &lt;&amp;pmucru CLK_I2C0&gt;, &lt;&amp;pmucru PCLK_I2C0&gt;;\n    clock-names = \"i2c\", \"pclk\";\n    pinctrl-0 = &lt;&amp;i2c0_xfer&gt;;\n    pinctrl-names = \"default\";\n    #address-cells = &lt;1&gt;;\n    #size-cells = &lt;0&gt;;\n    status = \"disabled\";\n};\n</code></pre>"},{"location":"linux/drivers/i2c/#i2c_2","title":"I2C\u6846\u67b6","text":"<p>\u4e0b\u9762\u7b80\u8981\u8bf4\u660e I2C \u6846\u67b6\u7684\u6d41\u7a0b\uff1a</p> <ol> <li>\u5c06\u8bbe\u5907\u6811\u4e2d\u7684 I2C \u8282\u70b9\u5c55\u5f00\u4e3a\u5e73\u53f0\u8bbe\u5907\uff0c\u7ecf\u8fc7\u4e0e\u5e73\u53f0\u9a71\u52a8\u5339\u914d\u6210\u529f\u540e\uff0c\u751f\u6210<code>i2c_adapter</code>\u7ed3\u6784\u4f53(i2c@40005400)\u7136\u540e\u6ce8\u518c\u5230 I2C \u603b\u7ebf\u4e2d\u3002</li> <li>\u904d\u5386<code>i2c_adapter</code>\u5bf9\u8c61\u7684\u5b50\u8282\u70b9(eeprom@50\u3001sensor@68)\uff0c\u751f\u6210<code>i2c_client</code>\u5bf9\u8c61\u3002</li> <li>\u5f53\u6709 I2C \u8bbe\u5907\u9a71\u52a8\u6ce8\u518c\u65f6\uff0c\u904d\u5386 I2C \u603b\u7ebf\u4e0a\u7684\u6240\u6709<code>i2c_adapter</code>\u4ee5\u53ca<code>i2c_client</code>\uff0c\u5982\u679c\u5339\u914d\u5219\u8c03\u7528\u9a71\u52a8\u7684<code>probe()</code>\u51fd\u6570\uff0c\u5b8c\u6210\u9a71\u52a8\u7a0b\u5e8f\u7684\u521d\u59cb\u5316\u3002</li> </ol> <p>I2C \u4ece\u673a\u8bbe\u5907\u9a71\u52a8</p> <ul> <li>I2C \u6838\u5fc3\uff1a\u7ba1\u7406 I2C \u9a71\u52a8\u548c I2C \u8bbe\u5907\u7684\u5339\u914d\u3001\u5220\u9664 </li> <li>I2C \u8bbe\u5907\uff1aI2C \u786c\u4ef6\u8bbe\u5907\u7684\u62bd\u8c61</li> <li>I2C \u9a71\u52a8\uff1aI2C \u8bbe\u5907\u7684\u9a71\u52a8\u7a0b\u5e8f</li> <li>I2C \u9002\u914d\u5668\uff1aI2C \u63a7\u5236\u5668\uff0c\u7528\u4e8e\u9a71\u52a8\u548c\u8bbe\u5907\u4e4b\u95f4\u7684\u901a\u4fe1</li> </ul>"},{"location":"linux/drivers/i2c/#_2","title":"\u6570\u636e\u7ed3\u6784","text":""},{"location":"linux/drivers/i2c/#i2c_3","title":"I2C\u603b\u7ebf\u9a71\u52a8","text":"<p><code>struct i2c_adapter</code>\u7528\u4e8e\u63cf\u8ff0\u4e00\u4e2a\u7279\u5b9a\u7684 I2C \u603b\u7ebf\u63a7\u5236\u5668\uff1a</p> <pre><code>struct i2c_adapter {\n    struct module *owner;\n    unsigned int class;       /* classes to allow probing for */\n    const struct i2c_algorithm *algo; /* the algorithm to access the bus */\n    void *algo_data;\n\n    /* data fields that are valid for all devices   */\n    const struct i2c_lock_operations *lock_ops;\n    struct rt_mutex bus_lock;\n    struct rt_mutex mux_lock;\n\n    int timeout;            /* in jiffies */\n    int retries;\n    struct device dev;      /* the adapter device */\n    unsigned long locked_flags; /* owned by the I2C core */\n#define I2C_ALF_IS_SUSPENDED        0\n#define I2C_ALF_SUSPEND_REPORTED    1\n\n    int nr;\n    char name[48];\n    struct completion dev_released;\n\n    struct mutex userspace_clients_lock;\n    struct list_head userspace_clients;\n\n    struct i2c_bus_recovery_info *bus_recovery_info;\n    const struct i2c_adapter_quirks *quirks;\n\n    struct irq_domain *host_notify_domain;\n    struct regulator *bus_regulator;\n};\n</code></pre> <p><code>struct i2c_adapter</code>\u4e2d\u6700\u91cd\u8981\u7684\u6210\u5458\u2014\u2014<code>struct i2c_algorithm</code>\uff0c\u5b83\u89c4\u5b9a\u4e86 I2C \u63a7\u5236\u5668\u4e0e I2C \u8bbe\u5907\u4e4b\u95f4\u901a\u4fe1\u7684\u7b97\u6cd5\uff0c\u800c<code>MASTER_XFER()</code>\u51fd\u6570\uff0c\u7528\u6765\u89c4\u5b9a\u5982\u4f55\u5c06\u6570\u636e\u53d1\u9001\u5230 I2C \u8bbe\u5907\uff1a <pre><code>struct i2c_algorithm {\n    /*\n     * If an adapter algorithm can't do I2C-level access, set master_xfer\n     * to NULL. If an adapter algorithm can do SMBus access, set\n     * smbus_xfer. If set to NULL, the SMBus protocol is simulated\n     * using common I2C messages.\n     *\n     * master_xfer should return the number of messages successfully\n     * processed, or a negative value on error\n     */\n    int (*master_xfer)(struct i2c_adapter *adap, struct i2c_msg *msgs,\n               int num);\n    int (*master_xfer_atomic)(struct i2c_adapter *adap,\n                   struct i2c_msg *msgs, int num);\n    int (*smbus_xfer)(struct i2c_adapter *adap, u16 addr,\n              unsigned short flags, char read_write,\n              u8 command, int size, union i2c_smbus_data *data);\n    int (*smbus_xfer_atomic)(struct i2c_adapter *adap, u16 addr,\n                 unsigned short flags, char read_write,\n                 u8 command, int size, union i2c_smbus_data *data);\n\n    /* To determine what the adapter supports */\n    u32 (*functionality)(struct i2c_adapter *adap);\n\n#if IS_ENABLED(CONFIG_I2C_SLAVE)\n    int (*reg_slave)(struct i2c_client *client);\n    int (*unreg_slave)(struct i2c_client *client);\n#endif\n};\n</code></pre></p> <p>master_xfer\uff1a\u4f5c\u4e3a\u4e3b\u8bbe\u5907\u65f6\u7684\u53d1\u9001\u51fd\u6570</p> <p>smbus_xfer\uff1a\u5b9e\u73b0SMBus\u534f\u8bae\u7684\u53d1\u9001\u51fd\u6570</p> <p><code>struct i2c_algorithm</code>\u4e2d\u7684\u901a\u4fe1\u51fd\u6570\u4ee5<code>struct i2c_msg</code>\u4e3a\u57fa\u672c\u5355\u4f4d\uff1a</p> <pre><code>struct i2c_msg {\n    __u16 addr;\n    __u16 flags;\n#define I2C_M_RD        0x0001  /* guaranteed to be 0x0001! */\n#define I2C_M_TEN       0x0010  /* use only if I2C_FUNC_10BIT_ADDR */\n#define I2C_M_DMA_SAFE      0x0200  /* use only in kernel space */\n#define I2C_M_RECV_LEN      0x0400  /* use only if I2C_FUNC_SMBUS_READ_BLOCK_DATA */\n#define I2C_M_NO_RD_ACK     0x0800  /* use only if I2C_FUNC_PROTOCOL_MANGLING */\n#define I2C_M_IGNORE_NAK    0x1000  /* use only if I2C_FUNC_PROTOCOL_MANGLING */\n#define I2C_M_REV_DIR_ADDR  0x2000  /* use only if I2C_FUNC_PROTOCOL_MANGLING */\n#define I2C_M_NOSTART       0x4000  /* use only if I2C_FUNC_NOSTART */\n#define I2C_M_STOP      0x8000  /* use only if I2C_FUNC_PROTOCOL_MANGLING */\n    __u16 len;\n    __u8 *buf;\n};\n</code></pre> <p>addr\uff1a\u4ece\u8bbe\u5907\u5730\u5740</p> <p>flags\uff1a\u6807\u5fd7\u4f4d</p> <p>len\uff1a\u4f20\u8f93\u6570\u636e\u7684\u957f\u5ea6</p> <p>buf\uff1a\u4f20\u8f93\u6570\u636e\u7f13\u51b2\u533a</p>"},{"location":"linux/drivers/i2c/#i2c_4","title":"I2C\u8bbe\u5907\u9a71\u52a8","text":"<p><code>struct i2c_client</code>\u8868\u793a\u6302\u8f7d\u5230 I2C \u603b\u7ebf\u4e0a\u7684\u8bbe\u5907\uff0c\u662f\u5177\u4f53\u786c\u4ef6\u8bbe\u5907\u7684\u62bd\u8c61\uff1a</p> <pre><code>struct i2c_client {\n    unsigned short flags;       /* div., see below      */\n    unsigned short addr;        /* chip address - NOTE: 7bit    */\n    char name[I2C_NAME_SIZE];\n    struct i2c_adapter *adapter;    /* the adapter we sit on    */\n    struct device dev;      /* the device structure     */\n    int init_irq;           /* irq set at initialization    */\n    int irq;            /* irq issued by device     */\n    struct list_head detected;\n#if IS_ENABLED(CONFIG_I2C_SLAVE)\n    i2c_slave_cb_t slave_cb;    /* callback for slave mode  */\n#endif\n    void *devres_group_id;      /* ID of probe devres group */\n};\n</code></pre> <p><code>struct i2c_driver</code>\u8868\u793a I2C \u8bbe\u5907\u6240\u5bf9\u5e94\u7684\u9a71\u52a8\u7a0b\u5e8f\uff1a</p> <pre><code>struct i2c_driver {\n    unsigned int class;\n\n    /* Standard driver model interfaces */\n    int (*probe)(struct i2c_client *client, const struct i2c_device_id *id);\n    int (*remove)(struct i2c_client *client);\n\n    /* New driver model interface to aid the seamless removal of the\n     * current probe()'s, more commonly unused than used second parameter.\n     */\n    int (*probe_new)(struct i2c_client *client);\n\n    /* driver model interfaces that don't relate to enumeration  */\n    void (*shutdown)(struct i2c_client *client);\n\n    /* Alert callback, for example for the SMBus alert protocol.\n     * The format and meaning of the data value depends on the protocol.\n     * For the SMBus alert protocol, there is a single bit of data passed\n     * as the alert response's low bit (\"event flag\").\n     * For the SMBus Host Notify protocol, the data corresponds to the\n     * 16-bit payload data reported by the slave device acting as master.\n     */\n    void (*alert)(struct i2c_client *client, enum i2c_alert_protocol protocol,\n              unsigned int data);\n\n    /* a ioctl like command that can be used to perform specific functions\n     * with the device.\n     */\n    int (*command)(struct i2c_client *client, unsigned int cmd, void *arg);\n\n    struct device_driver driver;\n    const struct i2c_device_id *id_table;\n\n    /* Device detection callback for automatic device creation */\n    int (*detect)(struct i2c_client *client, struct i2c_board_info *info);\n    const unsigned short *address_list;\n    struct list_head clients;\n};\n</code></pre> <p>\u5728\u5e73\u53f0\u8bbe\u5907\u9a71\u52a8\u4e00\u7ae0\u4e2d\u6211\u4eec\u63cf\u8ff0\u4e86\u5e73\u53f0\u603b\u7ebf\u7684\u6982\u5ff5\uff0cI2C \u603b\u7ebf\u6709\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u7528\u6765\u7ba1\u7406 I2C \u8bbe\u5907\u548c I2C \u9a71\u52a8\u7684\u5339\u914d\u548c\u5220\u9664\u64cd\u4f5c\uff1a</p> <pre><code>/*drivers/i2c/i2c-core.c*/\nstruct bus_type i2c_bus_type = {\n    .name       = \"i2c\",\n    .match      = i2c_device_match,\n    .probe      = i2c_device_probe,\n    .remove     = i2c_device_remove,\n    .shutdown   = i2c_device_shutdown,\n};\n</code></pre> <p>\u591a\u4e2a\u8bbe\u5907\u53ef\u4ee5\u6302\u5728\u540c\u4e00\u4e2a I2C \u603b\u7ebf\u4e0a\uff0cI2C \u603b\u7ebf\u9a71\u52a8\u7531\u82af\u7247\u5382\u5546\u63d0\u4f9b\u3002</p>"},{"location":"linux/drivers/i2c/#i2c_5","title":"I2C\u51fd\u6570\u63a5\u53e3","text":"<p>\u5411\u5185\u6838\u6ce8\u518c/\u6ce8\u9500\u4e00\u4e2a<code>i2c_adapter</code>\uff1a <pre><code>int i2c_add_adapter(struct i2c_adapter *adap);\nint i2c_del_adapter(struct i2c_adapter *adap);\n</code></pre></p> <p>\u6ce8\u518c/\u6ce8\u9500\u4e00\u4e2a I2C \u9a71\u52a8\uff1a <pre><code>int i2c_add_driver(struct i2c_driver *driver);\nint i2c_del_driver(struct i2c_driver *driver);\n</code></pre></p> <p>\u6536\u53d1\u6570\u636e\uff1a <pre><code>int i2c_master_send(struct i2c_client *client, const char *buf, int count);\nint i2c_master_recv(struct i2c_client *client, char *buf, int count);\n</code></pre></p>"},{"location":"linux/drivers/i2c/#i2c-tools","title":"\u4f7f\u7528i2c tools","text":"<p>i2c tools \u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u53ef\u4ee5\u7528\u6765\u64cd\u4f5c I2C \u8bbe\u5907\u3002\u8f93\u5165<code>sudo apt install i2c-tools</code>\u5b89\u88c5\u3002</p> <ul> <li>i2cdetect\uff1a\u626b\u63cf I2C \u603b\u7ebf\u4e0a\u7684\u8bbe\u5907</li> </ul> <pre><code>Usage: i2cdetect [-y] [-a] [-q|-r] I2CBUS [FIRST LAST]\n       i2cdetect -F I2CBUS\n       i2cdetect -l\n  I2CBUS is an integer or an I2C bus name\n  If provided, FIRST and LAST limit the probing range.\n\n  y:\u5173\u95ed\u4ea4\u4e92\u5f0f\uff0c\u4e0d\u4f1a\u663e\u793a\u8b66\u544a\u4fe1\u606f\n  a:\u626b\u63cf\u603b\u7ebf\u4e0a\u6240\u6709\u8bbe\u5907\n  q:\u4f7f\u7528SMBus\u7684\"quick write\"\u547d\u4ee4\u8fdb\u884c\u68c0\u6d4b\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\n  r:\u4f7f\u7528SMBus\u7684\"receive byte\"\u547d\u4ee4\u8fdb\u884c\u68c0\u6d4b\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\n  i2cbus:\u6307\u5b9a\u67e5\u8be2\u67d0\u4e2a\u603b\u7ebf\u7f16\u53f7\n  first\u3001last\uff1a\u626b\u63cf\u7684\u5730\u5740\u8303\u56f4\n</code></pre> <ul> <li>i2cset\uff1a\u5411 I2C \u8bbe\u5907\u67d0\u4e2a\u5bc4\u5b58\u5668\u5199\u5165\u503c</li> </ul> <pre><code>Usage: i2cset [-f] [-y] [-m MASK] [-r] [-a] I2CBUS CHIP-ADDRESS DATA-ADDRESS [VALUE] ... [MODE]\n  I2CBUS is an integer or an I2C bus name\n  ADDRESS is an integer (0x03 - 0x77, or 0x00 - 0x7f if -a is given)\n  MODE is one of:\n    c (byte, no value)\n    b (byte data, default)\n    w (word data)\n    i (I2C block data)\n    s (SMBus block data)\n    Append p for SMBus PEC\n\n    f:\u5f3a\u5236\u8bbf\u95ee\n    y:\u6307\u4ee4\u6267\u884c\u81ea\u52a8yes\uff0c\u5426\u5219\u4f1a\u63d0\u793a\u786e\u8ba4\u6267\u884cContinue? [Y/n] Y\uff0c\u4e0d\u52a0\u53c2\u6570y\u4f1a\u6709\u5f88\u591a\u6267\u884c\u63d0\u793a\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5224\u65ad\n    r:\u5199\u5165\u540e\u7acb\u5373\u56de\u8bfb\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5e76\u5c06\u7ed3\u679c\u4e0e\u5199\u5165\u7684\u503c\u8fdb\u884c\u6bd4\u8f83\n    i2cbus\uff1a\u603b\u7ebf\u7f16\u53f7\n    chip-address:i2c\u8bbe\u5907\u5730\u5740\n    data-address:i2c\u5bc4\u5b58\u5668\u5730\u5740\n    value \u8981\u5199\u5165\u7684\u503c\n    mode\uff1a\u6307\u5b9a\u8bfb\u53d6\u7684\u5927\u5c0f\uff0cb\u5b57\u8282\uff0cw\u5b57\uff0cs\u662fSMBus\u5757\uff0ci\u662fi2c\u5757\n</code></pre> <ul> <li>i2cget\uff1a\u4ece I2C \u8bbe\u5907\u67d0\u4e2a\u5bc4\u5b58\u5668\u8bfb\u53d6\u503c</li> </ul> <pre><code>Usage: i2cget [-f] [-y] [-a] I2CBUS CHIP-ADDRESS [DATA-ADDRESS [MODE]]\n  I2CBUS is an integer or an I2C bus name\n  ADDRESS is an integer (0x03 - 0x77, or 0x00 - 0x7f if -a is given)\n  MODE is one of:\n    b (read byte data, default)\n    w (read word data)\n    c (write byte/read byte)\n    Append p for SMBus PEC\n\n    f:\u5f3a\u5236\u8bbf\u95ee\n    y:\u5173\u95ed\u4ea4\u4e92\u6a21\u5f0f\uff0c\u4e0d\u4f1a\u63d0\u793a\u8b66\u544a\u4fe1\u606f\n    i2cbus:\u603b\u7ebf\u7f16\u53f7\n    chip-address:i2c\u8bbe\u5907\u5730\u5740\n    data-address:i2c\u5bc4\u5b58\u5668\u5730\u5740\n    mode:\u6307\u5b9a\u8bfb\u53d6\u7684\u5927\u5c0f\uff0cb\u5b57\u8282\uff0cw\u5b57\uff0cs\u662fSMBus\u5757\uff0ci\u662fi2c\u5757\n</code></pre> <ul> <li>i2cdump\uff1a\u8bfb\u53d6\u67d0\u4e2a I2C \u8bbe\u5907\u6240\u6709\u5bc4\u5b58\u5668\u7684\u503c</li> </ul> <pre><code>Usage: i2cdump [-f] [-y] [-r first-last] [-a] I2CBUS ADDRESS [MODE [BANK [BANKREG]]]\n  I2CBUS is an integer or an I2C bus name\n  ADDRESS is an integer (0x03 - 0x77, or 0x00 - 0x7f if -a is given)\n  MODE is one of:\n    b (byte, default)\n    w (word)\n    W (word on even register addresses)\n    s (SMBus block)\n    i (I2C block)\n    c (consecutive byte)\n    Append p for SMBus PEC\n\n    r:\u6307\u5b9a\u5bc4\u5b58\u5668\u8303\u56f4\uff0c\u53ea\u80fd\u626b\u63cf\u4ece first \u5230 last \u533a\u57df\n    f:\u5f3a\u5236\u8bbf\u95ee\u8bbe\u5907\n    y:\u5173\u95ed\u4eba\u673a\u4ea4\u4e92\u6a21\u5f0f\n    i2cbus:\u603b\u7ebf\u7f16\u53f7\n    address:\u6307\u5b9a\u8bbe\u5907\u5730\u5740\n    mode:\u6307\u5b9a\u8bfb\u53d6\u7684\u5927\u5c0f\uff0cb\u5b57\u8282\uff0cw\u5b57\uff0cs\u662fSMBus\u5757\uff0ci\u662fi2c\u5757\n</code></pre> <p>\u4e00\u822c\u5bc4\u5b58\u5668\u90fd\u662f8\u4f4d\u5730\u5740\u7684\uff0ci2cdump\u3001i2cget\u3001i2cset\u4e5f\u662f\u8bbe\u7f6e\u8bfb\u53d68\u4f4d\u7684\u5730\u5740\uff0c\u5982\u679c\u4e00\u6b21\u8d85\u8fc78\u4f4d\uff0c\u9700\u8981\u7528i2ctransfer\u3002</p> <ul> <li>i2ctransfer\uff1a\u4e00\u6b21\u6027\u8bfb\u5199\u591a\u4e2a\u5b57\u8282</li> </ul> <pre><code>Usage: i2ctransfer [-f] [-y] [-v] [-V] [-a] I2CBUS DESC [DATA] [DESC [DATA]]...\n  I2CBUS is an integer or an I2C bus name\n  DESC describes the transfer in the form: {r|w}LENGTH[@address]\n    1) read/write-flag 2) LENGTH (range 0-65535) 3) I2C address (use last one if omitted)\n  DATA are LENGTH bytes for a write message. They can be shortened by a suffix:\n    = (keep value constant until LENGTH)\n    + (increase value by 1 until LENGTH)\n    - (decrease value by 1 until LENGTH)\n    p (use pseudo random generator until LENGTH with value as seed)\n</code></pre>"},{"location":"linux/drivers/i2c/#_3","title":"\u7b80\u5355\u793a\u4f8b","text":"<pre><code>#include &lt;linux/version.h&gt;\n#include &lt;linux/module.h&gt;\n#include &lt;linux/init.h&gt;\n#include &lt;linux/kernel.h&gt;\n#include &lt;linux/slab.h&gt;\n#include &lt;linux/fs.h&gt;\n#include &lt;linux/errno.h&gt;\n#include &lt;linux/cdev.h&gt;\n#include &lt;linux/device.h&gt;\n#include &lt;linux/mutex.h&gt;\n#include &lt;linux/i2c.h&gt;\n#include &lt;linux/delay.h&gt;\n#include &lt;asm/uaccess.h&gt;\n\n/* \n * The structure to represent 'eep_dev' devices.\n *  data - data buffer;\n *  buffer_size - size of the data buffer;\n *  block_size - maximum number of bytes that can be read or written \n *    in one call;\n *  eep_mutex - a mutex to protect the fields of this structure;\n *  cdev - character device structure.\n */\nstruct eep_dev {\n    unsigned char *data;\n    struct i2c_client *client;\n    struct mutex eep_mutex;\n    int current_pointer;\n    struct cdev cdev;\n};\n\n#define EEP_DEVICE_NAME     \"packt-mem\"\n#define EEP_PAGE_SIZE           128\n#define EEP_SIZE            1024*64 /* 24LC512 is 64KB sized */\n\n\nstatic unsigned int eep_major = 0;\nstatic unsigned int minor = 0;\nstatic struct class *eep_class = NULL;\n\nint  eep_open(struct inode *inode, struct file *filp)\n{\n    struct eep_dev *dev = NULL;\n    dev = container_of(inode-&gt;i_cdev, struct eep_dev, cdev);\n\n    if (dev == NULL){\n        pr_err(\"Container_of did not found any valid data\\n\");\n        return -ENODEV; /* No such device */\n    }\n    dev-&gt;current_pointer = 0;\n    /* store a pointer to struct eep_dev here for other methods */\n    filp-&gt;private_data = dev;\n\n    if (inode-&gt;i_cdev != &amp;dev-&gt;cdev){\n        pr_err(\"Device open: internal error\\n\");\n        return -ENODEV; /* No such device */\n    }\n\n    dev-&gt;data = (unsigned char*)kzalloc(EEP_SIZE, GFP_KERNEL);\n    if (dev-&gt;data == NULL){\n        pr_err(\"Error allocating memory\\n\");\n        return -ENOMEM;\n    }\n    return 0;\n}\n\n/*\n * Release is called when device node is closed\n */\nint eep_release(struct inode *inode, struct file *filp)\n{\n    struct eep_dev *dev = filp-&gt;private_data;\n    if (dev-&gt;data != NULL){\n        kfree(dev-&gt;data);\n        dev-&gt;data = NULL ;\n    }\n    dev-&gt;current_pointer = 0;\n    return 0;\n}\n\nssize_t  eep_read(struct file *filp, char __user *buf,\n                    size_t count, loff_t *f_pos)\n{\n    int _reg_addr;\n    u8 reg_addr[2];\n    struct i2c_msg msg[2];\n    struct eep_dev *dev = filp-&gt;private_data;\n    ssize_t retval = 0;\n\n    if (mutex_lock_killable(&amp;dev-&gt;eep_mutex))\n        return -EINTR;\n\n    if (*f_pos &gt;= EEP_SIZE) /* EOF */\n        goto end_read;\n\n    if(dev-&gt;current_pointer &gt;= EEP_SIZE){\n        retval = 0; /* EOF */\n        goto end_read;\n     }\n\n    if (dev-&gt;current_pointer + count &gt; EEP_SIZE)\n        count = EEP_SIZE - dev-&gt;current_pointer;\n\n    if (count &gt; EEP_SIZE)\n        count = EEP_SIZE;\n\n    _reg_addr = dev-&gt;current_pointer;\n    reg_addr[0] = (u8)(_reg_addr &gt;&gt; 8);\n    reg_addr[1] = (u8)(_reg_addr &amp; 0xFF);\n\n    msg[0].addr = dev-&gt;client-&gt;addr;\n    msg[0].flags = 0;                    /* Write */\n    msg[0].len = 2;                      /* Address is 2byte coded */\n    msg[0].buf = reg_addr;          \n    msg[1].addr = dev-&gt;client-&gt;addr;\n    msg[1].flags = I2C_M_RD;             /* We need to read */\n    msg[1].len = count; \n    msg[1].buf = dev-&gt;data;\n\n    if (i2c_transfer(dev-&gt;client-&gt;adapter, msg, 2) &lt; 0)\n        pr_err(\"ee24lc512: i2c_transfer failed\\n\"); \n\n    if(copy_to_user(buf, dev-&gt;data, count) != 0){\n        retval = -EIO;\n        goto end_read;\n    }\n\n    retval = count;\n    dev-&gt;current_pointer += count ;\n\nend_read:\n    mutex_unlock(&amp;dev-&gt;eep_mutex);\n    return retval;\n}\n\nint transacWrite(struct eep_dev *dev,\n        int _reg_addr, unsigned char *data,\n        int offset, unsigned int len)\n{    \n    unsigned char tmp[len + 2];\n    struct i2c_msg msg[1];\n\n    tmp[0] =  (u8)(_reg_addr &gt;&gt; 8);\n    tmp[1] =  (u8)(_reg_addr &amp; 0xFF);\n    memcpy (tmp + 2, &amp;(data[offset]), len);\n    msg[0].addr = dev-&gt;client-&gt;addr;\n    msg[0].flags = 0;                    /* Write */\n    msg[0].len = len + 2; /* Address is 2 bytes coded */\n    msg[0].buf = tmp;\n\n    if (i2c_transfer(dev-&gt;client-&gt;adapter, msg, 1) &lt; 0){\n        pr_err(\"ee24lc512: i2c_transfer failed\\n\");  \n        return -1;\n     }\n     return len;  \n}\n\nssize_t  eep_write(struct file *filp, const char __user *buf,\n                    size_t count,  loff_t *f_pos)\n{\n    int _reg_addr, offset, remain_in_page, nb_page, last_remain, i;\n    struct eep_dev *dev = filp-&gt;private_data;\n    ssize_t retval = 0;\n\n    if (mutex_lock_killable(&amp;dev-&gt;eep_mutex))\n        return -EINTR;\n\n    if(dev-&gt;current_pointer &gt;= EEP_SIZE){\n        retval = -EINVAL;\n        goto end_write;\n    }\n\n    if (*f_pos &gt;= EEP_SIZE) {\n        /* Writing beyond the end of the buffer is not allowed. */\n        retval = -EINVAL;\n        goto end_write;\n    }\n\n    if (dev-&gt;current_pointer + count &gt;= EEP_SIZE)\n        count = EEP_SIZE - dev-&gt;current_pointer;\n\n    if (count &gt; EEP_SIZE)\n        count = EEP_SIZE;\n\n    if (copy_from_user(dev-&gt;data, buf, count) != 0){\n        retval = -EFAULT;\n        goto end_write;\n    }\n\n    _reg_addr =  dev-&gt;current_pointer;\n    offset = 0;\n    remain_in_page = (EEP_PAGE_SIZE - (dev-&gt;current_pointer % EEP_PAGE_SIZE)) % EEP_PAGE_SIZE;\n    nb_page = (count - remain_in_page) / EEP_PAGE_SIZE;\n    last_remain = (count - remain_in_page) % EEP_PAGE_SIZE ;\n\n    if (remain_in_page &gt; 0){\n        retval = transacWrite(dev, _reg_addr, dev-&gt;data, offset, remain_in_page);\n        if (retval &lt; 0)\n            goto end_write;\n        offset += remain_in_page;\n        dev-&gt;current_pointer += remain_in_page;\n        _reg_addr += remain_in_page;\n        retval = offset;\n        mdelay(10);\n    }\n\n    if (nb_page &lt; 1 &amp;&amp; last_remain &lt; 1)\n        goto end_write;\n\n    for (i=0; i &lt; nb_page; i++){\n        retval = transacWrite(dev, _reg_addr, dev-&gt;data, offset, EEP_PAGE_SIZE);\n        if (retval &lt; 0)\n            goto end_write;\n        offset += EEP_PAGE_SIZE;\n        _reg_addr += EEP_PAGE_SIZE;\n        dev-&gt;current_pointer += EEP_PAGE_SIZE;\n        retval = offset;\n        mdelay(10);\n    }\n\n    if (last_remain &gt; 0){\n        retval = transacWrite(dev, _reg_addr, dev-&gt;data, offset, last_remain);\n        if (retval &lt; 0)\n            goto end_write;\n        offset += last_remain;\n        _reg_addr += last_remain;\n        dev-&gt;current_pointer += last_remain;\n        retval = offset;\n        mdelay(10);\n    }\n\nend_write:\n    mutex_unlock(&amp;dev-&gt;eep_mutex);\n    return retval;\n}\n\nloff_t eep_llseek(struct file *filp, loff_t off, int whence)\n{\n    struct eep_dev *dev = (struct eep_dev *)filp-&gt;private_data;\n    loff_t newpos = 0;\n\n    switch(whence) {\n      case 0: /* SEEK_SET */\n        newpos = off;\n        break;\n\n      case 1: /* SEEK_CUR */\n        newpos = filp-&gt;f_pos + off;\n        break;\n\n      case 2: /* SEEK_END - Not supported */\n        return -EINVAL;\n\n      default: /* can't happen */\n        return -EINVAL;\n    }\n    if (newpos &lt; 0 || EEP_SIZE)\n        return -EINVAL;\n\n    dev-&gt;current_pointer = newpos;  \n    filp-&gt;f_pos = newpos;\n    return newpos;\n}\n\nstruct file_operations eep_fops = {\n    .owner =    THIS_MODULE,\n    .read =     eep_read,\n    .write =    eep_write,\n    .open =     eep_open,\n    .release =  eep_release,\n    .llseek =   eep_llseek,\n};\n\nstatic const struct of_device_id ee24lc512_ids[] = {\n    { .compatible = \"microchip,ee24lc512\", },\n    { /* sentinel */ }\n};\n\nstatic int ee24lc512_probe(struct i2c_client *client,\n                const struct i2c_device_id *id)\n{\n    unsigned char data[5];\n    u8 reg_addr[2];\n    struct i2c_msg msg[2];\n    int err = 0;\n    dev_t devno = 0;\n    struct eep_dev *eep_device = NULL;\n    struct device *device = NULL;\n\n    if (!i2c_check_functionality(client-&gt;adapter, I2C_FUNC_SMBUS_BYTE_DATA))\n        return -EIO;\n\n   /* \n    * We send a simple i2c transaction. If it fails,\n    * it meants there is no eeprom\n    */\n\n    reg_addr[0] =  0x00;\n    reg_addr[1] =  0x00;\n\n    msg[0].addr = client-&gt;addr;\n    msg[0].flags = 0;                    /* Write */\n    msg[0].len = 2;                      /* Address is 2byte coded */\n    msg[0].buf = reg_addr;          \n\n    msg[1].addr = client-&gt;addr;\n    msg[1].flags = I2C_M_RD;             /* We need to read */\n    msg[1].len = 5; //count; \n    msg[1].buf = data;\n\n    if (i2c_transfer(client-&gt;adapter, msg, 2) &lt; 0)\n        pr_err(\"ee24lc512: i2c_transfer failed\\n\");\n\n    /* Get a range of minor numbers (starting with 0) to work with */\n    err = alloc_chrdev_region(&amp;devno, 0, 1, EEP_DEVICE_NAME);\n    if (err &lt; 0) {\n        pr_err(\"alloc_chrdev_region() failed for %s\\n\", EEP_DEVICE_NAME);\n        return err;\n    }\n    eep_major = MAJOR(devno);\n\n    /* Create device class */\n    eep_class = class_create(THIS_MODULE, EEP_DEVICE_NAME);\n    if (IS_ERR(eep_class)) {\n        err = PTR_ERR(eep_class);\n        goto fail;\n    }\n\n    eep_device = (struct eep_dev *)kzalloc(sizeof(struct eep_dev), GFP_KERNEL);\n    if (eep_device == NULL) {\n        err = -ENOMEM;\n        goto fail;\n    }\n\n    /* Memory is to be allocated when the device is opened the first time */\n    eep_device-&gt;data = NULL;\n    eep_device-&gt;client = client;\n    eep_device-&gt;current_pointer = 0;\n    mutex_init(&amp;eep_device-&gt;eep_mutex);\n\n    cdev_init(&amp;eep_device-&gt;cdev, &amp;eep_fops);\n    eep_device-&gt;cdev.owner = THIS_MODULE;\n    err = cdev_add(&amp;eep_device-&gt;cdev, devno, 1);\n\n    if (err){\n        pr_err(\"Error while trying to add %s\", EEP_DEVICE_NAME);\n        goto fail;\n    }\n\n    device = device_create(eep_class, NULL, /* no parent device */\n                            devno, NULL, /* no additional data */\n                            EEP_DEVICE_NAME);\n\n    if (IS_ERR(device)) {\n        err = PTR_ERR(device);\n        pr_err(\"failure while trying to create %s device\", EEP_DEVICE_NAME);\n        cdev_del(&amp;eep_device-&gt;cdev);\n        goto fail;\n    }\n\n    i2c_set_clientdata(client, eep_device);\n    return 0; /* success */\n\nfail:\n    if(eep_class != NULL){\n        device_destroy(eep_class, MKDEV(eep_major, minor));\n        class_destroy(eep_class);\n    }\n    if (eep_device != NULL)\n        kfree(eep_device);\n    return err;\n}\n\nstatic int ee24lc512_remove(struct i2c_client *client)\n{\n    struct eep_dev *eep_device = i2c_get_clientdata(client);\n    device_destroy(eep_class, MKDEV(eep_major, 0));\n\n    kfree(eep_device-&gt;data);\n    mutex_destroy(&amp;eep_device-&gt;eep_mutex);\n    kfree(eep_device);\n    class_destroy(eep_class);\n    unregister_chrdev_region(MKDEV(eep_major, 0), 1);\n    return 0;\n}\n\nstatic const struct i2c_device_id ee24lc512_id[] = {\n    {\"ee24lc512\", 0},\n    {},\n};\n\nMODULE_DEVICE_TABLE(i2c, ee24lc512_id);\n\nstatic struct i2c_driver ee24lc512_i2c_driver = {\n    .driver = {\n        .owner = THIS_MODULE,\n        .name = \"ee24lc512\",\n        .of_match_table = of_match_ptr(ee24lc512_ids),\n    },\n    .probe = ee24lc512_probe,\n    .remove = ee24lc512_remove,\n    .id_table = ee24lc512_id,\n};\n\nmodule_i2c_driver(ee24lc512_i2c_driver);\n\nMODULE_AUTHOR(\"John Madieu &lt;john.madieu@gmail.com&gt;\");\nMODULE_LICENSE(\"GPL\");\n</code></pre>"},{"location":"linux/drivers/input/","title":"Input\u5b50\u7cfb\u7edf","text":"<p>input \u5b50\u7cfb\u7edf\u5c31\u662f Linux \u4e13\u95e8\u4e3a\u8f93\u5165\u7c7b\u8bbe\u5907\u7f16\u5199\u7684\u4e00\u4e2a\u6846\u67b6\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u89c4\u8303\u9a71\u52a8\u5f00\u53d1\uff0c\u964d\u4f4e\u5f00\u53d1\u96be\u5ea6\uff0c\u63d0\u9ad8\u9a71\u52a8\u7684\u901a\u7528\u578b\u548c\u517c\u5bb9\u6027\u3002</p> <p>\u5e38\u89c1\u7684\u8f93\u5165\u8bbe\u5907\u6709\u9f20\u6807\u3001\u952e\u76d8\u3001\u6e38\u620f\u6746\u3001\u89e6\u6478\u5c4f\u7b49\uff0c\u7531\u7528\u6237\u76f4\u63a5\u64cd\u4f5c\u8bbe\u5907\u800c\u4ea7\u751f\u8f93\u5165\u7535\u4fe1\u53f7\u7684\u8bbe\u5907\u90fd\u662f\u8f93\u5165\u8bbe\u5907\u3002</p> <p>Linux \u4e3a\u4e86\u7edf\u4e00\u8f93\u5165\u8bbe\u5907\uff0c\u5c06 input \u5b50\u7cfb\u7edf\u5206\u4e3a\u4e86\u9a71\u52a8\u5c42\u3001\u6838\u5fc3\u5c42\u548c\u4e8b\u4ef6\u5904\u7406\u5c42\u4e09\u4e2a\u90e8\u5206\uff1a</p> <p></p> <ul> <li>\u9a71\u52a8\u5c42\uff1a\u5b9e\u73b0\u5bf9\u786c\u4ef6\u8bbe\u5907\u7684\u8bfb\u5199\u8bbf\u95ee\uff0c\u8bbe\u7f6e\u4e2d\u65ad\uff0c\u5e76\u5c06\u786c\u4ef6\u4e8b\u4ef6\u544a\u77e5\u6838\u5fc3\u5c42</li> <li>\u6838\u5fc3\u5c42\uff1a\u4e3a\u9a71\u52a8\u5c42\u63d0\u4f9b\u89c4\u8303\u63a5\u53e3\uff0c\u5e76\u901a\u77e5\u4e8b\u4ef6\u5904\u7406\u5c42</li> <li>\u4e8b\u4ef6\u5904\u7406\u5c42\uff1a\u4e0d\u6d89\u53ca\u786c\u4ef6\u8bbe\u5907\u7684\u64cd\u4f5c\uff0c\u53ea\u5904\u7406\u8f6f\u4ef6\u4e8b\u4ef6</li> </ul> <p>\u6240\u6709\u8f93\u5165\u8bbe\u5907\u7684\u8f93\u5165\u4fe1\u606f\u5c06\u88ab\u62bd\u8c61\u6210\u8f93\u5165\u4e8b\u4ef6<code>input_event</code>\uff1a</p> <pre><code>struct input_event {\n    struct timeval time; /* \u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u95f4 */\n    __u16 type; /* \u4e8b\u4ef6\u7c7b\u578b */\n    __u16 code; /* \u4e8b\u4ef6\u4ee3\u7801 */\n    __s32 value; /* \u4e8b\u4ef6\u503c */\n}\n</code></pre> <p><code>struct input_dev</code>\u7ed3\u6784\u4f53\u4ee3\u8868\u4e00\u4e2a\u5177\u4f53\u7684\u8f93\u5165\u8bbe\u5907\uff0c\u5b83\u5305\u542b\u4e86\u8f93\u5165\u8bbe\u5907\u7684\u57fa\u672c\u4fe1\u606f\uff1a</p> <pre><code>struct input_dev {\n    const char *name;  //\u63d0\u4f9b\u7ed9\u7528\u6237\u7684\u8f93\u5165\u8bbe\u5907\u7684\u540d\u79f0\n    const char *phys;  //\u63d0\u4f9b\u7ed9\u7f16\u7a0b\u8005\u7684\u8bbe\u5907\u8282\u70b9\u7684\u540d\u79f0\n    const char *uniq;   //\u6307\u5b9a\u552f\u4e00\u7684ID\u53f7\n    struct input_id id; //\u8f93\u5165\u8bbe\u5907\u6807\u8bc6ID\n\n    unsigned long propbit[BITS_TO_LONGS(INPUT_PROP_CNT)];\n\n    unsigned long evbit[BITS_TO_LONGS(EV_CNT)];  //\u6307\u5b9a\u8bbe\u5907\u652f\u6301\u7684\u4e8b\u4ef6\u7c7b\u578b\n    unsigned long keybit[BITS_TO_LONGS(KEY_CNT)]; //\u8bb0\u5f55\u652f\u6301\u7684\u952e\u503c\n    unsigned long relbit[BITS_TO_LONGS(REL_CNT)]; //\u8bb0\u5f55\u652f\u6301\u7684\u76f8\u5bf9\u5750\u6807\u4f4d\u56fe\n    unsigned long absbit[BITS_TO_LONGS(ABS_CNT)]; //\u8bb0\u5f55\u652f\u6301\u7684\u7edd\u5bf9\u5750\u6807\u4f4d\u56fe\n\n    /*----------\u4ee5\u4e0b\u7ed3\u6784\u4f53\u6210\u5458\u7701\u7565----------------*/\n};\n</code></pre> <ul> <li>evbit\uff1a\u6307\u5b9a\u8bbe\u5907\u652f\u6301\u7684\u4e8b\u4ef6\u7c7b\u578b\uff0c\u53ef\u9009\u7c7b\u578b\u6709\uff1a</li> </ul> <pre><code>#define EV_SYN          0x00    //\u540c\u6b65\u4e8b\u4ef6\n#define EV_KEY          0x01    //\u6309\u952e\u4e8b\u4ef6\n#define EV_REL          0x02    //\u76f8\u5bf9\u5750\u6807\u4e8b\u4ef6\n#define EV_ABS          0x03    //\u7edd\u5bf9\u5750\u6807\u4e8b\u4ef6\n#define EV_MSC          0x04    //\u5176\u4ed6\u6742\u9879\u4e8b\u4ef6\n#define EV_SW           0x05    //\u4e8c\u8fdb\u5236\u5f00\u5173\u4e8b\u4ef6\n#define EV_LED          0x11    //LED\u4e8b\u4ef6\n#define EV_SND          0x12    //\u58f0\u97f3\u4e8b\u4ef6\n#define EV_REP          0x14    //\u91cd\u590d\u6309\u952e\u4e8b\u4ef6\n#define EV_FF           0x15    //Force feedback\u4e8b\u4ef6\n#define EV_PWR          0x16    //\u7535\u6e90\u4e8b\u4ef6\n#define EV_FF_STATUS        0x17    \n#define EV_MAX          0x1f\n#define EV_CNT          (EV_MAX+1)\n</code></pre> <ul> <li>keybit\uff1a\u8bb0\u5f55\u652f\u6301\u7684\u952e\u503c\uff0c\u53ef\u9009\u952e\u503c\u6709\uff1a</li> </ul> <pre><code>#define KEY_RESERVED                0\n#define KEY_ESC                     1\n#define KEY_1                       2\n#define KEY_2                       3\n#define KEY_3                       4\n#define KEY_4                       5\n/*-----------\u4ee5\u4e0b\u5185\u5bb9\u7701\u7565-------------*/\n</code></pre> <ul> <li>relbit\u3001absbit\uff1a\u8bb0\u5f55\u652f\u6301\u7684\u76f8\u5bf9\u5750\u6807\u548c\u7edd\u5bf9\u5750\u6807\u4f4d</li> </ul>"},{"location":"linux/drivers/input/#_1","title":"\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"linux/drivers/input/#_2","title":"\u7533\u8bf7\u548c\u91ca\u653e","text":"<pre><code>struct input_dev *input_allocate_device(void);\n\nvoid input_free_device(struct input_dev *dev);\n</code></pre>"},{"location":"linux/drivers/input/#_3","title":"\u6ce8\u518c\u548c\u6ce8\u9500","text":"<pre><code>int input_register_device(struct input_dev *dev);\n\nvoid input_unregister_device(struct input_dev *dev);\n</code></pre>"},{"location":"linux/drivers/input/#_4","title":"\u4e8b\u4ef6\u5904\u7406","text":"<p>\u901a\u7528\u7684\u4e0a\u62a5\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\uff1a</p> <pre><code>void input_event(struct input_dev *dev, unsigned int type, unsigned int code, int value);\n</code></pre> <p>\u4e0a\u62a5\u6309\u952e\u4e8b\u4ef6\u4ee5\u53ca\u540c\u6b65\u4e8b\u4ef6\u7684\u5904\u7406\u51fd\u6570\uff1a</p> <pre><code>static inline void input_report_key(struct input_dev *dev, int code, int value)\n{\n    input_event(dev, EV_KEY, code, value);\n}\n\nstatic inline void input_sync(struct input_dev *dev)\n{\n    input_event(dev, EV_SYN, SYN_REPORT, 0);\n}\n</code></pre> <p>input \u5b50\u7cfb\u7edf\u5bf9\u4e0d\u540c\u8f93\u5165\u4e8b\u4ef6\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u51fd\u6570\u63a5\u53e3\uff0c\u8fd9\u4e9b\u51fd\u6570\u53ea\u662f\u5bf9<code>input_event()</code>\u51fd\u6570\u7684\u7b80\u5355\u5c01\u88c5\u3002</p>"},{"location":"linux/drivers/interrupt/","title":"\u4e2d\u65ad\u5b50\u7cfb\u7edf","text":""},{"location":"linux/drivers/interrupt/#_2","title":"\u4e2d\u65ad\u53f7","text":"<ul> <li>IRQ number\uff1a\u8f6f\u4ef6\u4e2d\u65ad\u53f7\uff0c\u5728 Linux \u7cfb\u7edf\u4e2d\u552f\u4e00\uff0c\u7f16\u7a0b\u65f6\u7528\u7684\u5c31\u662f\u8fd9\u4e2a</li> <li>HW interrupt ID\uff1a\u786c\u4ef6\u4e2d\u65ad\u53f7\uff0c\u7531\u4e2d\u65ad\u63a7\u5236\u5668\u5bf9\u5916\u8bbe\u4e2d\u65ad\u8fdb\u884c\u7f16\u53f7</li> <li>IRQ domain\uff1a\u8d1f\u8d23\u5b9e\u73b0\u786c\u4ef6\u4e2d\u65ad\u53f7\u548c\u8f6f\u4ef6\u4e2d\u65ad\u53f7\u7684\u6620\u5c04</li> </ul>"},{"location":"linux/drivers/interrupt/#_3","title":"\u5728\u8bbe\u5907\u6811\u4e2d\u58f0\u660e\u4e2d\u65ad","text":""},{"location":"linux/drivers/interrupt/#gic","title":"\u9876\u5c42GIC\u4e2d\u65ad\u63a7\u5236\u5668","text":"rk3568.dtsi<pre><code>gic: interrupt-controller@fd400000 {\n    compatible = \"arm,gic-v3\";\n    reg = &lt;0x0 0xfd400000 0 0x10000&gt;, /* GICD */\n          &lt;0x0 0xfd460000 0 0x80000&gt;; /* GICR */\n    interrupts = &lt;GIC_PPI 9 IRQ_TYPE_LEVEL_HIGH&gt;;\n    interrupt-controller;\n    #interrupt-cells = &lt;3&gt;;\n};\n</code></pre> <p>compatible\uff1a\u8868\u660e\u4f7f\u7528ARM GIC-V3\u4e2d\u65ad\u63a7\u5236\u5668</p> <p>reg\uff1a\u8be5\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u57fa\u5730\u5740\u548c\u5927\u5c0f</p> <p>interrupts\uff1a\u8868\u660e\u8be5\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u4e2d\u65ad\u4fe1\u606f\uff0c\u8fd9\u91cc\u4f7f\u7528GIC_PPI\u7684\u7b2c9\u53f7\u4e2d\u65ad\uff0c\u9ad8\u7535\u5e73\u89e6\u53d1</p> <p>interrupt-controller\uff1a\u8868\u660e\u8fd9\u662f\u4e00\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668</p> <p>#interrupt-cells\uff1a\u8868\u660e\u5b83\u7684\u201c\u5b50\u201d\u4e2d\u65ad\u63a7\u5236\u5668\u9700\u8981\u591a\u5c11\u4e2acells\u6765\u63cf\u8ff0\u4e00\u4e2a\u4e2d\u65ad</p>"},{"location":"linux/drivers/interrupt/#gpio","title":"\u5b50GPIO\u4e2d\u65ad\u63a7\u5236\u5668","text":"<p>\u5bf9\u4e8e GPIO\uff0c\u53ef\u4ee5\u5c06\u5176\u89c6\u4e3a\u4e2d\u65ad\u63a7\u5236\u5668\uff0c\u4f46\u9664\u4e86\u4ee5\u4e0a\u4e09\u4e2a\u5c5e\u6027\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u6307\u5b9a\uff0c\u4f7f\u7528\u4e0a\u4e00\u7ea7\u7684\u54ea\u4e00\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668\u548c\u54ea\u4e00\u4e2a\u4e2d\u65ad\uff1a</p> <ol> <li> <p>interrupt-parent \u5c5e\u6027\uff1a\u6307\u5b9a\u4e0a\u4e00\u7ea7\u7684\u4e2d\u65ad\u63a7\u5236\u5668</p> </li> <li> <p>interrupts \u5c5e\u6027\uff1a\u6307\u5b9a\u5177\u4f53\u7684\u4e2d\u65ad\u53f7\uff0c\u7b2c\u4e00\u4e2a\u5355\u5143\u683c\u5b9a\u4e49\u4e86\u63a7\u5236\u5668\u5185\u4e2d\u65ad\u7684\u7d22\u5f15\uff0c\u7b2c\u4e8c\u4e2a\u5355\u5143\u683c\u7528\u4e8e\u6307\u5b9a\u4ee5\u4e0b\u6807\u5fd7\u4e4b\u4e00\uff1a</p> <ul> <li>1\uff1a\u4e0a\u5347\u6cbf\u89e6\u53d1</li> <li>2\uff1a\u4e0b\u964d\u6cbf\u89e6\u53d1</li> <li>3\uff1a\u9ad8\u7535\u5e73\u89e6\u53d1</li> <li>4\uff1a\u4f4e\u7535\u5e73\u89e6\u53d1</li> </ul> </li> </ol> <p>\u5982\u679c\u652f\u6301 extended \u8bed\u6cd5\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 interrupts-extended \u5c5e\u6027\u6765\u53d6\u4ee3\u4ee5\u4e0a\u4e24\u4e2a\u5c5e\u6027\uff1a</p> <pre><code>interrupts-extended = &lt;&amp;gpio1 5 RISING&gt;, &lt;&amp;gpio2 6 RISING&gt;;\n</code></pre> <p>\u82e5\u6709\u539f\u5382 BSP \u5de5\u7a0b\u5e08\u7f16\u5199\u8bbe\u5907\u6811\u4ee3\u7801\u5982\u4e0b\uff1a</p> rk3399.dtsi<pre><code>gpio0: gpio0@ff720000 {\n            compatible = \"rockchip,gpio-bank\";\n            reg = &lt;0x0 0xff720000 0x0 0x100&gt;;\n            clocks = &lt;&amp;pmucru PCLK_GPIO0_PMU&gt;;\n            interrupts = &lt;GIC_SPI 14 IRQ_TYPE_LEVEL_HIGH 0&gt;;\n\n            gpio-controller;\n            #gpio-cells = &lt;0x2&gt;;\n\n            interrupt-controller;\n            #interrupt-cells = &lt;0x2&gt;;\n};\n</code></pre> <p>\u9a71\u52a8\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5728\u8bbe\u5907\u6811\u4e2d\u5f15\u7528 GPIO \u4e2d\u65ad\u63a7\u5236\u5668\uff1a</p> rk3399-firefly.dts<pre><code>brcmf: wifi@1 {\n    reg = &lt;1&gt;;\n    compatible = \"brcm,bcm4329-fmac\";\n    interrupt-parent = &lt;&amp;gpio0&gt;;    //\u5f15\u7528\u7684\u8282\u70b9\n    interrupts = &lt;RK_PA3 GPIO_ACTIVE_HIGH&gt;;\n    interrupt-names = \"host-wake\";\n    brcm,drive-strength = &lt;5&gt;;\n    pinctrl-names = \"default\";\n    pinctrl-0 = &lt;&amp;wifi_host_wake_l&gt;;\n};\n</code></pre> <p>interrupt-parent\uff1a\u6307\u660e\u8be5node\u4f7f\u7528\u54ea\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668</p> <p>interrupts\uff1a\u6839\u636e\u7236\u8282\u70b9interrupt-cells\u5c5e\u6027\uff0c\u6307\u660e\u4f7f\u7528\u7684\u4e2d\u65ad\u7c7b\u578b</p>"},{"location":"linux/drivers/interrupt/#_4","title":"\u5728\u4ee3\u7801\u4e2d\u83b7\u5f97\u4e2d\u65ad","text":"<p>\u8bbe\u5907\u6811\u4e2d\u7684\u67d0\u4e9b\u8282\u70b9\u53ef\u4ee5\u88ab\u8f6c\u6362\u4e3a<code>platform_device</code>\uff0c\u53ef\u4ee5\u4f7f\u7528<code>platform_get_irq()</code>\u51fd\u6570\u83b7\u5f97\u4e2d\u65ad\u8d44\u6e90\u3002\u5bf9\u4e8e\u4e0d\u80fd\u8f6c\u6362\u4e3a<code>platform_device</code>\u7684\u8282\u70b9\uff0c\u53ef\u4ee5\u4f7f\u7528<code>of_irq_get()</code>\u51fd\u6570\u3002</p> <p>\u5bf9\u4e8e GPIO \u8bbe\u5907\uff0c\u53ef\u4ee5\u4f7f\u7528<code>gpio_to_irq()</code>\u51fd\u6570\u83b7\u5f97\u4e2d\u65ad\u53f7\u3002</p> <p>\u4ece interrupts \u5c5e\u6027\u4e2d\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u4e2d\u65ad\u53f7\uff1a</p> <pre><code>unsigned int irq_of_parse_and_map(struct device_node *np, int index);\n</code></pre> <p>\u83b7\u53d6<code>irq_data</code>\u7ed3\u6784\u4f53\uff1a</p> <pre><code>struct irq_data *irq_get_irq_data(unsigned int irq);\n</code></pre> <p>\u83b7\u53d6\u4e2d\u65ad\u89e6\u53d1\u6807\u5fd7\uff1a</p> <pre><code>u32 irqd_get_trigger_type(struct irq_data *data);\n</code></pre>"},{"location":"linux/drivers/interrupt/#_5","title":"\u5728\u9a71\u52a8\u4e2d\u4f7f\u7528\u4e2d\u65ad","text":"<p>\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7<code>request_irq()</code>\u51fd\u6570\u6ce8\u518c\u4e00\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u5e76\u4e14\u6fc0\u6d3b\u7ed9\u5b9a\u7684\u4e2d\u65ad\u7ebf\uff1a</p> <pre><code>int request_irq(unsigned int irq, irq_handler_t handler, unsigned long flags,\n                const char *name, void *dev);\n</code></pre> <p>irq\uff1a\u5206\u914d\u7684\u4e2d\u65ad\u53f7\u3002</p> <p>handler\uff1a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002</p> <p>flags\uff1a\u4e2d\u65ad\u6807\u5fd7\u4f4d\uff0c\u6bd4\u5982IRQF_SHARED\u8868\u793a\u5171\u4eab\u4e2d\u65ad\u7ebf\u3002</p> <p>name\uff1a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u540d\u5b57\uff0c\u4f1a\u663e\u793a\u5728/proc/irq\u548c/proc/interrupts\u4e2d\u3002</p> <p>dev\uff1a\u4f20\u9012\u7ed9\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u79c1\u6709\u6570\u636e\uff0c\u7528\u4e8e\u533a\u5206\u5171\u4eab\u4e2d\u65ad\u7ebf\u7684\u4e0d\u540c\u5904\u7406\u7a0b\u5e8f\u3002</p> <p><code>request_irq()</code>\u6210\u529f\u8fd4\u56de0\uff0c\u9519\u8bef\u8fd4\u56de\u975e0\u3002\u6700\u5e38\u89c1\u7684\u9519\u8bef\u662f-EBUSY\uff0c\u8868\u793a\u7ed9\u5b9a\u7684\u4e2d\u65ad\u7ebf\u5df2\u7ecf\u88ab\u4f7f\u7528\u3002</p> <p><code>request_irq()</code>\u53ef\u80fd\u4f1a\u7761\u7720\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u4e0d\u5141\u8bb8\u963b\u585e\u7684\u4ee3\u7801\u4e2d\u8c03\u7528\u8be5\u51fd\u6570\u3002</p> <p>\u5982\u679c\u8981\u4f7f\u7528\u7ebf\u7a0b\u5316\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u4f7f\u7528<code>request_threaded_irq()</code>\u51fd\u6570\u3002\u7ebf\u7a0b\u5316\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5728\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u73af\u5883\u4e2d\u6267\u884c\uff0c\u4e14\u6bd4\u5de5\u4f5c\u961f\u5217\u7684\u4f18\u5148\u7ea7\u8981\u9ad8\uff0c\u56e0\u6b64\u9002\u7528\u4e8e\u90a3\u4e9b\u8981\u6c42\u5feb\u901f\u54cd\u5e94\u7684\u8bbe\u5907\u9a71\u52a8\u4e2d\u3002</p> <p>\u8981\u7f16\u5199\u81ea\u5df1\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u5728\u4ee5\u4e0b\u51fd\u6570\u4e2d\u5b9e\u73b0\uff1a</p> <pre><code>typedef irqreturn_t (*irq_handler_t)(int, void *);\n</code></pre> <p><code>irqreturn_t</code>\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>/**\n * enum irqreturn\n * @IRQ_NONE        interrupt was not from this device or was not handled\n * @IRQ_HANDLED     interrupt was handled by this device\n * @IRQ_WAKE_THREAD handler requests to wake the handler thread\n */\nenum irqreturn {\n    IRQ_NONE        = (0 &lt;&lt; 0),\n    IRQ_HANDLED     = (1 &lt;&lt; 0),\n    IRQ_WAKE_THREAD     = (1 &lt;&lt; 1),\n};\n\ntypedef enum irqreturn irqreturn_t;\n\n#define IRQ_RETVAL(x)   ((x) ? IRQ_HANDLED : IRQ_NONE)\n</code></pre> <p>Linux \u4e0a\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u65e0\u9700\u8981\u6c42\u53ef\u91cd\u5165\u3002\u56e0\u4e3a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u8fd0\u884c\u65f6\u76f8\u5e94\u4e2d\u65ad\u7ebf\u4e0a\u7684\u4e2d\u65ad\u662f\u5c4f\u853d\u7684\uff0c\u4e5f\u5c31\u662f\u4e0d\u4f1a\u53d1\u751f\u76f8\u540c\u4e2d\u65ad\u7684\u5d4c\u5957\uff0c\u4f46\u4e0d\u540c\u4e2d\u65ad\u7684\u5d4c\u5957\u6709\u53ef\u80fd\u53d1\u751f\u3002</p> <p>\u4e2d\u65ad\u5171\u4eab</p> <p>\u5bf9\u4e8e\u5171\u4eab\u4e2d\u65ad\u7ebf\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u9700\u8981\u5728\u7533\u8bf7\u4e2d\u65ad\u65f6\u6307\u5b9a IRQF_SHARED \u6807\u5fd7\uff0c\u540c\u65f6\u5c06\u8bbe\u5907\u7ed3\u6784\u4f53\u6307\u9488\u4f5c\u4e3adev_id\u4f20\u5165\u3002\u5728\u4e2d\u65ad\u5230\u6765\u65f6\uff0c\u5185\u6838\u904d\u5386\u5171\u4eab\u6b64\u4e2d\u65ad\u7684\u6240\u6709\u5904\u7406\u7a0b\u5e8f\uff0c\u76f4\u5230\u67d0\u4e2a\u51fd\u6570\u8fd4\u56deIRQ_HANDLED\u3002\u6bcf\u4e2a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u90fd\u5fc5\u987b\u5224\u65ad\u662f\u5426\u4e3a\u672c\u8bbe\u5907\u7684\u4e2d\u65ad\u3002</p> <p>\u5982\u679c\u6307\u5b9a\u7684\u4e2d\u65ad\u7ebf\u4e0d\u662f\u5171\u4eab\u7684\uff0c\u90a3\u4e48\u8be5\u51fd\u6570\u5220\u9664\u5904\u7406\u7a0b\u5e8f\u7684\u540c\u65f6\u5c06\u7981\u7528\u8fd9\u6761\u4e2d\u65ad\u7ebf\u3002\u5982\u679c\u662f\u5171\u4eab\u7684\uff0c\u90a3\u4e48\u4ec5\u5220\u9664\u6240\u5bf9\u5e94\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u800c\u8fd9\u6761\u4e2d\u65ad\u7ebf\u53ea\u6709\u5728\u5220\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5904\u7406\u7a0b\u5e8f\u65f6\u624d\u4f1a\u88ab\u7981\u7528\u3002</p> <p>\u5378\u8f7d\u9a71\u52a8\u7a0b\u5e8f\u65f6\uff0c\u9700\u8981\u6ce8\u9500\u76f8\u5e94\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u5e76\u91ca\u653e\u4e2d\u65ad\u7ebf\uff1a</p> <pre><code>void free_irq(unsigned int irq, void *dev);\n</code></pre>"},{"location":"linux/drivers/module/","title":"\u5185\u6838\u6a21\u5757","text":"<p>\u6a21\u5757\uff08modules\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u673a\u5236\uff0c\u53ef\u4ee5\u4e0d\u7f16\u8bd1\u8fdb\u5185\u6838\u800c\u52a8\u6001\u52a0\u8f7d\uff0c\u4f7f\u5f97\u5185\u6838\u7684\u7ef4\u62a4\u4e0e\u5f00\u53d1\u53d8\u5f97\u66f4\u52a0\u7075\u6d3b\u3002</p> <p>\u6700\u7b80\u5355\u7684\u5185\u6838\u6a21\u5757hello.c</p> <pre><code>#include &lt;linux/modul.h\\&gt;\n#include &lt;linux/init.h\\&gt;\n\nstatic int __init hello_init(void) {\n    printk(KERN_INFO \"Hello world init\\n\");\n    return 0;\n}\n\nstatic void __exit hello_exit(void) {\n    printk(KERN_INFO \"Hello world exit\\n\");\n}\n\nmodule_init(hello_init);\nmodule_exit(hello_exit);\nMODULE_LICENSE(\"GPL\");\nMODULE_AUTHOR(\"Tom\");\nMODULE_DESCRIPTION(\"A simple hello world module\");\n</code></pre> <p>\u8fd9\u4e2a\u6a21\u5757\u53ea\u5305\u542b\u4e86\u6a21\u5757\u7684\u52a0\u8f7d\u548c\u5378\u8f7d\u51fd\u6570\uff0c\u7f16\u8bd1\u540e\u4ea7\u751fhello.ko\u76ee\u6807\u6587\u4ef6\uff0c\u901a\u8fc7<code>insmod</code>\u547d\u4ee4\u52a0\u8f7d\u5230\u5185\u6838\uff0c\u8f93\u51fa\"Hello world init\"\uff1b<code>rmmod</code>\u547d\u4ee4\u5378\u8f7d\uff0c\u8f93\u51fa\"Hello world exit\"\u3002</p> <p>\u4f7f\u7528<code>modprobe</code>\u547d\u4ee4\u9664\u4e86\u52a0\u8f7d\u8be5\u6a21\u5757\uff0c\u8fd8\u4f1a\u5c06\u4f9d\u8d56\u4e00\u5e76\u52a0\u8f7d\u3002</p> <p>\u4f7f\u7528<code>modinfo</code>\u547d\u4ee4\u53ef\u4ee5\u83b7\u5f97\u6a21\u5757\u7684\u4fe1\u606f\u3002</p>"},{"location":"linux/drivers/module/#_2","title":"\u6a21\u5757\u7a0b\u5e8f\u7ed3\u6784","text":"<p>\u4e00\u4e2aLinux\u5185\u6838\u6a21\u5757\u4e3b\u8981\u7531\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a</p> <ol> <li>\u6a21\u5757\u52a0\u8f7d\u51fd\u6570</li> <li>\u6a21\u5757\u5378\u8f7d\u51fd\u6570</li> <li>\u6a21\u5757\u8bb8\u53ef\u8bc1\u58f0\u660e</li> <li>\u6a21\u5757\u53c2\u6570</li> <li>\u6a21\u5757\u5bfc\u51fa\u7b26\u53f7</li> <li>\u6a21\u5757\u4f5c\u8005\u4fe1\u606f</li> <li>\u6a21\u5757\u63cf\u8ff0\u4fe1\u606f</li> </ol> <p>\u7f16\u5199\u5185\u6838\u6a21\u5757\u65f6\uff0c\u5fc5\u987b\u8981\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e3a<code>linux/module.h</code>\u548c<code>linux/init.h</code>\u3002</p>"},{"location":"linux/drivers/module/#_3","title":"\u6a21\u5757\u52a0\u8f7d\u51fd\u6570","text":"<p>\u6a21\u5757\u52a0\u8f7d\u51fd\u6570\u4ee5<code>__init</code>\u5b8f\u4f5c\u4e3a\u524d\u7f00\uff0c\u5e26\u6709\u6b64\u6807\u8bc6\u7684\u51fd\u6570\u5982\u679c\u5728\u7f16\u8bd1\u65f6\u8fdb\u5165\u5185\u6838\uff0c\u5728\u94fe\u63a5\u65f6\u4f1a\u653e\u5728.init.text\u6bb5\u4e2d\u3002</p> <p>\u5728\u6a21\u5757\u52a0\u8f7d\u5931\u8d25\u65f6\uff0c\u5e94\u8fd4\u56de\u6b63\u786e\u7684\u503c\uff0c\u540c\u65f6\u91ca\u653e\u5728\u52a0\u8f7d\u7684\u8fc7\u7a0b\u4e2d\u7533\u8bf7\u7684\u8d44\u6e90\u3002</p>"},{"location":"linux/drivers/module/#_4","title":"\u6a21\u5757\u5378\u8f7d\u51fd\u6570","text":"<p>\u6a21\u5757\u5378\u8f7d\u51fd\u6570\u4ee5<code>__exit</code>\u5b8f\u4f5c\u4e3a\u524d\u7f00\uff0c\u4e3b\u8981\u7528\u4e8e\u8d44\u6e90\u7684\u91ca\u653e\u3002</p>"},{"location":"linux/drivers/module/#_5","title":"\u6a21\u5757\u53c2\u6570","text":"<p>\u5185\u6838\u6a21\u5757\u53ef\u4ee5\u5728\u52a0\u8f7d\u3001\u7cfb\u7edf\u542f\u52a8\u65f6\u6216\u8005\u7cfb\u7edf\u8fd0\u884c\u65f6\u52a8\u6001\u8bbe\u7f6e\u5176\u53c2\u6570\u3002</p> <p>\u6a21\u5757\u53c2\u6570\u4ee5<code>module_param(\u53c2\u6570\u540d\uff0c\u53c2\u6570\u7c7b\u578b\uff0c\u8bfb\u5199\u6743\u9650)</code>\u4f5c\u4e3a\u524d\u7f00\uff0c\u53c2\u6570\u7c7b\u578b\u53ef\u4ee5\u662fbyte\u3001short\u3001ushort\u3001int\u3001uint\u3001long\u3001ulong\u3001charp\u3001bool\u3001invbool\u3002\u53c2\u6570\u6570\u7ec4\u5f62\u5f0f\u4e3a<code>module_param_array(\u53c2\u6570\u540d\uff0c\u53c2\u6570\u7c7b\u578b\uff0c\u6570\u7ec4\u957f\u5ea6\uff0c\u8bfb\u5199\u6743\u9650)</code>\u3002</p> <p>\u52a8\u6001\u4fee\u6539\u6a21\u5757\u53c2\u6570</p> <pre><code>static int num = 5;\nmodule_param(num, int, S_IRUGO);\n...\n</code></pre> <p>\u5728\u52a0\u8f7d\u6a21\u5757\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7<code>insmod hello.ko num=10</code>\u6765\u4fee\u6539num\u7684\u503c\u3002</p>"},{"location":"linux/drivers/module/#_6","title":"\u5bfc\u51fa\u7b26\u53f7","text":"<p>\u6a21\u5757\u5bfc\u51fa\u7b26\u53f7\u4ee5<code>EXPORT_SYMBOL(\u7b26\u53f7\u540d)</code>\u4f5c\u4e3a\u524d\u7f00\uff0c\u5bfc\u51fa\u7684\u7b26\u53f7\u53ef\u4ee5\u5728\u5176\u4ed6\u6a21\u5757\u4e2d\u88ab\u8bbf\u95ee\u3002<code>EXPORT_SYMBOL_GPL(\u7b26\u53f7\u540d)</code>\u5bfc\u51fa\u7684\u7b26\u53f7\u5728\u6a21\u5757\u52a0\u8f7d\u65f6\u4f1a\u53d7\u5230GPL\u534f\u8bae\u7684\u7ea6\u675f\u3002</p> <p>\u5982\u679c\u9700\u8981\u5f15\u7528\u522b\u7684\u6a21\u5757\u5bfc\u51fa\u7684\u7b26\u53f7\uff0c\u5219\u9700\u8981\u5728 Makefile \u4e2d\u6307\u5b9a KBUILD_EXTRA_SYMBOLS \u53d8\u91cf\uff0c\u5e76\u5c06\u5176\u4ed6\u6a21\u5757\u7684.ko \u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84\u6dfb\u52a0\u5230\u8be5\u53d8\u91cf\u4e2d\u3002</p>"},{"location":"linux/drivers/module/#_7","title":"\u6a21\u5757\u7684\u58f0\u660e\u4e0e\u63cf\u8ff0","text":"<p>\u6211\u4eec\u53ef\u4ee5\u7528<code>MODULE_AUTHOR</code>\u3001<code>MODULE_DESCRIPTION</code>\u3001<code>MODULE_LICENSE</code>\u3001<code>MODULE_ALIAS</code>\u3001<code>MODULE_DEVICE_TABLE</code>\u3001<code>MODULE_VERSION</code>\u5206\u522b\u58f0\u660e\u6a21\u5757\u7684\u4f5c\u8005\u3001\u63cf\u8ff0\u3001\u8bb8\u53ef\u8bc1\u3001\u522b\u540d\u3001\u8bbe\u5907\u8868\u3001\u7248\u672c\u53f7\u3002</p>"},{"location":"linux/drivers/module/#_8","title":"\u6a21\u5757\u7684\u7f16\u8bd1","text":"<p>\u4e00\u4e2a\u5178\u578b\u7684Makefile\u6587\u4ef6\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>ifneq ($(KERNELRELEASE),)\nobj-m := hello.o\nelse\nPWD := $(shell pwd)\nKDIR :=/lib/modules/$(shell uname -r)/build\nall:\n    $(MAKE) -C $(KDIR) M=$(PWD)\nclean:\n    $(MAKE) -C $(KDIR) M=$(PWD) clean\n\nendif\n</code></pre>"},{"location":"linux/drivers/module/#_9","title":"\u6a21\u5757\u7ba1\u7406\u5de5\u5177","text":""},{"location":"linux/drivers/module/#_10","title":"\u5217\u51fa\u6a21\u5757","text":"<p>\u53ef\u4ee5\u4f7f\u7528<code>lsmod</code>\u547d\u4ee4\u5217\u51fa\u5217\u51fa\u6240\u6709\u5185\u6838\u6a21\u5757\uff0c\u5305\u62ec\u5df2\u52a0\u8f7d\u548c\u672a\u52a0\u8f7d\u7684\u6a21\u5757\uff1a</p> <pre><code>$ lsmod\nModule                  Size  Used by\narptable_filter        12702  1\nxt_nat                 12681  1\nmacvlan                19239  0\nveth                   13458  0\nxt_CT                  12956  2\nnf_log_ipv4            12767  0\nnf_log_common          13317  1 nf_log_ipv4\nxt_LOG                 12690  0\nxt_limit               12711  0\niptable_raw            12678  1\nip_set_hash_net        36021  2\nvxlan                  53857  0\nip6_udp_tunnel         12755  1 vxlan\nudp_tunnel             14423  1 vxlan\n...\n</code></pre> <p>\u6216\u4f7f\u7528<code>find</code>\u547d\u4ee4\u67e5\u770b\u6240\u6709\u53ef\u7528\u6a21\u5757\uff1a</p> <pre><code>$ find /lib/modules/$(uname -r)/ -name '*.ko'\n/lib/modules/5.15.0-117-generic/kernel/drivers/media/radio/si470x/radio-si470x-usb.ko\n/lib/modules/5.15.0-117-generic/kernel/drivers/media/radio/si470x/radio-si470x-i2c.ko\n/lib/modules/5.15.0-117-generic/kernel/drivers/media/radio/tea575x.ko\n/lib/modules/5.15.0-117-generic/kernel/drivers/media/radio/tef6862.ko\n/lib/modules/5.15.0-117-generic/kernel/drivers/media/radio/radio-raremono.ko\n/lib/modules/5.15.0-117-generic/kernel/drivers/media/radio/radio-si476x.ko\n/lib/modules/5.15.0-117-generic/kernel/drivers/media/radio/radio-tea5764.ko\n/lib/modules/5.15.0-117-generic/kernel/drivers/media/radio/radio-wl1273.ko\n/lib/modules/5.15.0-117-generic/kernel/drivers/media/radio/radio-mr800.ko\n/lib/modules/5.15.0-117-generic/kernel/drivers/media/radio/shark2.ko\n...\n</code></pre>"},{"location":"linux/drivers/module/#_11","title":"\u663e\u793a\u6a21\u5757\u4fe1\u606f","text":"<p><code>modinfo</code>\u547d\u4ee4\u63d0\u4f9b\u6709\u5173\u5185\u6838\u6a21\u5757\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u4f5c\u8005\u3001\u63cf\u8ff0\u3001\u8bb8\u53ef\u8bc1\u3001\u53c2\u6570\u7b49\uff1a</p> <pre><code>$ modinfo usbhid\nfilename:       /lib/modules/5.15.0-117-generic/kernel/drivers/hid/usbhid/usbhid.ko\nlicense:        GPL\ndescription:    USB HID core driver\nauthor:         Jiri Kosina\nauthor:         Vojtech Pavlik\nauthor:         Andreas Gal\nsrcversion:     541F12A52D5FDDAF4E19777\nalias:          usb:v*p*d*dc*dsc*dp*ic03isc*ip*in*\ndepends:        hid\nretpoline:      Y\nintree:         Y\nname:           usbhid\nvermagic:       5.15.0-117-generic SMP mod_unload modversions \nsig_id:         PKCS#7\nsigner:         Build time autogenerated kernel key\nsig_key:        45:00:3B:43:A0:87:2F:E9:C1:F9:9B:0C:A2:C6:3D:78:F7:15:94:98\nsig_hashalgo:   sha512\n...\n</code></pre>"},{"location":"linux/drivers/module/#_12","title":"\u68c0\u67e5\u4f9d\u8d56\u5173\u7cfb","text":"<p>modules.dep \u6587\u4ef6\u8bb0\u5f55\u4e86\u6a21\u5757\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528<code>grep</code>\u547d\u4ee4\u641c\u7d22\u6307\u5b9a\u6a21\u5757\u7684\u4f9d\u8d56\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>modprobe</code>\u547d\u4ee4\uff1a</p> <pre><code>$ modprobe --show-depends usbhid\ninsmod /lib/modules/5.15.0-117-generic/kernel/drivers/hid/hid.ko \ninsmod /lib/modules/5.15.0-117-generic/kernel/drivers/hid/usbhid/usbhid.ko \n</code></pre>"},{"location":"linux/drivers/module/#_13","title":"\u52a0\u8f7d\u6a21\u5757","text":"<p><code>modprobe</code>\u547d\u4ee4\u662f\u6700\u5e38\u7528\u7684\u52a0\u8f7d\u6a21\u5757\u7684\u5de5\u5177\uff0c\u5b83\u4f1a\u81ea\u52a8\u5904\u7406\u6a21\u5757\u4f9d\u8d56\u5173\u7cfb\uff0c\u800c<code>insmod</code>\u547d\u4ee4\u5219\u4e0d\u4f1a\u3002</p> <p>\u5982\u679c\u9700\u8981\u5728 Linux \u542f\u52a8\u65f6\u81ea\u52a8\u52a0\u8f7d\u6a21\u5757\uff0c\u53ef\u4ee5\u5c06\u6a21\u5757\u7684\u540d\u79f0\u6dfb\u52a0\u5230<code>/etc/modules</code>\u6587\u4ef6\u4e2d\u3002</p>"},{"location":"linux/drivers/module/#_14","title":"\u5220\u9664\u6a21\u5757","text":"<p>\u53ef\u4ee5\u4f7f\u7528<code>modprobe -r</code>\u547d\u4ee4\u5220\u9664\u6a21\u5757\uff0c\u5b83\u4f1a\u81ea\u52a8\u5904\u7406\u6a21\u5757\u4f9d\u8d56\u5173\u7cfb\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>rmmod</code>\u547d\u4ee4\u3002</p>"},{"location":"linux/drivers/module/#_15","title":"\u751f\u6210\u4f9d\u8d56\u5173\u7cfb","text":"<p><code>depmod</code>\u547d\u4ee4\u7528\u4e8e\u751f\u6210 modules.dep \u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u5bf9\u4e8e<code>modprobe</code>\u547d\u4ee4\u7684\u81ea\u52a8\u5904\u7406\u4f9d\u8d56\u5173\u7cfb\u5f88\u6709\u7528\u3002</p>"},{"location":"linux/drivers/netdev/","title":"\u7f51\u7edc\u8bbe\u5907\u9a71\u52a8","text":""},{"location":"linux/drivers/pcie/","title":"PCIE","text":""},{"location":"linux/drivers/pinctrl/","title":"Pinctrl\u5b50\u7cfb\u7edf","text":"<p>Pinctrl\uff1aPin Controller\uff0c\u5373\u5f15\u811a\u63a7\u5236\u5668\uff0c\u901a\u4fd7\u5730\u6765\u8bf4\u5c31\u662f\u4e00\u7ec4\u53ef\u4ee5\u63a7\u5236\u5f15\u811a\u7684\u5bc4\u5b58\u5668\u96c6\u5408\u3002\u5b83\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e09\u79cd\u529f\u80fd\uff1a</p> <ul> <li>\u5f15\u811a\u679a\u4e3e\u4e0e\u547d\u540d\uff0c\u6bcf\u4e2apin\u7684ID\u552f\u4e00</li> <li>\u5f15\u811a\u590d\u7528\uff0c\u6bd4\u5982\u5355\u4e2a\u5f15\u811a\u53ef\u4ee5\u914d\u7f6e\u6210GPIO\uff0c\u591a\u4e2a\u5f15\u811a\u8fd8\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2apin group\uff0c\u5f62\u6210\u7279\u5b9a\u7684\u529f\u80fd</li> <li>\u5f15\u811a\u914d\u7f6e\uff0c\u6bd4\u5982\u4f7f\u80fd\u6216\u7981\u6b62\u5f15\u811a\u7684\u4e0a\u62c9\u3001\u4e0b\u62c9\u7535\u963b</li> </ul> <p>\u5f53\u5b9e\u4f8b\u5316\u4e00\u4e2apin controller\u65f6\uff0c\u5b83\u4f1a\u5728pinctrl\u5b50\u7cfb\u7edf\u6846\u67b6\u4e0b\u6ce8\u518c\u4e00\u4e2a\u63cf\u8ff0\u7b26\uff0c\u8be5\u63cf\u8ff0\u7b26\u5305\u542b\u4e00\u4e2a\u5f15\u811a\u63cf\u8ff0\u7b26\u6570\u7ec4\uff0c\u63cf\u8ff0\u4e86\u8fd9\u4e2a\u7279\u5b9a\u7684\u5f15\u811a\u63a7\u5236\u5668\u5904\u7406\u7684\u5f15\u811a\u3002</p> <p>pinctrl\u5b50\u7cfb\u7edf\u6d89\u53ca\u5230\u4e24\u4e2a\u5bf9\u8c61\uff1a</p> <ul> <li> <p>pin controller device\uff1a\u63d0\u4f9b\u5f15\u811a\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u7531\u539f\u5382\u5de5\u7a0b\u5e08\u63d0\u4f9b\u3002</p> </li> <li> <p>client device\uff1a\u4f7f\u7528pinctrl\u5b50\u7cfb\u7edf\u7684\u8bbe\u5907\uff0c\u9700\u8981\u63cf\u8ff0\u4f7f\u7528\u7684\u5f15\u811a\uff0c\u7531\u9a71\u52a8\u5de5\u7a0b\u5e08\u7f16\u5199\u3002</p> </li> </ul> <p>\u5185\u6838\u5206\u522b\u7528<code>struct pinctrl_dev</code>\u548c<code>struct device</code>\u6765\u8868\u793a\u4e0a\u9762\u4e24\u4e2a\u5bf9\u8c61\u3002</p>"},{"location":"linux/drivers/pinctrl/#_1","title":"\u6e90\u6587\u4ef6\u5217\u8868","text":"<p>pinctrl\u5b50\u7cfb\u7edf\u76f8\u5173\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u5982\u4e0b\uff1a</p> <p>1.\u6e90\u6587\u4ef6\u5217\u8868</p> \u6587\u4ef6\u540d \u63cf\u8ff0 core.h \u6838\u5fc3\u6570\u636e\u7ed3\u6784\u5934\u6587\u4ef6 pinctrl.h \u63a5\u53e3\u6587\u4ef6 pinmux.h \u5f15\u811a\u590d\u7528\u5934\u6587\u4ef6 pinconf.h \u5f15\u811a\u914d\u7f6e\u5934\u6587\u4ef6 <p>2.\u548c\u5176\u4ed6\u5185\u6838\u6a21\u5757\u63a5\u53e3\u6587\u4ef6\u5217\u8868</p> \u6587\u4ef6\u540d \u63cf\u8ff0 consumer.h \u5176\u4ed6\u7684driver\u8981\u4f7f\u7528pinctrl\u5b50\u7cfb\u7edf\u65f6\uff0c\u9700\u8981\u5305\u542b\u8fd9\u4e2a\u5934\u6587\u4ef6 devinfo.h linux\u5185\u6838\u9a71\u52a8\u8bbe\u5907\u6a21\u578b\u6a21\u5757\u4f7f\u7528\u7684\u63a5\u53e3 machine.h \u548cmachine\u6a21\u5757\u7684\u63a5\u53e3 <p>3.low level pin controller driver\u63a5\u53e3\u6587\u4ef6\u5217\u8868</p> \u6587\u4ef6\u540d \u63cf\u8ff0 pinconf-generic.h \u5f15\u811a\u914d\u7f6e\u7684\u901a\u7528\u63a5\u53e3 pinconf.h \u5f15\u811a\u914d\u7f6e\u7684\u63a5\u53e3 pinctrl-state.h \u4fdd\u5b58pin controller\u7684\u72b6\u6001"},{"location":"linux/drivers/pinctrl/#_2","title":"\u8bbe\u5907\u6811\u63cf\u8ff0","text":"<p>pinctrl\u5b50\u7cfb\u7edf\u7684\u8bbe\u5907\u6811\u5206\u4e3a\u4e24\u90e8\u5206\uff1a</p> <ul> <li>\u5ba2\u6237\u7aef\uff1a\u7531\u539f\u5382\u5de5\u7a0b\u5e08\u7f16\u5199\uff0c\u6bcf\u4e2a\u5382\u5bb6\u7684\u8bed\u6cd5\u4e0d\u540c</li> <li>\u670d\u52a1\u7aef\uff1a\u7531\u9a71\u52a8\u5de5\u7a0b\u5e08\u7f16\u5199\uff0c\u8bed\u6cd5\u56fa\u5b9a</li> </ul> <p>\u7531\u4e8e\u670d\u52a1\u7aef\u6bd4\u8f83\u7b80\u5355\uff0c\u6211\u4eec\u5148\u6765\u770b\u670d\u52a1\u7aef\u7684\u8bed\u6cd5\u3002</p> <p>\u4e00\u4e2a\u5178\u578b\u7684client device\u5f15\u7528\u5f15\u811a\u914d\u7f6e\u7684\u5b9e\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>device-node-name {  \n    pinctrl-names = \"default\", \"init\", \"sleep\";   \n    pinctrl-0 = &lt;pin-config-0-a&gt;; \n    pinctrl-1 = &lt;pin-config-1-b&gt;; \n    pinctrl-2 = &lt;pin-config-2-c&gt;;        \n};\n</code></pre> <p>pinctrl-names\u8868\u793a\u5f15\u811a\u7684\u4e09\u79cd\u72b6\u6001\u2014\u2014default, init, sleep\u3002\u72b6\u6001\u7684\u5b9a\u4e49\u4e0e\u7535\u6e90\u7ba1\u7406\u7cfb\u7edf\u76f8\u5173\uff08Power Management\uff09\u3002\u6bd4\u5982\u5f53\u8bbe\u5907\u8fdb\u5165\u7761\u7720\u72b6\u6001\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u7cbe\u786e\u63a7\u5236\u5f15\u811a\u72b6\u6001\u4ee5\u8282\u7701\u529f\u8017\u3002\u6bcf\u4e2a\u72b6\u6001\u4ece0 ~ 2\u6309\u987a\u5e8f\u7f16\u53f7\u3002pinctrl-x\u540e\u9762\u8ddf\u7684\u662f\u5f15\u811a\u7684\u914d\u7f6e\uff0c\u7531\u539f\u5382\u5de5\u7a0b\u5e08\u6307\u5b9a\u3002</p> <p>\u5f15\u811a\u914d\u7f6e\u7684\u8bbe\u5907\u6811\u63cf\u8ff0\u5982\u4e0b\uff1a</p> s5pv210-pinctrl.dtsi<pre><code>&amp;pinctrl0 {\n    gpa0: gpa0 {\n        gpio-controller;        /*\u8fd9\u662f\u4e00\u4e2aGPIO\u63a7\u5236\u5668*/\n        #gpio-cells = &lt;2&gt;;      /*\u9700\u89812\u4e2a32\u4f4d\u7684\u6570\u6765\u63cf\u8ff0\u8fd9\u4e2aGPIO*/\n\n        interrupt-controller;   /*\u8fd9\u662f\u4e00\u4e2a\u4e2d\u65ad\u63a7\u5236\u5668*/\n        #interrupt-cells = &lt;2&gt;;\n    };\n\n    gpa1: gpa1 {\n        gpio-controller;\n        #gpio-cells = &lt;2&gt;;\n\n        interrupt-controller;\n        #interrupt-cells = &lt;2&gt;;\n    };\n};\n\n/*\u7701\u7565\u5176\u4ed6\u5f15\u811a\u914d\u7f6e*/\n</code></pre> <p>\u9664\u4e86\u5355\u4e2a\u5f15\u811a\u7684\u63cf\u8ff0\uff0c\u8fd8\u53ef\u4ee5\u5c06\u591a\u4e2a\u5f15\u811a\u7ec4\u5408\u5728\u4e00\u8d77\u4ee5\u5b9e\u73b0\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u6bd4\u5982SPI\u63a5\u53e3\u3001I2C\u63a5\u53e3\u7b49\uff0c\u8fd9\u88ab\u79f0\u4e3a\u5f15\u811a\u7ec4\uff08pin group\uff09\uff0c\u5176\u8bbe\u5907\u6811\u63cf\u8ff0\u5982\u4e0b\uff1a</p> s5pv210-pinctrl.dtsi<pre><code>uart0_data: uart0-data {\n    samsung,pins = \"gpa0-0\", \"gpa0-1\";\n    samsung,pin-function = &lt;EXYNOS_PIN_FUNC_2&gt;;\n    samsung,pin-pud = &lt;S3C64XX_PIN_PULL_NONE&gt;;\n    samsung,pin-drv = &lt;EXYNOS4_PIN_DRV_LV1&gt;;\n};\n\n...\ni2c0_bus: i2c0-bus {\n    samsung,pins = \"gpd1-0\", \"gpd1-1\";\n    samsung,pin-function = &lt;EXYNOS_PIN_FUNC_2&gt;;\n    samsung,pin-pud = &lt;S3C64XX_PIN_PULL_UP&gt;;\n    samsung,pin-drv = &lt;EXYNOS4_PIN_DRV_LV1&gt;;\n};\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cuart0\u7684\u5f15\u811a\u7ec4\u914d\u7f6e\u9700\u8981\u7528\u5230\"gpa0-0, gpa0-1\"\uff0ci2c0\u7684\u5f15\u811a\u7ec4\u914d\u7f6e\u9700\u8981\u7528\u5230\"gpd1-0\", \"gpd1-1\"\u3002\u4e00\u65e6\u9009\u62e9\u4e86\u67d0\u4e2a\u529f\u80fd\uff0cpins\u4e2d\u5b9a\u4e49\u7684\u6240\u6709\u5f15\u811a\u90fd\u9700\u8981\u5728pin-function\u4e2d\u505a\u76f8\u5e94\u7684\u529f\u80fd\u8bbe\u5b9a\uff0c\u5177\u4f53\u8bbe\u5b9a\u7684\u503c\u9700\u8981\u5728\u82af\u7247\u624b\u518c\u4e2d\u67e5\u627e\u3002</p> <p>\u5177\u4f53\u7684\u914d\u7f6e\u4fe1\u606f\u6bcf\u4e2aSoC\u5382\u5546\u90fd\u6709\u4e0d\u540c\u7684\u6807\u51c6\uff0c\u9664\u975e\u4f60\u662f\u539f\u5382\u5de5\u7a0b\u5e08\uff0c\u5426\u5219\u53ea\u9700\u8981\u4f9d\u846b\u82a6\u753b\u74e2\u5373\u53ef\u3002</p> <p>\u7531\u8bbe\u5907\u6811\u7684\u77e5\u8bc6\u6211\u4eec\u77e5\u9053\uff0c\u6bcf\u4e2a\u8bbe\u5907\u6811\u63cf\u8ff0\u7684device node\u6700\u7ec8\u4f1a\u5f62\u6210\u4e00\u4e2a\u6811\u72b6\u7ed3\u6784\uff0c\u5728\u5185\u6838\u521d\u59cb\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u626b\u63cf\u8fd9\u4e2a\u6811\u72b6\u7ed3\u6784\uff0c\u5e76\u6839\u636e\u6bcf\u4e2adevice node\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u521d\u59cb\u5316\u5bf9\u5e94\u7684\u8bbe\u5907\u5e76\u52a0\u5165\u5230\u5185\u6838\u4e2d\u3002\u7c7b\u4f3c\u5730\uff0cpin controller driver\u7684\u521d\u59cb\u5316\u4e5f\u662f\u4ece\u8bbe\u5907\u6811\u8282\u70b9\u5f00\u59cb\u7684\uff1a</p> <pre><code>pinctrl@56000000{\n    reg=&lt;0x56000000 0x1000=\"\"&gt;;\n    compatible=\"samsung, s3c2416-pinctrl\";\n}\n</code></pre> <p>compatible\u5c5e\u6027\u7528\u6765\u6307\u793a\u5185\u6838\u9009\u7528\u54ea\u4e00\u4e2apin controller driver\u6765\u9a71\u52a8\u8be5\u8bbe\u5907\u3002pinctrl\u5b50\u7cfb\u7edf\u8981\u60f3\u8fdb\u884c\u63a7\u5236\uff0c\u5fc5\u987b\u6709\u4e00\u4e2a\u63a7\u5236\u5bf9\u8c61\uff0c\u5728\u8f6f\u4ef6\u5c42\u9762\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u65b9\u6cd5\u5c06\u786c\u4ef6\u4fe1\u606f\u6ce8\u518c\u5230pinctrl\u5b50\u7cfb\u7edf\u4e2d\u53bb\u3002</p>"},{"location":"linux/drivers/pinctrl/#_3","title":"\u6570\u636e\u7ed3\u6784","text":"<p>pinctrl\u5b50\u7cfb\u7edf\u7684\u6570\u636e\u7ed3\u6784\u6bd4\u8f83\u590d\u6742\uff0c\u5927\u81f4\u5982\u4e0b\uff1a</p> <p></p> <p>\u4e3b\u8981\u6d89\u53ca\u5230\u7684\u6570\u636e\u7ed3\u6784\u662f\uff1a</p> <ul> <li>pin controller device\u76f8\u5173\uff1apinctrl_dev, pinctrl_desc, pinctrl_ops, pinmux_ops, pinconf_ops</li> <li>client device\u76f8\u5173\uff1apinctrl, pinctrl_state, pinctrl_setting, pinctrl_map, pinctrl_dt_map</li> </ul> <p>\u9a71\u52a8\u5f00\u53d1\u5de5\u7a0b\u5e08\u5e94\u5728client device\u4e2d\u5b9e\u73b0\u81ea\u5df1\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u7136\u540e\u8c03\u7528<code>pinctrl_register()</code>\u51fd\u6570\u5c06\u8be5\u914d\u7f6e\u4fe1\u606f\u6ce8\u518c\u5230pinctrl\u5b50\u7cfb\u7edf\u4e2d\u53bb\uff1a</p> <p></p> <p><code>struct pinctrl_dev</code>\u7ed3\u6784\u4f53\u7528\u6765\u63cf\u8ff0SoC\u7684\u6240\u6709\u5f15\u811a\u4fe1\u606f\u548c\u4e00\u7cfb\u5217\u64cd\u4f5c\u51fd\u6570\u96c6\u3002\u6210\u5458<code>struct pin_desc</code>\u7ed3\u6784\u4f53\u7528\u6765\u63cf\u8ff0\u7279\u5b9a\u5f15\u811a\u63a7\u5236\u5668\uff0c\u5305\u62ec\u5f15\u811a\u914d\u7f6e\u4fe1\u606f\u4ee5\u53ca\u8bbe\u7f6e\u8be5\u5f15\u811a\u63a7\u5236\u5668\u7684\u65b9\u6cd5\uff0c\u4e5f\u5c31\u662f<code>pinctrl_ops</code>\u3001<code>pinmux_ops</code>\u3001<code>pinconf_ops</code>\u3002\u8fd9\u4e9b\u4e00\u822c\u7531SoC\u539f\u5382\u6765\u63d0\u4f9b\u9a71\u52a8\u3002</p> <p><code>pinctrl</code>\u7528\u6765\u63cf\u8ff0client device\u5f15\u811a\u7684\u72b6\u6001\u548c\u4f7f\u7528\u60c5\u51b5\uff0c\u6bd4\u5982\u5bf9\u4e8euart\u3001i2c\u3001spi\u7b49\u8bbe\u5907\u5982\u679c\u90fd\u9700\u8981\u901a\u8fc7pinctrl\u7cfb\u7edf\u4e0e\u5176\u4ed6\u8bbe\u5907\u901a\u4fe1\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u914d\u7f6e\u76f8\u5e94\u7684\u5f15\u811a\u4fe1\u606f\u8fde\u63a5\u5230\u5bf9\u5e94\u7684\u63a7\u5236\u5668\u4ee5\u53ca\u914d\u7f6e\u5f15\u811a\u7684\u4e00\u4e9b\u7535\u6c14\u4fe1\u606f\uff0c\u4f8b\u5982\u4e0a\u62c9\u4e0b\u62c9\u7b49\u3002\u5728\u4f11\u7720\u65f6\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u9ad8\u963b\u6001\u6765\u964d\u4f4e\u529f\u8017\u3002\u8be5\u6570\u636e\u7ed3\u6784\u65e2\u7136\u662fclient\u7aef\u5c31\u9700\u8981\u6302\u5165\u5230\u8bbe\u5907\u9a71\u52a8\u6a21\u578b\u7ed3\u6784\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u5176\u5b9e\u662f<code>struct dev_pin_info</code>\u7ed3\u6784\u4f53\u7684\u4e00\u4e2a\u6210\u5458\uff0c\u800c<code>struct dev_pin_info</code>\u53c8\u662f<code>struct device</code>\u7ed3\u6784\u4f53\u7684\u4e00\u4e2a\u6210\u5458\u3002</p> <p><code>pinctrl_map</code>\u7528\u6765\u63cf\u8ff0\u677f\u7ea7\u914d\u7f6e\u4fe1\u606f\uff0c\u4e00\u5757\u5355\u677f\u4f1a\u4f7f\u7528SoC\u7684\u4e0d\u540c\u63a7\u5236\u5668\u548c\u4e0d\u540c\u914d\u7f6e\u3002\u82e5DTS\u4e2d\u6709\u8282\u70b9\u5982\u4e0b\uff1a</p> <pre><code>&amp;uart0 {\n    pinctrl-names = \"default\", \"sleep\";\n    pinctrl-0 = &lt;&amp;uart0_pins&gt;;\n    pinctrl-1 = &lt;&amp;uart0_sleep_pins&gt;;\n    status = \"okay\";\n};\n</code></pre> <p>\u5219<code>pinctrl-0</code>\u4ee5\u53ca<code>pinctrl-1</code>\u4f1a\u88ab\u89e3\u6790\u6210\u4e00\u4e2a\u4e2a<code>pinctrl_map</code>\u7ed3\u6784\u4f53\uff0c\u7136\u540e\u901a\u8fc7pinctrl_register_mappings()`\u51fd\u6570\u5c06\u63a7\u5236\u5668\u7528\u5230\u7684\u5f15\u811a\u4fe1\u606f\u6ce8\u518c\u5230\u5185\u6838\u3002</p>"},{"location":"linux/drivers/pinctrl/#pin-controller-device","title":"pin controller device","text":"<p><code>struct pinctrl_dev</code>\u7ed3\u6784\u4f53\u7528\u6765\u8868\u793a\u4e00\u4e2apin controller device\uff0c\u8d1f\u8d23\u7ba1\u7406\u5f15\u811a\uff0c\u540e\u7eed\u7684\u8bb8\u591a\u6570\u636e\u7ed3\u6784\u90fd\u9700\u8981\u4e0e\u6b64\u5173\u8054\uff1a</p> <pre><code>struct pinctrl_dev {\n    struct list_head node;\n    struct pinctrl_desc *desc;\n    struct list_head gpio_ranges;\n    struct device *dev;\n    struct module *owner;\n    void *driver_data;\n    struct pinctrl *p;\n    struct pinctrl_state *hog_default;\n    struct pinctrl_state *hog_sleep;\n};\n</code></pre> <p>desc\uff1apin controller\u63cf\u8ff0\u7b26\uff0c\u7528\u4e8e\u63cf\u8ff0\u5f15\u811a\u4fe1\u606f\u3002</p> <p>gpio_range\uff1a\u6b64pin controller\u5904\u7406\u7684GPIO\u8303\u56f4\u5217\u8868\u3002</p> <p>dev\uff1apin controller\u7684\u7236\u8bbe\u5907\uff0c\u4e00\u822c\u8bbe\u7f6e\u4e3a\u5e73\u53f0\u8bbe\u5907\u7684dev\u6210\u5458\u3002</p> <p>owner\uff1a\u6240\u6709\u8005\u3002</p> <p>driver_data\uff1a\u9a71\u52a8\u7a0b\u5e8f\u7684\u79c1\u6709\u6570\u636e\u3002</p> <p>p\uff1a\u8be5pin controller\u5bf9\u5e94\u7684client device\u3002</p> <p>hog_default\uff1a\u6b64\u8bbe\u5907\u5360\u7528\u7684\u5f15\u811a\u7684\u9ed8\u8ba4\u72b6\u6001\u3002</p> <p>hog_sleep\uff1a\u6b64\u8bbe\u5907\u5360\u7528\u7684\u5f15\u811a\u7684\u7761\u7720\u72b6\u6001\u3002</p> <p><code>struct pinctrl_desc</code>\u7528\u6765\u5b9a\u4e49\u548c\u914d\u7f6epin controller\u7684\u63cf\u8ff0\u4fe1\u606f\uff1a</p> <pre><code>struct pinctrl_desc {\n    const char *name;\n    const struct pinctrl_pin_desc *pins;\n    unsigned int npins;\n    const struct pinctrl_ops *pctlops;\n    const struct pinmux_ops *pmxops;\n    const struct pinconf_ops *confops;\n    struct module *owner;\n};\n</code></pre> <p>name\uff1apin controller\u7684\u540d\u79f0\u3002</p> <p>pins\uff1a\u8be5pin controller\u5904\u7406\u7684\u6240\u6709\u5f15\u811a\u7684\u63cf\u8ff0\u7b26\u6570\u7ec4\u3002</p> <p>npins\uff1a\u6570\u7ec4\u4e2d\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\uff0c\u4e00\u822c\u7b49\u4e8eARRAY_SIZE(pins)\u3002</p> <p>pctlops\uff1a\u5f15\u811a\u63a7\u5236\u64cd\u4f5c\u3002</p> <p>pmxops\uff1a\u5f15\u811a\u590d\u7528\u64cd\u4f5c\u3002</p> <p>confops\uff1a\u5f15\u811a\u914d\u7f6e\u64cd\u4f5c\u3002</p> <p>\u5bf9\u4e8e\u67d0\u4e2apin controller device\u6765\u8bf4\uff0c\u5b83\u8981\u641e\u660e\u767d\u81ea\u5df1\u7ba1\u7406\u591a\u5c11\u5f15\u811a\uff0c\u5e76\u4f7f\u7528\u81ea\u7136\u6570\u4e3a\u8fd9\u4e9b\u5f15\u811a\u7f16\u53f7\u3002\u7cfb\u7edf\u4e2d\u7684\u5f15\u811a\u4fe1\u606f\uff0c\u90fd\u7531<code>struct pinctrl_pin_desc</code>\u6765\u63cf\u8ff0\uff0c\u5305\u62ec\u7f16\u53f7\u3001\u540d\u5b57\u548c\u6570\u636e\uff1a</p> <pre><code>struct pinctrl_pin_desc {\n    unsigned number;\n    const char *name;\n    void *drv_data;\n};\n</code></pre> <p>number\uff1a\u5f15\u811a\u7f16\u53f7\u3002</p> <p>name\uff1a\u5f15\u811a\u540d\u79f0\u3002</p> <p>drv_data\uff1a\u5f15\u811a\u7684\u79c1\u6709\u6570\u636e\u3002</p> <p><code>struct pinctrl_pin_desc</code>\u7ed3\u6784\u4f53\u4e2d\u7684\u7f16\u53f7\u548c\u540d\u79f0\u5b8c\u5168\u7531\u9a71\u52a8\u5f00\u53d1\u4eba\u5458\u81ea\u5df1\u51b3\u5b9a\uff0c\u5f53\u7136\uff0c\u9700\u8981\u7b26\u5408\u4e00\u5b9a\u7684\u89c4\u8303\u3002</p> <p>\u8fd9\u4e48\u8bf4\u6709\u70b9\u67af\u71e5\uff0c\u6211\u4eec\u770b\u5b98\u65b9\u6587\u6863\u7684\u4e00\u4e2a\u793a\u4f8b\u3002\u5047\u8bbe\u5f15\u811a\u9635\u5217\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <pre><code>        A   B   C   D   E   \n\n   5    o   o   o   o   o  \n\n   4    o   o   o   o   o  \n\n   3    o   o   o   o   o  \n\n   2    o   o   o   o   o  \n\n   1    o   o   o   o   o  \n</code></pre> <p>\u8981\u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u6ce8\u518c\u4e00\u4e2a\u5f15\u811a\u63a7\u5236\u5668\u5e76\u4e3a\u8fd9\u4e2a\u5c01\u88c5\u4e0a\u7684\u6240\u6709\u5f15\u811a\u547d\u540d\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a</p> <pre><code>#include &lt;linux/pinctrl/pinctrl.h&gt;\nconst struct pinctrl_pin_desc foo_pins[] = {\n    PINCTRL_PIN(0, \"A5\"),\n    PINCTRL_PIN(1, \"B5\"),\n    PINCTRL_PIN(2, \"C5\"),\n    ...\n    PINCTRL_PIN(23, \"C1\"),\n    PINCTRL_PIN(24, \"D1\"),\n    PINCTRL_PIN(25, \"E1\"),\n};\n</code></pre> <p>\u5728\u5b9a\u4e49\u4e86\u5f15\u811a\u914d\u7f6e\u6570\u7ec4\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u544a\u8bc9<code>struct pinctrl_desc</code>\u7ed3\u6784\u4f53\u5f15\u811a\u7684\u4fe1\u606f\uff0c\u7136\u540e\u8c03\u7528<code>pinctrl_register_and_init()</code>\u51fd\u6570\u6ce8\u518c\u3002</p> <pre><code>static struct pinctrl_desc foo_desc = {\n    .name = \"foo\",\n    .pins = foo_pins,\n    .npins = ARRAY_SIZE(foo_pins),\n    .owner = THIS_MODULE,\n};\n\nstruct pinctrl_dev *pctl;\n\npinctrl_register_and_init(&amp;foo_desc, &lt;PARENT&gt;, NULL, &amp;pctl);\n\npinctrl_enable(pctl);\n</code></pre> <p>\u5728SoC\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u4e86\u5b9e\u73b0\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u9700\u8981\u5c06\u591a\u4e2a\u5f15\u811a\u8fdb\u884c\u7ec4\u5408\u3002\u56e0\u6b64pinctrl\u5b50\u7cfb\u7edf\u63d0\u4f9b\u4ee5group\u4e3a\u5355\u4f4d\uff0c\u540c\u65f6\u5730\u8bbf\u95ee\u548c\u63a7\u5236\u591a\u4e2a\u5f15\u811a\u7684\u529f\u80fd\uff0c\u8fd9\u5c31\u662f\u5f15\u811a\u7ec4(pin group)\u7684\u6982\u5ff5\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5b9a\u4e49\u5728<code>struct pinctrl_ops</code>\u7ed3\u6784\u4f53\u4e2d\u3002\u6211\u4eec\u6765\u770b\u5185\u6838\u5b98\u65b9\u6587\u6863\u7684\u4e00\u4e2a\u793a\u4f8b\uff1a</p> <p>\u64cd\u4f5c\u5f15\u811a\u7ec4</p> <pre><code>#include &lt;linux/pinctrl/pinctrl.h&gt;\n\nstruct foo_group {\n    const char *name;\n    const unsigned int *pins;\n    const unsigned num_pins;\n};\n\nstatic const unsigned int spi0_pins[] = { 0, 8, 16, 24 };\nstatic const unsigned int i2c0_pins[] = { 24, 25 };\n\nstatic const struct foo_group foo_groups[] = {\n    {\n        .name = \"spi0_grp\",\n        .pins = spi0_pins,\n        .num_pins = ARRAY_SIZE(spi0_pins),\n    },\n    {\n        .name = \"i2c0_grp\",\n        .pins = i2c0_pins,\n        .num_pins = ARRAY_SIZE(i2c0_pins),\n    },\n};\n\n\nstatic int foo_get_groups_count(struct pinctrl_dev *pctldev)\n{\n    return ARRAY_SIZE(foo_groups);\n}\n\nstatic const char *foo_get_group_name(struct pinctrl_dev *pctldev,\n                unsigned selector)\n{\n    return foo_groups[selector].name;\n}\n\nstatic int foo_get_group_pins(struct pinctrl_dev *pctldev, unsigned selector,\n            const unsigned **pins,\n            unsigned *num_pins)\n{\n    *pins = (unsigned *) foo_groups[selector].pins;\n    *num_pins = foo_groups[selector].num_pins;\n    return 0;\n}\n\nstatic struct pinctrl_ops foo_pctrl_ops = {\n    .get_groups_count = foo_get_groups_count,\n    .get_group_name = foo_get_group_name,\n    .get_group_pins = foo_get_group_pins,\n};\n\n\nstatic struct pinctrl_desc foo_desc = {\n...\n.pctlops = &amp;foo_pctrl_ops,\n}\n</code></pre> <p>pinctrl\u5b50\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570\u6765\u83b7\u53d6\u5f15\u811a\u7ec4\u7684\u4fe1\u606f\uff0c\u7ef4\u62a4\u8fd9\u4e9b\u51fd\u6570\u662f\u9a71\u52a8\u5de5\u7a0b\u5e08\u7684\u8d23\u4efb\u3002</p> <p>\u6b64\u65f6\u518d\u6765\u770b<code>struct pinctrl_ops</code>\u7ed3\u6784\u4f53\u4e2d\u7684\u4e00\u4e9b\u56de\u8c03\u51fd\u6570\uff0c\u4f60\u5927\u6982\u5c31\u80fd\u660e\u767d\u5b83\u4eec\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\u4e86\uff1a</p> <pre><code>struct pinctrl_ops {\n    int (*get_groups_count) (struct pinctrl_dev *pctldev);\n    const char *(*get_group_name) (struct pinctrl_dev *pctldev, unsigned selector);\n    int (*get_group_pins) (struct pinctrl_dev *pctldev, unsigned selector,\n                           const unsigned **pins, unsigned *num_pins);\n    void (*pin_dbg_show) (struct pinctrl_dev *pctldev, struct seq_file *s,\n                          unsigned offset);\n    int (*dt_node_to_map) (struct pinctrl_dev *pctldev, struct device_node *np_config,\n                           struct pinctrl_map **map, unsigned *num_maps);\n    void (*dt_free_map) (struct pinctrl_dev *pctldev, struct pinctrl_map *map, \n                         unsigned num_maps);\n};\n</code></pre> <p>get_groups_count()\uff1a\u83b7\u53d6pin group\u7684\u6570\u91cf\u3002</p> <p>get_group_name()\uff1a\u83b7\u53d6pin group\u7684\u540d\u79f0\u3002</p> <p>get_group_pins()\uff1a\u83b7\u53d6pin group\u7684\u5f15\u811a\u4fe1\u606f\u3002</p> <p>dt_node_to_map()\uff1a\u4e3a\u8bbe\u5907\u6811\u4e2d\u7684pin controller\u5b50\u8282\u70b9\u521b\u5efa\u6620\u5c04\uff0c\u5373\u5c06devic_node\u8f6c\u6362\u4e3a\u4e00\u7cfb\u5217\u7684<code>struct pinctrl_map</code>\u3002</p> <p>dt_free_map()\uff1a\u91ca\u653edt_node_to_map()\u521b\u5efa\u7684\u6620\u5c04\u3002</p> <p>SoC\u4e2d\u7684\u5f88\u591a\u5f15\u811a\u53ef\u4ee5\u914d\u7f6e\u4e3a\u4e0d\u540c\u7684\u529f\u80fd\uff0c\u8fd9\u88ab\u79f0\u4e3a\u5f15\u811a\u7684\u590d\u7528\uff08pinmux\uff09\uff0cpinctrl\u5b50\u7cfb\u7edf\u4f7f\u7528<code>struct pinmux_ops</code>\u7ed3\u6784\u4f53\u6765\u62bd\u8c61\u590d\u7528\u7684\u6709\u5173\u64cd\u4f5c\uff1a</p> <pre><code>struct pinmux_ops {\n    int (*request) (struct pinctrl_dev *pctldev, unsigned offset);\n    int (*free) (struct pinctrl_dev *pctldev, unsigned offset);\n    int (*get_functions_count) (struct pinctrl_dev *pctldev);\n    const char *(*get_function_name) (struct pinctrl_dev *pctldev, unsigned selector);\n    int (*get_function_groups) (struct pinctrl_dev *pctldev, unsigned selector,\n                                const char * const **groups, unsigned *num_groups);\n    int (*set_mux) (struct pinctrl_dev *pctldev, unsigned func_selector,\n                    unsigned group_selector);\n    int (*gpio_request_enable) (struct pinctrl_dev *pctldev, \n                                struct pinctrl_gpio_range *range, unsigned offset);\n    void (*gpio_disable_free) (struct pinctrl_dev *pctldev, \n                               struct pinctrl_gpio_range *range, unsigned offset);\n    int (*gpio_set_direction) (struct pinctrl_dev *pctldev,\n                               struct pinctrl_gpio_range *range, unsigned offset,\n                               bool input);\n    bool strict;\n};\n</code></pre> <p>request\uff1a\u7531\u6838\u5fc3\u8c03\u7528\uff0c\u4ee5\u67e5\u770b\u7279\u5b9a\u5f15\u811a\u662f\u5426\u53ef\u4ee5\u7528\u4e8e\u5f15\u811a\u590d\u7528\u3002\u5728\u9009\u62e9\u4efb\u4f55\u5b9e\u9645\u7684\u590d\u7528\u8bbe\u7f6e\u4e4b\u524d\uff0c\u5e94\u7531\u6838\u5fc3\u8c03\u7528\u6b64\u51fd\u6570\u6765\u83b7\u53d6\u5f15\u811a\u3002\u5982\u679c\u8be5\u9a71\u52a8\u7a0b\u5e8f\u65e0\u6cd5\u5904\u7406\u8868\u8ff0\u7684\u5f15\u811a\uff0c\u5219\u5e94\u8fd4\u56de\u8d1f\u9519\u8bef\u4ee3\u7801\u6765\u62d2\u7edd\u8bf7\u6c42\u3002</p> <p>free\uff1a\u5728\u7533\u8bf7\u540e\u91ca\u653e\u5f15\u811a\u3002</p> <p>get_functions_count\uff1a\u8fd4\u56depin controller device\u652f\u6301\u7684function\u6570\u76ee\u3002</p> <p>get_function_name\uff1a\u7ed9\u5b9a\u4e00\u4e2afunction selector\uff0c\u8fd4\u56de\u6307\u5b9afunction\u7684\u540d\u79f0\u3002</p> <p>get_function_groups\uff1a\u7ed9\u5b9a\u4e00\u4e2afunction selector\uff0c\u8fd4\u56de\u6307\u5b9afunction\u7684pin group\u4fe1\u606f\u3002</p> <p>set_mux\uff1a\u542f\u7528\u67d0\u4e2a\u590d\u7528\u529f\u80fd\u4e0e\u7279\u5b9a\u7684\u5f15\u811a\u7ec4\u3002\u9a71\u52a8\u7a0b\u5e8f\u4e0d\u9700\u8981\u5f04\u6e05\u695a\u542f\u7528\u8fd9\u4e2a\u529f\u80fd\u662f\u5426\u4e0e\u8be5\u7ec4\u5f15\u811a\u7684\u5176\u4ed6\u7528\u9014\u51b2\u7a81\uff0c\u8fd9\u6837\u7684\u51b2\u7a81\u7531\u5f15\u811a\u590d\u7528\u5b50\u7cfb\u7edf\u5904\u7406\u3002func_selector\u9009\u62e9\u4e00\u4e2a\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u800cgroup_selector\u9009\u62e9\u4e00\u7ec4\u8981\u4f7f\u7528\u7684\u7279\u5b9a\u5f15\u811a\u3002\u5728\u7b80\u5355\u7684\u63a7\u5236\u5668\u4e0a\uff0c\u540e\u8005\u53c2\u6570\u53ef\u80fd\u88ab\u5ffd\u7565\u3002</p> <p>gpio_request_enable\uff1a\u5728\u67d0\u4e9b\u5f15\u811a\u4e0a\u8bf7\u6c42\u5e76\u542f\u7528GPIO\u3002\u4ec5\u5f53\u4f60\u80fd\u591f\u5c06\u6bcf\u4e2a\u5f15\u811a\u5355\u72ec\u590d\u7528\u4e3aGPIO\u65f6\uff0c\u624d\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002\u53d7\u5f71\u54cd\u7684GPIO\u8303\u56f4\u8fde\u540c\u504f\u79fb\u91cf\uff08\u5f15\u811a\u53f7\u7801\uff09\u4e00\u8d77\u4f20\u9012\u5230\u7279\u5b9a\u7684GPIO\u8303\u56f4\u2014\u2014\u529f\u80fd\u9009\u62e9\u5668\u548c\u5f15\u811a\u7ec4\u4e0e\u6b64\u72ec\u7acb\uff0c\u4f46\u662f\u6838\u5fc3\u5c06\u786e\u4fdd\u5f15\u811a\u4e0d\u4f1a\u51b2\u7a81\u3002</p> <p>gpio_disable_free\uff1a\u5728\u67d0\u4e2a\u5f15\u811a\u4e0a\u91ca\u653eGPIO\u590d\u7528\u3002</p> <p>gpio_set_direction\uff1a\u8bbe\u7f6eGPIO\u7684\u8f93\u5165\u6216\u8f93\u51fa\u65b9\u5411\u3002</p> <p>strict\uff1a\u4e3atrue\u65f6\uff0c\u4e0d\u5141\u8bb8\u67d0\u4e2a\u5f15\u811a\u4f5c\u4e3aGPIO\u548c\u5176\u4ed6\u529f\u80fd\u540c\u65f6\u4f7f\u7528\u3002</p> <p>\u4ec0\u4e48\u662ffunction\uff1ffunction\u662f\u5f15\u811a\u529f\u80fd\u7684\u62bd\u8c61\uff0cSPI\u662f\u4e00\u4e2afunction\uff0cI2C\u4e5f\u662f\u4e00\u4e2afunction\u3002\u4f46\u662f\u5373\u4fbf\u77e5\u9053\u5177\u4f53\u7684function name\uff0c\u6211\u4eec\u4e5f\u4e0d\u80fd\u786e\u5b9a\u5176\u4f7f\u7528\u5f15\u811a\u7684\u60c5\u51b5\u3002\u6bd4\u5982\u4e00\u4e2aSPI0\u7684\u529f\u80fd\u53ef\u80fd\u4f7f\u7528\u4e86\u5f15\u811a\u7ec4{A8, A7, A6, A5}\uff0c\u4e5f\u53ef\u80fd\u4f7f\u7528\u4e86\u5f15\u811a\u7ec4{G4, G3, G2, G1}\u3002\u4f46\u6beb\u65e0\u7591\u95ee\uff0c\u8fd9\u4e24\u4e2a\u5f15\u811a\u7ec4\u4e0d\u80fd\u540c\u65f6\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\uff0c\u56e0\u4e3a\u82af\u7247\u5185\u90e8SPI0\u7684\u903b\u8f91\u529f\u80fd\u7535\u8def\u53ea\u6709\u4e00\u4e2a\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u7ed9\u51fafunction selector\uff08\u5c31\u50cf\u6570\u7ec4\u7684\u4e00\u4e2a\u7d22\u5f15\uff09\u548cfunction\u7684pin group selector\u624d\u80fd\u8fdb\u884cfunction mux\u7684\u8bbe\u5b9a\u3002</p> <p>\u5f15\u811a\u7684\u914d\u7f6e\uff0c\u6bd4\u5982\u4e0a\u62c9\u3001\u4e0b\u62c9\u3001\u9ad8\u963b\u6297\u7b49\uff0cpinctrl\u5b50\u7cfb\u7edf\u4f7f\u7528<code>struct pinconf_ops</code>\u7ed3\u6784\u4f53\u6765\u62bd\u8c61\u914d\u7f6e\u7684\u64cd\u4f5c\u3002\u5148\u6765\u770b\u5b98\u65b9\u6587\u6863\u7684\u793a\u4f8b\uff1a</p> <p>\u5f15\u811a\u7684\u914d\u7f6e</p> <pre><code>#include &lt;linux/pinctrl/pinctrl.h&gt;\n#include &lt;linux/pinctrl/pinconf.h&gt;\n#include \"platform_x_pindefs.h\"\n\nstatic int foo_pin_config_get(struct pinctrl_dev *pctldev,\n        unsigned offset,\n        unsigned long *config)\n{\n    struct my_conftype conf;\n\n    ... Find setting for pin @ offset ...\n\n    *config = (unsigned long) conf;\n}\n\nstatic int foo_pin_config_set(struct pinctrl_dev *pctldev,\n        unsigned offset,\n        unsigned long config)\n{\n    struct my_conftype *conf = (struct my_conftype *) config;\n\n    switch (conf) {\n        case PLATFORM_X_PULL_UP:\n        ...\n        }\n}\n\nstatic int foo_pin_config_group_get (struct pinctrl_dev *pctldev,\n        unsigned selector,\n        unsigned long *config)\n{\n    ...\n}\n\nstatic int foo_pin_config_group_set (struct pinctrl_dev *pctldev,\n        unsigned selector,\n        unsigned long config)\n{\n    ...\n}\n\nstatic struct pinconf_ops foo_pconf_ops = {\n    .pin_config_get = foo_pin_config_get,\n    .pin_config_set = foo_pin_config_set,\n    .pin_config_group_get = foo_pin_config_group_get,\n    .pin_config_group_set = foo_pin_config_group_set,\n};\n\n/* Pin config operations are handled by some pin controller */\nstatic struct pinctrl_desc foo_desc = {\n    ...\n    .confops = &amp;foo_pconf_ops,\n};\n</code></pre> <p>\u8fd9\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9<code>struct pinconf_ops</code>\u7ed3\u6784\u4f53\u4e2d\u7684\u56de\u8c03\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u5176\u4e2d\u5e26\u6709dbg\u5b57\u6bb5\u7684\u662f\u7528\u6765\u8c03\u8bd5\u7684\uff1a</p> <pre><code>struct pinconf_ops {\n#ifdef CONFIG_GENERIC_PINCONF\n    bool is_generic;\n#endif\n    int (*pin_config_get) (struct pinctrl_dev *pctldev, unsigned pin,\n                           unsigned long *config);\n    int (*pin_config_set) (struct pinctrl_dev *pctldev, unsigned pin,\n                           unsigned long *configs, unsigned num_configs);\n    int (*pin_config_group_get) (struct pinctrl_dev *pctldev, unsigned selector,\n                                 unsigned long *config);\n    int (*pin_config_group_set) (struct pinctrl_dev *pctldev, unsigned selector,\n                                 unsigned long *configs, unsigned num_configs);\n    void (*pin_config_dbg_show) (struct pinctrl_dev *pctldev, struct seq_file *s,\n                                 unsigned offset);\n    void (*pin_config_group_dbg_show) (struct pinctrl_dev *pctldev, struct seq_file *s,\n                                       unsigned selector);\n    void (*pin_config_config_dbg_show) (struct pinctrl_dev *pctldev, struct seq_file *s,\n                                        unsigned long config);\n};\n</code></pre> <p>is_generic\uff1a\u5bf9\u4e8e\u5e0c\u671b\u4f7f\u7528\u901a\u7528\u63a5\u53e3\u7684\u5f15\u811a\u63a7\u5236\u5668\uff0c\u8be5\u6807\u5fd7\u544a\u8bc9\u6846\u67b6\u5b83\u662f\u901a\u7528\u7684\u3002</p> <p>pin_config_get\uff1a\u83b7\u53d6\u67d0\u4e2a\u5f15\u811a\u7684\u914d\u7f6e\u3002</p> <p>pin_config_set\uff1a\u914d\u7f6e\u5355\u4e2a\u5f15\u811a\u3002</p> <p>pin_config_group_get\uff1a\u83b7\u53d6\u67d0\u4e2a\u5f15\u811a\u7ec4\u7684\u914d\u7f6e\u3002</p> <p>pin_config_group_set\uff1a\u914d\u7f6e\u67d0\u4e2a\u5f15\u811a\u7ec4\u4e2d\u7684\u6240\u6709\u5f15\u811a\u3002</p> <p>\u4e0b\u56fe\u63cf\u8ff0\u4e86pin controller device\u7c7b\u522b\u4e0b\u51e0\u4e2a\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a</p> <p></p>"},{"location":"linux/drivers/pinctrl/#client-device","title":"client device","text":"<p>\u4e3b\u8981\u5305\u542b\uff1a</p> <ul> <li>struct dev_pin_info</li> <li>struct pinctrl</li> <li>struct pinctrl_state</li> <li>struct pinctrl_setting</li> </ul> <p></p> <p>\u5728\u5185\u6838\u542f\u52a8\u9636\u6bb5\uff0cdevice_node\u4e00\u822c\u4f1a\u88ab\u8f6c\u6362\u4e3a<code>platform_device</code>\u7ed3\u6784\u4f53\uff0c\u6216\u8005\u5176\u4ed6\u7ed3\u6784\u4f53\u6bd4\u5982<code>i2c_client</code>\u3001<code>spi_device</code>\uff0c\u5b83\u4eec\u5185\u90e8\u90fd\u6709\u4e00\u4e2a<code>struct device</code>\u6210\u5458\uff08\u4e5f\u5373\u7ee7\u627f\u4e86struct device\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\uff09\u3002</p> <p>\u5728<code>struct device</code>\u7ed3\u6784\u4f53\u91cc\u6709\u4e00\u4e2a<code>struct dev_pin_info</code>\u7ed3\u6784\u4f53\uff0c\u7528\u6765\u4fdd\u5b58\u8bbe\u5907\u7684\u5f15\u811a\u4fe1\u606f\uff1a</p> <pre><code>struct device {\n    struct kobject kobj;\n    struct device *parent;\n    struct device_private *p;\n    ...\n#ifdef CONFIG_PINCTRL\n    struct dev_pin_info *pins;\n#endif\n    ....\n};\n</code></pre> <p><code>struct dev_pin_info</code>\u662f\u4e00\u4e2a\u7528\u4e8e\u5b58\u50a8client device\u5f15\u811a\u4fe1\u606f\u7684\u7ed3\u6784\u4f53\uff1a</p> <pre><code>struct dev_pin_info {\n    struct pinctrl *p;\n    struct pinctrl_state *default_state;\n    struct pinctrl_state *init_state;\n#ifdef CONFIG_PM\n    struct pinctrl_state *sleep_state;\n    struct pinctrl_state *idle_state;\n#endif\n};\n</code></pre> <p>p\uff1a\u4fdd\u5b58\u8be5\u8bbe\u5907\u7684\u6240\u6709\u72b6\u6001\u4fe1\u606f\uff0c\u5305\u62ec\u81ea\u5b9a\u4e49\u7684\u72b6\u6001\u3002</p> <p>default_state\uff1a\u8868\u793a\u8be5\u8bbe\u5907\u4e0a\u5f15\u811a\u7684\u9ed8\u8ba4\u72b6\u6001\u3002</p> <p>init_state\uff1a\u8868\u793a\u521d\u59cb\u5316\u5f15\u811a\u7684\u72b6\u6001\u3002</p> <p>sleep_state/idle_state\uff1a\u5982\u679c\u542f\u7528\u4e86\u7535\u6e90\u7ba1\u7406\u6a21\u5757\uff08Power Management\uff09\uff0c\u5206\u522b\u8868\u793a\u7761\u7720\u548c\u7a7a\u95f2\u72b6\u6001\u3002</p> <p>pinctrl\u5b50\u7cfb\u7edf\u53c8\u62bd\u8c61\u4e86<code>struct pinctrl</code>\u6765\u63cf\u8ff0\u4e00\u4e2aclient device\u7684\u6240\u6709\u72b6\u6001\uff1a</p> <pre><code>struct pinctrl {\n    struct list_head node;\n    struct device *dev;\n    struct list_head states;\n    struct pinctrl_state *state;\n    struct list_head dt_maps;\n    struct kref users;\n};\n</code></pre> <p>node\uff1a\u7528\u4e8e\u5c06\u8be5pin controller\u6302\u5165\u5230\u4e00\u4e2a\u94fe\u8868\u4e2d\u3002</p> <p>dev\uff1a\u8be5pin controller\u5bf9\u5e94\u7684device\u3002</p> <p>states\uff1a\u4fdd\u5b58\u8be5pin controller\u7684\u6240\u6709\u72b6\u6001\u4fe1\u606f\uff0c\u8fd9\u4e9b\u72b6\u6001\u4fe1\u606f\u90fd\u4fdd\u5b58\u5728\u4e00\u4e2a\u94fe\u8868\u4e2d\u3002</p> <p>state\uff1a\u5f53\u524dpin controller\u7684\u72b6\u6001\u3002</p> <p>dt_maps\uff1a\u4fdd\u5b58\u8be5pin controller\u5bf9\u5e94\u7684\u6240\u6709\u8bbe\u5907\u8282\u70b9\u4fe1\u606f\uff0c\u8fd9\u4e9b\u8bbe\u5907\u8282\u70b9\u4fe1\u606f\u90fd\u4fdd\u5b58\u5728\u4e00\u4e2a\u94fe\u8868\u4e2d\u3002</p> <p>users\uff1a\u5f15\u7528\u8ba1\u6570\u3002</p> <p>\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u9700\u8981\u548cpinctrl\u5b50\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u7684\u8bbe\u5907\u5728\u8fdb\u884c\u914d\u7f6e\u4e4b\u524d\u90fd\u9700\u8981\u9996\u5148\u83b7\u53d6\u8fd9\u4e2a<code>struct pinctrl</code>\u7ed3\u6784\u4f53\uff0c\u5c5e\u4e8e\u8be5\u8bbe\u5907\u7684\u6240\u6709\u7684\u72b6\u6001\u90fd\u5c06\u88ab\u6302\u5165\u5230\u4e00\u4e2a\u94fe\u8868\u4e2d\uff0c\u94fe\u8868\u5934\u5c31\u662fstates\u6210\u5458\u3002</p> <p>\u5355\u4e2a\u72b6\u6001\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>struct pinctrl_state {\n    struct list_head node;\n    const char *name;\n    struct list_head settings;\n};\n</code></pre> <p>name\uff1a\u6b64\u72b6\u6001\u7684\u540d\u79f0\u3002</p> <p>settings\uff1a\u5c5e\u4e8e\u8be5\u72b6\u6001\u7684\u6240\u6709settings\u3002</p> <p>\u8bbe\u5907\u5728\u5355\u4e2a\u72b6\u6001\u4e0b\u7684pinctrl\u63a7\u5236\u4fe1\u606f\uff0c\u7531<code>struct pinctrl_setting</code>\u7ed3\u6784\u4f53\u63cf\u8ff0\uff1a</p> <pre><code>struct pinctrl_setting { \n    struct list_head node; \n    enum pinctrl_map_type type; \n    struct pinctrl_dev *pctldev;    //\u5bf9\u5e94\u7684pin controller device\n    const char *dev_name;           //\u8bbe\u5907\u540d\u79f0\n    union { \n        struct pinctrl_setting_mux mux;             //mux\u914d\u7f6e\u6570\u636e\n        struct pinctrl_setting_configs configs;     //config\u914d\u7f6e\u6570\u636e\n    } data; \n};\n</code></pre> <p>\u5f53\u67d0\u4e2adriver\u8bbe\u5b9a\u4e00\u4e2apin state\u7684\u65f6\u5019\uff0cpinctrl\u5b50\u7cfb\u7edf\u5185\u90e8\u4f1a\u904d\u5386\u8be5state\u7684settings\u94fe\u8868\uff0c\u5c06\u4e00\u4e2a\u4e00\u4e2a\u7684setting\u8fdb\u884c\u8bbe\u5b9a\u3002\u8fd9\u4e9bsettings\u6709\u5404\u79cd\u7c7b\u578b\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>enum pinctrl_map_type { \n    PIN_MAP_TYPE_INVALID, \n    PIN_MAP_TYPE_DUMMY_STATE, \n    PIN_MAP_TYPE_MUX_GROUP,     // \u529f\u80fd\u590d\u7528\u7684setting\n    PIN_MAP_TYPE_CONFIGS_PIN,   // \u8bbe\u5b9a\u5355\u4e00\u4e00\u4e2apin\u7684\u7535\u6c14\u7279\u6027 \n    PIN_MAP_TYPE_CONFIGS_GROUP, // \u8bbe\u5b9a\u5355pin group\u7684\u7535\u6c14\u7279\u6027 \n};\n</code></pre> <p><code>struct pinctrl_setting_mux</code>\u7ed3\u6784\u4f53\u7528\u6765\u63cf\u8ff0pin mux\u76f8\u5173\u7684\u8bbe\u5b9a\uff08PIN_MAP_TYPE_MUX_GROUP\uff09\uff1a</p> <pre><code>struct pinctrl_setting_mux {\n    unsigned group;\n    unsigned func;\n};\n</code></pre> <p>group\uff1apin group selector\u3002</p> <p>function\uff1apin function selector\u3002</p> <p><code>struct pinctrl_setting_config</code>\u7ed3\u6784\u4f53\u7528\u6765\u63cf\u8ff0pin config\u76f8\u5173\u7684\u8bbe\u5b9a\uff08PIN_MAP_TYPE_CONFIGS_PIN\u548cPIN_MAP_TYPE_CONFIGS_GROUP\uff09\uff1a</p> <pre><code>struct pinctrl_setting_configs {\n    unsigned group_or_pin;\n    unsigned long *configs;\n    unsigned num_configs;\n};\n</code></pre> <p>group_or_pin\uff1a\u8981\u914d\u7f6e\u7684pin\u7f16\u53f7\u6216\u8005pin group selector\u3002</p> <p>configs\uff1a\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u5b58\u50a8\u4e86\u4e00\u7ec4\u914d\u7f6e\u53c2\u6570\u6216\u503c\uff0c\u7528\u4e8e\u8bbe\u7f6e\u7279\u5b9a\u5f15\u811a\u6216\u5f15\u811a\u7ec4\u7684\u786c\u4ef6\u53c2\u6570\u3002</p> <p>num_configs\uff1a\u9700\u8981\u5199\u5165\u7684\u914d\u7f6e\u53c2\u6570\u4e2a\u6570\u3002</p> <p><code>struct pinctrl_map</code>\u7528\u4e8e\u63cf\u8ff0client device\u7684\u6620\u5c04\u914d\u7f6e\uff0c\u4f7f\u7528pin controller device\u7684<code>pinctrl_desc-&gt;pctlops-&gt;dt_node_to_map</code>\u6765\u5904\u7406\u8bbe\u5907\u6811\u4e2d\u7684\u5f15\u811a\u914d\u7f6e\u8282\u70b9\u3002\u4f8b\u5982\u67d0\u914d\u7f6e\u8282\u70b9\u2014\u2014<code>pinctrl-0 = &lt;&amp;uart0_xfer &amp;uart0_cts &amp;uart0_rts&gt;</code>\uff0c\u90a3\u4e48uart0_xfer \u3001uart0_cts \u3001uart0_rts\u8282\u70b9\u5747\u4f1a\u88ab<code>dt_node_to_map()</code>\u51fd\u6570\u89e3\u6790\u4e3a\u4e00\u7cfb\u5217\u7684<code>struct pinctrl_map</code>\uff0c\u7136\u540e\u88ab\u8f6c\u6362\u4e3a<code>struct pinctrl_setting</code>\uff0c\u5b58\u5165<code>struct pinctrl_state.settings</code>\u94fe\u8868\u4e2d\u3002</p> <pre><code>struct pinctrl_map {\n    const char *dev_name;\n    const char *name;\n    enum pinctrl_map_type type;\n    const char *ctrl_dev_name;\n    union {\n        struct pinctrl_map_mux mux;\n        struct pinctrl_map_configs configs;\n    } data;\n};\n</code></pre> <p>dev_name\uff1a\u8bbe\u5907\u540d\u79f0\uff0c\u9700\u8981\u4e0e\u8be5client device\u4e2dstruct device\u4e2d\u7684\u540d\u79f0\u4e00\u81f4\u3002</p> <p>name\uff1a\u72b6\u6001\u540d\u79f0\u3002</p> <p>type\uff1a\u6620\u5c04\u9879\u7684\u7c7b\u578b\u3002</p> <p>ctrl_dev_name\uff1a\u8bbe\u5907\u540d\u79f0\u3002</p> <p>data\uff1a\u8be5\u6620\u5c04\u9879\u7684\u5177\u4f53\u6570\u636e\uff0c\u5305\u62ecmux\u548cconfigs\u4e24\u79cd\u7c7b\u578b\uff0c\u5206\u522b\u4ee3\u8868\u590d\u7528\u9009\u62e9\u548c\u5f15\u811a\u914d\u7f6e\u3002</p> <p><code>struct pinctrl_map_mux</code>\u7ed3\u6784\u4f53\u7528\u6765\u63cf\u8ff0pin mux\u76f8\u5173\u7684\u8bbe\u5b9a\uff08PIN_MAP_TYPE_MUX_GROUP\uff09\uff1a</p> <pre><code>struct pinctrl_map_mux {\n    const char *group;\n    const char *function;\n};\n</code></pre> <p>group\uff1a\u9700\u8981\u914d\u7f6e\u590d\u7528\u529f\u80fd\u7684pin group\u7684\u540d\u79f0\u3002</p> <p>function:\u590d\u7528\u529f\u80fd\u7684\u540d\u79f0\u3002</p> <p><code>struct pinctrl_map_configs</code>\u7ed3\u6784\u4f53\u7528\u6765\u63cf\u8ff0pin config\u76f8\u5173\u7684\u8bbe\u5b9a\uff08PIN_MAP_TYPE_CONFIGS_PIN\u548cPIN_MAP_TYPE_CONFIGS_GROUP\uff09\uff1a</p> <pre><code>struct pinctrl_map_configs {\n    const char *group_or_pin;\n    unsigned long *configs;\n    unsigned num_configs;\n};\n</code></pre> <p>group_or_pin\uff1a\u9700\u8981\u914d\u7f6e\u7684pin\u6216\u8005pin group\u7684\u540d\u79f0\u3002</p> <p>configs\uff1a\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u5b58\u50a8\u4e86\u4e00\u7ec4\u914d\u7f6e\u53c2\u6570\u6216\u503c\uff0c\u7528\u4e8e\u8bbe\u7f6e\u7279\u5b9a\u5f15\u811a\u6216\u5f15\u811a\u7ec4\u7684\u786c\u4ef6\u53c2\u6570\u3002</p> <p>num_configs\uff1a\u9700\u8981\u5199\u5165\u7684\u914d\u7f6e\u53c2\u6570\u4e2a\u6570\u3002</p> <p><code>struct pinctrl_maps</code>\u7ed3\u6784\u4f53\u7528\u6765\u63cf\u8ff0\u6620\u5c04\u8868\uff08mapping table\uff09\u7684\u90e8\u5206\u9879\uff1a</p> <pre><code>struct pinctrl_maps {\n    struct list_head node;\n    const struct pinctrl_map *maps;\n    unsigned num_maps;\n};\n</code></pre> <p>maps\uff1a\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u5b58\u50a8\u4e86\u4e00\u7ec4\u6620\u5c04\u8868\u9879\u3002</p> <p>num_maps\uff1a\u9700\u8981\u5199\u5165\u7684\u6620\u5c04\u8868\u9879\u4e2a\u6570\u3002</p> <p>\u5728\u524d\u9762\u6211\u4eec\u8bf4\u8fc7\uff0c\u5f15\u811a\u914d\u7f6e\u8282\u70b9\u4f1a\u88ab<code>dt_node_to_map()</code>\u51fd\u6570\u89e3\u6790\u4e3a<code>struct pinctrl_map</code>\uff0c\u5e76\u4ee5\u6570\u7ec4\u6307\u9488\u5f62\u5f0f\u8fd4\u56de\u3002 \u800c<code>struct pinctrl_dt_map</code>\u5c31\u662f\u4e00\u4e2a\u7528\u4e8e\u5b58\u50a8\u4ece\u8bbe\u5907\u6811\u89e3\u6790\u51fa\u6765\u7684\u6620\u5c04\u8868\u6570\u636e\u7684\u7ed3\u6784\u4f53\uff0c\u5176\u6210\u5458map\u6307\u5411\u8fd9\u4e2a<code>struct pinctrl_map</code>\u6570\u7ec4\uff1a</p> <pre><code>struct pinctrl_dt_map {\n    struct list_head node;\n    struct pinctrl_dev *pctldev;\n    struct pinctrl_map *map;\n    unsigned num_maps;\n};\n</code></pre> <p>pctldev\uff1a\u6307\u5411\u5206\u914d\u8be5\u6620\u5c04\u8868\u7684pin controller device\u3002</p> <p>map\uff1a\u5b9e\u9645\u6620\u5c04\u8868\u6570\u636e\u3002</p> <p>num_maps\uff1a\u6620\u5c04\u8868\u4e2d\u7684\u6570\u76ee\u3002</p>"},{"location":"linux/drivers/pinctrl/#gpio","title":"\u4e0eGPIO\u5b50\u7cfb\u7edf\u4ea4\u4e92","text":"<p>\u4f5c\u4e3a\u8f6f\u4ef6\u5de5\u7a0b\u5e08\uff0c\u6211\u4eec\u671f\u671b\u7684\u786c\u4ef6\u8bbe\u8ba1\u5e94\u8be5\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>GPIO\u7684HW block\u5e94\u8be5\u4e0e\u5176\u4ed6\u5b50\u7cfb\u7edf\u7684block\u662f\u5e73\u7ea7\u5173\u7cfb\uff0c\u5b83\u4eec\u5171\u540c\u8f93\u5165\u5230\u4e00\u4e2a\u590d\u7528\u5668block\uff0c\u7531\u8be5block\u7684\u5bc4\u5b58\u5668\u63a7\u5236\u54ea\u4e00\u6761\u7535\u8def\u88ab\u63a5\u901a\u3002\u800cpin configuration\u5e94\u8be5\u662f\u5168\u5c40\u7684\uff0c\u4e0d\u8bba\u54ea\u79cdblock\u5904\u4e8eactive\u72b6\u6001\uff0c\u53ea\u8981\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\u4f9b\u5b83\u4eec\u4f7f\u7528\u5373\u53ef\u3002\u5728\u8f6f\u4ef6\u5c42\u9762\uff0c\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u8ba9pinctrl\u5b50\u7cfb\u7edf\u548cGPIO\u5b50\u7cfb\u7edf\u5b8c\u5168\u72ec\u7acb\uff0c\u5404\u81ea\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u4f46\u662f\u5b9e\u9645\u7684SOC\u8bbe\u8ba1\u5e76\u975e\u603b\u662f\u548c\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6240\u671f\u671b\u7684\u90a3\u6837\uff0c\u6bd4\u5982\u6709\u7684SOC\u8bbe\u8ba1\u6846\u67b6\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u6b64\u65f6\u7684GPIO block\u5e76\u6ca1\u6709\u548c\u5176\u4ed6block\u72ec\u7acb\uff0c\u800c\u662f\u6c38\u8fdc\u5904\u4e8eactive\u72b6\u6001\uff0c\u7ea2\u8272\u8fb9\u6846\u7684\u4e09\u4e2ablock\u88ab\u7d27\u5bc6\u5730\u8054\u7cfb\u5728\u4e00\u8d77\uff0c\u5b83\u4eec\u7684\u5bc4\u5b58\u5668\u5360\u636e\u4e86\u4e00\u4e2amemory range\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u5bf9\u4e8e\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u6765\u8bf4\uff0c\u4e0d\u5f97\u4e0d\u5728pinctrl\u5b50\u7cfb\u7edf\u4e2d\u8fdb\u884c\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u624d\u80fd\u6b63\u786e\u5730\u63a7\u5236GPIO block\u3002\u4efb\u4f55\u4e00\u4e2agpio chip\uff0c\u5728\u4f7f\u7528GPIO\u529f\u80fd\u65f6\uff0c\u90fd\u5fc5\u987b\u8981\u5148\u5411\u7cfb\u7edf\u7684pinctrl\u5b50\u7cfb\u7edf\u7533\u8bf7\u5f15\u811a\uff0c\u5e76\u5c06\u5f15\u811a\u914d\u7f6e\u4e3aGPIO\u529f\u80fd\u3002</p> <p>pinctrl\u5b50\u7cfb\u7edf\u4e3aGPIO\u63d0\u4f9b\u7684\u63a5\u53e3\u5b9a\u4e49\u5728&lt;linux/pinctrl/consumer.h&gt;\u4e2d\uff1a</p> <pre><code>int pinctrl_gpio_request(unsigned gpio);\nvoid pinctrl_gpio_free(unsigned gpio);\nint pinctrl_gpio_direction_input(unsigned gpio);\nint pinctrl_gpio_direction_output(unsigned gpio);\nint pinctrl_gpio_set_config(unsigned gpio, unsigned long config);\n</code></pre> <p>pinctrl_gpio_request\uff1a\u5411pinctrl\u5b50\u7cfb\u7edf\u7533\u8bf7\u4e00\u4e2agpio\u3002</p> <p>pinctrl_gpio_free\uff1a\u91ca\u653e\u4e00\u4e2agpio\u3002</p> <p>pinctrl_gpio_direction_input\uff1a\u5c06\u4e00\u4e2agpio\u8bbe\u7f6e\u4e3a\u8f93\u5165\u6a21\u5f0f\u3002</p> <p>pinctrl_gpio_direction_output\uff1a\u5c06\u4e00\u4e2agpio\u8bbe\u7f6e\u4e3a\u8f93\u51fa\u6a21\u5f0f\u3002</p> <p>pinctrl_gpio_set_config\uff1a\u8bbe\u7f6e\u4e00\u4e2agpio\u7684\u914d\u7f6e\u3002</p> <p>\u5f53GPIO\u9a71\u52a8\u7a0b\u5e8f\u9700\u8981\u4f7f\u7528\u67d0\u4e2a\u5f15\u811a\u65f6\uff0c\u76f4\u63a5\u8c03\u7528<code>pinctrl_gpio_request()</code>\u51fd\u6570\uff0c\u5411pinctrl\u5b50\u7cfb\u7edf\u7533\u8bf7\u3002pinctrl\u5b50\u7cfb\u7edf\u4f1a\u7ef4\u62a4\u4e00\u4e2agpio number\u5230pin number\u7684\u6620\u5c04\uff0c\u5c06GPIO\u5b50\u7cfb\u7edf\u7684gpio number\u8f6c\u6362\u4e3apin number\uff0c\u5e76\u8c03\u7528<code>struct pinmux_ops</code>\u7ed3\u6784\u4f53\u4e2d\u6709\u5173GPIO\u7684\u56de\u8c03\u51fd\u6570\u5373\u53ef\u3002</p> <p>\u6beb\u65e0\u7591\u95ee\uff0c\u7533\u8bf7GPIO\u8d44\u6e90\u672c\u5e94\u8be5\u662fGPIO\u5b50\u7cfb\u7edf\u7684\u8d23\u4efb\uff0c\u4f46\u662f\u7531\u4e8e\u4e4b\u524d\u63cf\u8ff0\u7684\u7f18\u7531\uff0cpinctrl\u5b50\u7cfb\u7edf\u4e0d\u5f97\u4e0d\u63d0\u4f9b\u63a5\u53e3\u51fd\u6570\u4f9bGPIO\u9a71\u52a8\u7a0b\u5e8f\u4f7f\u7528\u3002\u5f53\u7136\uff0c\u5176\u4ed6\u7684\u9a71\u52a8\u7a0b\u5e8f\u4e0d\u5e94\u8be5\u8c03\u7528\u6b64\u63a5\u53e3\u3002</p> <p>\u5982\u4f55\u63d0\u4f9bgpio number\u5230pin number\u7684\u6620\u5c04\u5462\uff1f\u662f\u901a\u8fc7\u4e00\u4e2a<code>struct pinctrl_gpio_range</code>\u7ed3\u6784\u4f53\u6765\u5b9e\u73b0\u7684\uff1a</p> <pre><code>struct pinctrl_gpio_range {\n    struct list_head node;\n    const char *name;\n    unsigned int id;\n    unsigned int base;\n    unsigned int pin_base;\n    unsigned int npins;\n    unsigned const *pins;\n    struct gpio_chip *gc;\n};\n</code></pre> <p>name\uff1a\u533a\u57df\u7684\u540d\u5b57\u3002</p> <p>id\uff1a\u533a\u57dfID\u3002</p> <p>base\uff1a\u533a\u57df\u8d77\u59cb\u7684GPIO ID\u3002</p> <p>pin_base\uff1a\u533a\u57df\u8d77\u59cb\u7684pin ID</p> <p>npins\uff1a\u533a\u57df\u5305\u542b\u7684\u5f15\u811a\u6570\u3002</p> <p>pins\uff1a\u533a\u57df\u5305\u542b\u7684\u5f15\u811a\u5217\u8868\u3002</p> <p>gc\uff1a\u533a\u57df\u5bf9\u5e94\u7684gpio_chip\u3002</p> <p>\u4e00\u4e2a<code>struct gpio_chip</code>\u7ed3\u6784\u4f53\u53ef\u4ee5\u4ee5\u5982\u4e0b\u7684\u65b9\u5f0f\u6dfb\u52a0\u5230pin controller device\u4e2d\uff1a</p> <pre><code>struct gpio_chip chip_a;\nstruct gpio_chip chip_b;\n\nstatic struct pinctrl_gpio_range gpio_range_a = {\n    .name = \"chip a\",\n    .id = 0,\n    .base = 32,\n    .pin_base = 32,\n    .npins = 16,\n    .gc = &amp;chip_a;\n};\n\nstatic struct pinctrl_gpio_range gpio_range_b = {\n    .name = \"chip b\",\n    .id = 0,\n    .base = 48,\n    .pin_base = 64,\n    .npins = 8,\n    .gc = &amp;chip_b;\n};\n\n{\n    struct pinctrl_dev *pctl;\n    ...\n    pinctrl_add_gpio_range(pctl, &amp;gpio_range_a);\n    pinctrl_add_gpio_range(pctl, &amp;gpio_range_b)\n}\n</code></pre> <p>\u4ee5\u4e0a\u662f\u4e00\u4e2apin controller device\u7684\u793a\u4f8b\uff0c\u5b83\u5305\u542b\u4e24\u4e2agpio_chip\u7ed3\u6784\u4f53\uff0c\u5206\u522b\u5bf9\u5e94\u4e24\u4e2agpio_chip\u5b9e\u4f8b\u3002\"chip a\"\u548c\"chip b\"\u7684\u8d77\u59cbGPIO ID\u5206\u522b\u4e3a32\u548c48\uff0c\u8d77\u59cbpin ID\u5206\u522b\u4e3a32\u548c64\u3002\"chip a\"\u670916\u4e2a\u5f15\u811a\uff0c\"chip b\"\u67098\u4e2a\u5f15\u811a\u3002</p> <p>chip a: - GPIO range: 32-47 - Pin range: 32-47</p> <p>chip b: - GPIO range: 48-55 - Pin range: 64-71</p> <p>\u4e0a\u8ff0\u4f8b\u5b50\u5047\u5b9aGPIO\u548cpin\u7684\u6620\u5c04\u662f\u7ebf\u6027\u7684\uff0c\u5426\u5219\u6211\u4eec\u5fc5\u987b\u5f97\u624b\u52a8\u5b9a\u4e49\u5f15\u811a\u4fe1\u606f\uff1a</p> <pre><code>static const unsigned range_pins[] = {14, 1, 22, 17, 10, 8, 6, 2};\n\nstatic struct pinctrl_gpio_range gpio_range_ = {\n    .name = \"chip\",\n    .id = 0,\n    .base = 32,\n    .pins = &amp;range_pins,\n    .npins = ARRAY_SIZE(range_pins),\n    .gc = &amp;chip;\n};\n</code></pre> <p>\u5728\u4e0a\u9762\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cpin_base\u5c5e\u6027\u4f1a\u88ab\u5ffd\u7565\u3002</p>"},{"location":"linux/drivers/platform/","title":"\u5e73\u53f0\u603b\u7ebf\u6a21\u578b","text":"<p>Platform \u603b\u7ebf\u662f Linux \u865a\u62df\u51fa\u6765\u7684\u4e00\u79cd\u603b\u7ebf\uff0c\u5b83\u662f\u8fde\u63a5\u8bbe\u5907\u4e0e\u9a71\u52a8\u7684\u62bd\u8c61\u6a21\u578b\u3002\u8be5\u6a21\u578b\u662f Linux \u4e2d\u6240\u6709\u603b\u7ebf\u7684\u57fa\u672c\u6a21\u578b\uff0c\u4f53\u73b0\u4e86\u5185\u6838\u6a21\u5757\u7684\u89e3\u8026\u601d\u60f3\u3002\u540e\u9762\u7684\u5b9e\u9645\u7269\u7406\u603b\u7ebf\u6a21\u578b\u5982 IIC\u3001SPI\u3001USB \u7b49\u603b\u7ebf\u6a21\u578b\u5747\u57fa\u4e8e\u6b64\u6a21\u578b\u5b9e\u73b0\u3002</p> <p>Platform \u67b6\u6784\u56fe\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <ul> <li>platform_device.c\uff1a\u63cf\u8ff0\u786c\u4ef6\u4fe1\u606f\uff0c\u6bd4\u5982\u5bc4\u5b58\u5668\u5730\u5740\u3001\u4e2d\u65ad\u53f7\u3002</li> <li>platform_driver.c\uff1a\u63cf\u8ff0\u9a71\u52a8\u7a0b\u5e8f\uff0c\u6bd4\u5982\u5982\u4f55\u64cd\u4f5c GPIO\u3001\u5982\u4f55\u7533\u8bf7\u4e2d\u65ad\u3002</li> </ul>"},{"location":"linux/drivers/platform/#_2","title":"\u5e73\u53f0\u603b\u7ebf","text":"<p>\u5728 Linux \u5e73\u53f0\u8bbe\u5907\u9a71\u52a8\u6a21\u578b\u4e2d\uff0c\u603b\u7ebf\u662f\u6700\u91cd\u8981\u7684\u4e00\u73af\uff0c\u8d1f\u8d23\u5339\u914d\u8bbe\u5907\u548c\u9a71\u52a8\u3002\u5b83\u7ef4\u62a4\u7740\u4e24\u4e2a\u94fe\u8868\uff0c\u91cc\u9762\u8bb0\u5f55\u7740\u5404\u4e2a\u5df2\u7ecf\u6ce8\u518c\u7684\u5e73\u53f0\u8bbe\u5907\u548c\u5e73\u53f0\u9a71\u52a8\u3002\u6bcf\u5f53\u6709\u65b0\u7684\u8bbe\u5907\u6216\u8005\u662f\u9a71\u52a8\u52a0\u5165\u5230\u603b\u7ebf\u65f6\uff0c\u4fbf\u4f1a\u8c03\u7528<code>platform_match()</code>\u51fd\u6570\u5bf9\u65b0\u589e\u7684\u8bbe\u5907\u6216\u9a71\u52a8\u8fdb\u884c\u914d\u5bf9\u3002<code>struct bus_type platform_bus_type</code>\u7528\u6765\u63cf\u8ff0\u5e73\u53f0\u603b\u7ebf\u2014\u2014\u5185\u6838\u521d\u59cb\u5316\u7684\u65f6\u5019\u81ea\u52a8\u6ce8\u518c\uff1a</p> <pre><code>sturct bus_type platform_bus_type{\n    .name = \"platform\",\n    .dev_groups = platform_dev_groups,\n    .match = platform_match,\n    .uevent = platform_uevent,\n    .pm = &amp;platform_dev_pm_ops,\n};\n</code></pre> <p>\u5bf9<code>platform_bus_type</code>\u7684\u521d\u59cb\u5316\u6765\u8bf4\uff0c<code>match</code>\u51fd\u6570\u6307\u9488\u6700\u4e3a\u91cd\u8981\uff0c\u5b83\u6307\u5411\u7684\u51fd\u6570\u8d1f\u8d23\u5b9e\u73b0\u5e73\u53f0\u603b\u7ebf\u548c\u5e73\u53f0\u8bbe\u5907\u7684\u5339\u914d\u8fc7\u7a0b\u3002\u5176\u4ed6\u7684\u9a71\u52a8\u603b\u7ebf\uff0c\u4e5f\u5fc5\u987b\u5b9e\u4f8b\u5316\u8be5\u51fd\u6570\u6307\u9488\u3002</p>"},{"location":"linux/drivers/platform/#_3","title":"\u5e73\u53f0\u8bbe\u5907","text":"<p><code>platform_device</code>\u7ed3\u6784\u4f53\u7528\u6765\u63cf\u8ff0\u5e73\u53f0\u8bbe\u5907\uff1a</p> <pre><code>struct platform_device {\n    const char  *name;\n    int     id;\n    bool        id_auto;\n    struct device   dev;\n    ......\n    u32     num_resources;\n    struct resource *resource;\n\n    const struct platform_device_id *id_entry;\n    char *driver_override; /* Driver name to force a match */\n    ......\n};\n</code></pre> <p>name\uff1a\u8bbe\u5907\u7684\u540d\u79f0\uff0c\u7528\u6765\u5339\u914d\u9a71\u52a8</p> <p>id\uff1a\u8bbe\u5907\u7684id\u53f7\uff0c\u7528\u6765\u533a\u5206\u540c\u4e00\u7c7b\u578b\u7684\u591a\u4e2a\u8bbe\u5907</p> <p>id_auto\uff1a\u662f\u5426\u7531\u5185\u6838\u81ea\u52a8\u5206\u914did\u53f7</p> <p>dev\uff1a\u901a\u7528\u8bbe\u5907\u7ed3\u6784\u4f53\uff0c\u7528\u6765\u63cf\u8ff0\u8bbe\u5907\u7684\u57fa\u672c\u4fe1\u606f</p> <p>num_resources\uff1a\u5b58\u50a8\u7684\u786c\u4ef6\u8d44\u6e90\u7684\u4e2a\u6570</p> <p>resource\uff1a\u63cf\u8ff0\u786c\u4ef6\u8d44\u6e90\u4fe1\u606f</p> <p>id_entry\uff1a\u4e0e\u9a71\u52a8\u5339\u914d\u6210\u529f\u540e\uff0c\u88ab\u586b\u5145\u7684\u5339\u914d\u4fe1\u606f</p> <p>\u5e73\u53f0\u8bbe\u5907\u7684\u5de5\u4f5c\u662f\u4e3a\u9a71\u52a8\u7a0b\u5e8f\u63d0\u4f9b\u786c\u4ef6\u4fe1\u606f\uff0c\u5305\u62ec\u5bc4\u5b58\u5668\u5730\u5740\uff0c\u4e2d\u65ad\u53f7\u7b49\u3002</p> <p>\u5bf9\u4e8e\u786c\u4ef6\u4fe1\u606f\uff0c\u4f7f\u7528\u7ed3\u6784\u4f53<code>struct resource</code>\u6765\u4fdd\u5b58\u8bbe\u5907\u6240\u63d0\u4f9b\u7684\u8d44\u6e90\uff0c\u6bd4\u5982\u8bbe\u5907\u4f7f\u7528\u7684\u4e2d\u65ad\u7f16\u53f7\uff0c\u5bc4\u5b58\u5668\u7269\u7406\u5730\u5740\u7b49\uff0c\u7ed3\u6784\u4f53\u539f\u578b\u5982\u4e0b\uff1a</p> <pre><code>struct resource {\n    resource_size_t start;\n    resource_size_t end;\n    const char *name;\n    unsigned long flags;\n    unsigned long desc;\n    struct resrouce *parent, *sibling, *child;\n};\n</code></pre> <p>start\u3001end\uff1a \u786c\u4ef6\u8d44\u6e90\u7684\u8d77\u59cb\u5730\u5740\u4ee5\u53ca\u7ed3\u675f\u5730\u5740</p> <p>name\uff1a \u786c\u4ef6\u8d44\u6e90\u540d\u79f0</p> <p>flags\uff1a \u7528\u4e8e\u6307\u5b9a\u8be5\u8d44\u6e90\u7684\u7c7b\u578b\uff0c\u5728Linux\u4e2d\uff0c\u8d44\u6e90\u5305\u62ecI/O\u3001Memory\u3001Register\u3001IRQ\u3001DMA\u3001Bus\u7b49\u591a\u79cd\u7c7b\u578b\uff0c\u6700\u5e38\u89c1\u7684\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> \u8d44\u6e90\u5b8f\u5b9a\u4e49 \u63cf\u8ff0 IORESOURCE_IO \u7528\u4e8eIO\u5730\u5740\u7a7a\u95f4\uff0c\u5bf9\u5e94\u4e8eIO\u7aef\u53e3\u6620\u5c04\u65b9\u5f0f IORESOURCE_MEM \u7528\u4e8e\u5916\u8bbe\u7684\u53ef\u76f4\u63a5\u5bfb\u5740\u7684\u5730\u5740\u7a7a\u95f4 IORESOURCE_IRQ \u7528\u4e8e\u6307\u5b9a\u8be5\u8bbe\u5907\u4f7f\u7528\u67d0\u4e2a\u4e2d\u65ad IORESOURCE_DMA \u7528\u4e8e\u6307\u5b9a\u4f7f\u7528\u7684DMA\u901a\u9053 <p>\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e3b\u8981\u76ee\u7684\u662f\u64cd\u4f5c\u8bbe\u5907\u7684\u5bc4\u5b58\u5668\u3002\u4e0d\u540c\u67b6\u6784\u7684\u8ba1\u7b97\u673a\u63d0\u4f9b\u4e0d\u540c\u7684\u64cd\u4f5c\u63a5\u53e3\uff0c\u4e3b\u8981\u6709IO\u7aef\u53e3\u6620\u5c04\u548cIO\u5167\u5b58\u6620\u5c04\u4e24\u79cd\u65b9\u5f0f\u3002\u5bf9\u5e94\u4e8e IO \u7aef\u53e3\u6620\u5c04\u65b9\u5f0f\uff0c\u53ea\u80fd\u901a\u8fc7\u4e13\u95e8\u7684\u63a5\u53e3\u51fd\u6570\uff08\u5982inb\u3001outb\uff09\u624d\u80fd\u8bbf\u95ee\uff1b\u91c7\u7528 IO \u5185\u5b58\u6620\u5c04\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u50cf\u8bbf\u95ee\u5185\u5b58\u4e00\u6837\uff0c\u53bb\u8bfb\u5199\u5bc4\u5b58\u5668\u3002\u5728\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e2d\uff0c\u57fa\u672c\u4e0a\u6ca1\u6709 IO \u5730\u5740\u7a7a\u95f4\uff0c\u6240\u4ee5\u901a\u5e38\u4f7f\u7528<code>IORESOURCE_MEM</code>\u3002</p> <p>\u6ce8\u518c/\u6ce8\u9500\u5e73\u53f0\u8bbe\u5907\u7528\u5230\u7684\u51fd\u6570\u5982\u4e0b\uff1a</p> <pre><code>int platform_device_register(struct platform_device *pdev);\nvoid platform_device_unregister(struct platform_device *pdev);\n</code></pre> <p>\u8fd9\u4e24\u4e2a\u51fd\u6570\u5e94\u8be5\u5728\u6a21\u5757\u7684\u8fdb\u5165\u4e0e\u9000\u51fa\u51fd\u6570\u4e2d\u88ab\u8c03\u7528\u3002</p>"},{"location":"linux/drivers/platform/#_4","title":"\u5e73\u53f0\u9a71\u52a8","text":"<p><code>platform_driver</code>\u7ed3\u6784\u4f53\u7528\u6765\u63cf\u8ff0\u5e73\u53f0\u9a71\u52a8\uff1a</p> <pre><code>struct platform_driver {\n    int (*probe)(struct platform_device *);\n    int (*remove)(structg platform_device *);\n    void (*shutdown)(struct platform_device *);\n    int (*suspend)(struct platform_device *, pm_message_t state);\n    int (*resume)(struct platform_device *);\n    struct device_driver driver;\n    const struct platform_device_id *id_table;\n    bool prevent_deferred_probe;\n};\n</code></pre> <p>probe\uff1a\u8bbe\u5907\u4e0e\u9a71\u52a8\u5339\u914d\u6210\u529f\u540e\u6267\u884c\u8be5\u51fd\u6570</p> <p>remove\uff1a\u8bbe\u5907\u4e0e\u9a71\u52a8\u5206\u79bb\u540e\u6267\u884c\u8be5\u51fd\u6570</p> <p>shutdown\uff1a\u8bbe\u5907\u5173\u95ed\u540e\u6267\u884c\u8be5\u51fd\u6570</p> <p>suspend/resume\uff1a\u8bbe\u5907\u8fdb\u5165/\u9000\u51fa\u4f11\u7720\u72b6\u6001\u540e\u6267\u884c\u8be5\u51fd\u6570</p> <p>\u9664\u4e86\u4ee5\u4e0a\u51e0\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u6700\u5173\u952e\u7684\u8fd8\u6709\u4e00\u4e2a<code>id_table</code>\u7684\u6307\u9488\u3002\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u4e86\u5b58\u653e\u8be5\u9a71\u52a8\u53ef\u4ee5\u5339\u914d\u8bbe\u5907\u7684\u6570\u7ec4\u4fe1\u606f\u3002</p> <p>\u6211\u4eec\u6765\u770b\u4e00\u4e0b<code>struct platform_device_id</code>\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\uff1a</p> <pre><code>struct platform_device_id {\n    char name[PLATFORM_NAME_SIZE];\n    kernel_ulong_t driver_data;\n};\n</code></pre> <p>name\uff1a\u8be5\u540d\u5b57\u5fc5\u987b\u4e0e\u8bbe\u5907\u6811\u4e2d\u8981\u8f6c\u6362\u4e3aplatform_device\u8282\u70b9\u7684compatible\u5c5e\u6027\u503c\u76f8\u540c\uff0c\u5426\u5219\u65e0\u6cd5\u8fdb\u884c\u5339\u914d\u3002</p> <p>driver_data\uff1a\u4fdd\u5b58\u8bbe\u5907\u7684\u914d\u7f6e\u3002\u4e3a\u4e86\u51cf\u5c11\u4ee3\u7801\u7684\u5197\u4f59\uff0c\u4e00\u4e2a\u9a71\u52a8\u53ef\u4ee5\u5339\u914d\u591a\u4e2a\u8bbe\u5907\u3002</p> <p>\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>static platform_device_id my_device_ids[] = {\n    { \"my-device1\", 0 },\n    { \"my-device2\", 1 },\n    {/*\u5fc5\u987b\u4ee5\u7a7a\u7ed3\u5c3e\u8868\u793a\u7ed3\u675f*/}\n};\n</code></pre> <p>\u8fd9\u91cc\u63d2\u4e2a\u9898\u5916\u8bdd\uff0c\u5f53\u624b\u52a8\u5b9e\u73b0<code>probe()</code>\u51fd\u6570\u65f6\u6d89\u53ca\u5230\u5185\u5b58\u5206\u914d\u7684\u95ee\u9898\u3002\u5f88\u591a\u9a71\u52a8\u7a0b\u5e8f\u90fd\u4f7f\u7528<code>devm_kzalloc()</code>\u51fd\u6570\u6765\u5206\u914d\u5185\u5b58\u3002\u6211\u4eec\u63a5\u89e6\u6bd4\u8f83\u591a\u7684\u662f<code>kmalloc()</code>\u6216\u8005<code>kzalloc()</code>\u6765\u5206\u914d\u5185\u5b58\uff0c\u4f46\u662f\u8fd9\u4f1a\u5e26\u6765\u4e00\u4e9b\u6f5c\u5728\u7684\u95ee\u9898\u3002\u6bd4\u5982\u5728\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u5982\u679c\u5931\u8d25\u4e86\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5f00\u53d1\u4eba\u5458\u5c0f\u5fc3\u5730\u91ca\u653e\u5185\u5b58\u3002\u800c<code>devm_kzalloc()</code>\u51fd\u6570\u5219\u53ef\u4ee5\u81ea\u52a8\u5730\u91ca\u653e\u5185\u5b58\u3002\u5176\u8bbe\u8ba1\u7684\u6838\u5fc3\u601d\u60f3\u5c31\u662f\u8d44\u6e90\u7531\u8bbe\u5907\u7ba1\u7406\uff0c\u4e00\u65e6\u4e0d\u9700\u8981\u4e5f\u7531\u8bbe\u5907\u6765\u91ca\u653e\uff0c\u8fd9\u5176\u5b9e\u6709\u70b9 C++ \u4e2d RAII \u7684\u601d\u60f3\u3002</p> <p>\u6ce8\u518c/\u6ce8\u9500\u5e73\u53f0\u9a71\u52a8\u7684\u51fd\u6570\u5982\u4e0b\uff1a</p> <pre><code>int platform_driver_register(struct platform_device *drv);\nvoid platform_driver_unregister(struct platform_device *drv);\n</code></pre>"},{"location":"linux/drivers/platform/#_5","title":"\u8bbe\u5907\u6811\u7684\u8f6c\u6362","text":"<p>\u5728\u65e7\u7248\u5185\u6838\u4e2d\uff0c<code>platform_device</code>\u662f\u9759\u6001\u5b9a\u4e49\u7684\uff0c\u786c\u4ef6\u8d44\u6e90\u7531<code>struct resource</code>\u63cf\u8ff0\u3002</p> <p>\u5728\u8bbe\u5907\u6811\u51fa\u73b0\u4e4b\u540e\uff0c\u63cf\u8ff0\u786c\u4ef6\u8d44\u6e90\u7684\u5de5\u4f5c\u5c31\u7531\u8bbe\u5907\u6811\u6765\u5b8c\u6210\uff0c\u5185\u6838\u4f1a\u5c06\u6ee1\u8db3\u89c4\u5219\u7684<code>device_node</code>\u8f6c\u6362\u4e3a<code>platform_device</code>\uff1a</p> <ol> <li>\u6839\u8282\u70b9\u4e0b\u5305\u542b<code>compatible</code>\u5c5e\u6027\u7684\u5b50\u8282\u70b9</li> <li>\u8282\u70b9\u4e2d<code>compatible</code>\u5c5e\u6027\u7684\u503c\u4e3a\"simple-bus\"\u3001\"simple-mfd\"\u3001\"isa\"\u4e4b\u4e00\uff0c\u4e14\u5305\u542b<code>compatible</code>\u5c5e\u6027\u7684\u5b50\u8282\u70b9</li> </ol> <p>\u5047\u8bbe\u6709<code>struct resource</code>\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>static struct resource my_resources[] = {\n    [0] = {\n        .start = 0xFDD60000,\n        .end = 0xFDD60004,\n        .flags = IORESOURCE_MEM,\n    },\n    [1] = {\n        .start = 0xFDD60008,\n        .end = 0xFDD6000C,\n        .flags = IORESOUCE_IRQ,\n    },\n};\n</code></pre> <p>\u90a3\u4e48\u5728\u8bbe\u5907\u6811\u4e2d\u5c31\u53ef\u4ee5\u8fd9\u6837\u63cf\u8ff0\u8be5\u8d44\u6e90\uff1a</p> <pre><code>/{\n    topnode{\n        #address-cells=&lt;1&gt;;\n        #size-cells=&lt;1&gt;;\n        compatible=\"simple-bus\";\n        myled{\n            compatible=\"my node\";\n            reg=&lt;0xFDD60000 0x00000004&gt;;\n        };\n    };\n\n};\n</code></pre>"},{"location":"linux/drivers/platform/#_6","title":"\u83b7\u53d6\u8d44\u6e90","text":"<p><code>platform_get_resource()</code>\u51fd\u6570\u53ef\u4ee5\u7528\u6765\u83b7\u53d6\u5e73\u53f0\u8bbe\u5907\u7684\u8d44\u6e90\uff0c\u901a\u5e38\u5728<code>probe()</code>\u51fd\u6570\u4e2d\u6267\u884c\uff1a</p> <pre><code>struct resource *platform_get_resource(struct platform_device *dev, unsigned int type, unsigned int num);\n</code></pre> <p>dev\uff1a\u6307\u5b9a\u8981\u83b7\u53d6\u7684\u5e73\u53f0\u8bbe\u5907\u3002</p> <p>type\uff1a\u6307\u5b9a\u83b7\u53d6\u8d44\u6e90\u7684\u7c7b\u578b\uff0c\u6bd4\u5982IORESOURCE_IRQ\u3002</p> <p>num\uff1a\u6307\u5b9a\u8981\u83b7\u53d6\u8d44\u6e90\u7684\u7f16\u53f7\uff0c\u8fd9\u4e2a\u7f16\u53f7\u6307\u7684\u662f\u540cflags\u4e0b\u7684\u7d22\u5f15\u3002</p> <p>\u5982\u679c\u8d44\u6e90\u7c7b\u578b\u662f IORESOURCE_IRQ\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u63a5\u53e3\u8fd8\u83b7\u53d6\u4e2d\u65ad\u8d44\u6e90\uff1a</p> <pre><code>int platform_get_irq(struct platform_device *pdev, unsigned int num);\n</code></pre> <p>\u603b\u7ed3\uff1a\u5728\u5e73\u53f0\u8bbe\u5907\u9a71\u52a8\u6a21\u578b\u4e2d\uff0c\u9a71\u52a8\u7684\u5165\u53e3\u51fd\u6570\u53d8\u6210\u4e86<code>probe()</code>\u51fd\u6570\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u9a71\u52a8\u7684\u521d\u59cb\u5316\u4e0e\u6ce8\u518c\u3002\u4e00\u65e6\u5e73\u53f0\u603b\u7ebf\u6210\u529f\u5c06<code>platform_device</code>\u548c<code>platform_driver</code>\u5339\u914d\uff0c\u5c31\u4f1a\u8c03\u7528\u8be5\u51fd\u6570\u3002</p>"},{"location":"linux/drivers/protocol/","title":"\u901a\u4fe1\u534f\u8bae","text":""},{"location":"linux/drivers/protocol/#_2","title":"\u57fa\u7840\u77e5\u8bc6","text":"<p>\u5e76\u884c\u4e0e\u4e32\u884c\uff1a\u5e76\u884c\u662f\u6307\u6570\u636e\u53ef\u4ee5\u540c\u65f6\u4f20\u9001\uff0c\u800c\u4e32\u884c\u662f\u6307\u6570\u636e\u5fc5\u987b\u4e00\u4e2a\u63a5\u7740\u4e00\u4e2a\u5730\u4f20\u9001\u3002</p> <p>\u5355\u5de5\u4e0e\u53cc\u5de5\uff1a\u5355\u5de5\u662f\u6307\u6570\u636e\u53ea\u80fd\u5728\u4e00\u4e2a\u65b9\u5411\u4e0a\u4f20\u8f93\uff0c\u4e0d\u80fd\u53cc\u5411\u4f20\u8f93\u3002\u53cc\u5de5\u662f\u6307\u6570\u636e\u53ef\u4ee5\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u4f20\u8f93\u3002</p> <p>\u534a\u53cc\u5de5\u4e0e\u5168\u53cc\u5de5\uff1a\u534a\u53cc\u5de5\u662f\u6307\u6570\u636e\u53ef\u4ee5\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u4f20\u8f93\uff0c\u4f46\u662f\u4e0d\u80fd\u540c\u65f6\u8fdb\u884c\u3002\u5168\u53cc\u5de5\u662f\u6307\u6570\u636e\u53ef\u4ee5\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u540c\u65f6\u4f20\u8f93\u3002</p> <p>\u6ce2\u7279\u7387\uff1a\u7528\u4e8e\u63cf\u8ff0UART\u901a\u4fe1\u65f6\u7684\u901a\u4fe1\u901f\u5ea6\uff0c\u5355\u4f4d\u4e3abit per second\uff0c\u5373\u6bcf\u79d2\u4f20\u9001\u7684\u4f4d\u6570\u3002</p>"},{"location":"linux/drivers/protocol/#rs232","title":"RS232\u534f\u8bae","text":"<p>RS232\u534f\u8bae\u662f\u4e00\u79cd\u7528\u4e8e\u4e32\u884c\u901a\u4fe1\u7684\u6807\u51c6\uff0c\u89c4\u5b9a\u91c7\u7528\u4e86\u4e00\u4e2a\u6807\u51c6\u7684\u8fde\u63a5\u5668\uff0c\u89c4\u5b9a\u4e86\u7edf\u4e00\u7684\u5f15\u811a\u548c\u7535\u5e73\u6807\u51c6\u3002</p> <p>IBM\u5bf9RS232\u534f\u8bae\u8fdb\u884c\u4e86\u7b80\u5316\uff0c\u73b0\u5728\u5de5\u4e1a\u63a7\u5236\u7684RS232\u63a5\u53e3\u4e00\u822c\u53ea\u4f7f\u7528RXD\u3001TXD\u3001GND\u4e09\u6761\u7ebf\u3002</p> <p>\u8be5\u6807\u51c6\u89c4\u5b9a\u903b\u8f91\"1\"\u7684\u7535\u5e73\u4e3a-3V\u5230-15V\uff0c\u903b\u8f91\"0\"\u7684\u7535\u5e73\u4e3a+3V\u5230+15V\uff0c\u5176\u4f20\u9001\u8ddd\u79bb\u6700\u5927\u53ef\u8fbe15M\u3002</p>"},{"location":"linux/drivers/protocol/#_3","title":"\u7535\u5e73\u8f6c\u6362","text":"<p>\u867d\u7136\u5f88\u591a\u5904\u7406\u5668\u90fd\u4f1a\u96c6\u6210UART\u63a7\u5236\u5668\uff0c\u4f46\u662f\u5904\u7406\u5668\u4ea7\u751f\u7684\u4fe1\u53f7\u4e00\u822c\u90fd\u662fTTL\u4fe1\u53f7\u800c\u4e0d\u662f\u7b26\u5408RS232\u6807\u51c6\u7684\u4fe1\u53f7\uff0c\u6240\u4ee5\u4e00\u822c\u6211\u4eec\u8fd8\u9700\u8981\u5728\u5904\u7406\u5668\u7684\u5916\u90e8\u53bb\u6dfb\u52a0\u7535\u8def\u5bf9\u4fe1\u53f7\u7535\u5e73\u8fdb\u884c\u8f6c\u6362\u3002</p>"},{"location":"linux/drivers/protocol/#_4","title":"\u7f3a\u70b9","text":"<p>1.\u63a5\u53e3\u7684\u4fe1\u53f7\u7535\u5e73\u503c\u8f83\u9ad8\uff0c\u5bb9\u6613\u70e7\u574f\u82af\u7247\uff0c\u9700\u8981\u7535\u5e73\u8f6c\u6362\u624d\u80fd\u4e0eTTL\u7535\u8def\u8fde\u63a5</p> <ol> <li> <p>\u901a\u4fe1\u901f\u5ea6\u8f83\u4f4e</p> </li> <li> <p>\u6297\u566a\u58f0\u5e72\u6270\u6027\u5f31</p> </li> <li> <p>\u4f20\u8f93\u8ddd\u79bb\u8f83\u77ed</p> </li> </ol>"},{"location":"linux/drivers/protocol/#rs485","title":"RS485","text":"<p>RS485\u534f\u8bae\u80fd\u5728\u8fdc\u8ddd\u79bb\u6761\u4ef6\u4e0b\u4ee5\u53ca\u7535\u5b50\u566a\u58f0\u5927\u7684\u73af\u5883\u4e0b\u6709\u6548\u4f20\u8f93\u4fe1\u53f7\uff0c\u8be5\u6807\u51c6\u5141\u8bb8\u8fde\u63a5\u591a\u4e2a\u6536\u53d1\u5668\uff0c\u8fd9\u6837\u53ef\u4ee5\u5229\u7528\u5355\u4e00\u7684RS485\u63a5\u53e3\u5efa\u7acb\u8d77\u4e00\u4e2a\u8bbe\u5907\u7f51\u7edc\u3002</p> <p>RS485\u91c7\u7528\u5dee\u5206\u4fe1\u53f7\u4f20\u8f93\uff0c\u4e24\u7ebf\u95f4\u7684\u7535\u538b\u5dee\u4e3a+2V\u5230+6V\u8868\u793a\u903b\u8f91\"1\"\uff0c-2V\u5230-6V\u8868\u793a\u903b\u8f91\"0\"\uff0c\u8fd9\u6837\u5373\u4f7f\u4e00\u6761\u7ebf\u4e0a\u51fa\u73b0\u566a\u58f0\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u4fe1\u53f7\u7684\u4f20\u8f93\u3002</p> <p>\u4f7f\u7528\u5dee\u5206\u4fe1\u53f7\u6781\u5927\u5730\u51cf\u5c11\u4e86\u566a\u58f0\u4fe1\u53f7\u7684\u5e72\u6270\uff0c\u5ef6\u957f\u4e86\u901a\u4fe1\u8ddd\u79bb\uff0c\u6700\u5927\u53ef\u8fbe1500m\u3002</p> <p>RS485\u63a5\u53e3\u4fe1\u53f7\u7684\u7535\u5e73\u6bd4RRS232\u964d\u4f4e\u4e86\uff0c\u6240\u4ee5\u4e5f\u4e0d\u6613\u635f\u574f\u63a5\u53e3\u7535\u8def\u7684\u82af\u7247\uff0c\u4e14\u8be5\u7535\u5e73\u4e0eTTL\u7535\u5e73\u517c\u5bb9\u3002</p> <p>RS485\u91c7\u7528\u4e24\u7ebf\u5236\uff0c\u8fd9\u79cd\u63a5\u7ebf\u65b9\u5f0f\u4e3a\u603b\u7ebf\u5f0f\u62d3\u6251\u7ed3\u6784\uff0c\u5728\u540c\u4e00\u603b\u7ebf\u4e0a\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u8282\u70b9\u3002\u56e0\u4e3a\u91c7\u7528\u4e24\u7ebf\u5236\uff0c\u6570\u636e\u7684\u53d1\u9001\u548c\u63a5\u6536\u90fd\u8981\u4f7f\u7528\u8005\u8fd9\u5bf9\u5dee\u5206\u4fe1\u53f7\u7ebf\uff0c\u53d1\u9001\u548c\u63a5\u6536\u4e0d\u80fd\u540c\u65f6\u8fdb\u884c\uff0c\u6240\u4ee5\u91c7\u7528\u534a\u53cc\u5de5\u7684\u65b9\u5f0f\u5de5\u4f5c\u3002</p>"},{"location":"linux/drivers/protocol/#_5","title":"\u4f18\u70b9","text":"<ol> <li>\u63a5\u53e3\u7535\u5e73\u503c\u8f83\u4f4e\uff0c\u4e0d\u6613\u70e7\u574f\u82af\u7247</li> <li>\u901a\u4fe1\u901f\u5ea6\u5feb</li> <li>\u6297\u566a\u58f0\u5e72\u6270\u6027\u5f3a</li> <li>\u4f20\u8f93\u8ddd\u79bb\u8f83\u8fdc</li> <li>\u53ef\u5b9e\u73b0\u591a\u8282\u70b9\u7ec4\u7f51</li> </ol>"},{"location":"linux/drivers/protocol/#mqtt","title":"MQTT","text":"<p>MQTT\u662f\u57fa\u4e8eTCP/IP\u7684\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u53d1\u5e03/\u8ba2\u9605\u5f0f\u6d88\u606f\u4f20\u8f93\u534f\u8bae\uff0c\u9002\u7528\u4e8e\u786c\u4ef6\u6027\u80fd\u4f4e\u4e0b\u6216\u7f51\u7edc\u5e26\u5bbd\u6709\u9650\u7684\u573a\u666f\uff0c\u4e3b\u8981\u5e94\u7528\u5728\u7269\u8054\u7f51\u5c0f\u578b\u8bbe\u5907\u4e0a\u4fe1\u606f\u7684\u4f20\u8f93\u3002</p> <p>\u76ee\u524d\uff0cMQTT\u5df2\u7ecf\u66f4\u65b0\u52305.0\u7248\u672c\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e5f\u53ea\u4ecb\u7ecd\u6700\u65b0\u7684\u7248\u672c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8bbe\u5907\u8eab\u4efd\u6ce8\u518c\u6210\u529f\u540e\uff0c\u9488\u5bf9\u540c\u4e00\u8bbe\u5907\u8eab\u4efd\u4fe1\u606f\uff0c\u53ea\u53ef\u9009\u62e9\u4e00\u79cd\u901a\u4fe1\u534f\u8bae\u63a5\u5165\u7269\u8054\u7f51\u5e73\u53f0\uff0c\u4e0d\u53ef\u591a\u79cd\u7c7b\u578b\u901a\u4fe1\u534f\u8bae\u540c\u65f6\u6df7\u7528\u3002\u5373\u4e00\u4e2a\u8bbe\u5907\u9009\u62e9\u4f7f\u7528MQTT 5.0\u901a\u4fe1\u534f\u8bae\u540e\uff0c\u4e0d\u53ef\u518d\u4f7f\u7528MQTT 3.1\u30013.1.1\u901a\u4fe1\u534f\u8bae\u3002</p> <p>MQTT\u534f\u8bae\u9700\u8981\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\uff0c\u901a\u8baf\u8fc7\u7a0b\u4e2d\u6709\u4e09\u4e2a\u89d2\u8272\uff1a</p> <ol> <li>\u4ee3\u7406(Broker)</li> <li>\u53d1\u5e03\u8005(Publisher)</li> <li>\u8ba2\u9605\u8005(Subscriber)</li> </ol> <p>\u4ee3\u7406\u662f\u670d\u52a1\u5668\u7aef\uff0c\u53d1\u5e03\u8005\u548c\u8ba2\u9605\u8005\u90fd\u662f\u5ba2\u6237\u7aef\u3002</p> <p>\u53d1\u5e03\u8005\u548c\u8ba2\u9605\u8005\u90fd\u9700\u8981\u901a\u8fc7\u4ee3\u7406\u8fdb\u884c\u6d88\u606f\u7684\u4f20\u8f93\uff0c\u53d1\u5e03\u8005\u5728\u67d0\u4e3b\u9898\u4e0b\u53d1\u5e03\u4e00\u4e2a\u6d88\u606f\uff0c\u6240\u6709\u8ba2\u9605\u8be5\u4e3b\u9898\u7684\u8ba2\u9605\u8005\u90fd\u4f1a\u6536\u5230\u6d88\u606f\u901a\u77e5\u3002</p>"},{"location":"linux/drivers/socketcan/","title":"Socket Can","text":"<p>Socket Can\u5b50\u7cfb\u7edf\u662fLinux\u57fa\u4e8eCAN\u534f\u8bae\u7684\u4e00\u79cd\u5b9e\u73b0\u3002CAN\u662f\u4e00\u79cd\u5728\u4e16\u754c\u8303\u56f4\u5185\u5e7f\u6cdb\u7528\u4e8e\u81ea\u52a8\u63a7\u5236\u3001\u5d4c\u5165\u5f0f\u8bbe\u5907\u548c\u6c7d\u8f66\u9886\u57df\u7684\u7f51\u7edc\u6280\u672f\u3002Linux\u4e0b\u6700\u65e9\u4f7f\u7528CAN\u7684\u65b9\u6cd5\u662f\u57fa\u4e8e\u5b57\u7b26\u8bbe\u5907\u6765\u5b9e\u73b0\u7684\uff0c\u4e0e\u4e4b\u4e0d\u540c\u7684\u662fSocket Can\u4f7f\u7528\u4f2f\u514b\u5229\u7684socket\u63a5\u53e3\u548cLinux\u7f51\u7edc\u534f\u8bae\u6808\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4f7f\u5f97CAN\u8bbe\u5907\u9a71\u52a8\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u63a5\u53e3\u6765\u8c03\u7528\uff0c\u719f\u6089\u7f51\u7edc\u7f16\u7a0b\u7684\u7a0b\u5e8f\u5458\u53ef\u4ee5\u5feb\u901f\u4e0a\u624b\u3002</p> <p>Question</p> <p>\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528Socket Can\uff1f</p> <p>\u5728Socket CAN\u4e4b\u524d\uff0c\u5185\u6838\u4e2d\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9bCAN\u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5927\u591a\u6570\u57fa\u4e8e\u5b57\u7b26\u8bbe\u5907\uff0c\u4e14\u53ea\u4e3a\u67d0\u4e2a\u5177\u4f53\u7684\u786c\u4ef6\u8bbe\u5907\u63d0\u4f9b\u9a71\u52a8\u7a0b\u5e8f\u3002\u90a3\u4e48\u7f3a\u70b9\u5c31\u5f88\u660e\u663e\u4e86\u3002\u7b2c\u4e00\u8026\u5408\u6027\u5f3a\uff0c\u5982\u679c\u66f4\u6362\u4e86CAN\u63a7\u5236\u5668\uff0c\u90a3\u4e48\u540c\u65f6\u4e5f\u8981\u66f4\u6362\u53e6\u4e00\u4e2a\u8bbe\u5907\u9a71\u52a8\uff1b\u7b2c\u4e8c\uff0c\u57fa\u4e8e\u5b57\u7b26\u8bbe\u5907\u7684\u5b9e\u73b0\uff0c\u4e0d\u652f\u6301\u591a\u8fdb\u7a0b\u7684\u8bbf\u95ee\uff0c\u5bfc\u81f4\u6548\u7387\u4f4e\u4e0b\u3002\u7b2c\u4e09\uff0c\u529f\u80fd\u5c11\uff0c\u6bd4\u5982\u5e27\u961f\u5217\u548cISO-TP\u8fd9\u6837\u7684\u9ad8\u5c42\u534f\u8bae\u5fc5\u987b\u5728\u7528\u6237\u7a7a\u95f4\u6765\u5b9e\u73b0\u3002</p> <p>\u4e8e\u662fSocket Can\u9879\u76ee\u5e94\u8fd0\u800c\u751f\uff0c\u5b83\u57fa\u4e8eLinux\u7f51\u7edc\u534f\u8bae\u6808\uff0c\u5b9e\u73b0\u4e86\u57fa\u4e8e\u5957\u63a5\u5b57\u7684CAN\u9a71\u52a8\uff0c\u4f7f\u5f97CAN\u63a7\u5236\u5668\u53ef\u4ee5\u50cf\u7f51\u7edc\u8bbe\u5907\u4e00\u6837\u88ab\u8bbf\u95ee\u3002</p> <p>CAN\u63a7\u5236\u5668\u7684\u8bbe\u5907\u9a71\u52a8\u5c06\u81ea\u5df1\u4f5c\u4e3a\u4e00\u4e2a\u7f51\u7edc\u8bbe\u5907\u6ce8\u518c\u8fdbLinux\u7684\u7f51\u7edc\u5c42\uff0c\u6536\u5230\u7684CAN\u5e27\u53ef\u4ee5\u4f20\u8f93\u7ed9\u9ad8\u5c42\u7684\u7f51\u7edc\u534f\u8bae\u548cCAN\u534f\u8bae\u65cf\uff0c\u53cd\u4e4b\uff0c\u53d1\u9001\u7684\u5e27\u4e5f\u4f1a\u901a\u8fc7\u9ad8\u5c42\u7ed9CAN\u63a7\u5236\u5668\u3002\u4f20\u8f93\u534f\u8bae\u6a21\u5757\u53ef\u4ee5\u4f7f\u7528\u534f\u8bae\u65cf\u63d0\u4f9b\u7684\u63a5\u53e3\u6ce8\u518c\u81ea\u5df1\uff0c\u6240\u4ee5\u53ef\u4ee5\u52a8\u6001\u7684\u52a0\u8f7d\u548c\u5378\u8f7d\u591a\u4e2a\u4f20\u8f93\u534f\u8bae\u3002\u4e8b\u5b9e\u4e0a\uff0cCAN\u6838\u5fc3\u6a21\u5757\u4e0d\u63d0\u4f9b\u4efb\u4f55\u534f\u8bae\uff0c\u4e5f\u4e0d\u80fd\u5728\u6ca1\u6709\u52a0\u8f7d\u5176\u5b83\u534f\u8bae\u7684\u60c5\u51b5\u4e0b\u5355\u72ec\u4f7f\u7528\u3002\u540c\u4e00\u65f6\u95f4\u53ef\u4ee5\u5728\u76f8\u540c\u6216\u8005\u4e0d\u540c\u7684\u534f\u8bae\u4e0a\u6253\u5f00\u591a\u4e2a\u5957\u63a5\u5b57\uff0c\u53ef\u4ee5\u5728\u76f8\u540c\u6216\u8005\u4e0d\u540c\u7684CAN ID\u4e0a\u540c\u65f6\u76d1\u542c\u548c\u53d1\u9001(listen/send)\u3002\u51e0\u4e2a\u540c\u65f6\u76d1\u542c\u5177\u6709\u76f8\u540cID\u5e27\u7684\u5957\u63a5\u5b57\u53ef\u4ee5\u5728\u5339\u914d\u7684\u5e27\u5230\u6765\u540e\u63a5\u6536\u5230\u76f8\u540c\u7684\u5185\u5bb9\u3002\u5982\u679c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5e0c\u671b\u4f7f\u7528\u4e00\u4e2a\u7279\u6b8a\u7684\u534f\u8bae\uff08\u6bd4\u5982ISO-TP\uff09\u8fdb\u884c\u901a\u4fe1\uff0c\u53ea\u8981\u5728\u6253\u5f00\u5957\u63a5\u5b57\u7684\u65f6\u5019\u9009\u62e9\u90a3\u4e2a\u534f\u8bae\u5c31\u53ef\u4ee5\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165\u5e94\u7528\u6570\u636e\u6d41\u4e86\uff0c\u6839\u672c\u65e0\u9700\u5173\u5fc3CAN-ID\u548c\u5e27\u7684\u7ed3\u6784\u7b49\u4fe1\u606f\u3002</p>"},{"location":"linux/drivers/socketcan/#_1","title":"\u529f\u80fd\u8be6\u89e3","text":"<p>\u4e0e\u5e7f\u4e3a\u4eba\u77e5\u7684TCP/IP\u534f\u8bae\u4ee5\u53ca\u4ee5\u592a\u7f51\u4e0d\u540c\uff0cCAN\u603b\u7ebf\u6ca1\u6709\u7c7b\u4f3c\u4ee5\u592a\u7f51\u7684MAC\u5c42\u5730\u5740\uff0c\u53ea\u80fd\u7528\u4e8e\u5e7f\u64ad\u3002CAN ID\u4ec5\u4ec5\u7528\u6765\u8fdb\u884c\u603b\u7ebf\u7684\u4ef2\u88c1\u3002\u56e0\u6b64CAN ID\u5728\u603b\u7ebf\u4e0a\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002</p>"},{"location":"linux/drivers/socketcan/#_2","title":"\u4f7f\u7528","text":"<p>Socket Can\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0esocket\u975e\u5e38\u76f8\u4f3c\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8be6\u7ec6\u5c55\u5f00\u4e86\u3002</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;unistd.h&gt;\n#include &lt;string.h&gt;\n#include &lt;net/if.h&gt;\n#include &lt;sys/ioctl.h&gt;\n#include &lt;sys/socket.h&gt;\n#include &lt;linux/can.h&gt;\n#include &lt;linux/can/raw.h&gt;\n\nint main() {\n    int s, nbytes;\n    struct sockaddr_can addr;\n    struct ifreq ifr;\n    struct can_frame frame;\n\n    // \u521b\u5efasocket CAN\n    if ((s = socket(PF_CAN, SOCK_RAW, CAN_RAW)) &lt; 0) {\n        perror(\"Socket\");\n        return 1;\n    }\n\n    // \u8bbe\u7f6eCAN\u63a5\u53e3\u7684\u540d\u5b57\uff0c\u4f8b\u5982\"can0\"\n    strcpy(ifr.ifr_name, \"can0\");\n    ioctl(s, SIOCGIFINDEX, &amp;ifr);\n\n    // \u8bbe\u7f6eCAN\u534f\u8bae\u7684\u5730\u5740\n    addr.can_family = AF_CAN;           //\u5fc5\u987b\u4e3aAF_CAN\n    addr.can_ifindex = ifr.ifr_ifindex;\n\n    // \u7ed1\u5b9asocket\u5230CAN\u63a5\u53e3\n    bind(s, (struct sockaddr *)&amp;addr, sizeof(addr));\n\n    // ... \u5728\u8fd9\u91cc\u53d1\u9001\u548c\u63a5\u6536CAN\u5e27 ...\n\n    // \u5173\u95edsocket\n    close(s);\n\n    return 0;\n}\n</code></pre>"},{"location":"linux/drivers/socketcan/#_3","title":"\u8bbe\u7f6e\u8fc7\u6ee4\u89c4\u5219\uff1a","text":"<pre><code>struct can_filter {\n    canid_t can_id;\n    canid_t can_mask;\n};\n</code></pre> <p>\u5728\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u8fc7\u6ee4\u89c4\u5219\uff0c\u5e94\u7528\u7a0b\u5e8f\u9ed8\u8ba4\u4f1a\u63a5\u6536\u6240\u6709 ID \u7684\u62a5\u6587\uff1b\u5982\u679c\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u53ea\u9700\u8981\u63a5\u6536\u67d0\u4e9b\u7279\u5b9a ID \u7684\u62a5\u6587\uff08\u4ea6\u6216\u8005\u4e0d\u63a5\u53d7\u6240\u6709\u62a5\u6587\uff0c\u53ea\u53d1\u9001\u62a5\u6587\uff09\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7 setsockopt \u51fd\u6570\u8bbe\u7f6e\u8fc7\u6ee4\u89c4\u5219\uff0c\u8b6c\u5982\u67d0\u5e94\u7528\u7a0b\u5e8f\u53ea\u63a5\u6536 ID \u4e3a 0x60A \u548c 0x60B \u7684\u62a5\u6587\u5e27\uff0c\u5219\u53ef\u5c06\u5176\u5b83\u4e0d\u7b26\u5408\u89c4\u5219\u7684\u5e27\u5168\u90e8\u7ed9\u8fc7\u6ee4\u6389\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>struct can_filter rfilter[2]; //\u5b9a\u4e49\u4e00\u4e2a can_filter \u7ed3\u6784\u4f53\u5bf9\u8c61\n\n// \u586b\u5145\u8fc7\u6ee4\u89c4\u5219\uff0c\u53ea\u63a5\u6536 ID \u4e3a(can_id &amp; can_mask)\u7684\u62a5\u6587\nrfilter[0].can_id = 0x60A;\nrfilter[0].can_mask = 0x7FF;\nrfilter[1].can_id = 0x60B;\nrfilter[1].can_mask = 0x7FF;\n\n// \u8c03\u7528 setsockopt \u8bbe\u7f6e\u8fc7\u6ee4\u89c4\u5219\nsetsockopt(sockfd, SOL_CAN_RAW, CAN_RAW_FILTER, &amp;rfilter, sizeof(rfilter));\n</code></pre>"},{"location":"linux/drivers/socketcan/#_4","title":"\u6570\u636e\u7684\u53d1\u9001\u548c\u63a5\u6536","text":"<p>CAN\u603b\u7ebf\u7528<code>struct can_frame</code>\u7ed3\u6784\u4f53\u5c06\u6570\u636e\u5c01\u88c5\u6210\u5e27\uff1a</p> <pre><code>struct can_frame {\n     canid_t can_id; /* CAN \u6807\u8bc6\u7b26 */\n     __u8 can_dlc; /* \u6570\u636e\u957f\u5ea6\uff08\u6700\u957f\u4e3a 8 \u4e2a\u5b57\u8282\uff09 */\n     __u8 __pad; /* padding */\n     __u8 __res0; /* reserved / padding */\n     __u8 __res1; /* reserved / padding */\n     __u8 data[8]; /* \u53d1\u9001\u7684\u6570\u636e */\n};\n</code></pre> <p>\u53d1\u9001CAN\u5e27\uff1a</p> <pre><code>// \u521d\u59cb\u5316CAN\u5e27\nframe.can_id = 0x123; // \u8bbe\u7f6eCAN ID\nframe.can_dlc = 3;    // \u6570\u636e\u957f\u5ea6\u4e3a3\u5b57\u8282\nframe.data[0] = 0xAA; // \u7b2c\u4e00\u4e2a\u6570\u636e\u5b57\u8282\nframe.data[1] = 0xBB; // \u7b2c\u4e8c\u4e2a\u6570\u636e\u5b57\u8282\nframe.data[2] = 0xCC; // \u7b2c\u4e09\u4e2a\u6570\u636e\u5b57\u8282\n\n// \u53d1\u9001CAN\u5e27\nnbytes = write(s, &amp;frame, sizeof(frame));\nif (nbytes != sizeof(frame)) {\n    perror(\"Write\");\n    return 1;\n}\n</code></pre> <p>\u63a5\u6536CAN\u5e27\uff1a</p> <pre><code>// \u63a5\u6536CAN\u5e27\nnbytes = read(s, &amp;frame, sizeof(frame));\nif (nbytes &lt; 0) {\n    perror(\"Read\");\n    return 1;\n}\n\nprintf(\"Received CAN frame with ID 0x%X and length %d\\n\", frame.can_id, frame.can_dlc);\n</code></pre>"},{"location":"linux/drivers/spi/","title":"SPI\u5b50\u7cfb\u7edf","text":""},{"location":"linux/drivers/spi/#spi_1","title":"SPI\u534f\u8bae","text":"<p>SPI \u662f\u5168\u53cc\u5de5\u540c\u6b65\u901a\u4fe1\u603b\u7ebf\uff0c\u53ef\u4ee5\u5728\u540c\u4e00\u65f6\u95f4\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\uff0c\u901a\u5e38\u7531\u4e00\u4e2a\u4e3b\u6a21\u5757\u548c\u4e00\u4e2a\u6216\u591a\u4e2a\u4ece\u6a21\u5757\u7ec4\u6210\uff08 SPI \u4e0d\u652f\u6301\u591a\u4e3b\u673a\uff09\uff0c\u4e3b\u6a21\u5757\u9009\u62e9\u4e00\u4e2a\u4ece\u6a21\u5757\u8fdb\u884c\u540c\u6b65\u901a\u4fe1\uff0c\u4ece\u800c\u5b8c\u6210\u6570\u636e\u7684\u4ea4\u6362\u3002\u63d0\u4f9b\u65f6\u949f\u7684\u4e3a\u4e3b\u8bbe\u5907\uff08Master\uff09\uff0c\u63a5\u6536\u65f6\u949f\u7684\u8bbe\u5907\u4e3a\u4ece\u8bbe\u5907\uff08Slave\uff09\uff0cSPI \u63a5\u53e3\u7684\u8bfb\u5199\u64cd\u4f5c\uff0c\u90fd\u662f\u7531\u4e3b\u8bbe\u5907\u53d1\u8d77\uff0c\u5f53\u5b58\u5728\u591a\u4e2a\u4ece\u8bbe\u5907\u65f6\uff0c\u901a\u8fc7\u5404\u81ea\u7684\u7247\u9009\u4fe1\u53f7\u8fdb\u884c\u7ba1\u7406\u3002</p> <p>SPI\u7269\u7406\u603b\u7ebf\u793a\u610f\u56fe\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>SPI\u6709\u56db\u6839\u63a7\u5236\u7ebf\uff0c\u5305\u62ec\uff1a</p> <ul> <li>SCK\uff1a\u65f6\u949f\u7ebf\uff0c\u6570\u636e\u6536\u53d1\u540c\u6b65</li> <li>MOSI\uff1a\u6570\u636e\u7ebf\uff0c\u4e3b\u8bbe\u5907\u53d1\u9001\u3001\u4ece\u8bbe\u5907\u63a5\u6536</li> <li>MISO\uff1a\u6570\u636e\u7ebf\uff0c\u4e3b\u8bbe\u5907\u63a5\u6536\u3001\u4ece\u8bbe\u5907\u53d1\u9001</li> <li>CS\uff1a\u7247\u9009\u7ebf\uff0c\u4f4e\u7535\u5e73\u8868\u793a\u9009\u4e2d</li> </ul> <p>SPI\u4e3b\u8bbe\u5907\u548c\u4ece\u8bbe\u5907\u90fd\u6709\u4e00\u4e2a\u4e32\u884c\u79fb\u4f4d\u5bc4\u5b58\u5668\uff0c\u4e3b\u8bbe\u5907\u901a\u8fc7\u5411\u5b83\u7684SPI\u4e32\u884c\u5bc4\u5b58\u5668\u5199\u5165\u4e00\u4e2a\u5b57\u8282\u6765\u53d1\u8d77\u4e00\u6b21\u4f20\u8f93\u3002\u6570\u636e\u901a\u4fe1\u6d41\u7a0b\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a</p> <ol> <li> <p>\u4e3b\u8bbe\u5907\u53d1\u8d77\u4fe1\u53f7\uff0c\u5c06CS/SS\u62c9\u4f4e\uff0c\u542f\u52a8\u901a\u4fe1\u3002</p> </li> <li> <p>\u4e3b\u8bbe\u5907\u901a\u8fc7\u53d1\u9001\u65f6\u949f\u4fe1\u53f7\uff0c\u6765\u544a\u8bc9\u4ece\u8bbe\u5907\u8fdb\u884c\u5199\u6570\u636e\u6216\u8005\u8bfb\u6570\u636e\u64cd\u4f5c\uff08\u91c7\u96c6\u65f6\u673a\u53ef\u80fd\u662f\u65f6\u949f\u4fe1\u53f7\u7684\u4e0a\u5347\u6cbf\u6216\u4e0b\u964d\u6cbf\uff0c\u56e0\u4e3aSPI\u6709\u56db\u79cd\u6a21\u5f0f\uff0c\u540e\u9762\u4f1a\u8bb2\u5230\uff09\uff0c\u5b83\u5c06\u7acb\u5373\u8bfb\u53d6\u6570\u636e\u7ebf\u4e0a\u7684\u4fe1\u53f7\uff0c\u8fd9\u6837\u5c31\u5f97\u5230\u4e86\u4e00\u4f4d\u6570\u636e\uff081bit\uff09\u3002</p> </li> <li> <p>\u4e3b\u673a\uff08Master\uff09\u5c06\u8981\u53d1\u9001\u7684\u6570\u636e\u5199\u5230\u53d1\u9001\u6570\u636e\u7f13\u5b58\u533a\uff0c\u7f13\u5b58\u533a\u7ecf\u8fc7\u4e32\u884c\u79fb\u4f4d\u5bc4\u5b58\u5668\u548cMOSI\u4fe1\u53f7\u7ebf\u5c06\u5b57\u8282\u4e00\u4f4d\u4e00\u4f4d\u4f20\u9001\u7ed9\u4ece\u673a\uff0c\u540c\u65f6\u4e3b\u673a\u901a\u8fc7MISO\u63a5\u53e3\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u7ecf\u8fc7\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e00\u4f4d\u4e00\u4f4d\u7684\u79fb\u5230\u63a5\u6536\u7f13\u5b58\u533a\u3002</p> </li> <li> <p>\u4ece\u673a\uff08Slave\uff09\u4e5f\u5c06\u81ea\u5df1\u7684\u4e32\u884c\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9\u901a\u8fc7MISO\u4fe1\u53f7\u7ebf\u8fd4\u56de\u7ed9\u4e3b\u673a\u3002\u540c\u65f6\u901a\u8fc7MOSI\u4fe1\u53f7\u7ebf\u63a5\u6536\u4e3b\u673a\u53d1\u9001\u7684\u6570\u636e\uff0c\u8fd9\u6837\uff0c\u4e24\u4e2a\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9\u5c31\u88ab\u4ea4\u6362\u3002</p> </li> </ol>"},{"location":"linux/drivers/uart/","title":"UART\u5b50\u7cfb\u7edf","text":""},{"location":"linux/drivers/uart/#uart_1","title":"UART\u534f\u8bae","text":"<p>UART\u662f\u901a\u7528\u5f02\u6b65\u6536\u53d1\u5668\uff0c\u901a\u4fe1\u53cc\u65b9\u53ea\u8981\u91c7\u7528\u76f8\u540c\u7684\u5e27\u683c\u5f0f\u548c\u6ce2\u7279\u7387\uff0c\u5c31\u53ef\u4ee5\u5728\u65e0\u9700\u65f6\u949f\u4fe1\u53f7\u7684\u60c5\u51b5\u4e0b\uff0c\u4ec5\u4f7f\u7528\u4e24\u6839\u4fe1\u53f7\u7ebf(RX\u548cTX)\uff0c\u5c31\u80fd\u5b9e\u73b0\u5168\u53cc\u5de5\u7684\u53d1\u9001\u548c\u63a5\u6536\u3002</p> <p>UART\u4f7f\u7528\u6807\u51c6\u7684TTL/CMOS\u903b\u8f91\u7535\u5e73\u6765\u8868\u793a\u6570\u636e\uff0c1\u8868\u793a\u9ad8\u7535\u5e73\uff0c0\u8868\u793a\u4f4e\u7535\u5e73\u3002\u6570\u636e\u4f20\u8f93\u901f\u7387\u7528\u6ce2\u7279\u7387\u6765\u8868\u793a\uff0c\u53cc\u65b9\u7684\u6ce2\u7279\u7387\u5fc5\u987b\u8981\u4fdd\u6301\u4e00\u81f4\u3002</p> <p></p> <ul> <li>\u7a7a\u95f2\u4f4d\uff1a\u9ad8\u7535\u5e73\uff0c\u8868\u793a\u6ca1\u6709\u6570\u636e\u4f20\u8f93</li> <li>\u8d77\u59cb\u4f4d\uff1a\u4f4e\u7535\u5e73\uff0c\u5f00\u59cb\u4f20\u9001\u6570\u636e</li> <li>\u6570\u636e\u4f4d\uff1a5~8\u4f4d\uff0c\u5148\u53d1\u6570\u636e\u7684\u4f4e\u4f4d\uff0c\u518d\u53d1\u9ad8\u4f4d</li> <li>\u6821\u9a8c\u4f4d\uff1a\u5947\u5076\u6821\u9a8c(\u975e\u5fc5\u987b)\uff0c\u5c06\u6570\u636e\u4f4d\u52a0\u4e0a\u6821\u9a8c\u4f4d\uff0c1\u7684\u4f4d\u6570\u4e3a\u5076\u6570\uff08\u5076\u6821\u9a8c\uff09\uff0c1\u7684\u4f4d\u6570\u4e3a\u5947\u6570\uff08\u5947\u6821\u9a8c\uff09</li> <li>\u505c\u6b62\u4f4d\uff1a\u9ad8\u7535\u5e73\uff0c\u8868\u793a\u6570\u636e\u4f20\u8f93\u7ed3\u675f</li> </ul> <p>UART\u7684\u7f3a\u70b9\uff1a</p> <p>1.\u7535\u6c14\u63a5\u53e3\u4e0d\u7edf\u4e00</p> <p>UART\u53ea\u5bf9\u4fe1\u53f7\u65f6\u5e8f\u8fdb\u884c\u4e86\u5b9a\u4e49\uff0c\u800c\u672a\u5b9a\u4e49\u63a5\u53e3\u7684\u7535\u6c14\u7279\u6027\uff1b</p> <p>UART\u901a\u4fe1\u65f6\u4e00\u822c\u76f4\u63a5\u4f7f\u7528\u5904\u7406\u5668\u4f7f\u7528\u7684\u7535\u5e73\uff0c\u5373TTL\u7535\u5e73\uff0c\u4e0d\u540c\u5904\u7406\u5668\u4e0d\u80fd\u76f4\u63a5\u901a\u4fe1\uff1b</p> <p>UART\u6ca1\u6709\u89c4\u5b9a\u4e0d\u540c\u5668\u4ef6\u8fde\u63a5\u65f6\u8fde\u63a5\u5668\u7684\u6807\u51c6\uff0c\u6240\u4ee5\u4e0d\u540c\u5668\u4ef6\u4e4b\u95f4\u901a\u8fc7UART\u901a\u4fe1\u65f6\u8fde\u63a5\u5f88\u4e0d\u65b9\u4fbf\u3002</p> <p>2.\u6297\u5e72\u6270\u80fd\u529b\u5dee</p> <p>UART\u4f7f\u7528TTL\u4fe1\u53f7\u6765\u8868\u793a0\u548c1\uff0c\u4f46TTL\u4fe1\u53f7\u7684\u6297\u5e72\u6270\u80fd\u529b\u5f88\u5dee\uff0c\u6570\u636e\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u5f88\u5bb9\u6613\u51fa\u9519\u3002</p> <p>3.\u901a\u4fe1\u8ddd\u79bb\u6781\u77ed</p> <p>\u56e0\u4e3aTTL\u4fe1\u53f7\u6297\u5e72\u6270\u80fd\u529b\u5dee\uff0c \u6240\u4ee5\u5176\u901a\u4fe1\u8ddd\u79bb\u4e5f\u5f88\u77ed\uff0c\u4e00\u822c\u53ea\u80fd\u7528\u4e8e\u4e00\u4e2a\u7535\u8def\u677f\u4e0a\u7684\u4e24\u4e2a\u4e0d\u540c\u82af\u7247\u4e4b\u95f4\u7684\u901a\u4fe1\u3002</p>"},{"location":"linux/kernel/","title":"\u5185\u6838\u5256\u6790","text":""},{"location":"linux/kernel/#_2","title":"\u57fa\u7840\u77e5\u8bc6","text":"<ul> <li>\u7f16\u8bd1\u5185\u6838</li> <li>\u5185\u6838\u7f16\u7a0b</li> <li>\u8c03\u8bd5\u6280\u672f</li> <li>\u540c\u6b65\u8bed\u4e49</li> <li>\u5176\u4ed6</li> </ul>"},{"location":"linux/kernel/#_3","title":"\u8fdb\u7a0b\u7ba1\u7406","text":"<ul> <li>\u8fdb\u7a0b\u52a0\u8f7d\u4e0e\u542f\u52a8</li> <li>\u8fdb\u7a0b\u7ba1\u7406</li> <li>\u7b49\u5f85\u961f\u5217</li> <li>\u8fdb\u7a0b\u8c03\u5ea6</li> <li>\u8fdb\u7a0b\u95f4\u901a\u4fe1</li> <li>\u5185\u6838\u62a2\u5360</li> <li>\u5185\u6838\u7ebf\u7a0b</li> </ul>"},{"location":"linux/kernel/#_4","title":"\u4e2d\u65ad\u5904\u7406","text":"<ul> <li>\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f</li> <li>\u4e2d\u65ad\u4e0b\u534a\u90e8</li> </ul>"},{"location":"linux/kernel/#_5","title":"\u5185\u5b58\u7ba1\u7406","text":"<ul> <li>\u7269\u7406\u5185\u5b58\u7ba1\u7406</li> <li>\u865a\u62df\u5185\u5b58\u7ba1\u7406</li> <li>\u5185\u5b58\u56de\u6536</li> <li>OOM</li> <li>ION\u5185\u5b58\u7ba1\u7406\u5668</li> <li>\u8fde\u7eed\u5185\u5b58\u5206\u914d</li> </ul>"},{"location":"linux/kernel/#_6","title":"\u6587\u4ef6\u7cfb\u7edf","text":"<ul> <li>\u865a\u62df\u6587\u4ef6\u7cfb\u7edf</li> <li>\u5757I/O</li> </ul>"},{"location":"linux/kernel/#_7","title":"\u7f51\u7edc\u7cfb\u7edf","text":"<ul> <li>IO\u591a\u8def\u590d\u7528</li> <li>\u5f02\u6b65IO</li> </ul>"},{"location":"linux/kernel/#_8","title":"\u65f6\u95f4\u7cfb\u7edf","text":"<ul> <li>\u65f6\u95f4\u5b50\u7cfb\u7edf</li> <li>\u5b9a\u65f6\u5668</li> <li>\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668</li> <li>\u5b9e\u65f6\u8865\u4e01</li> </ul>"},{"location":"linux/kernel/#_9","title":"\u7535\u6e90\u7ba1\u7406","text":"<ul> <li>\u7535\u6e90\u7ba1\u7406</li> </ul>"},{"location":"linux/kernel/#shell","title":"shell\u811a\u672c","text":"<ul> <li>shell\u811a\u672c</li> </ul>"},{"location":"linux/kernel/block/","title":"\u5757I/O","text":"<p>\u7cfb\u7edf\u4e2d\u968f\u673a\u8bbf\u95ee\u56fa\u5b9a\u5927\u5c0f\u6570\u636e\u7247\u7684\u786c\u4ef6\u8bbe\u5907\u88ab\u79f0\u4e3a\u5757\u8bbe\u5907\uff0c\u8fd9\u4e9b\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u636e\u7247\u5c31\u88ab\u79f0\u4e3a\u5757\uff0c\u6700\u5e38\u89c1\u7684\u5757\u8bbe\u5907\u662f\u786c\u76d8\u3002</p> <p>\u53e6\u4e00\u79cd\u57fa\u672c\u7684\u8bbe\u5907\u7c7b\u578b\u662f\u5b57\u7b26\u8bbe\u5907\uff0c\u6bd4\u5982\u4e32\u53e3\u548c\u952e\u76d8\u3002\u5b83\u6309\u7167\u5b57\u7b26\u6d41\u7684\u65b9\u5f0f\u88ab\u6709\u5e8f\u8bbf\u95ee\uff0c\u968f\u673a\u7684\u8bbf\u95ee\u662f\u65e0\u610f\u4e49\u7684\u3002\u5f53\u5728\u952e\u76d8\u4e0a\u6253\u51fa\u201cchar\u201d\u8fd9\u4e2a\u5355\u8bcd\u65f6\uff0c\u5c4f\u5e55\u5fc5\u987b\u6309\u7167\u8f93\u5165\u987a\u5e8f\u663e\u793a\u51fa\u6765\u3002</p> <p>\u76f8\u6bd4\u8f83\u4e4b\u4e0b\uff0c\u56e0\u4e3a\u5757\u8bbe\u5907\u652f\u6301\u968f\u673a\u7684I/O\uff0c\u6240\u4ee5\u5185\u6838\u5bf9\u4e8e\u5757\u8bbe\u5907\u7684\u7ba1\u7406\u6bd4\u5b57\u7b26\u8bbe\u5907\u8981\u590d\u6742\u8bb8\u591a\u3002\u66f4\u91cd\u8981\u7684\u662f\u5757\u8bbe\u5907\u5bf9\u4e8e\u6267\u884c\u6027\u80fd\u7684\u8981\u6c42\u5f88\u9ad8\uff0c\u5bf9\u4e8e\u786c\u76d8\u8bfb\u5199\u7684\u4f18\u5316\u53ef\u4ee5\u5e26\u6765\u6574\u4e2a\u7cfb\u7edf\u6027\u80fd\u7684\u63d0\u5347\u3002</p>"},{"location":"linux/kernel/block/#_1","title":"\u78c1\u76d8","text":"<p>\u78c1\u76d8\u662f\u5757\u8bbe\u5907\u7684\u4e00\u79cd\uff0c\u5e38\u89c1\u7684\u78c1\u76d8\u6709\u673a\u68b0\u78c1\u76d8\u548c\u56fa\u6001\u78c1\u76d8\uff0c\u5176\u4e2d\u673a\u68b0\u78c1\u76d8\u7531\u4e8e\u9700\u8981\u78c1\u9053\u5bfb\u5740\uff0c\u6240\u4ee5\u901f\u5ea6\u6bd4\u56fa\u6001\u78c1\u76d8\u8981\u6162\u5f88\u591a\u3002\u78c1\u76d8\u7684\u8bfb\u5199\u6709\u4e24\u79cd\u65b9\u5f0f\u2014\u2014\u968f\u673aI/O\u548c\u8fde\u7eedI/O\uff1a\u968f\u673aI/O\u662f\u6307\u6bcf\u6b21\u8bfb\u5199\u64cd\u4f5c\u90fd\u4ece\u78c1\u76d8\u7684\u67d0\u4e2a\u4f4d\u7f6e\u91cd\u65b0\u5f00\u59cb\uff0c\u800c\u8fde\u7eedI/O\u662f\u6307\u6bcf\u6b21\u8bfb\u5199\u64cd\u4f5c\u90fd\u4ece\u540c\u4e00\u4e2a\u4f4d\u7f6e\u5f00\u59cb\uff0c\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7\u9884\u8bfb\u7684\u65b9\u5f0f\uff0c\u51cf\u5c11I/O\u8bf7\u6c42\u7684\u6b21\u6570\u3002</p> <p>\u78c1\u76d8\u8bfb\u5199\u7684\u6700\u5c0f\u5355\u4f4d\u662f\u6247\u533a\uff0c\u4f46\u662f\u6247\u533a\u53ea\u6709512B\u5927\u5c0f\u3002\u4e3a\u4e86\u63d0\u9ad8\u8bfb\u5199\u7684\u6548\u7387\uff0c\u6587\u4ef6\u7cfb\u7edf\u5c06\u8fde\u7eed\u7684\u6247\u533a\u7ec4\u5408\u6210\u903b\u8f91\u5757\uff0c\u6bcf\u4e2a\u903b\u8f91\u5757\u7684\u5927\u5c0f\u6700\u5e38\u89c1\u7684\u662f4KB\u2014\u2014\u75318\u4e2a\u6247\u533a\u7ec4\u6210\u3002</p> <p>\u76ee\u5f55\u9879\u3001\u7d22\u5f15\u8282\u70b9\u4ee5\u53ca\u78c1\u76d8\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p>"},{"location":"linux/kernel/block/#_2","title":"\u901a\u7528\u5757\u5c42","text":"<p>\u4e3a\u4e86\u5c4f\u853d\u4e0d\u540c\u5757\u8bbe\u5907\u5e26\u6765\u7684\u5dee\u5f02\uff0c\u5185\u6838\u5f15\u5165\u4e86\u901a\u7528\u5757\u5c42\uff0c\u6765\u7ba1\u7406\u4e0d\u540c\u7684\u5757\u8bbe\u5907\u3002</p> <p>\u901a\u7528\u5757\u5c42\u662f\u6587\u4ef6\u7cfb\u7edf\u548c\u78c1\u76d8\u9a71\u52a8\u4e2d\u95f4\u7684\u4e00\u4e2a\u5757\u8bbe\u5907\u62bd\u8c61\u5c42\uff0c\u5b83\u4f1a\u5bf9\u6587\u4ef6\u7cfb\u7edf\u7684I/O\u8bf7\u6c42\u8fdb\u884c\u6392\u961f\uff0c\u518d\u901a\u8fc7\u91cd\u65b0\u6392\u5e8f\u548c\u8bf7\u6c42\u5408\u5e76\uff0c\u7136\u540e\u518d\u53d1\u9001\u7ed9\u4e0b\u4e00\u7ea7\u7684\u8bbe\u5907\u5c42\u3002\u5b83\u6709\u4e24\u4e2a\u529f\u80fd\uff1a</p> <ol> <li>\u5411\u4e0a\uff0c\u4e3a\u6587\u4ef6\u7cfb\u7edf\u548c\u5e94\u7528\u7a0b\u5e8f\uff0c\u63d0\u4f9b\u8bbf\u95ee\u5757\u8bbe\u5907\u7684\u6807\u51c6\u63a5\u53e3\uff1b\u5411\u4e0b\uff0c\u628a\u4e0d\u540c\u7684\u5757\u8bbe\u5907\u62bd\u8c61\u4e3a\u7edf\u4e00\u4e2a\u5757\u8bbe\u5907\u3002</li> <li>\u7ba1\u7406\u5757\u8bbe\u5907\u7684I/O\u8bf7\u6c42\uff0c\u5e76\u901a\u8fc7\u91cd\u65b0\u6392\u5e8f\u3001\u8bf7\u6c42\u5408\u5e76\u7b49\u65b9\u5f0f\uff0c\u4f18\u5316\u8bfb\u5199\u78c1\u76d8\u7684\u6548\u7387\u3002</li> </ol> <p>\u5bf9I/O\u8bf7\u6c42\u6392\u5e8f\u7684\u8fc7\u7a0b\uff0c\u5c31\u662f\u6240\u8c13\u7684I/O\u8c03\u5ea6\u3002\u5185\u6838\u652f\u6301\u56db\u79cd\u8c03\u5ea6\u7b97\u6cd5\uff0c\u5206\u522b\u662fNONE\u3001NOOP\u3001CFQ\u4ee5\u53caDeadlLine\u3002</p> <ul> <li>NONE\uff1a\u4e0d\u505a\u4efb\u4f55\u5904\u7406\uff0c\u5e38\u7528\u5728\u865a\u62df\u673a\u4e2d\u3002</li> <li>NOOP\uff1a\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5148\u5165\u5148\u51fa\u7684\u961f\u5217\uff0c\u5236\u4f5c\u4e00\u4e9b\u6700\u57fa\u672c\u7684\u8bf7\u6c42\u5408\u5e76\uff0c\u5e38\u7528\u4e8eSSD\u78c1\u76d8\u3002</li> <li>CFQ\uff1a\u9ed8\u8ba4I/O\u8c03\u5ea6\u5668\uff0c\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u7ef4\u62a4\u4e86\u4e00\u4e2aI/O\u8c03\u5ea6\u961f\u5217\uff0c\u5e76\u6309\u7167\u65f6\u95f4\u7247\u6765\u5747\u5300\u5206\u5e03\u6bcf\u4e2a\u8fdb\u7a0b\u7684I/O\u8bf7\u6c42\u3002\u9002\u7528\u4e8e\u8fd0\u884c\u5927\u91cf\u8fdb\u7a0b\u7684\u7cfb\u7edf\u3002</li> <li>DeadLine\uff1a\u4e3a\u8bfb\u3001\u5199\u8bf7\u6c42\u521b\u5efa\u4e0d\u540c\u7684I/O\u961f\u5217\uff0c\u786e\u4fdd\u8fbe\u5230deadline\u7684\u8bf7\u6c42\u88ab\u4f18\u5148\u5904\u7406\u3002\u5e38\u7528\u4e8e\u6570\u636e\u5e93\u4e2d\u3002</li> </ul>"},{"location":"linux/kernel/block/#io_1","title":"\u5f02\u6b65I/O","text":"<p>Linux\u4e2d\u6700\u5e38\u7528\u7684\u8f93\u5165/\u8f93\u51fa\u6a21\u578b\u662f\u540c\u6b65I/O\uff0c\u5728\u8bf7\u6c42\u53d1\u51fa\u4e4b\u540e\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f1a\u963b\u585e\u76f4\u5230\u8bf7\u6c42\u88ab\u6ee1\u8db3\u3002</p> <p>\u5f02\u6b65I/O\u662f\u53e6\u4e00\u79cd\u8f93\u5165/\u8f93\u51fa\u6a21\u578b\uff0c\u5b83\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u5728\u8bf7\u6c42\u53d1\u51fa\u4e4b\u540e\u7acb\u5373\u8fd4\u56de\uff0c\u800c\u4e0d\u4f1a\u963b\u585e\u3002glibc\u4e2d\u7684\u5f02\u6b65I/O\u51fd\u6570\u63a5\u53e3\u4e3b\u8981\u5305\u62ec\uff1a</p> \u51fd\u6570\u540d \u63cf\u8ff0 aio_read \u5f02\u6b65\u8bfb aio_write \u5f02\u6b65\u5199 aio_error \u83b7\u53d6\u5f02\u6b65I/O\u64cd\u4f5c\u7684\u72b6\u6001 aio_return \u83b7\u53d6\u5f02\u6b65I/O\u64cd\u4f5c\u7684\u7ed3\u679c aio_suspend \u6302\u8d77\u8fdb\u7a0b\uff0c\u76f4\u5230\u5f02\u6b65I/O\u64cd\u4f5c\u5b8c\u6210 aio_cancel \u53d6\u6d88\u5f02\u6b65I/O\u64cd\u4f5c"},{"location":"linux/kernel/bottom_half/","title":"\u4e2d\u65ad\u4e0b\u534a\u90e8","text":""},{"location":"linux/kernel/bottom_half/#_2","title":"\u8f6f\u4e2d\u65ad","text":"<p>Note</p> <p>\u8f6f\u4e2d\u65ad\u7684\u82f1\u6587\u540d\u662fsoftirq\uff0c\u4e0e\u8f6f\u4ef6\u4e2d\u65ad\uff08software irq\uff09\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\u3002</p> <p>\u8f6f\u4e2d\u65ad\u7684\u672c\u8d28\u5c31\u662f\u5728\u786c\u4ef6\u4e2d\u65ad\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u901a\u8fc7<code>wakeup_softirqd()</code>\u7684\u65b9\u5f0f\u5524\u9192\u4e00\u4e2asoftirq\u961f\u5217\uff0c\u7136\u540e\u4e2d\u65ad\u7a0b\u5e8f\u8fd4\u56de\uff0csoftirq\u961f\u5217\u5728\u9002\u5f53\u7684\u65f6\u5019\u5f00\u59cb\u6267\u884c\u3002</p> <p>\u666e\u901a\u7684\u9a71\u52a8\u7a0b\u5e8f\u4e00\u822c\u4e0d\u4f1a\u7528\u5230\u8f6f\u4e2d\u65ad\uff0c\u53ea\u6709\u90a3\u4e9b\u5bf9\u4e8e\u6027\u80fd\u8981\u6c42\u975e\u5e38\u9ad8\u7684\u6bd4\u5982\u7f51\u5361\u9a71\u52a8\u4f1a\u7528\u5230\u3002\u7531\u4e8etasklet\u662f\u57fa\u4e8e\u8f6f\u4e2d\u65ad\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u4e86\u89e3\u8f6f\u4e2d\u65ad\u662f\u7406\u89e3tasklet\u7684\u5173\u952e\u3002</p>"},{"location":"linux/kernel/bottom_half/#_3","title":"\u8f6f\u4e2d\u65ad\u7684\u5b9e\u73b0","text":"<p>\u8f6f\u4e2d\u65ad\u5728\u7f16\u8bd1\u671f\u95f4\u7531\u5185\u6838\u9759\u6001\u5206\u914d\uff1a</p> <pre><code>/*\u5185\u6838\u53ea\u652f\u630110\u79cd\u8f6f\u4e2d\u65ad\u7c7b\u578b*/\nenum {\n    HI_SOFTIRQ=0,       /* \u9ad8\u4f18\u5148\u7ea7tasklet */\n    TIMER_SOFTIRQ,      /* Timer\u5b9a\u65f6\u5668\u8f6f\u4e2d\u65ad */\n    NET_TX_SOFTIRQ,     /* \u53d1\u9001\u7f51\u7edc\u6570\u636e\u5305\u8f6f\u4e2d\u65ad */\n    NET_RX_SOFTIRQ,     /* \u63a5\u6536\u7f51\u7edc\u6570\u636e\u5305\u8f6f\u4e2d\u65ad */\n    BLOCK_SOFTIRQ,      /* \u5757\u8bbe\u5907\u8f6f\u4e2d\u65ad */\n    IRQ_POLL_SOFTIRQ,   /* \u5757\u8bbe\u5907\u8f6f\u4e2d\u65ad */\n    TASKLET_SOFTIRQ,    /* \u666e\u901atasklet */\n    SCHED_SOFTIRQ,      /* \u8fdb\u7a0b\u8c03\u5ea6\u53ca\u8d1f\u8f7d\u5747\u8861\u7684\u8f6f\u4e2d\u65ad */\n    HRTIMER_SOFTIRQ,    /* \u9ad8\u7cbe\u5ea6timer\u5b9a\u65f6\u5668\u8f6f\u4e2d\u65ad */\n    RCU_SOFTIRQ,        /* Preferable RCU should always be the last softirq\uff0c RCU\u76f8\u5173\u7684\u8f6f\u4e2d\u65ad */\n    NR_SOFTIRQS\n};\n\n/*\u8f6f\u4e2d\u65ad\u63cf\u8ff0\u7b26\uff0c\u53ea\u5305\u542b\u4e00\u4e2ahandler\u6307\u9488*/\nstruct softirq_action {\n    void (*action)(struct softirq_action *);\n};\n\n/*\u8f6f\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868\uff0c\u4e00\u4e2a\u5168\u5c40\u6570\u7ec4*/\nstatic struct softirq_action softirq_vec[NR_SOFTIRQS]__cacheline_aligned_in_smp;\n\n/*CPU\u8f6f\u4e2d\u65ad\u72b6\u6001\u63cf\u8ff0\uff0c\u5f53\u67d0\u4e2a\u8f6f\u4e2d\u65ad\u89e6\u53d1\u65f6\uff0c__softirq_pending\u4f1a\u7f6e\u4f4d\u5bf9\u5e94\u7684bit*/\ntypedef struct {\n    unsigned int __softirq_pending;\n    unsigned int ipi_irqs[NR_IPI];\n}__cacheline_aligned irq_cpustat_t;\n\n/*\u6bcf\u4e2aCPU\u7ef4\u62a4\u4e00\u4e2a\u72b6\u6001\u4fe1\u606f*/\nirq_cpustat_t irq_stat[NR_CPUS];\n\n/*\u6bcf\u4e2aCPU\u521b\u5efa\u4e00\u4e2aksoftirq\u7ebf\u7a0b*/\nDEFINE_PER_CPU(struct task_struct *, ksoftirqd);\n</code></pre> <p></p> <p>\u6ce8\u610f\uff1a\u8f6f\u4e2d\u65ad\u53ef\u4ee5\u5728\u4e0d\u540c\u7684CPU\u4e0a\u5e76\u53d1\u8fd0\u884c\uff0c\u4f46\u662f\u5728\u540c\u4e00\u4e2aCPU\u4e0a\u53ea\u80fd\u4e32\u884c\u8fd0\u884c\u3002</p>"},{"location":"linux/kernel/bottom_half/#_4","title":"\u89e6\u53d1\u8f6f\u4e2d\u65ad","text":"<p>\u8c03\u7528<code>open_softirq()</code>\u51fd\u6570\u6ce8\u518csoftirq action\u56de\u8c03\u51fd\u6570\uff1a</p> <pre><code>void open_softirq(int nr, void (*action)(struct softirq_action*))\n{\n    softirq_vec[nr].action = action;\n}\n</code></pre> <p><code>raise_softirq()</code>\u51fd\u6570\u7528\u6765\u89e6\u53d1\u672c\u5730CPU\u4e0a\u7684\u8f6f\u4e2d\u65ad\uff1a</p> <pre><code>void raise_softirq(unsigned int nr)\n{\n    unsigned long flagss;\n\n    local_irq_save(flags);\n    raise_softirq_irqoff(nr);\n    local_irq_restore(flags);\n}\n</code></pre> <p>\u867d\u7136\u5927\u90e8\u5206\u573a\u666f\u662f\u5728\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4e2d(\u672c\u5730CPU\u4e2d\u65ad\u5df2\u5173\u95ed)\u6267\u884c\u8f6f\u4e2d\u65ad\u7684\u89e6\u53d1\u52a8\u4f5c\uff0c\u4f46\u662f\u5176\u4ed6\u4e0a\u4e0b\u6587\u4e5f\u53ef\u4ee5\u8c03\u7528<code>raise_softirq()</code>\u51fd\u6570\u3002\u56e0\u6b64\u89e6\u53d1\u8f6f\u4e2d\u65ad\u7684\u51fd\u6570\u6709\u4e24\u4e2a\u63a5\u53e3\uff0c\u6211\u4eec\u6765\u770b\u6ca1\u6709\u4e2d\u65ad\u4fdd\u62a4\u7684<code>raise_softirq_irqoff()</code>\u51fd\u6570\uff1a</p> <pre><code>inline void raise_softirq_irqoff(unsigned int nr)\n{\n    __raise_softirq_irqoff(nr);\n\n    if (!in_interrupt() &amp;&amp; should_wake_ksoftirqd())\n        wakeup_softirqd();\n}\n</code></pre> <ul> <li> <p><code>__raise_softirq_irqoff()</code>\u51fd\u6570\u4f1a\u8bbe\u7f6e<code>__softirq_pending</code>\u7684\u5bf9\u5e94bit\u4f4d\uff0c\u8868\u793a\u8f6f\u4e2d\u65ad\u5df2\u7ecf\u6302\u8d77\u3002</p> </li> <li> <p>\u5982\u679c\u4e0d\u662f\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0c\u6211\u4eec\u5fc5\u987b\u8981\u8c03\u7528<code>wakeup_softirqd()</code>\u51fd\u6570\u6765\u5524\u9192ksoftirqd\u7ebf\u7a0b\u3002</p> </li> </ul> <p>\u8f6f\u4e2d\u65ad\u6267\u884c\u7684\u65f6\u5019\uff0c\u5141\u8bb8\u54cd\u5e94\u4e2d\u65ad\uff0c\u672c\u5730\u8f6f\u4e2d\u65ad\u88ab\u7981\u6b62\uff0c\u4f46\u5728\u5176\u4ed6CPU\u4e0a\u53ef\u4ee5\u6267\u884c\u76f8\u540c\u7684\u8f6f\u4e2d\u65ad\u3002\u56e0\u6b64\u5927\u90e8\u5206\u8f6f\u4e2d\u65ad\u5904\u7406\uff0c\u90fd\u901a\u8fc7\u91c7\u53d6\u5355\u5904\u7406\u5668\u6570\u636e\u6765\u907f\u514d\u52a0\u9501\uff0c\u4ece\u800c\u63d0\u4f9b\u66f4\u51fa\u8272\u7684\u6027\u80fd\u3002</p>"},{"location":"linux/kernel/bottom_half/#_5","title":"\u6267\u884c\u8f6f\u4e2d\u65ad","text":"<p>\u524d\u9762\u6211\u4eec\u8bf4\u5230\uff0c\u5728\u8c03\u7528<code>raise_softirq()</code>\u51fd\u6570\u89e6\u53d1\u8f6f\u4e2d\u65ad\u4e4b\u540e\uff0c\u5185\u6838\u5c31\u4f1a\u9009\u62e9\u5408\u9002\u7684\u65f6\u673a\u6765\u6267\u884c\u8f6f\u4e2d\u65ad\u3002\u90a3\u4e48\u5177\u4f53\u5ef6\u8fdf\u5230\u4ec0\u4e48\u65f6\u5019\u5462\uff1f</p> <p>\u8f6f\u4e2d\u65ad\u5728\u5185\u6838\u4e2d\u6267\u884c\u7684\u5165\u53e3\u51fd\u6570\u662f<code>invoke_softirq()</code>\uff0c\u5b83\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>static inline void invoke_softirq(void)\n{\n    if (ksoftirqd_running(local_softirq_pending()))\n        return;\n\n    if (!force_irqthreads() || !__this_cpu_read(ksoftirqd)) {\n#ifdef CONFIG_HAVE_IRQ_EXIT_ON_IRQ_STACK\n        __do_softirq();\n#else\n        do_softirq_own_stack();\n#endif\n    } else {\n        wakeup_softirqd();\n    }\n}\n</code></pre> <p><code>invoke_softirq()</code>\u51fd\u6570\u9996\u5148\u4f1a\u68c0\u67e5\u5f53\u524dCPU\u662f\u5426\u6b63\u5728\u6267\u884c\u8f6f\u4e2d\u65ad\uff0c\u5982\u679c\u6b63\u5728\u6267\u884c\u8f6f\u4e2d\u65ad\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u3002</p> <p><code>force_irqthread()</code>\u662f\u4e0e\u5f3a\u5236\u7ebf\u7a0b\u5316\u76f8\u5173\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u5bf9\u8f6f\u4e2d\u65ad\u7ebf\u7a0b\u5316\u5904\u7406\uff0c\u5219\u76f4\u63a5\u8c03\u7528<code>wakeup_softirqd()</code>\u51fd\u6570\u6765\u5524\u9192ksoftirqd\u7ebf\u7a0b\u3002</p> <p>\u6838\u5fc3\u7684\u5904\u7406\u903b\u8f91\u5728<code>__do_softirq()</code>\u51fd\u6570\u4e2d\uff0c\u5b83\u4f1a\u904d\u5386softirq_vec\u4e2d\u7684\u6bcf\u4e00\u4e2abit\uff0c\u5904\u7406pending\u7684\u8f6f\u4e2d\u65ad\u3002</p> <p>\u8f6f\u4e2d\u65ad\u7684\u89e6\u53d1\u573a\u666f\u6709\uff1a</p> <ol> <li>\u5728\u4e2d\u65ad\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u65f6\uff0c\u5982\u679c\u6709pending\u7684\u8f6f\u4e2d\u65ad\uff0c\u6267\u884c\u5bf9\u5e94\u7684\u5904\u7406\u51fd\u6570\u3002</li> <li>\u5728\u4e2d\u65ad\u8fd4\u56de\u5185\u6838\u6001\uff0c\u5982\u679c<code>local_bh_enable()</code>\uff0c\u5219\u6267\u884cpending\u7684\u8f6f\u4e2d\u65ad\u3002</li> <li>\u7cfb\u7edf\u8fc7\u4e8e\u7e41\u5fd9\uff0c\u4e0d\u65ad\u4ea7\u751f\u8f6f\u4e2d\u65ad\uff0c\u5219\u63a8\u8fdf\u5230kosftirq\u5185\u6838\u7ebf\u7a0b\u4e2d\u6267\u884c\u3002</li> </ol>"},{"location":"linux/kernel/bottom_half/#tasklet","title":"tasklet","text":"<p>tasklet \u662f\u5229\u7528\u8f6f\u4e2d\u65ad\u5b9e\u73b0\u7684\u4e00\u79cd\u4e0b\u534a\u90e8\u673a\u5236\uff0c\u4f46\u662f\u5b83\u7684\u63a5\u53e3\u66f4\u7b80\u5355\uff0c\u9501\u4fdd\u62a4\u8981\u6c42\u8f83\u4f4e\u3002\u5927\u591a\u6570\u60c5\u51b5\u90fd\u53ef\u4ee5\u4f7f\u7528 tasklet \u6765\u5b8c\u6210\u4f60\u9700\u8981\u7684\u5de5\u4f5c\u3002</p> <p>tasklet \u6709\u4e00\u4e9b\u6bd4\u8f83\u6709\u610f\u601d\u7684\u7279\u6027\uff1a</p> <ul> <li> <p>\u4e00\u4e2a tasklet \u53ef\u5728\u7a0d\u540e\u88ab\u7981\u6b62\u6216\u8005\u91cd\u65b0\u542f\u7528\uff1b\u53ea\u6709\u542f\u7528\u7684\u6b21\u6570\u548c\u7981\u6b62\u7684\u6b21\u6570\u76f8\u540c\u65f6\uff0ctasklet \u624d\u4f1a\u88ab\u6267\u884c\u3002</p> </li> <li> <p>tasklet \u53ef\u4ee5\u6ce8\u518c\u81ea\u5df1\u672c\u8eab\u3002</p> </li> <li> <p>tasklet \u53ef\u88ab\u8c03\u5ea6\u5728\u6b63\u5e38\u4f18\u5148\u7ea7\u6216\u8005\u66f4\u9ad8\u4f18\u5148\u7ea7\u6267\u884c\u3002</p> </li> <li> <p>\u5f53\u7cfb\u7edf\u8d1f\u8f7d\u4f4e\u65f6\uff0ctasklet \u4f1a\u88ab\u7acb\u523b\u6267\u884c\uff0c\u4f46\u518d\u665a\u4e0d\u4f1a\u665a\u4e8e\u4e0b\u4e00\u4e2a\u5b9a\u65f6\u5668 tick\u3002</p> </li> <li> <p>\u4e00\u4e2a tasklet \u53ef\u4ee5\u4e0e\u5176\u4ed6 tasklet \u5e76\u53d1\uff0c\u4f46\u662f\u540c\u4e00\u4e2a tasklet \u6c38\u8fdc\u4e0d\u4f1a\u5728\u591a\u4e2a CPU \u4e0a\u540c\u65f6\u8fd0\u884c\u3002</p> </li> </ul>"},{"location":"linux/kernel/bottom_half/#tasklet_1","title":"tasklet\u7684\u5b9e\u73b0","text":"<p>tasklet \u7531\u4e24\u7c7b\u8f6f\u4e2d\u65ad\u4ee3\u8868\uff1aHI_SOFTIRQ \u548c TASKLET_SOFTIRQ\u3002\u524d\u8005\u4f18\u5148\u7ea7\u6bd4\u540e\u8005\u9ad8\u3002</p> <p>tasklet \u7ed3\u6784\u4f53\u5982\u4e0b\uff1a</p> <pre><code>struct tasklet_struct\n{\n    struct tasklet_struct *next;\n    unsigned long state;\n    atomic_t count;\n    bool use_callback;\n    union {\n        void (*func)(unsigned long data);\n        void (*callback)(struct tasklet_struct *t);\n    };\n    unsigned long data;\n};\n</code></pre> <p>state \u6210\u5458\u53ea\u80fd\u5728 TASKLET_STATE_SCHED \u548c TASKLET_STATE_RUN \u4e4b\u95f4\u53d6\u503c\u3002TASKLET_STATE_SCHED \u8868\u660e \u8be5tasklet \u5df2\u88ab\u8c03\u5ea6\uff0c\u6b63\u51c6\u5907\u6295\u5165\u8fd0\u884c\uff0cTASKLET_STATE_RUN \u8868\u660e\u8be5 tasklet \u6b63\u5728\u8fd0\u884c\u3002TASKLET_STATE_RUN \u53ea\u6709\u5728\u591a\u5904\u7406\u5668\u7684\u7cfb\u7edf\u4e0a\u624d\u4f1a\u4f5c\u4e3a\u4e00\u79cd\u4f18\u5316\u6765\u4f7f\u7528\uff0c\u5355\u5904\u7406\u5668\u7cfb\u7edf\u4efb\u4f55\u65f6\u5019\u90fd\u6e05\u695a\u5355\u4e2a tasklet \u662f\u4e0d\u662f\u6b63\u5728\u8fd0\u884c(\u5b83\u8981\u4e48\u5c31\u662f\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4ee3\u7801\uff0c\u8981\u4e48\u4e0d\u662f)\u3002</p> <p>count \u6210\u5458\u662f tasklet \u7684\u5f15\u7528\u8ba1\u6570\u5668\u3002\u5f53\u5b83\u4e3a0\u65f6\uff0ctasklet \u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\uff0c\u53ef\u4ee5\u88ab\u8c03\u5ea6\u8fd0\u884c\u3002</p> <p>\u5df2\u8c03\u5ea6\uff08\u6216\u8005\u53eb\u5df2\u6fc0\u6d3b\uff09\u7684 tasklet \u5b58\u653e\u5728 tasklet_vec\uff08\u666e\u901atasklet\uff09\u548c tasklet_hi_vec\uff08\u9ad8\u4f18\u5148\u7ea7\u7684tasklet\uff09\u94fe\u8868\u4e2d\u3002</p>"},{"location":"linux/kernel/bottom_half/#tasklet_2","title":"\u4f7f\u7528tasklet","text":"<ol> <li> <p>\u521d\u59cb\u5316\uff1a</p> <pre><code>//\u65b0\u7248\u63a5\u53e3\n#define DECLARE_TASKLET(name, _callback)        \\\nstruct tasklet_struct name = {              \\\n    .count = ATOMIC_INIT(0),            \\\n    .callback = _callback,              \\\n    .use_callback = true,               \\\n}\n\n#define DECLARE_TASKLET_DISABLED(name, _callback)   \\\nstruct tasklet_struct name = {              \\\n    .count = ATOMIC_INIT(1),            \\\n    .callback = _callback,              \\\n    .use_callback = true,               \\\n}\n\nvoid tasklet_setup(struct tasklet_struct *t,\n       void (*callback)(struct tasklet_struct *))\n{\n    t-&gt;next = NULL;\n    t-&gt;state = 0;\n    atomic_set(&amp;t-&gt;count, 0);\n    t-&gt;callback = callback;\n    t-&gt;use_callback = true;\n    t-&gt;data = 0;\n}\n\n//\u65e7\u7248\u63a5\u53e3\n#define DECLARE_TASKLET_OLD(name, _func)        \\\nstruct tasklet_struct name = {              \\\n    .count = ATOMIC_INIT(0),            \\\n    .func = _func,                  \\\n}\n\n#define DECLARE_TASKLET_DISABLED_OLD(name, _func)   \\\nstruct tasklet_struct name = {              \\\n    .count = ATOMIC_INIT(1),            \\\n    .func = _func,                  \\\n}\n\nvoid tasklet_init(struct tasklet_struct *t,\n        void (*func)(unsigned long), unsigned long data)\n{\n    t-&gt;next = NULL;\n    t-&gt;state = 0;\n    atomic_set(&amp;t-&gt;count, 0);\n    t-&gt;func = func;\n    t-&gt;use_callback = false;\n    t-&gt;data = data;\n}\n</code></pre> </li> <li> <p>\u4f7f\u80fd/\u7981\u6b62\uff1a</p> <pre><code>static inline void tasklet_disable(struct tasklet_struct *t)\n{\n    tasklet_disable_nosync(t);\n    tasklet_unlock_wait(t);\n    smp_mb();\n}\n\nstatic inline void tasklet_enable(struct tasklet_struct *t)\n{\n    smp_mb__before_atomic();\n    atomic_dec(&amp;t-&gt;count);\n}\n</code></pre> </li> <li> <p>\u8c03\u5ea6\u8fd0\u884c\uff1a</p> <pre><code>static inline void tasklet_schedule(struct tasklet_struct *t)\n{\n    if (!test_and_set_bit(TASKLET_STATE_SCHED, &amp;t-&gt;state))\n        __tasklet_schedule(t);\n}\n\nstatic inline void tasklet_hi_schedule(struct tasklet_struct *t)\n{\n    if (!test_and_set_bit(TASKLET_STATE_SCHED, &amp;t-&gt;state))\n        __tasklet_hi_schedule(t);\n}\n</code></pre> </li> <li> <p>\u5220\u9664\uff1a</p> <pre><code>void tasklet_kill(struct tasklet_struct *t)\n{\n    if (in_interrupt())\n        pr_notice(\"Attempt to kill tasklet from interrupt\\n\");\n\n    while (test_and_set_bit(TASKLET_STATE_SCHED, &amp;t-&gt;state))\n        wait_var_event(&amp;t-&gt;state, !test_bit(TASKLET_STATE_SCHED, &amp;t-&gt;state));\n\n    tasklet_unlock_wait(t);\n    tasklet_clear_sched(t);\n}\n</code></pre> </li> </ol>"},{"location":"linux/kernel/bottom_half/#ksoftirqd","title":"ksoftirqd","text":"<p>\u6bcf\u4e2a\u5904\u7406\u5668\u90fd\u6709\u4e00\u7ec4\u8f85\u52a9\u5904\u7406\u8f6f\u4e2d\u65ad\uff08\u548ctasklet\uff09\u7684\u5185\u6838\u7ebf\u7a0b\u3002\u5f53\u5185\u6838\u4e2d\u51fa\u73b0\u5927\u91cf\u8f6f\u4e2d\u65ad\u7684\u65f6\u5019\uff0c\u5185\u6838\u7ebf\u7a0b\u5c31\u4f1a\u9009\u62e9\u5408\u9002\u7684\u65f6\u673a\u6765\u5904\u7406\u8f6f\u4e2d\u65ad\u3002</p> <p>\u5728\u5927\u6d41\u91cf\u7684\u7f51\u7edc\u901a\u4fe1\u4e2d\uff0c\u8f6f\u4e2d\u65ad\u7684\u89e6\u53d1\u9891\u7387\u53ef\u80fd\u5f88\u9ad8\uff0c\u751a\u81f3\u8fd8\u4f1a\u81ea\u884c\u91cd\u590d\u89e6\u53d1\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u7528\u6237\u7a7a\u95f4\u7684\u8fdb\u7a0b\u65e0\u6cd5\u83b7\u5f97\u8db3\u591f\u7684\u5904\u7406\u5668\u65f6\u95f4\u3002\u5982\u679c\u8f6f\u4e2d\u65ad\u548c\u91cd\u590d\u89e6\u53d1\u7684\u8f6f\u4e2d\u65ad\u90fd\u88ab\u7acb\u5373\u5904\u7406\uff0c\u90a3\u4e48\u5f53\u8d1f\u8f7d\u5f88\u9ad8\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u5c31\u4f1a\u51fa\u73b0\u660e\u663e\u7684\u5361\u987f\u73b0\u8c61\u3002\u5982\u679c\u9009\u62e9\u4e0d\u5904\u7406\u91cd\u65b0\u89e6\u53d1\u7684\u8f6f\u4e2d\u65ad\uff0c\u53c8\u4f1a\u6d6a\u8d39\u95f2\u7f6e\u7684\u7cfb\u7edf\u8d44\u6e90\uff0c\u5bfc\u81f4\u8f6f\u4e2d\u65ad\u51fa\u73b0\u9965\u997f\u73b0\u8c61\u3002</p> <p>\u5185\u6838\u4e2d\u7684\u65b9\u6848\u65f6\u4e0d\u4f1a\u7acb\u5373\u5904\u7406\u91cd\u590d\u89e6\u53d1\u7684\u8f6f\u4e2d\u65ad\u3002\u5f53\u5927\u91cf\u8f6f\u4e2d\u65ad\u51fa\u73b0\u7684\u65f6\u5019\uff0c\u5185\u6838\u4f1a\u5524\u9192\u4e00\u7ec4\u5185\u6838\u7ebf\u7a0b\u6765\u5904\u7406\u8fd9\u4e9b\u8d1f\u8f7d\u3002\u8fd9\u4e9b\u7ebf\u7a0b\u5728\u6700\u4f4e\u4f18\u5148\u7ea7\uff08nice=19\uff09\u8fd0\u884c\uff0c\u907f\u514d\u4e0e\u5176\u4ed6\u4efb\u52a1\u62a2\u5360\u8d44\u6e90\u3002</p> <p>\u6bcf\u4e2a\u5904\u7406\u5668\u90fd\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u7ebf\u7a0b\uff0c\u540d\u5b57\u4e3a ksoftirqd/n\uff0cn\u4e3a\u5904\u7406\u5668\u7f16\u53f7\u3002\u53ea\u8981\u6709\u5f85\u5904\u7406\u7684\u8f6f\u4e2d\u65ad\uff0cksoftirqd \u5c31\u4f1a\u8c03\u7528<code>do_softirq()</code>\u51fd\u6570\u6765\u5904\u7406\u5b83\u4eec\u3002</p>"},{"location":"linux/kernel/bottom_half/#_6","title":"\u5de5\u4f5c\u961f\u5217","text":"<p>\u5de5\u4f5c\u961f\u5217\u662f\u4e00\u79cd\u5f02\u6b65\u5904\u7406\u673a\u5236\uff0c\u7528\u4e8e\u5ef6\u8fdf\u6267\u884c\u4e00\u4e9b\u9700\u8981\u5728\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u7684\u4efb\u52a1\u3002\u5de5\u4f5c\u961f\u5217\u901a\u5e38\u7531\u5185\u6838\u6a21\u5757\u6216\u9a71\u52a8\u7a0b\u5e8f\u4f7f\u7528\uff0c\u4ee5\u907f\u514d\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u64cd\u4f5c\u3002</p> <p>\u5982\u679c\u63a8\u8fdf\u7684\u4ee3\u7801\u9700\u8981\u7761\u7720\uff0c\u5c31\u53ea\u80fd\u9009\u62e9\u5de5\u4f5c\u961f\u5217\u3002</p> <p>\u5185\u6838\u7684\u5de5\u4f5c\u961f\u5217\u5206\u4e3a\u4e24\u79cd\uff1a\u81ea\u5e26\u5de5\u4f5c\u961f\u5217\u548c\u81ea\u5b9a\u4e49\u5de5\u4f5c\u961f\u5217\u3002</p> <p>\u5185\u6838\u63d0\u4f9b\u4e86\u7f3a\u7701\u7684\u5de5\u4f5c\u8005\u7ebf\u7a0b\uff08worker thread\uff09events/n \u6765\u6267\u884c\u5de5\u4f5c\u961f\u5217\u4e2d\u7684\u4efb\u52a1\uff0cn\u4e3a\u5904\u7406\u5668\u7684\u7f16\u53f7\u3002</p>"},{"location":"linux/kernel/bottom_half/#_7","title":"\u5de5\u4f5c\u961f\u5217\u7684\u5b9e\u73b0","text":"<p>\u5de5\u4f5c\u961f\u5217\u7528<code>workqueue_struct</code>\u7ed3\u6784\u4f53\u8868\u793a\uff1a</p> <pre><code>struct workqueue_struct {\n    struct list_head    pwqs;       /* WR: all pwqs of this wq */\n    struct list_head    list;       /* PR: list of all workqueues */\n\n    struct mutex        mutex;      /* protects this wq */\n    int         work_color; /* WQ: current work color */\n    int         flush_color;    /* WQ: current flush color */\n    atomic_t        nr_pwqs_to_flush; /* flush in progress */\n    struct wq_flusher   *first_flusher; /* WQ: first flusher */\n    struct list_head    flusher_queue;  /* WQ: flush waiters */\n    struct list_head    flusher_overflow; /* WQ: flush overflow list */\n\n    struct list_head    maydays;    /* MD: pwqs requesting rescue */\n    struct worker       *rescuer;   /* MD: rescue worker */\n\n    int         nr_drainers;    /* WQ: drain in progress */\n    int         saved_max_active; /* WQ: saved pwq max_active */\n\n    struct workqueue_attrs  *unbound_attrs; /* PW: only for unbound wqs */\n    struct pool_workqueue   *dfl_pwq;   /* PW: only for unbound wqs */\n\n#ifdef CONFIG_SYSFS\n    struct wq_device    *wq_dev;    /* I: for sysfs interface */\n#endif\n#ifdef CONFIG_LOCKDEP\n    char            *lock_name;\n    struct lock_class_key   key;\n    struct lockdep_map  lockdep_map;\n#endif\n    char            name[WQ_NAME_LEN]; /* I: workqueue name */\n\n    /*\n     * Destruction of workqueue_struct is RCU protected to allow walking\n     * the workqueues list without grabbing wq_pool_mutex.\n     * This is used to dump all workqueues from sysrq.\n     */\n    struct rcu_head     rcu;\n\n    /* hot fields used during command issue, aligned to cacheline */\n    unsigned int        flags ____cacheline_aligned; /* WQ: WQ_* flags */\n    struct pool_workqueue __percpu *cpu_pwqs; /* I: per-cpu pwqs */\n    struct pool_workqueue __rcu *numa_pwq_tbl[]; /* PWR: unbound pwqs indexed by node */\n};\n</code></pre> <p><code>struct work_struct</code>\u63cf\u8ff0\u7684\u662f\u5b9e\u9645\u9700\u8981\u6267\u884c\u7684\u5de5\u4f5c\uff1a</p> <pre><code>struct work_struct {\n    atomic_long_t data;\n    struct list_head entry;\n    work_func_t func;\n};\n</code></pre> <p>\u8fd9\u4e9b<code>work_struct</code>\u88ab\u94fe\u63a5\u6210\u94fe\u8868\uff0c\u6bcf\u4e2a\u5904\u7406\u5668\u4e0a\u7684\u6bcf\u79cd\u7c7b\u578b\u7684\u961f\u5217\u90fd\u5bf9\u5e94\u8fd9\u6837\u4e00\u4e2a\u94fe\u8868\u3002\u5f53\u4e00\u4e2a\u5de5\u4f5c\u8005\u7ebf\u7a0b\u88ab\u5524\u9192\u65f6\uff0c\u5b83\u4f1a\u6267\u884c\u94fe\u8868\u4e0a\u7684\u6240\u6709\u5de5\u4f5c\uff0c\u5982\u679c\u6ca1\u6709\u5269\u4f59\u7684\u64cd\u4f5c\uff0c\u5b83\u5c31\u4f1a\u7ee7\u7eed\u4f11\u7720\u3002</p>"},{"location":"linux/kernel/bottom_half/#_8","title":"\u4f7f\u7528\u5de5\u4f5c\u961f\u5217","text":"<ol> <li> <p>\u521b\u5efa\u4e00\u4e2a<code>work_struct</code>\u7ed3\u6784\u4f53\uff1a</p> <pre><code>/*\u9759\u6001\u521b\u5efa*/\nDECLARE_WORK(name, func);\n\n/*\u52a8\u6001\u521b\u5efa*/\nINIT_WORK(name, func);\n</code></pre> </li> <li> <p>\u5c06\u5de5\u4f5c\u63a8\u9001\u5230\u5185\u6838\u9ed8\u8ba4\u7684\u5171\u4eab\u5de5\u4f5c\u961f\u5217\uff1a</p> <pre><code>bool schedule_work(struct work_struct *work);\nbool schedule_work_on(int cpu, struct work_struct *work);\n</code></pre> </li> <li> <p>\u53d6\u6d88\u5df2\u7ecf\u8c03\u5ea6\u7684\u5de5\u4f5c\uff1a</p> <pre><code>bool cancel_work(struct work_struct *work);\nbool cancel_work_sync(struct work_struct *work);\n</code></pre> </li> <li> <p>\u5f3a\u5236\u6267\u884cwork\uff1a</p> <pre><code>bool flush_work(struct work_struct *work);\nvoid flush_scheduled_work(void);        //\u9ed8\u8ba4\u5237\u65b0system_wq\u961f\u5217\nvoid flush_workqueue(struct workqueue_struct *wq);\n</code></pre> </li> <li> <p>\u81ea\u5b9a\u4e49\u4e00\u4e2a\u5de5\u4f5c\u961f\u5217\uff1a</p> <pre><code>create_workqueue(name);\ncreate_singlethread_workqueue(name);\n</code></pre> <p>\u8fd9\u4e24\u4e2a\u5b8f\u90fd\u4f1a\u8fd4\u56de\u4e00\u4e2a<code>struct workqueue_struct</code>\u7684\u6307\u9488\u3002\u533a\u522b\u662f\uff1a\u7b2c\u4e00\u4e2a\u5b8f\u5728\u6bcf\u4e2a\u5904\u7406\u5668\u4e0a\u4e3a\u8be5\u5de5\u4f5c\u961f\u5217\u521b\u5efa\u4e13\u7528\u7684\u7ebf\u7a0b\uff0c\u7b2c\u4e8c\u4e2a\u5b8f\u53ea\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u8005\u7ebf\u7a0b\u3002</p> </li> <li> <p>\u9500\u6bc1\u81ea\u5b9a\u4e49\u7684\u5de5\u4f5c\u961f\u5217\uff1a</p> <pre><code>void destroy_workqueue(struct workqueue_struct *wq);\n</code></pre> </li> <li> <p>\u8c03\u5ea6<code>work_struct</code>\u5230\u81ea\u5b9a\u4e49\u5de5\u4f5c\u961f\u5217\uff1a</p> <pre><code>int queue_work(struct workqueue_struct *queue, struct work_struct *work);\nbool queue_work_on(int cpu, struct workqueue_struct *wq, struct work_struct *work);\n</code></pre> </li> </ol>"},{"location":"linux/kernel/bottom_half/#_9","title":"\u5ef6\u8fdf\u5de5\u4f5c","text":"<p><code>struct delayed_work</code>\u7ed3\u6784\u4f53\u7528\u6765\u63cf\u8ff0\u4e00\u4e2a\u5ef6\u8fdf\u5de5\u4f5c\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f<code>work_struct</code>\u548c<code>timer_list</code>\u7684\u7ec4\u5408\u4f53\uff1a</p> <pre><code>struct delayed_work {\n    struct work_struct work;\n    struct timer_list timer;\n\n    /* target workqueue and CPU -&gt;timer uses to queue -&gt;work */\n    struct workqueue_struct *wq;\n    int cpu;\n};\n</code></pre> <ol> <li> <p>\u521b\u5efa\u5ef6\u8fdf\u5de5\u4f5c\uff1a</p> <pre><code>/*\u9759\u6001\u5b9a\u4e49*/\nDECLARE_DELAYED_WORK(name, func);\n\n/*\u52a8\u6001\u5b9a\u4e49*/\nINIT_DELAYED_WORK(name, func);\n</code></pre> </li> <li> <p>\u5728\u5171\u4eab\u5de5\u4f5c\u961f\u5217\u4e0a\u8c03\u5ea6\u5ef6\u8fdf\u5de5\u4f5c\uff1a</p> <pre><code>bool schedule_delayed_work(struct delayed_work *work, unsigned long delay);\n</code></pre> </li> <li> <p>\u5728\u81ea\u5b9a\u4e49\u5de5\u4f5c\u961f\u5217\u4e0a\u8c03\u5ea6\u5ef6\u8fdf\u5de5\u4f5c\uff1a</p> <pre><code>bool queue_delayed_work(struct workqueue_struct *queue, struct delayed_work *work, unsigned long delay);\n</code></pre> </li> <li> <p>\u53d6\u6d88\u5df2\u7ecf\u8c03\u5ea6\u7684\u5ef6\u8fdf\u5de5\u4f5c\uff1a</p> <pre><code>bool cancel_delayed_work_sync(struct delayed_work *work);\n</code></pre> </li> </ol>"},{"location":"linux/kernel/bottom_half/#cmwq","title":"CMWQ","text":"<p>CMWQ \u5168\u79f0 Concurrency Managed Workqueue\uff0c\u5b83\u5c5e\u4e8e\u5de5\u4f5c\u961f\u5217\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3\u65e7\u7684\u5de5\u4f5c\u961f\u5217\u673a\u5236\u5b58\u5728\u7684\u4e00\u4e9b\u95ee\u9898\u800c\u88ab\u5f00\u53d1\u51fa\u6765\u7684\u3002</p> <p>\u65e7\u7684\u5de5\u4f5c\u961f\u5217\u673a\u5236\u5b58\u5728\u7740\u4e00\u4e9b\u95ee\u9898\uff1a</p> <ol> <li>\u8c03\u5ea6\u95ee\u9898\uff1a\u5de5\u4f5c\u7531\u5355\u4e2a\u5de5\u4f5c\u8005\u7ebf\u7a0b\u5904\u7406\uff0c\u961f\u5217\u4e2d\u7684\u5de5\u4f5c\u5fc5\u987b\u7b49\u5f85\u4e4b\u524d\u7684\u5de5\u4f5c\u5b8c\u6210\u3002</li> <li>\u5e76\u53d1\u6027\u80fd\u95ee\u9898\uff1a\u6bcf\u4e2a CPU \u8fd0\u884c\u4e00\u4e2a\u72ec\u7acb\u7684\u5de5\u4f5c\u961f\u5217\uff0c\u5982\u679c\u67d0\u4e2a CPU \u4e0a\u7684\u5de5\u4f5c\u963b\u585e\uff0c\u4e0d\u80fd\u8f6c\u79fb\u5230\u5176\u4ed6\u7a7a\u95f2\u7684 CPU \u4e0a\u53bb\u6267\u884c\u3002</li> <li>\u6b7b\u9501\u95ee\u9898\uff1a\u5047\u5982\u67d0\u4e2a\u9a71\u52a8\u6a21\u5757\u6bd4\u8f83\u590d\u6742\uff0c\u9700\u8981\u7528\u5230\u4e24\u4e2a\u5de5\u4f5cA\u548cB\uff0c\u5de5\u4f5cA\u4f9d\u8d56\u5de5\u4f5cB\uff0c\u5f53\u8c03\u5ea6\u5230\u540c\u4e00\u4e2a\u5de5\u4f5c\u961f\u5217\u4e0a\u65f6\uff0c\u5c31\u4f1a\u51fa\u73b0\u6b7b\u9501\u3002</li> </ol> <p>\u65e7\u7684\u5de5\u4f5c\u961f\u5217\u673a\u5236\u4e2d\uff0c\u5de5\u4f5c\u662f\u4e0e\u5de5\u4f5c\u7ebf\u7a0b\u7d27\u5bc6\u76f8\u5173\u7684\uff0c\u521b\u5efa\u5c31\u5fc5\u987b\u7ed1\u5b9a\u3002\u5728 CMWQ \u4e2d\uff0c\u5c06\u8fd9\u79cd\u56fa\u5b9a\u5173\u7cfb\u6253\u7834\uff0c\u63d0\u51fa\u4e86 worker pool \u7684\u6982\u5ff5\u3002\u5c06\u7cfb\u7edf\u4e2d\u5212\u5206\u4e3a\u4e0d\u540c\u7684 worker pool \uff0c\u6240\u6709\u7684\u5de5\u4f5c\u961f\u5217\u5171\u4eab\u3002\u7528\u6237\u53ef\u4ee5\u81ea\u5df1\u521b\u5efa\u5de5\u4f5c\u961f\u5217\u5e76\u901a\u8fc7\u6807\u5fd7\u4f4d\u6765\u7ea6\u675f\u6302\u5165\u8be5\u5de5\u4f5c\u961f\u5217\u4e0a\u5de5\u4f5c\u7684\u5904\u7406\u65b9\u5f0f\u3002\u5de5\u4f5c\u961f\u5217\u4f1a\u6839\u636e\u6807\u5fd7\u4f4d\u5c06\u5de5\u4f5c\u4ea4\u4ed8\u7ed9\u7cfb\u7edf\u4e2d\u67d0\u4e2a worker pool \u5904\u7406\u3002</p>"},{"location":"linux/kernel/bottom_half/#_10","title":"\u4e0b\u534a\u90e8\u7684\u540c\u6b65","text":"<p>\u5728\u4e0a\u534a\u90e8\u4e2d\uff0c\u4e0d\u5e94\u8be5\u8c03\u7528disable/enable\u4e0b\u534a\u90e8\u6765\u4fdd\u62a4\u5171\u4eab\u6570\u636e\uff0c\u56e0\u4e3a\u4e0b\u534a\u90e8\u4e0d\u80fd\u62a2\u5360\u4e0a\u534a\u90e8\u3002<code>local_bh_disable()</code>\u548c<code>local_bh_enable()</code>\u662f\u7ed9\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4f7f\u7528\u7684\uff0c\u7528\u4e8e\u9632\u6b62\u4e0b\u534a\u90e8\u62a2\u5360\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u66f4\u5f3a\u52b2\u7684\u540c\u6b65\u2014\u2014\u5173\u672c\u5730\u4e2d\u65ad\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u540c\u65f6\u7981\u6b62\u4e86\u4e0a\u534a\u90e8\u548c\u4e0b\u534a\u90e8\u7684\u62a2\u5360\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8f6f\u4e2d\u65ad\u5728\u540c\u4e00\u4e2aCPU\u4e0a\u53ea\u53ef\u80fd\u4e32\u884c\u6267\u884c\uff0c\u4f46\u662f\u6709\u53ef\u80fd\u5728\u4e0d\u540cCPU\u4e0a\u5e76\u53d1\u6267\u884c\u3002\u800c\u4e24\u4e2a\u76f8\u540c\u7c7b\u578b\u7684tasklet\u4e0d\u5141\u8bb8\u540c\u65f6\u6267\u884c\uff0c\u5373\u4fbf\u662f\u4e0d\u540c\u7684\u5904\u7406\u5668\u4e5f\u4e0d\u884c\u3002tasklet\u4e4b\u95f4\u7684\u540c\u6b65\uff0c\u53ea\u9700\u8981\u6b63\u786e\u4f7f\u7528\u9501\u673a\u5236\u5373\u53ef\u3002</p> <p>\u4e8e\u662f\u540c\u6b65\u573a\u666f\u53ef\u4ee5\u5206\u4e3a\uff1a</p> <ul> <li>\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u548c\u4e0b\u534a\u90e8\u5171\u4eab\u6570\u636e\uff1a\u7981\u6b62\u4e0b\u534a\u90e8</li> <li>\u4e2d\u65ad\u4e0a\u4e0b\u6587\u548c\u4e0b\u534a\u90e8\u5171\u4eab\u6570\u636e\uff1a\u7981\u6b62\u4e2d\u65ad\u5e76\u83b7\u53d6\u9501</li> <li>\u5de5\u4f5c\u961f\u5217\u4e2d\u7684\u5171\u4eab\u6570\u636e\uff1a\u83b7\u53d6\u9501</li> </ul>"},{"location":"linux/kernel/cma/","title":"\u8fde\u7eed\u5185\u5b58\u5206\u914d","text":"<p>\u5728\u5d4c\u5165\u5f0f\u73af\u5883\u4e2d\uff0c\u8bb8\u591a\u8bbe\u5907\u90fd\u9700\u8981\u8fde\u7eed\u5185\u5b58\u5757\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u76f8\u673a\u3001\u89c6\u9891\u89e3\u7801\u5668\u3001\u97f3\u9891\u8bbe\u5907\u7b49\uff0c\u65e9\u671f\u5185\u6838\u9a71\u52a8\u53ea\u80fd\u901a\u8fc7\u9884\u7559\u4e13\u5c5e\u5185\u5b58\u7684\u65b9\u5f0f\uff0c\u5728\u6620\u5c04\u540e\u4f5c\u4e3a\u8bbe\u5907\u79c1\u6709\u5185\u5b58\u4f7f\u7528\u3002\u8fd9\u6837\u7684\u540e\u679c\u5c31\u662f\u5f53\u8bbe\u5907\u4e0d\u5de5\u4f5c\u65f6\uff0c\u9884\u7559\u7684\u5185\u5b58\u9875\u65e0\u6cd5\u88ab\u5f53\u4f5c\u901a\u7528\u5185\u5b58\u4f7f\u7528\uff0c\u9020\u6210\u4e86\u5185\u5b58\u7684\u6d6a\u8d39\u3002</p> <p>\u8fde\u7eed\u5185\u5b58\u5206\u914d(CMA)\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u56f0\u5883\u800c\u88ab\u5f15\u5165\u7684\u3002\u5f53\u4e00\u4e2a\u9a71\u52a8\u6a21\u5757\u60f3\u8981\u7533\u8bf7\u5927\u5757\u8fde\u7eed\u5185\u5b58\u65f6\uff0c\u5185\u5b58\u7ba1\u7406\u7cfb\u7edf\u5c06CMA\u533a\u57df\u7684\u5185\u5b58\u8fdb\u884c\u8fc1\u79fb\uff0c\u7a7a\u51fa\u8fde\u7eed\u5185\u5b58\u7ed9\u9a71\u52a8\u4f7f\u7528\u3002\u800c\u5f53\u9a71\u52a8\u6a21\u5757\u91ca\u653e\u65f6\uff0c\u5b83\u53c8\u88ab\u5f52\u8fd8\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\uff0c\u53ef\u4ee5\u5206\u914d\u7ed9\u5176\u4ed6\u4f7f\u7528\u8005\u3002</p>"},{"location":"linux/kernel/cma/#_2","title":"\u8bbe\u5907\u6811\u914d\u7f6e","text":"<p>CMA\u7684\u6bcf\u4e2a\u533a\u57df\u5b9e\u9645\u5c31\u662f\u4e00\u4e2areserved memory\uff0c\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ul> <li>\u901a\u7528\u7684CMA\u533a\u57df\uff0c\u5206\u914d\u7ed9\u6574\u4e2a\u7cfb\u7edf</li> <li>\u4e13\u7528\u7684CMA\u533a\u57df\uff0c\u5206\u914d\u7ed9\u67d0\u4e2a\u7279\u5b9a\u7684\u6a21\u5757</li> </ul> <p>\u4e0b\u9762\u5b9a\u4e49\u4e86\u4e24\u6bb5CMA\u533a\u57df\uff1a</p> <ol> <li>\u5168\u5c40CMA\u533a\u57df\uff0c\u8282\u70b9\u540d\"cma_reserved\"\uff0c\u5305\u542b\"reusable\"\u5c5e\u6027</li> <li>\u79c1\u6709CMA\u533a\u57df\uff0c\u8282\u70b9\u540d\"ion_cma\"</li> </ol> <pre><code>reserved-memory{\n    #address-cells = &lt;0x2&gt;;\n    #size-cells = &lt;0x2&gt;;\n    ranges;\n\n    cma_reserved: cma_reserved{\n        compatible = \"shared-dma-pool\";     //define standard dma-pool\n        reusable;       //this region can be used by other clients\n        size = &lt;0x0 0x80000000&gt;; \n        alignment = &lt;0x0 0x2000&gt;; \n    };\n\n    ion_cma: ion_cma{\n        compatible = \"ion-region\";\n        size = &lt;0x0 0x04000000&gt;;\n        alignment = &lt;0x0 0x2000&gt;;   \n    };\n\n};\n</code></pre>"},{"location":"linux/kernel/cma/#_3","title":"\u6570\u636e\u7ed3\u6784","text":"<p><code>struct cma</code>\u7528\u4e8e\u7ba1\u7406\u4e00\u4e2aCMA\u533a\u57df\uff1a</p> <pre><code>struct cma {\n    unsigned long   base_pfn;\n    unsigned long   count;\n    unsigned long   *bitmap;\n    unsigned int order_per_bit; \n    struct mutex    lock;\n#ifdef CONFIG_CMA_DEBUGFS\n    struct hlist_head mem_head;\n    spinlock_t mem_head_lock;\n#endif\n    const char *name;\n};\n\n//\u5168\u5c40CMA\u6570\u7ec4\nextern struct cma cma_areas[MAX_CMA_AREAS];\n</code></pre> <p>base_pfn\uff1a\u7269\u7406\u5730\u5740\u8d77\u59cb\u9875\u5e27\u53f7</p> <p>count\uff1a\u533a\u57df\u7684\u603b\u9875\u6570</p> <p>bitmap\uff1a0\u8868\u793afree\uff0c1\u8868\u793a\u5df2\u5206\u914d</p> <p>order_per_bit\uff1a\u6bcf\u4e2abit\u4ee3\u8868page\u7684order\u503c\uff0c\u4ee52^order\u4e3a\u5355\u4f4d</p> <p></p>"},{"location":"linux/kernel/cma/#migrate_cma","title":"MIGRATE_CMA","text":"<p>\u5728&lt;include/linux/mmzone.h&gt;\u4e2d\u5b9a\u4e49\u4e86\u5982\u4e0bmigrate type\uff1a</p> <pre><code>enum migratetype {\n    MIGRATE_UNMOVABLE,\n    MIGRATE_MOVABLE,\n    MIGRATE_RECLAIMABLE,\n    MIGRATE_PCPTYPES,   /* the number of types on the pcp lists */\n    MIGRATE_HIGHATOMIC = MIGRATE_PCPTYPES,\n    MIGRATE_CMA,\n\n#ifdef CONFIG_MEMORY_ISOLATION\n    MIGRATE_ISOLATE,    /* can't allocate from here */\n#endif\n    MIGRATE_TYPES\n};\n</code></pre> <p>\u88ab\u6807\u8bb0\u4e3aMIGRATE_MOVABLE\u7684\u9875\uff0c\u8868\u793a\u8be5\u9875\u9762\u4e0a\u7684\u6570\u636e\u662f\u53ef\u4ee5\u8fc1\u79fb\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u9700\u8981\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u9875\uff0c\u5c06\u6570\u636e\u62f7\u8d1d\u5230\u8fd9\u4e2a\u65b0\u7684\u9875\u4e0a\uff0c\u7136\u540e\u91ca\u653e\u65e7\u7684\u9875\u3002\u8fd9\u6837\u7684\u62f7\u8d1d\u64cd\u4f5c\u5bf9\u7cfb\u7edf\u6ca1\u6709\u4efb\u4f55\u7684\u5f71\u54cd\u3002</p> <p>\u4f19\u4f34\u7cfb\u7edf\u4e0d\u4f1a\u8ddf\u8e2a\u6bcf\u4e00\u4e2a\u9875\u6846\u7684migrate type\uff0c\u8fd9\u6837\u6210\u672c\u592a\u9ad8\u4e86\uff0c\u5b83\u662f\u57fa\u4e8e\u9875\u5757(\u591a\u4e2a\u9875\u6846\u7684\u7ec4\u5408)\u6765\u7ba1\u7406\u7684\u3002\u5728\u5904\u7406\u5185\u5b58\u5206\u914d\u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u4e00\u822c\u4f1a\u4f18\u5148\u4ece\u76f8\u540cmigrate type\u7684\u9875\u5757\u4e2d\u5206\u914d\u9875\u9762\u3002\u5982\u679c\u5206\u914d\u4e0d\u6210\u529f\uff0c\u4e0d\u540cmigrate type\u7684\u9875\u5757\u4e5f\u4f1a\u8003\u8651\uff0c\u751a\u81f3\u53ef\u80fd\u6539\u53d8\u9875\u5757\u7684migrate type\u5c5e\u6027\u3002\u8fd9\u610f\u5473\u7740UNMOVABLE\u7684\u9875\u9762\u5206\u914d\u8bf7\u6c42\u662f\u6709\u53ef\u80fd\u4eceMOVABLE\u7684\u9875\u5757\u4e2d\u5206\u914d\u7684\uff0c\u8fd9\u4e00\u70b9\u5bf9\u4e8eCMA\u6765\u8bf4\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002\u56e0\u6b64\u5185\u6838\u5f15\u5165\u4e86MIGRATE_CMA\uff0c\u8fd9\u79cd\u7c7b\u578b\u5177\u6709\u4e00\u4e2a\u91cd\u8981\u6027\u8d28\uff1a\u53ea\u6709MOVABLE\u7684\u9875\u9762\u53ef\u4ee5\u4eceMIGRATE_CMA\u7684\u9875\u5757\u4e2d\u5206\u914d\u3002</p>"},{"location":"linux/kernel/cma/#_4","title":"\u5206\u914d\u5185\u5b58","text":"<pre><code>struct page *cma_alloc(struct cma *cma, size_t count, unsigned int align,\n               bool no_warn)\n{\n    unsigned long mask, offset;\n    unsigned long pfn = -1;\n    unsigned long start = 0;\n    unsigned long bitmap_maxno, bitmap_no, bitmap_count;\n    size_t i;\n    struct page *page = NULL;\n    int ret = -ENOMEM;\n\n    if (!cma || !cma-&gt;count || !cma-&gt;bitmap)\n        return NULL;\n\n    pr_debug(\"%s(cma %p, count %zu, align %d)\\n\", __func__, (void *)cma,\n         count, align);\n\n    if (!count)\n        return NULL;\n\n    mask = cma_bitmap_aligned_mask(cma, align);\n    offset = cma_bitmap_aligned_offset(cma, align);\n    bitmap_maxno = cma_bitmap_maxno(cma);\n    bitmap_count = cma_bitmap_pages_to_bits(cma, count);\n\n    if (bitmap_count &gt; bitmap_maxno)\n        return NULL;\n\n    for (;;) {\n        mutex_lock(&amp;cma-&gt;lock);\n\n        //\u67e5\u627e\u8fde\u7eed\u591a\u4e2a\u4e3a0\u7684bit\u4f4d\n        bitmap_no = bitmap_find_next_zero_area_off(cma-&gt;bitmap,\n                bitmap_maxno, start, bitmap_count, mask,\n                offset);\n        if (bitmap_no &gt;= bitmap_maxno) {\n            mutex_unlock(&amp;cma-&gt;lock);\n            break;\n        }\n\n        //\u5c06\u67e5\u627e\u5230\u7684\u591a\u4e2abit\u8bbe\u4e3a1\uff0c\u8868\u793a\u5185\u5b58\u88ab\u5360\u7528\n        bitmap_set(cma-&gt;bitmap, bitmap_no, bitmap_count);\n        /*\n         * It's safe to drop the lock here. We've marked this region for\n         * our exclusive use. If the migration fails we will take the\n         * lock again and unmark it.\n         */\n        mutex_unlock(&amp;cma-&gt;lock);\n\n        //\u8ba1\u7b97\u5206\u914d\u7684\u8d77\u59cb\u9875\u7684\u9875\u53f7\n        pfn = cma-&gt;base_pfn + (bitmap_no &lt;&lt; cma-&gt;order_per_bit);\n        mutex_lock(&amp;cma_mutex);\n\n        //\u5411\u4f19\u4f34\u7cfb\u7edf\u7533\u8bf7\u5185\u5b58\uff0c\u5e76\u6807\u8bb0\u4e3aMIGRATE_CMA\n        ret = alloc_contig_range(pfn, pfn + count, MIGRATE_CMA,\n                     GFP_KERNEL | (no_warn ? __GFP_NOWARN : 0));\n        mutex_unlock(&amp;cma_mutex);\n\n        //\u5206\u914d\u6210\u529f\uff0c\u8fd4\u56de\u8d77\u59cb\u9875\n        if (ret == 0) {\n            page = pfn_to_page(pfn);\n            break;\n        }\n\n        cma_clear_bitmap(cma, pfn, count);\n        if (ret != -EBUSY)\n            break;\n\n        pr_debug(\"%s(): memory range at %p is busy, retrying\\n\",\n             __func__, pfn_to_page(pfn));\n        /* try again with a bit different memory target */\n        start = bitmap_no + mask + 1;\n    }\n\n    trace_cma_alloc(pfn, page, count, align);\n\n    /*\n     * CMA can allocate multiple page blocks, which results in different\n     * blocks being marked with different tags. Reset the tags to ignore\n     * those page blocks.\n     */\n    if (page) {\n        for (i = 0; i &lt; count; i++)\n            page_kasan_tag_reset(page + i);\n    }\n\n    if (ret &amp;&amp; !no_warn) {\n        pr_err(\"%s: alloc failed, req-size: %zu pages, ret: %d\\n\",\n            __func__, count, ret);\n        cma_debug_show_areas(cma);\n    }\n\n    pr_debug(\"%s(): returned %p\\n\", __func__, page);\n    return page;\n}\n</code></pre>"},{"location":"linux/kernel/cma/#_5","title":"\u91ca\u653e\u5185\u5b58","text":"<pre><code>bool cma_release(struct cma *cma, const struct page *pages, unsigned int count)\n{\n    unsigned long pfn;\n\n    if (!cma || !pages)\n        return false;\n\n    pr_debug(\"%s(page %p)\\n\", __func__, (void *)pages);\n\n    pfn = page_to_pfn(pages);\n\n    if (pfn &lt; cma-&gt;base_pfn || pfn &gt;= cma-&gt;base_pfn + cma-&gt;count)\n        return false;\n\n    VM_BUG_ON(pfn + count &gt; cma-&gt;base_pfn + cma-&gt;count);\n\n    //\u91ca\u653e\u56debuddy\u7cfb\u7edf\n    free_contig_range(pfn, count);\n\n    //\u6e05\u96f6bit\u4f4d\uff0c\u8868\u793acma\u5185\u5b58\u53ef\u7528\n    cma_clear_bitmap(cma, pfn, count);\n    trace_cma_release(pfn, pages, count);\n\n    return true;\n}\n</code></pre>"},{"location":"linux/kernel/cma/#_6","title":"\u5e94\u7528","text":"<p>CMA\u5411\u4e0b\u57fa\u4e8e\u4f19\u4f34\u7cfb\u7edf\uff0c\u5411\u4e0a\u63d0\u4f9b\u7ed9DMA\u7684\u5c01\u88c5\u63a5\u53e3\uff0c\u6700\u7ec8\u7528\u6237\u901a\u8fc7\u64cd\u4f5cDMA buffer\u6765\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\uff1a</p> <pre><code>//DMA\u7684\u7533\u8bf7\nstruct page *dma_alloc_from_contiguous(struct device *dev, size_t count,\n                       unsigned int align, bool no_warn)\n{\n    if (align &gt; CONFIG_CMA_ALIGNMENT)\n        align = CONFIG_CMA_ALIGNMENT;\n\n    return cma_alloc(dev_get_cma_area(dev), count, align, no_warn);\n}\n\n//DMA\u7684\u91ca\u653e\nbool dma_release_from_contiguous(struct device *dev, struct page *pages,\n                 int count)\n{\n    return cma_release(dev_get_cma_area(dev), pages, count);\n}\n</code></pre>"},{"location":"linux/kernel/compile/","title":"\u7f16\u8bd1\u5185\u6838","text":""},{"location":"linux/kernel/compile/#_2","title":"\u6e90\u7801\u7ed3\u6784","text":"<pre><code>git clone git://git.ernel.org/pub/scm/linux/kernel/git/torvalds/[linux\u7248\u672c\u53f7].git\n</code></pre> <p>\u5185\u6838\u6e90\u7801\u6811\u7531\u8bb8\u591a\u76ee\u5f55\u7ec4\u6210\uff0c\u4e00\u4e9b\u6bd4\u8f83\u91cd\u8981\u7684\u76ee\u5f55\u7684\u63cf\u8ff0\u5982\u4e0b\uff1a</p> \u76ee\u5f55\u540d \u63cf\u8ff0 arch \u4f53\u7cfb\u7ed3\u6784\u76f8\u5173\u7684\u4ee3\u7801 block \u5757\u8bbe\u5907I/O\u5c42 drivers \u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f fs \u6587\u4ef6\u7cfb\u7edf include \u5185\u6838\u5934\u6587\u4ef6 init \u521d\u59cb\u5316\u4ee3\u7801 ipc \u8fdb\u7a0b\u95f4\u901a\u4fe1\u4ee3\u7801 kernel \u5185\u6838\u6838\u5fc3\u4ee3\u7801 lib \u5185\u6838\u5e93\u51fd\u6570 mm \u5185\u5b58\u7ba1\u7406 net \u7f51\u7edc\u7cfb\u7edf <p>Linux \u5185\u6838\u53ef\u7c97\u7565\u5206\u4e3a\u4e94\u4e2a\u5b50\u7cfb\u7edf\uff1a</p> <ul> <li>\u8fdb\u7a0b\u7ba1\u7406\uff1a\u8d1f\u8d23\u8fdb\u7a0b\u7684\u521b\u5efa\u3001\u8c03\u5ea6\u3001\u7ec8\u6b62\u7b49\uff1b</li> <li>\u5185\u5b58\u7ba1\u7406\uff1a\u8d1f\u8d23\u7269\u7406\u3001\u865a\u62df\u5185\u5b58\u7684\u5206\u914d\u548c\u56de\u6536</li> <li>\u6587\u4ef6\u7cfb\u7edf\uff1a\u8d1f\u8d23\u7ba1\u7406\u6587\u4ef6\u7cfb\u7edf\uff0c\u5305\u62ecVFS\u3001\u5757\u8bbe\u5907\u3001\u5b57\u7b26\u8bbe\u5907\u7b49\uff1b</li> <li>\u7f51\u7edc\u7cfb\u7edf\uff1a\u8d1f\u8d23\u7f51\u7edc\u8bbe\u5907\u7684\u9a71\u52a8\u3001\u534f\u8bae\u6808\u3001\u7f51\u7edc\u6808\u7b49\uff1b</li> <li>\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff1a\u8d1f\u8d23\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u7ba1\u7406\u3001\u540c\u6b65\u7b49\u3002</li> </ul>"},{"location":"linux/kernel/compile/#_3","title":"\u7f16\u8bd1\u5185\u6838","text":"<p>Linux \u5185\u6838\u4ece\u6e90\u7801\u5230\u5b89\u88c5\u4f7f\u7528\u5927\u81f4\u53ef\u4ee5\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff1a\u914d\u7f6e\u3001\u7f16\u8bd1\u3001\u5b89\u88c5\u3002\u914d\u7f6e\u7684\u8fc7\u7a0b\u4e3b\u8981\u7531 Kconfig \u63d0\u4f9b\u7684\u56fe\u5f62\u754c\u9762\u5b8c\u6210\uff0c\u7f16\u8bd1\u4e0e\u5b89\u88c5\u4e3b\u8981\u7531 Kbuild \u7cfb\u7edf\uff0c\u7531<code>make</code>\u547d\u4ee4\u5b9e\u73b0\u3002</p>"},{"location":"linux/kernel/compile/#kconfig","title":"Kconfig","text":"<p>\u4f7f\u7528<code>make menuconfig</code>\u547d\u4ee4\u53ef\u914d\u7f6e\u5185\u6838\uff0c\u5176\u754c\u9762\uff08ARM\uff09\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>Kconfig \u662f\u5185\u6838\u7684\u914d\u7f6e\u5de5\u5177\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u57fa\u4e8e\u83dc\u5355\u7684\u914d\u7f6e\u65b9\u5f0f\uff0c\u4f7f\u5f97\u7528\u6237\u53ef\u4ee5\u7075\u6d3b\u5730\u914d\u7f6e\u5185\u6838\u3002Kconfig \u914d\u7f6e\u5de5\u5177\u9996\u5148\u67e5\u627e&lt;arch/[architecture]/Kconfig&gt;\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5b9a\u4e49\u4e00\u7cfb\u5217 CONFIG \u914d\u7f6e\u9879\uff0c\u5173\u952e\u5b57<code>source</code>\u53ef\u4ee5\u5f15\u7528\u5176\u4ed6 Kconfig \u6587\u4ef6\u3002\u6bcf\u4e2a Kconfig \u6587\u4ef6\u5206\u522b\u63cf\u8ff0\u4e86\u6240\u5c5e\u76ee\u5f55\u7684\u5185\u6838\u914d\u7f6e\u83dc\u5355\uff0c\u6700\u7ec8\u5f62\u6210\u4e00\u4e2a\u5206\u5c42\u7684\u6811\u5f62\u7ed3\u6784\u3002</p> <p>\u5728\u5185\u6838\u4e2d\u6dfb\u52a0\u7a0b\u5e8f\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u4e09\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u5c06\u7f16\u5199\u7684\u6e90\u4ee3\u7801\u590d\u5236\u5230\u5bf9\u5e94\u7684\u76ee\u5f55\u4e2d\u3002</li> <li>\u5728\u76ee\u5f55\u7684 Kconfig \u6587\u4ef6\u4e2d\u6dfb\u52a0\u5bf9\u4e8e\u65b0\u4ee3\u7801\u7684\u7f16\u8bd1\u914d\u7f6e\u9009\u9879\u3002</li> <li>\u5728\u76ee\u5f55\u7684 Makefile \u6587\u4ef6\u4e2d\u6dfb\u52a0\u5bf9\u4e8e\u65b0\u4ee3\u7801\u7684\u7f16\u8bd1\u6761\u76ee\u3002</li> </ol> <p>\u5728\u83dc\u5355\u754c\u9762\u7684\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u5404\u79cd\u914d\u7f6e\u9009\u9879\u4fdd\u5b58\u81f3\u4e3b\u76ee\u5f55\u7684 .config \u6587\u4ef6\u3002<code>make</code>\u547d\u4ee4\u4f1a\u6839\u636e .config \u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u9009\u9879\uff0c\u7f16\u8bd1\u51fa\u5bf9\u5e94\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> <p>\u914d\u7f6e\u9009\u9879\u6709\u4e09\u79cd\uff1aY\u3001N\u6216M\u3002\u5206\u522b\u5bf9\u5e94\u7f16\u8bd1\u3001\u4e0d\u7f16\u8bd1\u3001\u4ee5\u6a21\u5757\u5f62\u5f0f\u7f16\u8bd1\u3002</p> <p>\u5047\u5982 MMU \u7684\u6e90\u4ee3\u7801\u6587\u4ef6\u4e3a\uff1ammu.c\uff0c\u5728\u8be5\u76ee\u5f55\u7684 Kconfig \u6587\u4ef6\u4e2d\u6709\u4e2a\u6761\u76ee config MMU\uff0c\u5219\u5728 Makefile \u6587\u4ef6\u4e2d\u5173\u4e8e\u6b64\u76ee\u5f55\u7684\u7f16\u8bd1\u6761\u76ee\u4e3a\uff1a<code>obj-$(CONFIG_MMU) += mmu.o</code>\u3002\u5982\u679c\u5173\u4e8e MMU \u7684\u914d\u7f6e\u9009\u9879\u9009\u62e9\u4e3a\"Y\"\u6216\u8005\"M\"\uff0c\u5219\u7f16\u8bd1 mmu.o\uff1b\u5982\u679c\u9009\u62e9\u4e3a\"N\"\uff0c\u5219\u4e0d\u7f16\u8bd1 mmu.o\u3002</p> <p>Kconfig \u7684\u4e3b\u8981\u5173\u952e\u5b57\u6709\uff1a</p> \u5173\u952e\u5b57 \u63cf\u8ff0 config Kconfig\u6700\u57fa\u672c\u5355\u5143\uff0c\u5b9a\u4e49\u4e86\u914d\u7f6e\u9879\u7684\u8be6\u7ec6\u4fe1\u606f menu/endmenu \u76ee\u5f55\uff0c\u53ef\u4ee5\u628a\u4e00\u90e8\u5206\u76f8\u5173\u7684\u914d\u7f6e\u9879\u5305\u542b\u5728\u4e00\u4e2amenu\u4e2d\uff0cmenu\u53ef\u4ee5\u5d4c\u5957\u4f7f\u7528 if/endif \u6761\u4ef6\u7f16\u8bd1 choice/endchoice \u4e00\u7ec4\u9009\u62e9\u9879\uff0c\u53ea\u80fd\u662fbool\u6216\u8005tristate comment \u6ce8\u91ca source \u5f15\u5165\u5176\u4ed6Kconfig\u6587\u4ef6"},{"location":"linux/kernel/compile/#makefile","title":"Makefile","text":"<p>Kbuild \u5bf9 Makefile \u8fdb\u884c\u4e86\u529f\u80fd\u4e0a\u7684\u6269\u5145\uff0c\u4f7f\u5176\u5728\u7f16\u8bd1\u5185\u6838\u6587\u4ef6\u65f6\u66f4\u52a0\u9ad8\u6548\u3001\u7b80\u6d01\u3002</p> <p>\u5185\u6838 Makefile \u4e00\u5171\u5305\u542b\u4e94\u90e8\u5206\uff1a</p> \u6587\u4ef6 \u63cf\u8ff0 \u9876\u5c42Makefile \u5b9a\u4e49\u4e86\u5185\u6838\u7684\u7f16\u8bd1\u89c4\u5219\uff0c\u5982\u7f16\u8bd1\u5668\u3001\u7f16\u8bd1\u9009\u9879\u7b49 .config\u6587\u4ef6 \u5b9a\u4e49\u4e86\u5185\u6838\u7684\u914d\u7f6e\u9009\u9879 arch/${ARCH}/Makefile \u5b9a\u4e49\u4e86\u7279\u5b9a\u4f53\u7cfb\u7ed3\u6784\u7684\u7f16\u8bd1\u89c4\u5219 scripts/Makefile \u5305\u542b\u4e86\u6240\u6709\u5b9a\u4e49\u4e0e\u89c4\u5219 \u5404\u76ee\u5f55\u4e2d\u7684Makefile \u5b9a\u4e49\u4e86\u5f53\u524d\u76ee\u5f55\u7684\u7f16\u8bd1\u89c4\u5219"},{"location":"linux/kernel/compile/#_4","title":"\u5185\u6838\u955c\u50cf","text":"<p>\u7f16\u8bd1\u540e\u7684\u5185\u6838\u955c\u50cf\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ol> <li>vmlinux: \u539f\u59cb\u7684\u672a\u7ecf\u4efb\u4f55\u5904\u7406\u7684 Linux ELF \u955c\u50cf\uff0c\u65e0\u6cd5\u70e7\u5199\u5230\u5f00\u53d1\u677f\uff0c\u9700\u8981\u901a\u8fc7<code>objcopy</code>\u547d\u4ee4\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002</li> <li>Image: \u5bf9 vmlinux \u4f7f\u7528<code>objcopy</code>\u5904\u7406\u7684\u53ef\u70e7\u5199\u5230\u5f00\u53d1\u677f\u7684\u955c\u50cf\uff0c\u4f46\u662f\u6bd4\u8f83\u5927\u3002</li> <li>zImage: \u538b\u7f29 Image \u540e\u7684\u955c\u50cf\u3002</li> <li>uImage: \u7531 uboot \u7684<code>mkimage</code>\u5de5\u5177\u52a0\u5de5 zImage \u5f97\u5230 64 \u5b57\u8282\u5934\u7684 Image\uff0c\u53ef\u4f9b uboot \u542f\u52a8\u3002</li> </ol>"},{"location":"linux/kernel/debug/","title":"\u8c03\u8bd5\u6280\u672f","text":""},{"location":"linux/kernel/debug/#_2","title":"\u5185\u6838\u65e5\u5fd7\u7cfb\u7edf","text":""},{"location":"linux/kernel/debug/#log_buf","title":"log_buf","text":"<p><code>log_buf</code>\u662f\u4e00\u4e2a\u5faa\u73af\u7f13\u51b2\u533a\uff0c\u7528\u4e8e\u5b58\u50a8\u5185\u6838\u65e5\u5fd7\u6d88\u606f\uff0c\u5b9a\u4e49\u5728&lt;kernel/printk/printk.c&gt;\u4e2d\uff1a</p> <pre><code>#define LOG_ALIGN __alignof__(unsigned long)\n#define __LOG_BUF_LEN (1 &lt;&lt; CONFIG_LOG_BUF_SHIFT)\n#define LOG_BUF_LEN_MAX (u32)(1 &lt;&lt; 31)\nstatic char __log_buf[__LOG_BUF_LEN] __aligned(LOG_ALIGN);\nstatic char *log_buf = __log_buf;\nstatic u32 log_buf_len = __LOG_BUF_LEN;\n</code></pre> <p><code>vprintk_emit()</code>\u51fd\u6570\u4ece<code>log_buf</code>\u4e2d\u83b7\u53d6log\uff0c\u7136\u540e\u8f93\u51fa\u81f3console\uff0c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <p></p> <p><code>console_unlock()</code>\u51fd\u6570\u904d\u5386\u6bcf\u4e2a\u6ce8\u518c\u7684console\uff0c\u8f93\u51falog\uff0c\u662f\u5728\u6301\u6709spinlock\u548c\u5173\u4e2d\u65ad\u72b6\u6001\u4e0b\u6267\u884c\u7684\u3002\u56e0\u6b64\u5982\u679c\u4e32\u53e3\u4e00\u76f4\u5728\u6253\u5370log\uff0c\u4f1a\u5bfc\u81f4CPU\u4e00\u76f4\u5904\u4e8e\u5173\u4e2d\u65ad\u72b6\u6001\uff0c\u5176\u4ed6\u8fdb\u7a0b\u65e0\u6cd5\u83b7\u5f97\u8c03\u5ea6\u673a\u4f1a\u5bfc\u81f4\u5361\u6b7b\uff1a</p> <pre><code>void console_unlock(void)\n{\n    static char ext_text[CONSOLE_EXT_LOG_MAX];\n    static char text[LOG_LINE_MAX + PREFIX_MAX];\n    unsigned long flags;\n    bool do_cond_resched, retry;\n    struct printk_info info;\n    struct printk_record r;\n\n    if (console_suspended) {\n        up_console_sem();\n        return;\n    }\n\n    prb_rec_init_rd(&amp;r, &amp;info, text, sizeof(text));\n\n    /*\n     * Console drivers are called with interrupts disabled, so\n     * @console_may_schedule should be cleared before; however, we may\n     * end up dumping a lot of lines, for example, if called from\n     * console registration path, and should invoke cond_resched()\n     * between lines if allowable.  Not doing so can cause a very long\n     * scheduling stall on a slow console leading to RCU stall and\n     * softlockup warnings which exacerbate the issue with more\n     * messages practically incapacitating the system.\n     *\n     * console_trylock() is not able to detect the preemptive\n     * context reliably. Therefore the value must be stored before\n     * and cleared after the \"again\" goto label.\n     */\n    do_cond_resched = console_may_schedule;\nagain:\n    console_may_schedule = 0;\n\n    /*\n     * We released the console_sem lock, so we need to recheck if\n     * cpu is online and (if not) is there at least one CON_ANYTIME\n     * console.\n     */\n    if (!can_use_console()) {\n        console_locked = 0;\n        up_console_sem();\n        return;\n    }\n\n    for (;;) {\n        size_t ext_len = 0;\n        size_t len;\n\n        printk_safe_enter_irqsave(flags);\n        raw_spin_lock(&amp;logbuf_lock);\nskip:\n        if (!prb_read_valid(prb, console_seq, &amp;r))\n            break;\n\n        if (console_seq != r.info-&gt;seq) {\n            console_dropped += r.info-&gt;seq - console_seq;\n            console_seq = r.info-&gt;seq;\n        }\n\n        if (suppress_message_printing(r.info-&gt;level)) {\n            /*\n             * Skip record we have buffered and already printed\n             * directly to the console when we received it, and\n             * record that has level above the console loglevel.\n             */\n            console_seq++;\n            goto skip;\n        }\n\n        /* Output to all consoles once old messages replayed. */\n        if (unlikely(exclusive_console &amp;&amp;\n                 console_seq &gt;= exclusive_console_stop_seq)) {\n            exclusive_console = NULL;\n        }\n\n        /*\n         * Handle extended console text first because later\n         * record_print_text() will modify the record buffer in-place.\n         */\n        if (nr_ext_console_drivers) {\n            ext_len = info_print_ext_header(ext_text,\n                        sizeof(ext_text),\n                        r.info);\n            ext_len += msg_print_ext_body(ext_text + ext_len,\n                        sizeof(ext_text) - ext_len,\n                        &amp;r.text_buf[0],\n                        r.info-&gt;text_len,\n                        &amp;r.info-&gt;dev_info);\n        }\n        len = record_print_text(&amp;r,\n                console_msg_format &amp; MSG_FORMAT_SYSLOG,\n                printk_time);\n        console_seq++;\n        raw_spin_unlock(&amp;logbuf_lock);\n\n        /*\n         * While actively printing out messages, if another printk()\n         * were to occur on another CPU, it may wait for this one to\n         * finish. This task can not be preempted if there is a\n         * waiter waiting to take over.\n         */\n        console_lock_spinning_enable();\n\n        stop_critical_timings();    /* don't trace print latency */\n        call_console_drivers(ext_text, ext_len, text, len);\n        start_critical_timings();\n\n        if (console_lock_spinning_disable_and_check()) {\n            printk_safe_exit_irqrestore(flags);\n            return;\n        }\n\n        printk_safe_exit_irqrestore(flags);\n\n        if (do_cond_resched)\n            cond_resched();\n    }\n\n    console_locked = 0;\n\n    raw_spin_unlock(&amp;logbuf_lock);\n\n    up_console_sem();\n\n    /*\n     * Someone could have filled up the buffer again, so re-check if there's\n     * something to flush. In case we cannot trylock the console_sem again,\n     * there's a new owner and the console_unlock() from them will do the\n     * flush, no worries.\n     */\n    raw_spin_lock(&amp;logbuf_lock);\n    retry = prb_read_valid(prb, console_seq, NULL);\n    raw_spin_unlock(&amp;logbuf_lock);\n    printk_safe_exit_irqrestore(flags);\n\n    if (retry &amp;&amp; console_trylock())\n        goto again;\n}\nEXPORT_SYMBOL(console_unlock);\n</code></pre> <p><code>call_console_drivers()</code>\u51fd\u6570\u8d1f\u8d23\u8c03\u7528\u6bcf\u4e2aconsole\u7684write\u63a5\u53e3\uff0c\u5c06\u65e5\u5fd7\u5199\u5165\u5bf9\u5e94\u7684console\uff1a</p> <pre><code>static void call_console_drivers(const char *ext_text, size_t ext_len,\n                 const char *text, size_t len)\n{\n    static char dropped_text[64];\n    size_t dropped_len = 0;\n    struct console *con;\n\n    trace_console_rcuidle(text, len);\n\n    if (!console_drivers)\n        return;\n\n    if (console_dropped) {\n        dropped_len = snprintf(dropped_text, sizeof(dropped_text),\n                       \"** %lu printk messages dropped **\\n\",\n                       console_dropped);\n        console_dropped = 0;\n    }\n\n    for_each_console(con) {\n        if (exclusive_console &amp;&amp; con != exclusive_console)\n            continue;\n        if (!(con-&gt;flags &amp; CON_ENABLED))\n            continue;\n        if (!con-&gt;write)\n            continue;\n        if (!cpu_online(smp_processor_id()) &amp;&amp;\n            !(con-&gt;flags &amp; CON_ANYTIME))\n            continue;\n        if (con-&gt;flags &amp; CON_EXTENDED)\n            con-&gt;write(con, ext_text, ext_len);\n        else {\n            if (dropped_len)\n                con-&gt;write(con, dropped_text, dropped_len);\n            con-&gt;write(con, text, len);\n        }\n    }\n}\n</code></pre>"},{"location":"linux/kernel/debug/#log","title":"\u8bbf\u95eelog","text":"<ol> <li><code>syslog()</code>\u7cfb\u7edf\u8c03\u7528\u548c<code>klogctl()</code>\u63a5\u53e3<ul> <li><code>klogctl()</code>\u662f<code>syslog()</code>\u7cfb\u7edf\u8c03\u7528\u7684\u5c01\u88c5\uff0c\u53ef\u4ee5\u901a\u8fc7man\u67e5\u770b\u7528\u6cd5</li> </ul> </li> <li>/dev/kmsg<ul> <li><code>cat /dev/kmsg</code>\uff1a\u67e5\u770b\u539f\u59cblog\u6570\u636e</li> <li><code>echo xxx &gt; /dev/kmsg</code>\uff1a\u63d2\u5165log</li> </ul> </li> <li>/proc/kmsg<ul> <li><code>cat /proc/kmsg</code>\uff1a\u53ea\u663e\u793a\u65b0\u4ea7\u751f\u7684log</li> </ul> </li> <li>dmesg\u547d\u4ee4<ul> <li><code>dmesg -c</code>\uff1a\u8bb0\u5f55\u663e\u793a\u4f4d\u7f6e\uff0c\u4e0b\u6b21\u4e0d\u4f1a\u663e\u793a\u4e4b\u524d\u7684log</li> <li><code>dmesg -n 8</code>\uff1a\u8bbe\u7f6e\u65e5\u5fd7\u7b49\u7ea7\u4e3a8</li> <li><code>dmesg -r</code>\uff1a\u6253\u5370log\u65f6\u9644\u5e26log level</li> </ul> </li> </ol>"},{"location":"linux/kernel/debug/#log_level","title":"log_level","text":"<p>log_level\u7528\u6765\u63a7\u5236\u54ea\u4e9blog\u53ef\u4ee5\u5728\u4e32\u53e3\u63a7\u5236\u53f0\u88ab\u6253\u5370\uff1a</p> \u65e5\u5fd7\u7b49\u7ea7 \u63cf\u8ff0 KERN_EMERG System is unusable KERN_ALERT Action must be taken immediately KERN_CRIT Critial conditions KERN_ERR Error conditions KERN_WARNING Warning conditions KERN_NOTICE Normal but significant condition KERN_INFO Informational KERN_DEBUG Debug-level mesasges <pre><code>$ cat /proc/sys/kernel/printk\n4       4       1       7\n</code></pre> <p>\u4e0a\u9762\u56db\u4e2a\u6570\u5b57\u5206\u522b\u5bf9\u5e94\uff1a</p> <ul> <li>console_loglevel\uff1a\u63a7\u5236\u53f0\u8f93\u51fa\u7b49\u7ea7</li> <li>default_message_loglevel\uff1a\u9ed8\u8ba4\u6d88\u606f\u8f93\u51fa\u7b49\u7ea7</li> <li>minimum_console_loglevel\uff1a\u6700\u4f4e\u63a7\u5236\u53f0\u8f93\u51fa\u7b49\u7ea7</li> <li>default_console_loglevel\uff1a\u9ed8\u8ba4\u63a7\u5236\u53f0\u8f93\u51fa\u7b49\u7ea7</li> </ul>"},{"location":"linux/kernel/debug/#_3","title":"\u6253\u5370\u51fd\u6570","text":"<ul> <li>printk\uff1a\u4e0d\u5efa\u8bae\u76f4\u63a5\u4f7f\u7528</li> <li>pr_debug, pr_xxx\uff1a\u5185\u6838\u975e\u8bbe\u5907\u9a71\u52a8\u4f7f\u7528</li> <li>dev_dbg, dev_xxx\uff1a\u5185\u6838\u9a71\u52a8\u4e2d\u4f7f\u7528</li> </ul>"},{"location":"linux/kernel/debug/#_4","title":"\u8c03\u8bd5\u51fd\u6570","text":"<ul> <li>dump_stack()\uff1a\u6253\u5370\u5f53\u524d\u8c03\u7528\u6808</li> <li>BUG()\uff1a\u89e6\u53d1panic\uff0c\u8f93\u51fa log</li> <li>BUG_ON(condition)\uff1a\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u89e6\u53d1 panic\uff0c\u8f93\u51fa log</li> <li>WARN(condition, fmt...)\uff1a\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u6253\u5370\u4fe1\u606f\uff0c\u4e0d\u89e6\u53d1 panic</li> <li>WARN_ON(condition)\uff1a\u8c03\u7528<code>dump_stack()</code></li> <li>panic(fmt...)\uff1a\u7cfb\u7edf crash\uff0c\u8f93\u51fa log</li> </ul>"},{"location":"linux/kernel/debug/#_5","title":"\u83b7\u53d6\u51fd\u6570\u5730\u5740","text":"<p>\u5728\u5185\u6838\u8c03\u8bd5\u4e2d\uff0c\u7ecf\u5e38\u9700\u8981\u77e5\u9053\u67d0\u4e2a\u51fd\u6570\u7684\u5730\u5740\uff0c\u6216\u8005\u6839\u636e\u5730\u5740\u627e\u5230\u76f8\u5e94\u7684\u51fd\u6570\u3002\u4e0b\u9762\u4ecb\u7ecd\u51e0\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u83b7\u53d6\u51fd\u6570\u7684\u5730\u5740\u4fe1\u606f\u3002</p> <ol> <li>system.map\uff1a\u5728\u5185\u6838\u7f16\u8bd1\u65f6\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a system.map \u6587\u4ef6\uff0c\u4e5f\u53eb\u5185\u6838\u7b26\u53f7\u8868\uff0c\u91cc\u9762\u6bcf\u4e00\u884c\u90fd\u4ee3\u8868\u4e00\u4e2a\u51fd\u6570\u7b26\u53f7\uff0c\u5305\u62ec\u5730\u5740\u3001\u7c7b\u578b\u548c\u540d\u79f0\u3002</li> <li>vmlinux\uff1a\u7f16\u8bd1\u5185\u6838\u65f6\u751f\u6210\u7684\u539f\u59cb\u5185\u6838\u955c\u50cf\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7<code>nm</code>\u3001<code>objdump</code>\u548c<code>readelf</code>\u7b49\u5de5\u5177\u6765\u67e5\u770b\u7b26\u53f7\u8868\u4fe1\u606f\u3002</li> <li>/proc/kallsyms\uff1a\u5185\u6838\u7b26\u53f7\u8868\u4fe1\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7<code>cat /proc/kallsyms</code>\u547d\u4ee4\u67e5\u770b\u3002</li> </ol>"},{"location":"linux/kernel/debug/#_6","title":"\u52a8\u6001\u6253\u5370","text":"<p>/sys/kernel/debug/dynamic_debug/control \u662f Linux \u7cfb\u7edf\u4e2d\u7684\u4e00\u4e2a\u7279\u6b8a\u6587\u4ef6\uff0c\u7528\u4e8e\u52a8\u6001\u8c03\u8bd5\u5185\u6838\u4ee3\u7801\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u542f\u7528\u6216\u7981\u7528\u5185\u6838\u4e2d\u7684\u8c03\u8bd5\u4fe1\u606f\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u5185\u6838\u3002\u6240\u6709\u901a\u8fc7<code>pr_debug()</code>\u548c<code>dev_debug()</code>\u6253\u5370\u7684\u4fe1\u606f\u90fd\u53ef\u4ee5\u52a8\u6001\u7684\u663e\u793a\u6216\u4e0d\u663e\u793a\u3002</p> <p>/sys/kernel/debug/dynamic_debug/control \u6587\u4ef6\u63a5\u53d7\u4ee5\u4e0b\u683c\u5f0f\u7684\u547d\u4ee4\uff1a</p> <pre><code>module &lt;module_name&gt; &lt;flags&gt;\nfile &lt;file_name&gt; &lt;flags&gt;\nfunc &lt;function_name&gt; &lt;flags&gt;\nline &lt;line_number&gt; &lt;flags&gt;\nformat &lt;format_string&gt; &lt;flags&gt;\n</code></pre> <p>\u4f8b\u5982\uff0c\u4e0b\u9762\u8fd9\u6761\u547d\u4ee4\u4f1a\u542f\u7528<code>my_driver.c</code>\u6587\u4ef6\u4e2d\u6240\u6709\u4f7f\u7528<code>pr_debug()</code>\u548c<code>dev_dbg()</code>\u5b8f\u8f93\u51fa\u7684\u8c03\u8bd5\u4fe1\u606f\u3002\u547d\u4ee4\u4e2d\u7684<code>+p</code>\u53c2\u6570\u8868\u793a\u542f\u7528\u6253\u5370\u3002</p> <pre><code>echo 'file my_driver.c +p' &gt; /sys/kernel/debug/dynamic_debug/control\n</code></pre>"},{"location":"linux/kernel/debug/#_7","title":"\u5e38\u7528\u8c03\u8bd5\u529f\u80fd","text":""},{"location":"linux/kernel/debug/#kasan","title":"KASAN","text":""},{"location":"linux/kernel/debug/#strace","title":"strace","text":"<p><code>strace</code>\u7528\u4e8e\u8ddf\u8e2a\u7a0b\u5e8f\u7684\u7cfb\u7edf\u8c03\u7528\u60c5\u51b5\uff0c\u5b83\u7684\u57fa\u672c\u7528\u6cd5\u662f\uff1a<code>strace [options] command [command-args]</code>\u3002</p> <p>\u542f\u52a8\u9009\u9879\uff1a</p> <ul> <li><code>-E</code>\uff1a\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf</li> <li><code>-p</code>\uff1a\u8ddf\u8e2a\u6307\u5b9a\u8fdb\u7a0b</li> <li><code>-u</code>\uff1a\u4ee5\u6307\u5b9a\u7528\u6237\u542f\u52a8</li> </ul> <p>\u8fc7\u6ee4\uff1a</p> <ul> <li><code>-e</code>\uff1a\u6307\u5b9a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53c2\u6570trace\u8bbe\u7f6e\u6307\u5b9a\u8ffd\u8e2a\u4e8b\u4ef6\uff0csignal\u8bbe\u7f6e\u6307\u5b9a\u4fe1\u53f7\uff0cstatus\u8bbe\u7f6e\u6307\u5b9a\u8fd4\u56de\u72b6\u6001</li> </ul> <p>\u8f93\u51fa\u683c\u5f0f\uff1a</p> <ul> <li><code>-c</code>\uff1a\u7edf\u8ba1\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u95f4\u3001\u6b21\u6570\u548c\u9519\u8bef</li> <li><code>-o filename</code>\uff1a\u5c06\u8f93\u51fa\u5199\u5165\u6307\u5b9a\u6587\u4ef6</li> <li><code>-t</code>\uff1a\u5728\u6bcf\u884c\u7cfb\u7edf\u8c03\u7528\u8f93\u51fa\u524d\u663e\u793a\u65f6\u95f4\u6233</li> <li><code>-tt</code>\uff1a\u663e\u793a\u5fae\u5999\u7ea7\u7684\u65f6\u95f4\u6233</li> <li><code>-T</code>\uff1a\u663e\u793a\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u6267\u884c\u65f6\u95f4</li> <li><code>-v</code>\uff1a\u8be6\u7ec6\u8f93\u51fa\uff0c\u5305\u62ec\u6240\u6709\u7ed3\u6784\u548c\u7b26\u53f7\u5e38\u91cf</li> <li><code>-x</code>\uff1a\u4ee5\u5341\u516d\u8fdb\u5236\u683c\u5f0f\u663e\u793a\u975eASCII\u5b57\u7b26\u4e32</li> <li><code>-y</code>\uff1a\u663e\u793a\u6bcf\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u5bf9\u5e94\u7684\u6587\u4ef6\u8def\u5f84</li> </ul>"},{"location":"linux/kernel/hrtimer/","title":"\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668","text":"<p>\u4f20\u7edf\u7684\u5b9a\u65f6\u5668\u7cbe\u5ea6\u4e0d\u8db3\uff0c\u53ea\u80fd\u652f\u6301 Tick \u7ea7\u522b\u7684\u7cbe\u5ea6(ms\u7ea7\u522b)\u3002\u4e3a\u4e86\u652f\u6301\u66f4\u9ad8\u7684\u7cbe\u5ea6(ns\u7ea7\u522b)\uff0c\u5185\u6838\u72ec\u7acb\u8bbe\u8ba1\u4e86\u4e00\u4e2a hrtimer(high resolution timer)\uff1a\u4f7f\u7528\u7ea2\u9ed1\u6811\u6765\u7ec4\u7ec7\uff0c\u65b0\u7684\u5b9a\u65f6\u5668\u6309\u987a\u5e8f\u88ab\u63d2\u5165\u5230\u7ea2\u9ed1\u6811\u4e2d\uff0c\u6811\u7684\u6700\u5de6\u8fb9\u7684\u8282\u70b9\u5c31\u662f\u6700\u5feb\u5230\u671f\u7684\u5b9a\u65f6\u5668\u3002</p> <p>\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\u5efa\u7acb\u5728 Per CPU \u53d8\u91cf\u4e0a\uff0c\u6bcf\u4e2a CPU \u90fd\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u5b9a\u65f6\u5668\u3002\u5b83\u6709\u4e24\u79cd\u5de5\u4f5c\u6a21\u5f0f\uff1a\u4f4e\u7cbe\u5ea6\u6a21\u5f0f\u548c\u9ad8\u7cbe\u5ea6\u6a21\u5f0f\u3002</p>"},{"location":"linux/kernel/hrtimer/#_2","title":"\u5173\u952e\u6570\u636e\u7ed3\u6784","text":"<p><code>struct hrtimer</code>\u7ed3\u6784\u4f53\u8868\u793a\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\uff1a</p> <pre><code>struct hrtimer {\n    struct timerqueue_node      node;\n    ktime_t             _softexpires;\n    enum hrtimer_restart        (*function)(struct hrtimer *);\n    struct hrtimer_clock_base   *base;\n    u8              state;\n    u8              is_rel;\n    u8              is_soft;\n    u8              is_hard;\n};\n</code></pre> <p>node\uff1a\u7ea2\u9ed1\u6811\u8282\u70b9</p> <p>_softexpires\uff1a\u8f6f\u8d85\u65f6\u65f6\u95f4</p> <p>function\uff1a\u5b9a\u65f6\u5668\u5230\u671f\u65f6\u8c03\u7528\u7684\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u51b3\u5b9a\u4e86\u5b9a\u65f6\u5668\u662f\u5426\u9700\u8981\u91cd\u65b0\u542f\u52a8</p> <p>base\uff1a\u6307\u5411\u5305\u542b\u8be5\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\u7684hrtimer_clock_base\u7ed3\u6784\u4f53</p> <p>state\uff1a\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\u72b6\u6001\uff0c\u6709\u4e24\u79cd\u72b6\u6001\uff1aHRTIMER_STATE_INACTIVE\uff08\u672a\u6fc0\u6d3b\uff09\u548cHRTIMER_STATE_ACTIVE\uff08\u6fc0\u6d3b\uff09</p> <p>is_rel\uff1a\u8868\u793a\u5230\u671f\u65f6\u95f4\u662f\u5426\u662f\u76f8\u5bf9\u65f6\u95f4</p> <p>is_soft\uff1a\u8868\u793a\u5b9a\u65f6\u5668\u662f\u5426\u662f\u8f6f\u5b9a\u65f6\u5668</p> <p>is_hard\uff1a\u8868\u793a\u5b9a\u65f6\u5668\u662f\u5426\u662f\u786c\u5b9a\u65f6\u5668</p> <p>\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\u7684\u5230\u671f\u65f6\u95f4\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <pre><code>enum  hrtimer_base_type {\n    HRTIMER_BASE_MONOTONIC,\n    HRTIMER_BASE_REALTIME,\n    HRTIMER_BASE_BOOTTIME,\n    HRTIMER_BASE_TAI,\n    HRTIMER_BASE_MONOTONIC_SOFT,\n    HRTIMER_BASE_REALTIME_SOFT,\n    HRTIMER_BASE_BOOTTIME_SOFT,\n    HRTIMER_BASE_TAI_SOFT,\n    HRTIMER_MAX_CLOCK_BASES,\n};\n</code></pre> <p>\u51fa\u4e8e\u6548\u7387\u7684\u8003\u8651\uff0c\u6bcf\u4e2a CPU \u90fd\u9700\u8981\u7ba1\u7406\u81ea\u5df1\u7684\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\uff0c\u4e3a\u6b64\u4e13\u95e8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7ed3\u6784<code>struct hrtimer_cpu_base</code>\uff1a</p> <pre><code>struct hrtimer_cpu_base {\n        ......\n    struct hrtimer_clock_base   clock_base[HRTIMER_MAX_CLOCK_BASES];\n};\n</code></pre> <p><code>clock_base</code>\u6570\u7ec4\u4e3a\u6bcf\u79cd\u65f6\u95f4\u57fa\u51c6\u7cfb\u7edf(hrtimer_base_type)\u90fd\u5b9a\u4e49\u4e86<code>struct hrtimer_clock_base</code>\u7ed3\u6784\u4f53\uff1a</p> <pre><code>struct hrtimer_clock_base {\n    struct hrtimer_cpu_base *cpu_base;\n    unsigned int        index;\n    clockid_t       clockid;\n    seqcount_raw_spinlock_t seq;\n    struct hrtimer      *running;\n    struct timerqueue_head  active;\n    ktime_t         (*get_time)(void);\n    ktime_t         offset;\n} __hrtimer_clock_base_align;\n</code></pre> <p>\u5176\u4e2d active \u5b57\u6bb5\u5c01\u88c5\u4e86\u7ea2\u9ed1\u6811\uff1a</p> <pre><code>struct timerqueue_head {\n    struct rb_root_cached rb_root;\n};\n\nstruct rb_root_cached {\n    struct rb_root rb_root;\n    struct rb_node *rb_leftmost;\n};\n</code></pre> <p><code>rb_leftmost</code>\u6307\u9488\u6307\u5411\u4e86\u7ea2\u9ed1\u6811\u4e2d\u6700\u5148\u5230\u671f\u7684\u5b9a\u65f6\u5668\u3002</p> <p></p>"},{"location":"linux/kernel/hrtimer/#_3","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u521b\u5efa\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\uff1a</p> <pre><code>struct hrtimer hr_timer;\n</code></pre> <p>\u521d\u59cb\u5316\u5b9a\u65f6\u5668\uff1a</p> <pre><code>void hrtimer_init(struct hrtimer *timer, clockid_t which_clock, \n                  enum hrtimer_mode mode);\n</code></pre> <p>\u5b9a\u65f6\u5668\u521d\u59cb\u5316\u65f6\uff0c\u9700\u8981\u6307\u5b9a\u5b9a\u65f6\u6a21\u5f0f\u548c\u65f6\u949f\u7c7b\u578b\u3002</p> <p>\u5b9a\u65f6\u6a21\u5f0f\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ul> <li>HRTIMER_MODE_ABS\uff1a\u7edd\u5bf9\u5b9a\u65f6\u6a21\u5f0f\u3002\u5b9a\u65f6\u5668\u5c06\u5728\u4e00\u4e2a\u7279\u5b9a\u7684\u672a\u6765\u65f6\u95f4\u70b9\u5230\u671f\u3002</li> <li>HRTIMER_MODE_REL\uff1a\u76f8\u5bf9\u5b9a\u65f6\u6a21\u5f0f\u3002\u5b9a\u65f6\u5668\u5c06\u5728\u5f53\u524d\u65f6\u95f4\u70b9\u4e4b\u540e\u7684\u6307\u5b9a\u65f6\u95f4\u95f4\u9694\u5230\u671f\u3002</li> <li>HRTIMER_MODE_PINNED\uff1a\u56fa\u5b9a\u5b9a\u65f6\u6a21\u5f0f\u3002\u5b9a\u65f6\u5668\u5c06\u7ed1\u5b9a\u5230\u67d0\u4e2a CPU \u4e0a</li> <li>HRTIMER_MODE_SOFT\uff1a\u8f6f\u5b9a\u65f6\u6a21\u5f0f\u3002\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u5c06\u5728\u8f6f\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u3002</li> <li>HRTIMER_MODE_HARD\uff1a\u786c\u5b9a\u65f6\u6a21\u5f0f\u3002\u5b9a\u65f6\u5668\u56de\u8c03\u51fd\u6570\u5c06\u5728\u786c\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u3002</li> </ul> <p>\u65f6\u949f\u7c7b\u578b\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a</p> <ul> <li>CLOCK_REALTIME\uff1a\u7cfb\u7edf\u5b9e\u65f6\u65f6\u95f4\uff0c\u5373\u65e5\u5386\u65f6\u95f4</li> <li>CLOCK_MONOTONIC\uff1a\u4ece\u7cfb\u7edf\u542f\u52a8\u5f00\u59cb\u5230\u73b0\u5728\u4e3a\u6b62\u7684\u65f6\u95f4\uff0c\u4f11\u7720\u4e0d\u4f1a\u589e\u52a0</li> <li>CLOCK_PROCESS_CPUTIME_ID\uff1a\u5f53\u524d\u8fdb\u7a0b\u542f\u52a8\u5230\u6267\u884c\u5230\u5f53\u524d\u4ee3\u7801\uff0c\u7cfb\u7edf\u82b1\u8d39\u7684\u65f6\u95f4</li> <li>CLOCK_THREAD_CPUTIME_ID\uff1a\u5f53\u524d\u7ebf\u7a0b\u542f\u52a8\u5230\u6267\u884c\u5230\u5f53\u524d\u4ee3\u7801\uff0c\u7cfb\u7edf\u82b1\u8d39\u7684\u65f6\u95f4</li> <li>CLOCK_BOOTTIME\uff1a\u7cfb\u7edf\u4ece\u4e0a\u7535\u5f00\u59cb\u5230\u73b0\u5728\u4e3a\u6b62\u7684\u65f6\u95f4\uff0c\u4f11\u7720\u4e5f\u4f1a\u589e\u52a0</li> </ul> <p>\u542f\u52a8\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\uff1a <pre><code>int hrtimer_start(struct hrtimer *timer, ktime_t time,\n                  const enum hrtimer_mode mode);\n</code></pre></p> <p>\u5982\u679c\u9700\u8981\u5236\u5b9a\u5230\u671f\u8303\u56f4\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528<code>hrtimer_start_range_ns()</code>\u51fd\u6570\u6fc0\u6d3b\u5b9a\u65f6\u5668\uff1a</p> <pre><code>void hrtimer_start_range_ns(struct hrtimer *timer, ktime_t tim,\n                    u64 range_ns, const enum hrtimer_mode mode);\n</code></pre> <p>\u53d6\u6d88\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\uff1a <pre><code>int hrtimer_cancel(struct hrtimer *timer);\n</code></pre></p> <p>\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\u7684\u4f7f\u7528</p> <pre><code>#include &lt;linux/hrtimer.h&gt;\n#include &lt;linux/ktime.h&gt;\n\n// \u5b9a\u4e49\u4e00\u4e2a\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\nstatic enum hrtimer_restart my_hrtimer_callback(struct hrtimer *timer_for_my_hrtimer)\n{\n    // \u5b9a\u65f6\u5668\u5230\u671f\u7684\u5904\u7406\u903b\u8f91\n    // ...\n\n    // \u5982\u679c\u9700\u8981\uff0c\u91cd\u65b0\u542f\u52a8\u5b9a\u65f6\u5668\n    // hrtimer_start(timer_for_my_hrtimer, ktime_set(0, 1000000), HRTIMER_MODE_REL);\n\n    return HRTIMER_NORESTART; // \u6216\u8005 HRTIMER_RESTART\n}\n\nvoid my_hrtimer_function(void)\n{\n    struct hrtimer hr_timer;\n    ktime_t ktime;\n\n    // \u521d\u59cb\u5316\u5b9a\u65f6\u5668\n    hrtimer_init(&amp;hr_timer, CLOCK_MONOTONIC, HRTIMER_MODE_REL);\n\n    // \u8bbe\u7f6e\u5b9a\u65f6\u5668\u7684\u56de\u8c03\u51fd\u6570\n    hr_timer.function = &amp;my_hrtimer_callback;\n\n    // \u8bbe\u7f6e\u5b9a\u65f6\u65f6\u95f4\uff08\u4f8b\u5982\uff0c1\u6beb\u79d2\u540e\uff09\n    ktime = ktime_set(0, 1000000); // 0\u79d2\uff0c1000000\u7eb3\u79d2\n\n    // \u542f\u52a8\u5b9a\u65f6\u5668\n    hrtimer_start(&amp;hr_timer, ktime, HRTIMER_MODE_REL);\n}\n</code></pre>"},{"location":"linux/kernel/interrupt/","title":"\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f","text":"<p>\u4e2d\u65ad\uff0c\u4e00\u822c\u6307\u7684\u662f\u7531\u5916\u90e8\u786c\u4ef6\u8bbe\u5907\u4ea7\u751f\u7684\u4e2d\u65ad\uff0c\u5b83\u53ef\u4ee5\u6253\u65ad\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u8f6c\u800c\u6267\u884c\u4e00\u6bb5\u65b0\u7684\u8bbe\u5b9a\u597d\u7684\u4ee3\u7801\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5c31\u53eb\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f(interrupt handler)\u3002\u5f53\u7136\uff0c\u5728\u6267\u884c\u771f\u6b63\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4e4b\u524d\uff0c\u5185\u6838\u8fd8\u6709\u8bb8\u591a\u51c6\u5907\u5de5\u4f5c\u8981\u505a\uff0c\u8fd9\u4e0d\u5728\u672c\u6587\u7684\u8ba8\u8bba\u8303\u56f4\u4e4b\u5185\u3002</p> <p>\u6bcf\u4e2a\u8bbe\u5907\u90fd\u5e94\u8be5\u6709\u5b83\u5bf9\u5e94\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u7531\u9a71\u52a8\u5de5\u7a0b\u5e08\u7f16\u5199\u3002\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5904\u4e8e\u7279\u6b8a\u7684\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u3002\u76f8\u8f83\u4e8e\u53ef\u4ee5\u7761\u7720\u7684\u8fdb\u7a0b\u4e0a\u4e0b\u6587\uff0c\u4e2d\u65ad\u4e0a\u4e0b\u6587\u662f\u539f\u5b50\u7684\uff0c\u4e0d\u53ef\u88ab\u6253\u65ad\u3002</p> <p>\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5fc5\u987b\u5feb\u8fdb\u5feb\u51fa\uff0c\u4ee5\u514d\u5f71\u54cd\u6b63\u5e38\u7684\u4ee3\u7801\u903b\u8f91\u3002\u5185\u6838\u5bf9\u4e8e\u4e2d\u65ad\u7684\u5904\u7406\u5206\u6210\u4e86\u4e24\u4e2a\u90e8\u5206\uff1a\u4e0a\u534a\u90e8\uff08Top Half\uff09\u548c\u4e0b\u534a\u90e8\uff08Bottom Half\uff09\u3002\u901a\u5e38\u6240\u8bf4\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u662f\u6307\u4e0a\u534a\u90e8\u2014\u2014\u5f53\u63a5\u6536\u5230\u4e00\u4e2a\u4e2d\u65ad\u540e\uff0c\u5b83\u7acb\u523b\u88ab\u6267\u884c\uff0c\u4f46\u53ea\u505a\u6709\u4e25\u683c\u65f6\u9650\u7684\u5de5\u4f5c\u3002\u4f8b\u5982\u5bf9\u63a5\u6536\u5230\u7684\u4e2d\u65ad\u8fdb\u884c\u5e94\u7b54\u7b49\u7b49\u3002\u800c\u4e0b\u534a\u90e8\u5219\u6267\u884c\u5ef6\u540e\u7684\u5de5\u4f5c\uff0c\u7531\u5185\u6838\u6765\u9009\u62e9\u5408\u9002\u7684\u65f6\u673a\u6267\u884c\u3002</p>"},{"location":"linux/kernel/interrupt/#_2","title":"\u7533\u8bf7\u4e2d\u65ad","text":"<p>\u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u7533\u8bf7\u4e2d\u65ad\u53ef\u4ee5\u4f7f\u7528<code>request_irq()</code>\u51fd\u6570\uff1a</p> <pre><code>int request_irq(unsigned int irq, irq_handler_t handler, unsigned long flags,\n                const char *name, void *dev)\n{\n    //\u5b9e\u9645\u5c31\u662f\u8c03\u7528\u4e2d\u65ad\u7ebf\u7a0b\u5316\u51fd\u6570\uff0c\u4f46\u662f\u5c06\u5904\u7406\u7684\u7ebf\u7a0b\u7f6e\u4e3aNULL\n    return request_threaded_irq(irq, handler, NULL, flags, name, dev);\n}\n</code></pre> <p>irq\uff1a\u7533\u8bf7\u7684\u4e2d\u65ad\u53f7</p> <p>handler\uff1a\u6ce8\u518c\u7684\u4e2d\u65ad\u670d\u52a1\u51fd\u6570</p> <p>flags\uff1a\u4e2d\u65ad\u6807\u5fd7</p> <p>name\uff1a\u4e2d\u65ad\u540d\u79f0\uff0c\u663e\u793a\u5728/proc/interrupts\u4e2d</p> <p>dev\uff1a\u8bbe\u5907\u6307\u9488\uff0c\u4e00\u822c\u4e3a\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u7ed3\u6784\u4f53\u6307\u9488</p> <p><code>request_threaded_irq()</code>\u51fd\u6570\u4e3b\u8981\u5b8c\u6210\u4ee5\u4e0b\u5de5\u4f5c\uff1a</p> <ol> <li>\u6839\u636e<code>request_irq()</code>\u51fd\u6570\u4f20\u9012\u7684\u53c2\u6570\uff0c\u5bf9<code>struct irqaction</code>\u4e2d\u7684\u5b57\u6bb5\u8d4b\u503c</li> <li>\u5c06\u65b0\u7684<code>struct irqaction</code>\u94fe\u63a5\u5230irq\u5bf9\u5e94\u7684<code>struct irq_desc</code>\u4e0a\u3002\u591a\u4e2a\u5171\u4eab\u4e2d\u65ad\u7684\u8bbe\u5907\u5fc5\u987b\u8bbe\u7f6eIRQF_SHARED\u6807\u5fd7\u3002</li> <li>\u5982\u679c<code>thread_fn != NULL</code>\uff0c\u8c03\u7528<code>setup_irq_thread()</code>\u6765\u65b0\u5efa\u4e00\u4e2a\u72ec\u7acb\u7ebf\u7a0b\u5904\u7406\u4e2d\u65ad\u3002</li> <li>\u5982\u679c\u4e2d\u65ad\u4e4b\u524d\u6ca1\u6709\u88ab\u6fc0\u6d3b\uff0c\u5219\u6fc0\u6d3b\u4e2d\u65ad\u3002</li> </ol> <p><code>request_irq()</code>\u51fd\u6570\u8c03\u7528\u4e86<code>request_threaded_irq()</code>\u51fd\u6570\uff0c\u5e76\u5c06<code>thread_fn</code>\u53c2\u6570\u7f6e\u4e3a NULL\u3002\u4e8c\u8005\u7684\u533a\u522b\u4e3a\uff1a<code>request_irq()</code>\u7684 handler \u76f4\u63a5\u5728\u5f53\u524d\u4e2d\u65ad\u4e0a\u4e0b\u6587\u6267\u884c\uff0c\u800c<code>request_threaded_irq()</code>\u7684 <code>thread_fn</code>\u5728\u72ec\u7acb\u7684\u7ebf\u7a0b\u4e2d\u6267\u884c\uff0c\u4e14\u4f18\u5148\u7ea7\u4e3a SCHED_FIFO\u3002</p> <p>\u7531\u4e8e\u4e2d\u65ad\u53f7\u662f\u6709\u9650\u7684\uff0c\u800c\u591a\u4e2a\u8bbe\u5907\u9a71\u52a8\u53c8\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2a\u4e2d\u65ad\u53f7\uff0c\u56e0\u6b64\u5185\u6838\u91c7\u7528\u4e86\u4e24\u79cd\u7ed3\u6784\u4f53\u6765\u7ba1\u7406\u4e2d\u65ad\uff1a<code>struct irq_desc</code>\u548c<code>struct irqaction</code>\uff0c\u4e8c\u8005\u662f\u4e00\u5bf9\u591a\u7684\u5173\u7cfb\u3002<code>struct irq_desc</code>\u4e0e\u4e2d\u65ad\u53f7\u5bf9\u5e94\uff0c\u800c<code>struct irqaction</code>\u5219\u4e0e\u8bbe\u5907\u5bf9\u5e94\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5171\u4eab\u4e2d\u65ad\u53f7\u7684\u8bbe\u5907\uff0c\u5c06\u5b83\u4eec\u6302\u5728<code>struct irq_desc</code>\u7684\u94fe\u8868\u4e0a\u3002</p> <p>\u90a3\u4e48\u5185\u6838\u662f\u5982\u4f55\u7ba1\u7406\u8fd9\u4e9b\u5916\u90e8\u4e2d\u65ad\u7684\u5462\uff1f</p> <p>\u5f88\u5bb9\u6613\u60f3\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u9759\u6001\u6570\u7ec4\u6765\u7ba1\u7406\uff0c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f<code>struct irq_desc</code>\u7ed3\u6784\u4f53\uff1a<code>struct irq_desc irq_desc[NR_IRQS]</code>\u3002</p> <p>\u8fd9\u4e2a\u6570\u7ec4\u7684\u5173\u952e\u5c31\u5728\u4e8e NR_IRQS \u7684\u503c\uff0c\u5982\u679c\u53d6\u4e00\u4e2a\u5f88\u5927\u7684\u503c\uff0c\u800c\u5916\u8bbe\u5bf9\u5e94\u7684\u4e2d\u65ad\u53c8\u4e0d\u591a\u7684\u60c5\u51b5\u4e0b\u5c31\u4f1a\u5f88\u6d6a\u8d39\u5185\u5b58\u3002</p> <p>\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u662f\u52a8\u6001\u65b9\u6cd5\uff0c\u7528\u5230\u4e86 radix tree(\u57fa\u6570\u6811)\uff0c\u8fd9\u79cd\u7ed3\u6784\u53ef\u4ee5\u5feb\u901f\u5730\u901a\u8fc7key\u627e\u5230value\u3002\u4e2d\u65ad\u53f7\u662fkey\uff0c\u901a\u8fc7\u5b83\u6211\u4eec\u5c31\u80fd\u5f88\u5feb\u5b9a\u4f4d\u5230<code>struct irq_desc</code>\u7ed3\u6784\u4f53\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u7684\u4e2d\u65ad\u53f7\u5e76\u4e0d\u662f\u771f\u6b63\u7684\u7269\u7406\u610f\u4e49\u4e0a\u7684\u4e2d\u65ad\u53f7\uff0c\u800c\u662f\u5185\u6838\u62bd\u8c61\u51fa\u6765\u7ed9\u8f6f\u4ef6\u4f7f\u7528\u7684\u4e2d\u65ad\u53f7\u3002\u56e0\u4e3a\u7269\u7406\u4fe1\u53f7\u4e0e\u786c\u4ef6\u8bbe\u5907\u5173\u8054\u8f83\u5927\uff0c\u5185\u6838\u4e0d\u53ef\u80fd\u4e3a\u6bcf\u4e2a\u786c\u4ef6\u8bbe\u5907\u53bb\u914d\u7f6e\u4e00\u4e2a\u4e2d\u65ad\u53f7\uff0c\u56e0\u6b64\u5c31\u9700\u8981\u6709\u4e00\u5c42\u4e2d\u65ad\u62bd\u8c61\u5c42\uff0c\u5c06\u7269\u7406\u4fe1\u53f7\u8f6c\u6362\u4e3a\u865a\u62df\u4fe1\u53f7\u3002</p> <p>\u6267\u884c\u5b8c\u4e2d\u65ad\u670d\u52a1\u5668\u7a0b\u5e8f\u540e\uff0c\u4f1a\u68c0\u67e5\u662f\u5426\u9700\u8981\u91cd\u65b0\u8c03\u5ea6\uff08need_resched\u6807\u5fd7\u4f4d\uff09\uff0c\u7136\u540e\u5224\u65ad\u8fd4\u56de\u54ea\u4e2a\u7a7a\u95f4\uff1a</p> <ul> <li> <p>\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\uff1a\u8c03\u7528<code>schedule()</code>\u51fd\u6570\u3002</p> </li> <li> <p>\u8fd4\u56de\u5185\u6838\u7a7a\u95f4\uff1a\u5982\u679cpreempt_count\u6807\u5fd7\u4e3a0\uff0c\u8c03\u7528<code>schedule()</code>\u51fd\u6570\uff0c\u5426\u5219\u4e0d\u4f1a\u89e6\u53d1\u8c03\u5ea6\u3002</p> </li> </ul>"},{"location":"linux/kernel/interrupt/#_3","title":"\u4e2d\u65ad\u63a7\u5236","text":"<p>Linux\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u7ec4\u63a5\u53e3\u7528\u4e8e\u64cd\u4f5c\u673a\u5668\u4e0a\u7684\u4e2d\u65ad\u72b6\u6001\u3002\u8fd9\u4e9b\u63a5\u53e3\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u80fd\u591f\u7981\u6b62\u5f53\u524d\u5904\u7406\u5668\u7684\u4e2d\u65ad\u7cfb\u7edf\uff0c\u6216\u5c4f\u853d\u6389\u6574\u4e2a\u673a\u5668\u7684\u4e00\u6761\u4e2d\u65ad\u7ebf\u7684\u80fd\u529b\u3002\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u662f\u4e0e\u4f53\u7cfb\u7ed3\u6784\u76f8\u5173\u7684\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u63a7\u5236\u4e2d\u65ad\u7cfb\u7edf\u7684\u539f\u56e0\u5f52\u6839\u5230\u5e95\u662f\u9700\u8981\u540c\u6b65\u3002\u901a\u8fc7\u7981\u6b62\u4e2d\u65ad\uff0c\u53ef\u4ee5\u786e\u4fdd\u5f53\u524d\u6267\u884c\u8def\u5f84\u4e0d\u4f1a\u88ab\u4e2d\u65ad\u6253\u65ad\u3002</p> <p>\u4e0b\u9762\u8fd9\u4e24\u4e2a\u51fd\u6570\u53ef\u4ee5\u7981\u6b62/\u4f7f\u80fd\u672c\u5730CPU\u4e2d\u65ad\uff1a</p> <pre><code>local_irq_disable();\n\nlocal_irq_enable();\n</code></pre> <p>Warning</p> <p>\u4e2d\u65ad\u5bf9\u4e8e\u5185\u6838\u7684\u8fd0\u884c\u81f3\u5173\u91cd\u8981\uff0c\u5728\u5c4f\u853d\u4e2d\u65ad\u671f\u95f4\u6240\u6709\u4e2d\u65ad\u90fd\u65e0\u6cd5\u5904\u7406\u3002\u6240\u4ee5\u5728\u9a71\u52a8\u7a0b\u5e8f\u4e2d\uff0c\u4e0d\u8981\u4f7f\u7528\u8fd9\u4e24\u4e2a\u51fd\u6570\u3002</p> <p>\u5982\u679c\u53ea\u662f\u60f3\u4e2d\u65ad\u4e0b\u534a\u90e8\uff0c\u53ef\u4ee5\u4f7f\u7528<code>local_bh_disable()</code>\u548c<code>local_bh_enable()</code>\u3002</p> <p>\u5982\u679c\u5728\u8c03\u7528<code>local_irq_disable()</code>\u51fd\u6570\u524d\u5df2\u7ecf\u7981\u6b62\u4e86\u4e2d\u65ad\uff0c\u90a3\u4e48\u8be5\u64cd\u4f5c\u4f1a\u5e26\u6765\u6f5c\u5728\u7684\u5371\u9669\u3002\u540c\u6837\uff0c<code>local_irq_enable()</code>\u51fd\u6570\u4e5f\u5b58\u5728\u5371\u9669\uff0c\u56e0\u4e3a\u5b83\u4f1a\u65e0\u6761\u4ef6\u6fc0\u6d3b\u4e2d\u65ad\u3002\u5f53\u5185\u6838\u4ee3\u7801\u53d8\u5f97\u590d\u6742\u65f6\uff0c\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u5f53\u524d\u5904\u7406\u5668\u4e2d\u65ad\u72b6\u6001\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u4e00\u79cd\u673a\u5236\uff0c\u4ec5\u4ec5\u65f6\u628a\u4e2d\u65ad\u6062\u590d\u5230\u4ee5\u524d\u7684\u72b6\u6001\u800c\u4e0d\u662f\u7b80\u5355\u5730\u7981\u6b62\u6216\u8005\u662f\u6fc0\u6d3b\u3002</p> <pre><code>unsigned long flags;\nlocal_irq_save(flags);\nlocal_irq_restore(flags);\n</code></pre> <p>\u5728\u524d\u9762\u7684\u5185\u5bb9\u4e2d\uff0c\u6211\u4eec\u77e5\u9053\u4e86\u7981\u6b62\u6574\u4e2a\u5904\u7406\u5668\u4e0a\u6240\u6709\u4e2d\u65ad\u7684\u51fd\u6570\u3002\u5982\u679c\u53ea\u662f\u7981\u6b62\u7279\u5b9a\u7684\u4e2d\u65ad\u7ebf\uff0c\u76f8\u5173\u51fd\u6570\u5982\u4e0b\uff1a</p> <pre><code>void disable_irq(unsigned int irq);\nvoid disable_irq_nosync(unsigned int irq);\nvoid enable_irq(unsigned int irq);\nvoid synchronize_irq(unsigned int irq);\n</code></pre> <p>\u7531\u4e8e\u73b0\u4ee3\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5f80\u5f80\u5171\u4eab\u67d0\u4e2a\u4e2d\u65ad\u7ebf\uff0c\u7981\u6b62\u4e86\u67d0\u6761\u4e2d\u65ad\u7ebf\u4e5f\u5c31\u7981\u6b62\u4e86\u8fd9\u6761\u7ebf\u4e0a\u6240\u6709\u8bbe\u5907\u7684\u4e2d\u65ad\u4f20\u9012\u3002\u56e0\u6b64\u8fd9\u4e9b\u63a5\u53e3\u51fd\u6570\u4e0d\u5e94\u8be5\u88ab\u4f7f\u7528\u3002</p>"},{"location":"linux/kernel/interrupt/#_4","title":"\u4e0b\u534a\u90e8\u673a\u5236","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u6709\u4e00\u4e2a\u5feb\u901f\u3001\u5f02\u6b65\u4e14\u7b80\u5355\u7684\u673a\u5236\u8d1f\u8d23\u5bf9\u786c\u4ef6\u8fc5\u901f\u505a\u51fa\u76f8\u5e94\u5e76\u5b8c\u6210\u90a3\u4e9b\u65f6\u95f4\u8981\u6c42\u5f88\u4e25\u683c\u7684\u64cd\u4f5c\u3002\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5f88\u9002\u5408\u4e8e\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd\u3002\u800c\u5bf9\u4e8e\u90a3\u4e9b\u65f6\u95f4\u8981\u6c42\u76f8\u5bf9\u5bbd\u677e\u7684\u4efb\u52a1\uff0c\u5e94\u5f53\u653e\u5230\u4e0b\u534a\u90e8\u53bb\u5904\u7406\u3002</p> <p>\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6700\u597d\u8ba9\u6240\u6709\u7684\u5de5\u4f5c\u90fd\u4ea4\u7ed9\u4e0b\u534a\u90e8\u53bb\u5904\u7406\u3002\u4f46\u662f\uff0c\u603b\u6709\u4e00\u4e9b\u5de5\u4f5c\u9700\u8981\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6765\u5b8c\u6210\uff0c\u6bd4\u5982\u5bf9\u4e2d\u65ad\u7684\u5230\u8fbe\u8fdb\u884c\u786e\u8ba4\uff0c\u4ece\u786c\u4ef6\u62f7\u8d1d\u6570\u636e\u7b49\u3002\u5982\u4f55\u533a\u5206\u4e0a\u534a\u90e8\u548c\u4e0b\u534a\u90e8\uff0c\u5b8c\u5168\u7531\u9a71\u52a8\u7a0b\u5e8f\u5f00\u53d1\u8005\u81ea\u884c\u5224\u65ad\u3002\u5982\u679c\u4efb\u52a1\u6ee1\u8db3\u4ee5\u4e0b\u8981\u6c42\uff0c\u5219\u9002\u5408\u653e\u5230\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6267\u884c\u3002</p> <ul> <li>\u5982\u679c\u8fd9\u4e2a\u4efb\u52a1\u5bf9\u65f6\u95f4\u975e\u5e38\u654f\u611f\u3002</li> <li>\u5982\u679c\u8fd9\u4e2a\u4efb\u52a1\u548c\u786c\u4ef6\u76f8\u5173\u3002</li> <li>\u5982\u679c\u8fd9\u4e2a\u4efb\u52a1\u4e0d\u80fd\u88ab\u5176\u4ed6\u4e2d\u65ad\u6253\u65ad\u3002</li> </ul> <p>\u5176\u4ed6\u6240\u6709\u4efb\u52a1\uff0c\u8003\u8651\u653e\u5728\u4e0b\u534a\u90e8\u6267\u884c\u3002\u5728\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4ec5\u6267\u884c\u6700\u5173\u952e\u7684\u7d27\u6025\u4efb\u52a1\uff0c\u5c06\u540e\u7eed\u7684\u975e\u7d27\u6025\u4efb\u52a1\u653e\u5728\u4e0b\u534a\u90e8\u4e2d\u5904\u7406\u3002</p> <p><code>task_struct</code>\u4e2d\u7684<code>preempt_count</code>\u5b57\u6bb5\u7528\u4e8e\u8bb0\u5f55\u5f53\u524d\u4efb\u52a1\u7684\u4e0a\u4e0b\u6587\u72b6\u6001\u3002</p> <p></p> <ul> <li>PREEMPT_BITS\uff1a\u8bb0\u5f55\u7981\u6b62\u62a2\u5360\u7684\u6b21\u6570</li> <li>SOFTIRQ_BITS\uff1a\u8bb0\u5f55\u662f\u5426\u4f7f\u80fd\u4e0b\u534a\u90e8</li> <li>HARDIRQ_BITS\uff1a\u8bb0\u5f55\u662f\u5426\u5904\u4e8e\u786c\u4ef6\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d</li> </ul> <p>\u5176\u4f59\u5185\u5bb9\uff0c\u89c1\u4e2d\u65ad\u4e0b\u534a\u90e8\u3002</p>"},{"location":"linux/kernel/io_uring/","title":"\u5f02\u6b65IO","text":"<p>\u5f02\u6b65 IO \u4e00\u76f4\u662f Linux \u7cfb\u7edf\u7684\u75db\u3002Linux \u5f88\u65e9\u5c31\u6709 POSIX AIO \u8fd9\u5957\u5f02\u6b65 IO \u5b9e\u73b0\uff0c\u4f46\u5b83\u662f\u5728\u7528\u6237\u7a7a\u95f4\u81ea\u5df1\u5f00\u7528\u6237\u7ebf\u7a0b\u6a21\u62df\u7684\uff0c\u6548\u7387\u6781\u5176\u4f4e\u4e0b\u3002\u540e\u6765\u5728 Linux 2.6 \u5f15\u5165\u4e86\u771f\u6b63\u7684\u5185\u6838\u7ea7\u522b\u652f\u6301\u7684\u5f02\u6b65 IO \u5b9e\u73b0\uff08Linux aio\uff09\uff0c\u4f46\u662f\u5b83\u53ea\u652f\u6301 Direct IO\uff0c\u53ea\u652f\u6301\u78c1\u76d8\u6587\u4ef6\u8bfb\u5199\uff0c\u800c\u4e14\u5bf9\u6587\u4ef6\u5927\u5c0f\u8fd8\u6709\u9650\u5236\uff0c\u603b\u4e4b\u5404\u79cd\u9ebb\u70e6\u3002</p> <p>\u968f\u7740 Linux 5.1 \u7684\u53d1\u5e03\uff0cLinux \u7ec8\u4e8e\u6709\u4e86\u81ea\u5df1\u597d\u7528\u7684\u5f02\u6b65 IO \u5b9e\u73b0\uff0c\u5e76\u4e14\u652f\u6301\u5927\u591a\u6570\u6587\u4ef6\u7c7b\u578b\uff08\u78c1\u76d8\u6587\u4ef6\u3001socket\uff0c\u7ba1\u9053\u7b49\uff09\uff0c\u8fd9\u4e2a\u5c31\u662f\u672c\u6587\u7684\u4e3b\u89d2\uff1aio_uring\u3002</p> <p>\u76f8\u6bd4\u4e8eLinux\u4f20\u7edf\u7684\u5f02\u6b65I/O\u673a\u5236\uff0cio_uring\u7684\u4f18\u52bf\u4e3b\u8981\u4f53\u73b0\u5728\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a</p> <ol> <li>\u9ad8\u6548\uff1a\u4e00\u65b9\u9762\uff0cio_uring \u91c7\u7528\u4e86\u5171\u4eab\u5185\u5b58\u7684\u65b9\u5f0f\u6765\u4f20\u9012\u53c2\u6570\uff0c\u51cf\u5c11\u4e86\u6570\u636e\u62f7\u8d1d\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u91c7\u7528 ringbuffer \u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u6279\u91cf\u7684 IO \u8bf7\u6c42\uff0c\u51cf\u5c11\u4e86\u7cfb\u7edf\u8c03\u7528\u7684\u6b21\u6570\u3002</li> <li>\u53ef\u6269\u5c55\u6027\u5f3a\uff0c\u5177\u4f53\u8868\u73b0\u5728\uff1a<ul> <li>\u652f\u6301\u7684 IO \u8bbe\u5907\u7c7b\u578b\u591a\u6837\u5316\uff0c\u4e0d\u4ec5\u652f\u6301\u5757\u8bbe\u5907\u7684 IO\uff0c\u8fd8\u652f\u6301\u4efb\u4f55\u57fa\u4e8e\u6587\u4ef6\u7684 IO\uff0c\u4f8b\u5982\u7ba1\u9053\u3001socket\u3002</li> <li>\u652f\u6301\u7684 IO \u64cd\u4f5c\u591a\u6837\u5316\uff0c\u4e0d\u4ec5\u652f\u6301\u5e38\u89c1\u7684 read/write \u64cd\u4f5c\uff0c\u8fd8\u652f\u6301 send/recv/close/sync \u7b49\u3002</li> </ul> </li> <li>\u6613\u7528\uff1aio_uring \u63d0\u4f9b\u4e86\u914d\u5957\u7684 liburing \u5e93\uff0c\u5bf9\u5e95\u5c42\u7684\u7cfb\u7edf\u8c03\u7528\u8fdb\u884c\u4e86\u5927\u91cf\u7684\u5c01\u88c5\u3002</li> <li>\u53ef\u4f38\u7f29\uff1aio_uring \u63d0\u4f9b\u4e86 poll \u6a21\u5f0f\uff0c\u5bf9\u4e8e IO \u6027\u80fd\u8981\u6c42\u8f83\u9ad8\u7684\u573a\u666f\uff0c\u5141\u8bb8\u7528\u6237\u727a\u7272\u4e00\u5b9a\u7684 CPU \u6765\u83b7\u5f97\u66f4\u9ad8\u7684 IO \u6027\u80fd\u3002</li> </ol> <p>\u603b\u7ed3 io_uring \uff1a\u4e00\u5957\u5168\u65b0\u7684 syscall\uff0c\u4e00\u5957\u5168\u65b0\u7684 async API\uff0c\u66f4\u9ad8\u7684\u6027\u80fd\uff0c\u66f4\u597d\u7684\u517c\u5bb9\u6027\uff0c\u6765\u8fce\u63a5\u9ad8 IOPS\uff0c\u9ad8\u541e\u5410\u91cf\u7684\u672a\u6765\u3002</p>"},{"location":"linux/kernel/iomultiplexing/","title":"I/O\u591a\u8def\u590d\u7528","text":"<p>\u7528\u4e00\u4e2a\u8fdb\u7a0b\u6765\u7ef4\u62a4\u591a\u4e2asocket\uff0c\u8fd9\u5c31\u662f I/O \u591a\u8def\u590d\u7528\u6280\u672f\uff0c\u7c7b\u4f3c\u4e8e\u4e00\u4e2a CPU \u5e76\u53d1\u591a\u4e2a\u8fdb\u7a0b\u3002</p> <p>select/poll/epoll \u662f Linux \u63d0\u4f9b\u7ed9\u7528\u6237\u7684 I/O \u591a\u8def\u590d\u7528\u7684\u51fd\u6570\u63a5\u53e3\u3002</p>"},{"location":"linux/kernel/iomultiplexing/#selectpoll","title":"select/poll","text":"<pre><code>int select(int numfds, fd_set *readfds, fd_set *writefds, fd_set *exceptfds, struct timeval *timeout);\n</code></pre> <p>\u5176\u4e2d readfds\u3001writefds\u3001exceptfds \u5206\u522b\u662f\u88ab<code>select()</code>\u76d1\u89c6\u65f6\uff0c\u8bfb\u3001\u5199\u3001\u5f02\u5e38\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u96c6\u5408\u3002</p> <pre><code>int poll(struct pollfd *fds, nfds_t nfds, int timeout);\n</code></pre> <p>select \u5b9e\u73b0\u591a\u8def\u590d\u7528\u7684\u65b9\u5f0f\u662f\uff0c\u5c06\u5df2\u8fde\u63a5\u7684 socket \u90fd\u653e\u5230\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u96c6\u5408\uff0c\u7136\u540e\u8c03\u7528<code>select()</code>\u51fd\u6570\uff0c\u5c06\u8be5\u96c6\u5408\u62f7\u8d1d\u5230\u5185\u6838\u91cc\uff0c\u5185\u6838\u4f1a\u904d\u5386\u8fd9\u4e2a\u96c6\u5408\uff0c\u68c0\u67e5\u662f\u5426\u6709\u4e8b\u4ef6\u4ea7\u751f\uff0c\u7136\u540e\u6807\u8bb0\u4ea7\u751f\u4e8b\u4ef6\u7684 socket\u3002\u63a5\u7740\u5c06\u6574\u4e2a\u96c6\u5408\u62f7\u8d1d\u56de\u7528\u6237\u6001\uff0c\u7528\u6237\u6001\u7ee7\u7eed\u904d\u5386\u8be5\u96c6\u5408\u627e\u5230\u53ef\u8bfb\u5199\u7684 socket \u7136\u540e\u518d\u5904\u7406\u3002</p> <p></p> <p>select \u7684\u7f3a\u70b9\u662f\uff1a</p> <ol> <li>\u6bcf\u6b21\u8c03\u7528 select\uff0c\u90fd\u9700\u8981\u628a fd \u96c6\u5408\u4ece\u7528\u6237\u6001\u62f7\u8d1d\u5230\u5185\u6838\u6001\uff0c\u518d\u4ece\u5185\u6838\u6001\u62f7\u8d1d\u81f3\u7528\u6237\u6001\uff0c\u8fd9\u4e2a\u5f00\u9500\u5728 fd \u5f88\u591a\u65f6\u4f1a\u5f88\u5927</li> <li>\u540c\u65f6\u6bcf\u6b21\u8c03\u7528 select \u90fd\u9700\u8981\u5728\u5185\u6838\u904d\u5386\u4f20\u9012\u8fdb\u6765\u7684\u6240\u6709\u7684 fd \u96c6\u5408</li> <li>select \u652f\u6301\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6570\u91cf\u592a\u5c0f\u4e86\uff0c\u9ed8\u8ba4\u662f 1024</li> </ol> <p>poll \u7528\u94fe\u8868\u7684\u65b9\u5f0f\u6765\u7ec4\u7ec7 fd \u96c6\u5408\uff0c\u7a81\u7834\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u9650\u5236\uff0c\u4f46\u662f\u672c\u8d28\u548c select \u4e00\u6837\uff0c\u90fd\u901a\u8fc7\u7ebf\u6027\u8868\u7684\u65b9\u5f0f\u5b58\u50a8\u63cf\u8ff0\u7b26\uff0c\u90fd\u9700\u8981\u904d\u5386\u6765\u627e\u5230\u53ef\u8bfb\u5199\u7684 socket\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u3002</p>"},{"location":"linux/kernel/iomultiplexing/#epoll","title":"epoll","text":"epoll\u7684\u51fd\u6570\u63a5\u53e3<pre><code>/**\n * @param size \u6700\u5927\u76d1\u542c\u7684\u63cf\u8ff0\u7b26\u6570\u91cf\n * @return \u8fd4\u56de\u4e00\u4e2aepool\u53e5\u67c4\n*/\nint epoll_create(int size);\n\n\n/**\n * @param epfd \u7528epoll_create\u521b\u5efa\u7684epoll\u53e5\u67c4\n * @param op \u4e8b\u4ef6\u64cd\u4f5c\u7c7b\u578b\n            EPOLL_CTL_ADD \u6ce8\u518c\u65b0\u7684\u63cf\u8ff0\u7b26\u5230epoll\u53e5\u67c4\u4e2d\n            EPOLL_CTL_MOD \u4fee\u6539\u5df2\u7ecf\u6ce8\u518c\u7684\u63cf\u8ff0\u7b26\n            EPOLL_CTL_DEL \u6ce8\u9500\u4e00\u4e2a\u63cf\u8ff0\u7b26\n * @param fd \u8981\u76d1\u542c\u7684\u63cf\u8ff0\u7b26\n * @param event \u544a\u8bc9\u5185\u6838\u9700\u8981\u76d1\u542c\u7684\u4e8b\u4ef6\uff0c\u6bd4\u5982\u53ef\u8bfb\u3001\u53ef\u5199\u7b49\u7b49\n * @return \u6210\u529f\u8fd4\u56de0\uff0c\u5931\u8d25\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\n */\nint epoll_ctl(int epfd, int op, int fd, struct epoll_event *event);\n\n/**\n * @param epfd \u7528epoll_create\u521b\u5efa\u7684epoll\u53e5\u67c4\n * @param events \u7528\u6765\u5b58\u653e\u89e6\u53d1\u7684\u4e8b\u4ef6\n * @param maxevents \u544a\u8bc9\u5185\u6838\u6700\u591a\u53ef\u4ee5\u83b7\u53d6\u591a\u5c11\u4e8b\u4ef6\n * @param timeout \u8d85\u65f6\u65f6\u95f4\uff0c-1\u8868\u793a\u963b\u585e\uff0c0\u8868\u793a\u4e0d\u963b\u585e\uff0c\u5927\u4e8e0\u8868\u793a\u7b49\u5f85\u8d85\u65f6\u65f6\u95f4\n * @return \u8fd4\u56de\u89e6\u53d1\u7684\u4e8b\u4ef6\u6570\u76ee\uff0c\u5982\u679c\u8d85\u65f6\u8fd4\u56de0\uff0c\u51fa\u9519\u8fd4\u56de-1\u5e76\u8bbe\u7f6eerrno\n */\nint epoll_wait(int epfd, struct epoll_event *events, int maxevents, int timeout);\n</code></pre> epoll\u7684\u7528\u6cd5<pre><code>int epfd = epoll_create(1000);\nepoll_ctl(epfd, EPOLL_CTL_ADD, listen_fd, &amp;listen_event);\n\nwhile(1) {\n    //\u963b\u585e\u7b49\u5f85epoll\u4e2d\u7684fd\u89e6\u53d1\n    int active_cnt = epoll_wait(epfd, events, MAX_EVENTS, -1);\n    for(int i = 0; i &lt; active_cnt; i++){\n        if(events[i].data.fd == listen_fd){\n            //\u5904\u7406\u65b0\u8fde\u63a5\n        }else if(events[i].events &amp; EPOLLIN){\n            //\u5904\u7406\u8bfb\u4e8b\u4ef6\n        }else if(events[i].events &amp; EPOLLOUT){\n            //\u5904\u7406\u5199\u4e8b\u4ef6\n        }\n    })\n}\n</code></pre> <p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u5148\u8c03\u7528<code>epoll_create()</code>\u521b\u5efa\u4e00\u4e2aepoll\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528<code>epoll_ctl()</code>\u5c06\u9700\u8981\u76d1\u542c\u7684 socket \u6dfb\u52a0\u5230\u5bf9\u8c61\u4e2d\uff0c\u6700\u540e\u8c03\u7528<code>epoll_wait()</code>\u7b49\u5f85socket\u53ef\u8bfb\u5199\u3002</p> <p>epoll \u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\uff0c\u89e3\u51b3\u4e86 select \u548c poll \u7684\u7f3a\u70b9\uff1a</p> <ol> <li>\u4f7f\u7528\u7ea2\u9ed1\u6811\u6765\u8ddf\u8e2a\u5f85\u68c0\u6d4b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5c06\u9700\u8981\u76d1\u63a7\u7684 socket \u901a\u8fc7<code>epoll_ctl()</code>\u51fd\u6570\u52a0\u5165\u5230\u7ea2\u9ed1\u6811\u4e2d\u3002</li> <li>\u4f7f\u7528\u4e8b\u4ef6\u9a71\u52a8\u673a\u5236\uff0c\u5f53 socket \u53ef\u8bfb\u5199\u65f6\uff0c\u5185\u6838\u4f1a\u53d1\u9001\u4e00\u4e2a\u4e8b\u4ef6\u7ed9\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u53ea\u9700\u8981\u5728\u4e8b\u4ef6\u5230\u8fbe\u65f6\u5904\u7406\u5373\u53ef\uff0c\u65e0\u9700\u904d\u5386\u6574\u4e2a\u7ea2\u9ed1\u6811\u3002</li> </ol> <p></p> <p>epoll \u652f\u6301\u4e24\u79cd\u89e6\u53d1\u65b9\u5f0f\uff0c\u5206\u522b\u662f\u6c34\u5e73\u89e6\u53d1(ET)\u548c\u8fb9\u7f18\u89e6\u53d1(LT)\u3002</p> <ul> <li>\u6c34\u5e73\u89e6\u53d1\uff1a\u53ea\u8981\u6709\u4e8b\u4ef6\u5c31\u7eea\uff0c\u5c31\u4f1a\u4e00\u76f4\u901a\u77e5\uff0c\u76f4\u5230\u4e8b\u4ef6\u5904\u7406\u5b8c\u6bd5\u3002</li> <li>\u8fb9\u7f18\u89e6\u53d1\uff1a\u4e8b\u4ef6\u53d1\u751f\u65f6\uff0c\u53ea\u4f1a\u901a\u77e5\u4e00\u6b21\u3002</li> </ul> <p>\u5982\u679c\u4f7f\u7528\u8fb9\u7f18\u89e6\u53d1\u6a21\u5f0f\uff0c\u8fdb\u7a0b\u5728\u6536\u5230\u901a\u77e5\u540e\uff0c\u8981\u5c3d\u53ef\u80fd\u5730\u8bfb\u5199\u6570\u636e\uff0c\u4ee5\u514d\u6570\u636e\u4e22\u5931\u3002</p> <p>\u5728\u4f7f\u7528 I/O \u591a\u8def\u590d\u7528\u65f6\uff0c\u6700\u597d\u642d\u914d\u975e\u963b\u585e I/O \u4e00\u8d77\u4f7f\u7528\u3002</p> <p></p>"},{"location":"linux/kernel/ion/","title":"ION\u5185\u5b58\u7ba1\u7406\u5668","text":"<ul> <li>kernel\u7248\u672c\uff1a4.14</li> <li>\u6e90\u7801\u4f4d\u7f6e\uff1a&lt;include/linux/ion.h&gt;\uff0c&lt;drivers/staging/android/ion&gt;</li> </ul> <p>ION\u5185\u5b58\u5206\u914d\u5668\u5df2\u7ecf\u7531DMA heap\u53d6\u4ee3</p> <p></p> <p>\u76f8\u5173\u8d44\u6599\uff1a</p> <ul> <li>\u5c06 ION \u5806\u8f6c\u6362\u4e3a DMA-BUF \u5806</li> <li>Destaging ION</li> <li>DMA BUF Heap Transition in AOSP</li> </ul> <p>ION\u901a\u7528\u5185\u5b58\u7ba1\u7406\u5668\u662f\u7531\u8c37\u6b4c\u5f00\u53d1\u7684\u4e00\u4e2a\u7528\u4e8e\u7ba1\u7406\u5185\u5b58\u7684\u5b50\u7cfb\u7edf\uff0c\u901a\u8fc7\u5728\u786c\u4ef6\u8bbe\u5907\u548c\u7528\u6237\u7a7a\u95f4\u4e4b\u95f4\u5206\u914d\u548c\u5171\u4eab\u5185\u5b58\uff0c\u5b9e\u73b0\u8bbe\u5907\u4e4b\u95f4\u5185\u5b58\u7684\u96f6\u62f7\u8d1d\u3002\u5b83\u53ef\u4ee5\u63d0\u4f9b\u9a71\u52a8\u4e4b\u95f4\u3001\u7528\u6237\u8fdb\u7a0b\u4e4b\u95f4\u3001\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u4e4b\u95f4\u7684\u5171\u4eab\u5185\u5b58\u3002</p> <p>\u5728SoC\u4e2d\uff0c\u8bb8\u591a\u786c\u4ef6\u8bbe\u5907\u90fd\u5177\u6709\u8bbf\u95eeDMA\u7684\u80fd\u529b\uff0c\u4f46\u662f\u5176\u8bbf\u95ee\u673a\u5236\u5374\u5404\u4e0d\u76f8\u540c\uff0c\u4e0d\u540c\u8bbe\u5907\u7533\u8bf7\u7684\u5185\u5b58\u5f7c\u6b64\u4e4b\u95f4\u4e92\u4e0d\u76f8\u901a\uff0c\u8fd9\u5c31\u9020\u6210\u4e86\u5185\u5b58\u7ba1\u7406\u4e0a\u7684\u6df7\u4e71\u3002ION\u63d0\u4f9b\u4e86\u4e00\u79cd\u901a\u7528\u7684\u5185\u5b58\u5206\u914d\u65b9\u6cd5\uff0c\u89e3\u51b3\u4e86\u4e0d\u540c\u8bbe\u5907\u4e4b\u95f4\u5185\u5b58\u7ba1\u7406\u788e\u7247\u5316\u7684\u95ee\u9898\u3002</p> <p>ION\u6574\u4f53\u67b6\u6784\u56fe\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u5728\u7528\u6237\u5c42\u9762\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u5bf9\u5e94\u4e00\u4e2aclient\uff0c\u4e00\u4e2aclient\u4e0b\u6709\u591a\u4e2ahandle\uff0c\u4e0e\u5185\u6838\u5c42\u9762\u7684buffer\u4e00\u4e00\u5bf9\u5e94\u3002\u5185\u6838\u6839\u636eheap type\u7ba1\u7406\u4e0d\u540c\u7684heap\u3002\u4e0d\u540c\u7684\u7528\u6237\u8fdb\u7a0b\u901a\u8fc7share_fd\u5b9e\u73b0\u5171\u4eab\u5185\u5b58\u3002</p> <p><code>struct ion_heap</code>\u7ed3\u6784\u4f53\u5c31\u8868\u793a\u4e00\u4e2aheap\uff0c\u5176\u4e2d\u652f\u6301\u7684heap type\u6709\uff1a</p> <pre><code>enum ion_heap_type {\n    ION_HEAP_TYPE_SYSTEM,\n    ION_HEAP_TYPE_SYSTEM_CONTIG,\n    ION_HEAP_TYPE_CARVEOUT,\n    ION_HEAP_TYPE_CHUNK,\n    ION_HEAP_TYPE_DMA,\n    ION_HEAP_TYPE_CUSTOM,\n    ION_HEAP_TYPE_CMA_RESERVED,\n};\n</code></pre> <ul> <li>ION_HEAP_TYPE_SYSTEM\uff1a\u901a\u8fc7<code>vmalloc()</code>\u51fd\u6570\u5206\u914d\u7684\u5185\u5b58</li> <li>ION_HEAP_TYPE_SYSTEM_CONTIG\uff1a\u901a\u8fc7<code>kmalloc()</code>\u51fd\u6570\u5206\u914d\u7684\u5185\u5b58</li> <li>ION_HEAP_TYPE_CARVEOUT\uff1a\u542f\u52a8\u65f6\u9884\u7559\u7684\u5185\u5b58</li> <li>ION_HEAP_TYPE_DMA\uff1a\u7ed9DMA\u4f7f\u7528\u7684\u5185\u5b58</li> <li>ION_HEAP_TYPE_CMA_RESERVED\uff1a\u542f\u52a8\u65f6\u9884\u7559\u7ed9CMA\u7684\u5185\u5b58</li> </ul> <p><code>struct ion_heap_ops</code>\u5b9e\u73b0\u5bf9heap\u7684\u64cd\u4f5c\uff1a</p> <pre><code>struct ion_heap_ops {\n    int (*allocate)(struct ion_heap *heap,\n            struct ion_buffer *buffer, unsigned long len,\n            unsigned long align, unsigned long flags);\n    void (*free)(struct ion_buffer *buffer);\n    int (*phys)(struct ion_heap *heap, struct ion_buffer *buffer,\n            phys_addr_t *addr, size_t *len);\n    struct sg_table * (*map_dma)(struct ion_heap *heap,\n                     struct ion_buffer *buffer);\n    void (*unmap_dma)(struct ion_heap *heap, struct ion_buffer *buffer);\n    void * (*map_kernel)(struct ion_heap *heap, struct ion_buffer *buffer);\n    void (*unmap_kernel)(struct ion_heap *heap, struct ion_buffer *buffer);\n    int (*map_user)(struct ion_heap *mapper, struct ion_buffer *buffer,\n            struct vm_area_struct *vma);\n    int (*shrink)(struct ion_heap *heap, gfp_t gfp_mask, int nr_to_scan);\n};\n</code></pre> <p>allocate\uff1a\u4ecebuffer\u4e2d\u5206\u914d\u5185\u5b58</p> <p>phys\uff1a\u4ece\u7269\u7406\u5730\u5740\u8fde\u7eed\u7684buffer\u4e2d\u83b7\u53d6\u5176\u7269\u7406\u5730\u5740</p> <p>map_dma\uff1a\u5c06buffer\u6620\u5c04\u5230DMA\u5730\u5740\u7a7a\u95f4</p> <p>map_kernel\uff1a\u5c06buffer\u6620\u5c04\u5230\u5185\u6838\u5730\u5740\u7a7a\u95f4</p> <p>map_user\uff1a\u5c06buffer\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4</p> <p>shrink\uff1a\u5f53\u5185\u5b58\u7d27\u5f20\u65f6\uff0c\u4eceheap\u4e2d\u62c6\u5206buffer</p>"},{"location":"linux/kernel/ion/#_1","title":"\u5185\u6838\u6570\u636e\u7ed3\u6784","text":"<p>\u7528\u6237\u5c42\u8bbf\u95eeION\u5fc5\u987b\u901a\u8fc7/dev/ion\uff0c\u5185\u6838\u62bd\u8c61\u51fa<code>struct ion_device</code>\u7ed3\u6784\u4f53\u7528\u6765\u7ba1\u7406ION\u8bbe\u5907\uff1a</p> <pre><code>struct ion_device {\n    struct miscdevice dev;\n    struct rb_root buffers;\n    struct mutex buffer_lock;\n    struct rw_semaphore lock;\n    struct plist_head heaps;\n    long (*custom_ioctl)(struct ion_client *client, unsigned int cmd,\n                 unsigned long arg);\n    struct rb_root clients;\n    struct dentry *debug_root;\n    struct dentry *heaps_debug_root;\n    struct dentry *clients_debug_root;\n    struct rb_root share_buffers;\n    struct mutex share_lock;\n    struct idr idr;\n    struct rb_root share_pool_buffers;\n    struct dentry *ion_buf_debug_file;\n};\n</code></pre> <p><code>struct ion_client</code>\u8868\u793a\u7528\u6237\u7a7a\u95f4\u521b\u5efa\u7684\u5b9e\u4f8b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u53ea\u5bf9\u5e94\u4e00\u4e2a<code>ion_client</code>\uff1a</p> <pre><code>struct ion_client {\n    struct rb_node node;\n    struct ion_device *dev;\n    struct rb_root handles;\n    struct idr idr;\n    struct mutex lock;\n    const char *name;\n    char *display_name;\n    int display_serial;\n    struct task_struct *task;\n    pid_t pid;\n    struct dentry *debug_root;\n    wait_queue_head_t wq;\n    int wq_cnt;\n    struct kfifo fifo;\n    spinlock_t fifo_lock;\n};\n</code></pre> <p>\u5f53\u7528\u6237\u4f7f\u7528<code>open()</code>\u6253\u5f00/dev/ion\u65f6\uff0c\u6700\u7ec8\u8c03\u7528\u7684\u662f<code>ion_open()</code>\u51fd\u6570\uff1a</p> <pre><code>static const struct file_operations ion_fops = {\n    .owner          = THIS_MODULE,\n    .open           = ion_open,\n    .release        = ion_release,\n    .unlocked_ioctl = ion_ioctl,\n#ifdef CONFIG_COMPAT\n    .compat_ioctl   = ion_ioctl,\n#endif\n    .mmap           = _ion_mmap,\n};\n</code></pre> <p>\u8be5\u51fd\u6570\u53c8\u8c03\u7528<code>ion_client_create()</code>\u521b\u5efaclient\uff0c\u5e76\u5efa\u7acb\u4e0eion_device\u7684\u8054\u7cfb\uff1a</p> <pre><code>static int ion_open(struct inode *inode, struct file *file)\n{\n    struct miscdevice *miscdev = file-&gt;private_data;\n    struct ion_device *dev = container_of(miscdev, struct ion_device, dev);\n    struct ion_client *client;\n    char debug_name[64];\n\n    pr_debug(\"%s: %d\\n\", __func__, __LINE__);\n    snprintf(debug_name, 64, \"%u\", task_pid_nr(current-&gt;group_leader));\n    client = ion_client_create(dev, debug_name);\n    if (IS_ERR(client))\n        return PTR_ERR(client);\n    file-&gt;private_data = client;\n    (void)hb_expand_files(current-&gt;files, rlimit(RLIMIT_NOFILE)-1);\n\n    return 0;\n}\n</code></pre> <p><code>ion_buffer</code>\u5728\u7528\u6237\u7a7a\u95f4\u7684\u5bf9\u5e94\u5f62\u5f0f\u5c31\u662f<code>struct ion_handle</code>\uff1a</p> <pre><code>struct ion_handle {\n    struct kref ref;\n    struct ion_client *client;\n    struct ion_buffer *buffer;\n    struct rb_node node;\n    unsigned int kmap_cnt;\n    int id;\n    int share_id;\n    int import_cnt;\n    struct ion_share_handle * sh_hd;\n    int32_t import_consume_cnt;\n};\n</code></pre> <p><code>struct ion_heap</code>\u8868\u793aION\u5185\u5b58\u6c60\uff1a</p> <pre><code>struct ion_heap {\n    struct plist_node node;\n    struct ion_device *dev;\n    enum ion_heap_type type;\n    struct ion_heap_ops *ops;\n    unsigned long flags;\n    unsigned int id;\n    const char *name;\n    struct shrinker shrinker;\n    struct list_head free_list;\n    size_t free_list_size;\n    spinlock_t free_lock;\n    wait_queue_head_t waitqueue;\n    struct task_struct *task;\n\n    int (*debug_show)(struct ion_heap *heap, struct seq_file *, void *);\n};\n</code></pre> <p><code>struct ion_buffer</code>\u8868\u793aheap\u4e2d\u7684\u5185\u5b58\u5757\uff1a</p> <pre><code>struct ion_buffer {\n    struct kref ref;\n    union {\n        struct rb_node node;\n        struct list_head list;\n    };\n    struct ion_device *dev;\n    struct ion_heap *heap;\n    unsigned long flags;\n    unsigned long private_flags;\n    size_t size;\n    union {\n        void *priv_virt;\n        phys_addr_t priv_phys;\n    };\n    struct mutex lock;\n    int kmap_cnt;\n    void *vaddr;\n    int dmap_cnt;\n    struct sg_table *sg_table;\n    struct page **pages;\n    struct list_head vmas;\n    /* used to track orphaned buffers */\n    int handle_count;\n    char task_comm[TASK_COMM_LEN];\n    pid_t pid;\n};\n</code></pre>"},{"location":"linux/kernel/ion/#scatterlist","title":"scatterlist","text":"<p>\u5728\u7ee7\u7eed\u6df1\u5165\u4e4b\u524d\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u4e86\u89e3\u4e0bscatterlist\u2014\u2014\u6563\u5217\u8868\uff0c\u5b83\u7528\u4e8e\u7ec4\u7ec7\u5206\u6563\u7684\u5185\u5b58\u3002</p> <p>\u6211\u4eec\u77e5\u9053\uff0cCPU\u3001DMA\u90fd\u6709\u81ea\u5df1\u7684\u8bbf\u95ee\u5185\u5b58\u7684\u65b9\u5f0f\uff1a</p> <ul> <li>CPU\u4ee5MMU\u865a\u62df\u5730\u5740\u7684\u65b9\u5f0f</li> <li>DMA\u4ee5\u76f4\u63a5\u7269\u7406\u5730\u5740\u7684\u65b9\u5f0f</li> </ul> <p>\u4e8e\u662f\uff0c\u5f53\u5185\u5b58\u8981\u5728\u8fd9\u4e8c\u8005\u4e4b\u95f4\u5171\u4eab\u65f6\uff0c\u5b58\u5728\u4e00\u4e2a\u6839\u672c\u77db\u76fe\uff1a\u5728CPU\u7684\u89c6\u89d2\uff0c\u7531\u4e8e\u6709MMU\u673a\u5236\uff0c\u5b83\u6839\u672c\u4e0d\u5173\u5fc3\u7269\u7406\u5730\u5740\u662f\u5426\u8fde\u7eed\uff0c\u53ea\u8981\u865a\u62df\u5730\u5740\u8fde\u7eed\u5373\u53ef\u3002\u4f46\u662fDMA\u6ca1\u6709MMU\u673a\u5236\uff0c\u5176\u7533\u8bf7\u7684\u5185\u5b58\u5fc5\u987b\u662f\u8fde\u7eed\u7684\uff0c\u5c24\u5176\u662f\u5728\u4f20\u8f93\u56fe\u50cf\u3001\u89c6\u9891\u65f6\uff0c\u66f4\u662f\u9700\u8981\u4e00\u5927\u5757\u8fde\u7eed\u7684\u5185\u5b58\u5730\u5740\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u6839\u672c\u77db\u76fe\uff0cscatterlist\u8bde\u751f\u4e86\uff0c\u5b83\u7528\u6765\u63cf\u8ff0\u8fd9\u4e00\u4e2a\u4e2a\u4e0d\u8fde\u7eed\u7684\u7269\u7406\u5185\u5b58\u5757\uff1a</p> <pre><code>struct scatterlist {\n    unsigned long   page_link;\n    unsigned int    offset;\n    unsigned int    length;\n    dma_addr_t  dma_address;\n#ifdef CONFIG_NEED_SG_DMA_LENGTH\n    unsigned int    dma_length;\n#endif\n};\n</code></pre> <p>page_link\uff1a\u6307\u793a\u8be5\u5185\u5b58\u5757\u6240\u5728\u7684\u9875\u9762</p> <p>offset\uff1a\u8be5\u5185\u5b58\u5757\u5728\u9875\u9762\u4e2d\u7684\u504f\u79fb</p> <p>length\uff1a\u8be5\u5185\u5b58\u5757\u7684\u957f\u5ea6</p> <p>dma_address\uff1a\u8be5\u5185\u5b58\u5757\u7684\u8d77\u59cb\u5730\u5740</p> <p>dma_length\uff1a\u76f8\u5e94\u7684\u957f\u5ea6\u4fe1\u606f</p>"},{"location":"linux/kernel/ion/#struct-sg_table","title":"struct sg_table","text":"<p>\u5728\u5b9e\u9645\u573a\u666f\u4e2d\uff0c\u5355\u4e2ascatterlist\u662f\u65e0\u6cd5\u4f7f\u7528\u7684\uff0c\u6211\u4eec\u9700\u8981\u591a\u4e2ascatterlist\u7ec4\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u4ee5\u8868\u793a\u5728\u7269\u7406\u4e0a\u4e0d\u8fde\u7eed\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff1a</p> <pre><code>struct sg_table {\n    struct scatterlist *sgl;    /* the list */\n    unsigned int nents;     /* number of mapped entries */\n    unsigned int orig_nents;    /* original size of list */\n};\n</code></pre> <p>sgl\uff1a\u5185\u5b58\u5757\u6570\u7ec4\u7684\u9996\u5730\u5740</p> <p>nents\uff1a\u6709\u6548\u7684\u5185\u5b58\u5757\u4e2a\u6570</p> <p>orig_nents\uff1a\u5185\u5b58\u5757\u6570\u7ec4\u7684size</p> <p>sg_table\u4e2d\u5230\u5e95\u6709\u591a\u5c11\u4e2a\u6709\u6548\u5185\u5b58\u5757\uff1f\u5176\u5b9e\u662f\u7531<code>struct scatterlist</code>\u4e2d\u7684page_link\u5b57\u6bb5\u51b3\u5b9a\u7684\u3002\u5982\u679c\u5b83\u7684 bit0 \u4e3a1\uff0c\u8868\u793a\u5b83\u4e0d\u662f\u4e00\u4e2a\u6709\u6548\u7684\u5185\u5b58\u5757\uff0c\u800c\u662f\u6307\u5411\u53e6\u4e00\u4e2ascatterlist\u6570\u7ec4\u3002\u5982\u679c bit1 \u4e3a1\uff0c\u8868\u793a\u5b83\u662fscatterlist\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u4e2a\u6709\u6548\u7684\u5185\u5b58\u5757\u3002</p>"},{"location":"linux/kernel/ion/#_2","title":"\u5206\u914d\u4e0e\u91ca\u653e\u5185\u5b58","text":"<p>\u524d\u9762\u63d0\u5230\uff0cION\u5bf9\u4e8e\u7ba1\u7406\u7684\u5185\u5b58\u4e3b\u8981\u5206\u6210\u4e86\u56db\u4e2a\u533a\uff1a</p> <ul> <li>\u4e0d\u8fde\u7eed\u5185\u5b58</li> <li>\u8fde\u7eed\u5185\u5b58</li> <li>\u4fdd\u7559\u533a\u5185\u5b58</li> <li>CMA\u5185\u5b58</li> </ul> <p>\u7528\u6237\u5c42\u64cd\u4f5cION\u65f6\u7edf\u4e00\u901a\u8fc7<code>ion_ioctl()</code>\u63a5\u53e3\uff0c\u901a\u8fc7\u4f20\u5165flags=ION_IOC_ALLOC\uff0c\u518d\u8c03\u7528<code>ion_alloc()</code>\u51fd\u6570\uff0c\u5b83\u4e3b\u8981\u505a\u4e86\u4ee5\u4e0b\u4e8b\u60c5\uff1a</p> <ol> <li>\u6839\u636e\u4f18\u5148\u7ea7\uff0c\u4ece\u67d0\u4e2aheap\u5f00\u59cb\uff0c\u6839\u636e\u7528\u6237\u4f20\u5165\u7684heap_mask\uff0c\u67e5\u770b\u662f\u5426\u6709\u5339\u914d\u7684\u5185\u5b58\u53ef\u4ee5\u5206\u914d\uff0c\u904d\u5386\u7cfb\u7edf\u4e2d\u6240\u6709\u7684heap\uff0c\u76f4\u5230\u627e\u5230\u53ef\u4ee5\u5206\u914d\u7684\u5185\u5b58\u4e3a\u6b62\u3002</li> <li>\u5206\u914d\u5185\u5b58\u7684\u903b\u8f91\u5728<code>ion_buffer_create()</code>\u51fd\u6570\u4e2d\u3002</li> <li>\u6838\u5fc3\u8bed\u53e5<code>heap-&gt;ops-&gt;allocate(heap, buffer, len, align, flags)</code>\u2014\u2014\u6839\u636e\u4e0d\u540c\u7684heap\u8c03\u7528\u5bf9\u5e94\u7684\u5206\u914d\u51fd\u6570\uff1a<code>struct ion_heap_ops\u4e2d\u7684allocate()</code>\u56de\u8c03\u51fd\u6570\u3002</li> </ol> <p>\u8fd9\u91cc\u91cd\u70b9\u8bb2\u4e00\u4e0bsystem_heap\u7684\u5206\u914d\u4e0e\u91ca\u653e\uff0c\u5176\u4ed6\u7c7b\u578b\u7684heap\u7559\u7ed9\u8bfb\u8005\u81ea\u5df1\u53bb\u7814\u7a76\u3002</p>"},{"location":"linux/kernel/ion/#_3","title":"\u4e0d\u8fde\u7eed\u5185\u5b58","text":"<p>\u6e90\u7801\u4f4d\u4e8e&lt;drivers/staging/android/ion/ion_system_heap.c&gt;</p> <p>system_heap\u7ba1\u7406\u7740\u4e09\u79cd\u7c7b\u578b\u7684\u5185\u5b58\u5757\uff1a <code>static const unsigned int orders[] = {8, 4, 0};</code></p> <p>\u8fd9\u91cc\u76848\u30014\u30010\u4ee3\u8868\u7684\u662f\u9875\u7684\u6570\u91cf\uff0c\u4e00\u9875\u4e3a4KB\uff1a</p> <pre><code>$ cat /sys/kernel/debug/ion/heaps/system\n\n          client              pid             size\n----------------------------------------------------\n----------------------------------------------------\nallocations (info is from last known client):\n----------------------------------------------------\n  total orphaned                0\n          total                 0\n   deferred free                0\n----------------------------------------------------\n0 order 8 highmem pages in pool = 0 total\n0 order 8 lowmem pages in pool = 0 total\n0 order 4 highmem pages in pool = 0 total\n0 order 4 lowmem pages in pool = 0 total\n0 order 0 highmem pages in pool = 0 total\n0 order 0 lowmem pages in pool = 0 total\n</code></pre> <ol> <li> <p>\u5206\u914d\uff1a</p> <pre><code>static int ion_system_heap_allocate(struct ion_heap *heap,\n                    struct ion_buffer *buffer,\n                    unsigned long size,\n                    unsigned long flags)\n{\n    struct ion_system_heap *sys_heap = container_of(heap,\n                            struct ion_system_heap,\n                            heap);\n    struct sg_table *table;\n    struct scatterlist *sg;\n    struct list_head pages;\n    struct page *page, *tmp_page;\n    int i = 0;\n    unsigned long size_remaining = PAGE_ALIGN(size);\n    unsigned int max_order = orders[0];\n\n    if (size / PAGE_SIZE &gt; totalram_pages() / 2)\n        return -ENOMEM;\n\n    INIT_LIST_HEAD(&amp;pages);\n    while (size_remaining &gt; 0) {\n\n        //\u6838\u5fc3\u5206\u914d\u51fd\u6570\n        page = alloc_largest_available(sys_heap, buffer, size_remaining,\n                        max_order);\n        if (!page)\n            goto free_pages;\n        list_add_tail(&amp;page-&gt;lru, &amp;pages);\n        size_remaining -= page_size(page);\n        max_order = compound_order(page);\n        i++;\n    }\n\n    //\u4f7f\u7528sg_table\u6765\u7ba1\u7406\u5206\u6563\u7684\u5185\u5b58\u5757\n    table = kmalloc(sizeof(*table), GFP_KERNEL);\n    if (!table)\n        goto free_pages;\n\n    if (sg_alloc_table(table, i, GFP_KERNEL))\n        goto free_table;\n\n    sg = table-&gt;sgl;\n\n    //\u5c06\u5185\u5b58\u5757\u4e0escatterlist\u5173\u8054\uff0c\u5e76\u4ecebuddy\u4e2d\u5220\u9664\n    list_for_each_entry_safe(page, tmp_page, &amp;pages, lru) {\n        sg_set_page(sg, page, page_size(page), 0);\n        sg = sg_next(sg);\n        list_del(&amp;page-&gt;lru);\n    }\n\n    buffer-&gt;sg_table = table;\n    return 0;\n\nfree_table:\n    kfree(table);\nfree_pages:\n    list_for_each_entry_safe(page, tmp_page, &amp;pages, lru)\n        free_buffer_page(sys_heap, buffer, page);\n    return -ENOMEM;\n}\n</code></pre> </li> </ol> <p><code>alloc_largest_available()</code>\u51fd\u6570\uff1a</p> <pre><code>static struct page *alloc_largest_available(struct ion_system_heap *heap,\n                        struct ion_buffer *buffer,\n                        unsigned long size,\n                        unsigned int max_order)\n{\n    struct page *page;\n    int i;\n\n    //\u6bcf\u6b21\u627e\u5230\u5c0f\u4e8e\u5206\u914dsize\u7684\u6700\u5927order\n    for (i = 0; i &lt; num_orders; i++) {\n        if (size &lt; order_to_size(orders[i]))\n            continue;\n        if (max_order &lt; orders[i])\n            continue;\n\n        //\u5148\u4ecepool\u4e2d\u5206\u914d\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u4ecebuddy\u4e2d\u5206\u914d\n        page = alloc_buffer_page(heap, buffer, orders[i]);\n        if (!page)\n            continue;\n\n        return page;\n    }\n\n    return NULL;\n}\n</code></pre> <p><code>alloc_buffer_page()</code>\u51fd\u6570\uff1a</p> <pre><code>static struct page *alloc_buffer_page(struct ion_system_heap *heap,\n                      struct ion_buffer *buffer,\n                      unsigned long order)\n{\n    bool cached = ion_buffer_cached(buffer);\n    struct ion_page_pool *pool = heap-&gt;pools[order_to_index(order)];\n    struct page *page;\n\n    //system_heap\u6709cached\u548cuncached\u4e24\u79cd\u7c7b\u578b\uff0c\u5bf9\u5e94\u4e0d\u540c\u7684pool\n    if (!cached) {\n        page = ion_page_pool_alloc(pool);\n    } else {\n        gfp_t gfp_flags = low_order_gfp_flags;\n\n        if (order &gt; 4)\n            gfp_flags = high_order_gfp_flags;\n        page = alloc_pages(gfp_flags | __GFP_COMP, order);\n        if (!page)\n            return NULL;\n        ion_pages_sync_for_device(NULL, page, PAGE_SIZE &lt;&lt; order,\n                        DMA_BIDIRECTIONAL);\n    }\n\n    return page;\n}\n</code></pre> <p><code>ion_page_pool_alloc()</code>\u51fd\u6570\uff1a</p> <pre><code>struct page *ion_page_pool_alloc(struct ion_page_pool *pool)\n{\n    struct page *page = NULL;\n\n    BUG_ON(!pool);\n\n    mutex_lock(&amp;pool-&gt;mutex);\n\n    //\u5148\u4ecehigh\u4e2d\u5206\u914d\uff0c\u518d\u4ecelow\u4e2d\u5206\u914d\n    if (pool-&gt;high_count)\n        page = ion_page_pool_remove(pool, true);\n    else if (pool-&gt;low_count)\n        page = ion_page_pool_remove(pool, false);\n    mutex_unlock(&amp;pool-&gt;mutex);\n\n    //\u5982\u679c\u5206\u914d\u5931\u8d25\uff0c\u5219\u4ecebuddy\u4e2d\u5206\u914d\n    if (!page)\n        page = ion_page_pool_alloc_pages(pool);\n\n    return page;\n}\n</code></pre> <p><code>ion_page_pool_alloc_pages()</code>\u51fd\u6570\uff1a</p> <pre><code>static void *ion_page_pool_alloc_pages(struct ion_page_pool *pool)\n{\n    struct page *page = alloc_pages(pool-&gt;gfp_mask, pool-&gt;order);\n\n    if (!page)\n        return NULL;\n    return page;\n}\n</code></pre> <p>\u81f3\u6b64\uff0csystem_heap\u7684\u5206\u914d\u6d41\u7a0b\u7ed3\u675f\u3002</p> <ol> <li> <p>\u91ca\u653e\uff1a</p> <pre><code>static void ion_system_heap_free(struct ion_buffer *buffer)\n{\n    struct ion_system_heap *sys_heap = container_of(buffer-&gt;heap,\n                            struct ion_system_heap,\n                            heap);\n    struct sg_table *table = buffer-&gt;sg_table;\n    struct scatterlist *sg;\n    int i;\n\n    /* zero the buffer before goto page pool */\n    if (!(buffer-&gt;private_flags &amp; ION_PRIV_FLAG_SHRINKER_FREE))\n        ion_heap_buffer_zero(buffer);\n\n    for_each_sgtable_sg(table, sg, i)\n\n        //\u6838\u5fc3\u91ca\u653e\u5185\u5b58\u7684\u51fd\u6570\n        free_buffer_page(sys_heap, buffer, sg_page(sg));\n    sg_free_table(table);\n    kfree(table);\n}\n</code></pre> </li> </ol> <p><code>free_buffer_page()</code>\u51fd\u6570\uff1a</p> <pre><code>static void free_buffer_page(struct ion_system_heap *heap,\n                 struct ion_buffer *buffer, struct page *page)\n{\n    unsigned int order = compound_order(page);\n    bool cached = ion_buffer_cached(buffer);\n\n    if (!cached &amp;&amp; !(buffer-&gt;private_flags &amp; ION_PRIV_FLAG_SHRINKER_FREE)) {\n        struct ion_page_pool *pool = heap-&gt;pools[order_to_index(order)];\n\n        //\u8fd4\u8fd8\u7ed9pool\n        ion_page_pool_free(pool, page);\n    } else {\n\n        //\u8fd4\u56de\u7ed9buddy\n        __free_pages(page, order);\n    }\n}\n</code></pre>"},{"location":"linux/kernel/ion/#_4","title":"\u8fde\u7eed\u5185\u5b58","text":"<p>\u6e90\u7801\u4f4d\u4e8e&lt;drivers/staging/android/ion/ion_system_heap.c&gt;</p> <ol> <li> <p>\u5206\u914d\uff1a</p> <pre><code>static int ion_system_contig_heap_allocate(struct ion_heap *heap,\n                    struct ion_buffer *buffer,\n                    unsigned long len,\n                    unsigned long flags)\n{\n    int order = get_order(len);\n    struct page *page;\n    struct sg_table *table;\n    unsigned long i;\n    int ret;\n\n    //\u76f4\u63a5\u4ecebuddy\u4e2d\u5206\u914d\u5185\u5b58\u9875\n    //\u5206\u914d\u7684\u5185\u5b58\u9875\u662f\u53ef\u80fd\u6bd4\u5b9e\u9645\u8bf7\u6c42\u7684\u5927\u7684\uff0c\u6bd4\u5982\u7533\u8bf7len\u662f3\u4e2apage\u5927\u5c0f\uff0c\u90a3\u4e48order\u5c31\u4e3a2\uff0c\u5b9e\u9645\u7533\u8bf7\u4e864\u4e2apage\n    page = alloc_pages(low_order_gfp_flags, order);\n    if (!page)\n        return -ENOMEM;\n\n    //\u5c06\u7533\u8bf7\u5230\u7684\u8fde\u7eed\u5185\u5b58\u9875\u5206\u5272\u6210\u4e00\u9875\u9875\n    split_page(page, order);\n\n    //\u7531\u4e8e\u5728\u5206\u914d\u65f6\u53ef\u80fd\u591a\u5206\u914d\uff0c\u56e0\u6b64\u9700\u8981\u5c06\u591a\u4f59\u7684page\u91ca\u653e\u56de\u53bb\u3002\u6bd4\u5982\u7533\u8bf73\u4e2apage\uff0c\u5b9e\u9645\u5206\u914d\u4e864\u4e2a\n    len = PAGE_ALIGN(len);\n    for (i = len &gt;&gt; PAGE_SHIFT; i &lt; (1 &lt;&lt; order); i++)\n        __free_page(page + i);\n\n    //\u63a5\u7740\u7533\u8bf7sg_table\n    table = kmalloc(sizeof(*table), GFP_KERNEL);\n    if (!table) {\n        ret = -ENOMEM;\n        goto free_pages;\n    }\n\n    //\u7531\u4e8e\u662f\u8fde\u7eed\u7684\u5185\u5b58\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u7533\u8bf7\u4e00\u4e2ascatterlist\n    ret = sg_alloc_table(table, 1, GFP_KERNEL);\n    if (ret)\n        goto free_table;\n\n    //\u5c06\u8fde\u7eed\u5185\u5b58\u9996\u9875\u5730\u5740\u5b58\u5230sg_table\u4e2d\n    sg_set_page(table-&gt;sgl, page, len, 0);\n\n    buffer-&gt;sg_table = table;\n\n    return 0;\n\nfree_table:\n    kfree(table);\nfree_pages:\n    for (i = 0; i &lt; len &gt;&gt; PAGE_SHIFT; i++)\n        __free_page(page + i);\n\n    return ret;\n}\n</code></pre> </li> <li> <p>\u91ca\u653e\uff1a</p> <pre><code>static void ion_system_contig_heap_free(struct ion_buffer *buffer)\n{\n    struct sg_table *table = buffer-&gt;sg_table;\n    struct page *page = sg_page(table-&gt;sgl);\n    unsigned long pages = PAGE_ALIGN(buffer-&gt;size) &gt;&gt; PAGE_SHIFT;\n    unsigned long i;\n\n    //\u91ca\u653e\u65f6\u5c31\u76f4\u63a5\u5c06\u5185\u5b58\u9875\u5f52\u8fd8\u7ed9buddy\uff0c__free_page\u662fbuddy system\u7684\u63a5\u53e3\n    for (i = 0; i &lt; pages; i++)\n        __free_page(page + i);\n    sg_free_table(table);\n    kfree(table);\n}\n</code></pre> </li> </ol>"},{"location":"linux/kernel/ion/#_5","title":"\u4fdd\u7559\u533a\u5185\u5b58","text":"<ol> <li> <p>\u5206\u914d\uff1a</p> <pre><code>static int ion_carveout_heap_allocate(struct ion_heap *heap,\n                    struct ion_buffer *buffer,\n                    unsigned long size, unsigned long align,\n                    unsigned long flags)\n{\n    struct sg_table *table;\n    phys_addr_t paddr;\n    int ret;\n\n    if (align &gt; PAGE_SIZE) {\n        pr_err(\"%s: align should &lt;= page size\\n\", __func__);\n        return -EINVAL;\n    }\n\n    table = kmalloc(sizeof(struct sg_table), GFP_KERNEL);\n    if (!table)\n        return -ENOMEM;\n\n    ret = sg_alloc_table(table, 1, GFP_KERNEL);\n    if (ret) {\n        pr_err(\"%s: sg alloc table failed\\n\", __func__);\n        goto err_free;\n    }\n\n    paddr = ion_carveout_allocate(heap, size, align);\n    if (paddr == ION_CARVEOUT_ALLOCATE_FAIL) {\n        ret = -ENOMEM;\n        goto err_free_table;\n    }\n\n    sg_set_page(table-&gt;sgl, pfn_to_page(PFN_DOWN(paddr)), size, 0);\n    buffer-&gt;priv_virt = table;\n\n    if (buffer-&gt;flags &amp; ION_FLAG_INITIALIZED) {\n        ion_heap_buffer_zero_ex(table, buffer-&gt;flags);\n    }\n\n    return 0;\n\nerr_free_table:\n    sg_free_table(table);\nerr_free:\n    kfree(table);\n    return ret;\n}\n</code></pre> </li> <li> <p>\u91ca\u653e\uff1a</p> <pre><code>static void ion_carveout_heap_free(struct ion_buffer *buffer)\n{\n    struct ion_heap *heap = buffer-&gt;heap;\n    struct sg_table *table = buffer-&gt;priv_virt;\n    struct page *page = sg_page(table-&gt;sgl);\n    phys_addr_t paddr = PFN_PHYS(page_to_pfn(page));\n\n    ion_heap_buffer_zero(buffer);\n\n    if (ion_buffer_cached(buffer)) {\n        dma_sync_sg_for_device(NULL, table-&gt;sgl, table-&gt;nents,\n                            DMA_BIDIRECTIONAL);\n        __flush_dcache_area(phys_to_virt(paddr), buffer-&gt;size);\n    }\n\n    ion_carveout_free(heap, paddr, buffer-&gt;size);\n    sg_free_table(table);\n    kfree(table);\n}\n</code></pre> </li> </ol>"},{"location":"linux/kernel/ion/#cma","title":"CMA\u5185\u5b58","text":"<p>\u6e90\u7801\u4f4d\u4e8e&lt;drivers/staging/android/ion/ion_cma_heap.c&gt;</p> <ol> <li> <p>\u5206\u914d\uff1a</p> <pre><code>static int ion_cma_allocate(struct ion_heap *heap, struct ion_buffer *buffer,\n                unsigned long len,\n                unsigned long flags)\n{\n    struct ion_cma_heap *cma_heap = to_cma_heap(heap);\n    struct sg_table *table;\n    struct page *pages;\n    unsigned long size = PAGE_ALIGN(len);\n    unsigned long nr_pages = size &gt;&gt; PAGE_SHIFT;\n    unsigned long align = get_order(size);\n    int ret;\n\n    if (align &gt; CONFIG_CMA_ALIGNMENT)\n        align = CONFIG_CMA_ALIGNMENT;\n\n    pages = cma_alloc(cma_heap-&gt;cma, nr_pages, align, false);\n    if (!pages)\n        return -ENOMEM;\n\n    if (PageHighMem(pages)) {\n        unsigned long nr_clear_pages = nr_pages;\n        struct page *page = pages;\n\n        while (nr_clear_pages &gt; 0) {\n            void *vaddr = kmap_atomic(page);\n\n            memset(vaddr, 0, PAGE_SIZE);\n            kunmap_atomic(vaddr);\n            page++;\n            nr_clear_pages--;\n        }\n    } else {\n        memset(page_address(pages), 0, size);\n    }\n\n    table = kmalloc(sizeof(*table), GFP_KERNEL);\n    if (!table)\n        goto err;\n\n    ret = sg_alloc_table(table, 1, GFP_KERNEL);\n    if (ret)\n        goto free_mem;\n\n    sg_set_page(table-&gt;sgl, pages, size, 0);\n\n    buffer-&gt;priv_virt = pages;\n    buffer-&gt;sg_table = table;\n    return 0;\n\nfree_mem:\n    kfree(table);\nerr:\n    cma_release(cma_heap-&gt;cma, pages, nr_pages);\n    return -ENOMEM;\n}\n</code></pre> </li> <li> <p>\u91ca\u653e\uff1a</p> <pre><code>static void ion_cma_free(struct ion_buffer *buffer)\n{\n    struct ion_cma_heap *cma_heap = to_cma_heap(buffer-&gt;heap);\n    struct page *pages = buffer-&gt;priv_virt;\n    unsigned long nr_pages = PAGE_ALIGN(buffer-&gt;size) &gt;&gt; PAGE_SHIFT;\n\n    /* release memory */\n    cma_release(cma_heap-&gt;cma, pages, nr_pages);\n    /* release sg table */\n    sg_free_table(buffer-&gt;sg_table);\n    kfree(buffer-&gt;sg_table);\n}\n</code></pre> </li> </ol> <p>ION\u5185\u5b58\u5206\u914d\u7684\u603b\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"linux/kernel/ion/#libion","title":"\u4f7f\u7528libion","text":"<p>libion\u5e93\u662f\u5bf9\u5e95\u5c42ion_ioctl()\u7684\u5c01\u88c5\uff0c\u8c37\u6b4c\u63a8\u8350\u4f7f\u7528libion\u5e93\u800c\u4e0d\u662f\u64cd\u4f5cion_ioctl()\u51fd\u6570\u3002</p>"},{"location":"linux/kernel/ion/#_6","title":"\u6570\u636e\u7ed3\u6784","text":"<pre><code>struct ion_allocation_data {\n    uint64_t len;\n    uint64_t align;\n    unsigned int heap_mask;\n    unsigned int flags;\n    ion_user_handle_t handle;\n    ion_share_handle_t sh_handle;\n};\nstruct ion_fd_data {\n    ion_user_handle_t handle;\n    int fd;\n};\nstruct ion_handle_data {\n    ion_user_handle_t handle;\n};\nstruct ion_share_handle_data {\n    ion_user_handle_t handle;\n    int64_t flags;\n    ion_share_handle_t sh_handle;\n};\n\n/**\n * struct ion_share_info_data - a handle passed to/from the kernel\n * @handle: a handle\n */\nstruct ion_share_info_data {\n    ion_user_handle_t handle;\n    int64_t timeout;\n    int32_t target_client_cnt;\n    int32_t cur_client_cnt;\n};\n</code></pre> <p>API\u63a5\u53e3</p> <pre><code>int32_t ion_open(void);\nint32_t ion_close(int32_t fd);\nint32_t ion_alloc(int32_t fd, size_t len, size_t align, uint32_t heap_mask,\n            uint32_t flags, ion_user_handle_t *handle);\nint32_t ion_alloc_fd(int32_t fd, size_t len, size_t align, uint32_t heap_mask,\n            uint32_t flags, int32_t *handle_fd);\nint32_t ion_sync_fd(int32_t fd, int32_t handle_fd);\nint32_t ion_free(int32_t fd, ion_user_handle_t handle);\nint32_t ion_map(int32_t fd, ion_user_handle_t handle, size_t length, int32_t prot,\n            int32_t flags, off_t offset, unsigned char **ptr, int32_t *map_fd);\nint32_t ion_share(int32_t fd, ion_user_handle_t handle, int32_t *share_fd);\nint32_t ion_import(int32_t fd, int32_t share_fd, ion_user_handle_t *handle);\nint32_t ion_phys(int32_t fd, ion_user_handle_t handle, void **paddr, size_t *len);\nint32_t ion_cache_invalid(int32_t fd, ion_user_handle_t handle, void *paddr, void *vaddr, size_t len);\nint32_t ion_cache_flush(int32_t fd, ion_user_handle_t handle, void *paddr, void *vaddr, size_t len);\nint32_t ion_memcpy(int32_t fd, ion_user_handle_t handle, void *dst_paddr, void *src_paddr, size_t len);\n</code></pre> <p>\u5bf9\u4e8e\u4f7f\u7528\u8005\u6765\u8bf4\uff0c\u4e3b\u8981\u5173\u5fc3\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a</p> <ul> <li>\u6253\u5f00\u4e0e\u5173\u95ed</li> <li>\u5206\u914d\u4e0e\u91ca\u653e\u5185\u5b58</li> <li>\u6620\u5c04\u4e0e\u5171\u4eab</li> </ul>"},{"location":"linux/kernel/ion/#_7","title":"\u6253\u5f00\u4e0e\u5173\u95ed","text":"<p>\u4e0eION\u4ea4\u4e92\u9700\u8981\u6253\u5f00/\u5173\u95ed/dev/ion\uff0c\u8fd4\u56de\u7684\u5f62\u5f0f\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26fd\uff0c\u5f80\u540e\u7684\u64cd\u4f5c\u90fd\u9700\u8981\u7528\u5230\u8fd9\u4e2afd\u3002</p> <pre><code>int32_t ion_open(void)\n{\n    int32_t fd = open(\"/dev/ion\", O_RDWR);\n    if (fd &lt; 0) {\n        (void)printf(\"%s open /dev/ion failed!\\n\", LOG_TAG);\n    }\n\n    return fd;\n}\n\nint32_t ion_close(int32_t fd)\n{\n    return close(fd);\n}\n</code></pre>"},{"location":"linux/kernel/ion/#_8","title":"\u5206\u914d\u4e0e\u91ca\u653e","text":"<p>\u8be5\u51fd\u6570\u6839\u636e\u4f20\u5165\u7684heap_mask\u53bb\u5bfb\u627e\u5408\u9002\u7684heap\uff0c\u7136\u540e\u5206\u914dbuffer\u5185\u5b58\u5757\uff0c\u5176\u4e2d\u53c2\u6570handle\u5fc5\u987b\u8981\u8bbe\u7f6e\uff0c\u8fd9\u662f\u7531\u5185\u6838\u7a7a\u95f4\u8fd4\u56de\u7ed9\u7528\u6237\u7684\u64cd\u4f5cION\u5185\u5b58\u7684\u53e5\u67c4\u3002</p> <pre><code>int32_t ion_alloc(int32_t fd, size_t len, size_t align, uint32_t heap_mask,\n          uint32_t flags, ion_user_handle_t *handle)\n{\n    int32_t ret;\n    if (handle == NULL) {\n        (void)printf(\"%s Invalid handle!\\n\", LOG_TAG);\n        return -EINVAL;\n    }\n\n    struct ion_allocation_data data = {\n        .len = len,\n        .align = align,\n        .heap_mask = heap_mask,\n        .flags = flags,\n    };\n\n    ret = ion_ioctl(fd, ION_IOC_ALLOC, (void *)&amp;data);\n    if (ret &lt; 0) {\n        (void)printf(\"%s Failed to do ION_IOC_ALLOC(ret=%d)!\\n\", LOG_TAG, ret);\n        return ret;\n    }\n\n    *handle = data.handle;\n    return ret;\n}\n</code></pre> <p>\u8be5\u51fd\u6570\u6839\u636e\u4f20\u5165\u7684handle\uff0c\u91ca\u653e\u5bf9\u5e94\u7684buffer\u3002</p> <pre><code>int32_t ion_free(int32_t fd, ion_user_handle_t handle)\n{\n    struct ion_handle_data data = {\n        .handle = handle,\n    };\n    return ion_ioctl(fd, ION_IOC_FREE, (void *)&amp;data);\n}\n</code></pre>"},{"location":"linux/kernel/ion/#_9","title":"\u6620\u5c04","text":"<p>\u8be5\u51fd\u6570\u901a\u8fc7\u4f20\u5165\u7684handle\u627e\u5230\u5bf9\u5e94\u7684buffer\uff0c\u5e76\u5c06\u5176\u6620\u5c04\u5230\u7528\u6237\u7a7a\u95f4\uff0cptr\u6307\u5411\u6620\u5c04\u533a\u57df\u7684\u5730\u5740\u3002</p> <pre><code>int32_t ion_map(int32_t fd, ion_user_handle_t handle, size_t length, int32_t prot,\n            int32_t flags, off_t offset, unsigned char **ptr, int32_t *map_fd)\n{\n    int32_t ret;\n    struct ion_fd_data data = {\n        .handle = handle,\n    };\n\n    if (map_fd == NULL) {\n        (void)printf(\"%s Invalid map_fd!\\n\", LOG_TAG);\n        return -EINVAL;\n    }\n    if (ptr == NULL) {\n        (void)printf(\"%s Invalid ptr!\\n\", LOG_TAG);\n        return -EINVAL;\n    }\n\n    ret = ion_ioctl(fd, ION_IOC_MAP, (void *)&amp;data);\n    if (ret &lt; 0) {\n        (void)printf(\"%s map ioctl returned failed,handle[%ld](ret=%d)\\n\",\n            LOG_TAG, handle, ret);\n        return ret;\n    }\n    *map_fd = data.fd;\n    if (*map_fd &lt; 0) {\n        (void)printf(\"%s map ioctl returned negative fd\\n\", LOG_TAG);\n        return -EINVAL;\n    }\n    *ptr = mmap(NULL, length, prot, flags, *map_fd, offset);\n    if (*ptr == MAP_FAILED) {\n        (void)printf(\"%s ion mmap failed(ret=%d)\\n\", LOG_TAG, -errno);\n        return -errno;\n    }\n    return ret;\n}\n</code></pre>"},{"location":"linux/kernel/ion/#_10","title":"\u5171\u4eab","text":"<p>\u8be5\u51fd\u6570\u901a\u8fc7\u521b\u5efa\u4e00\u4e2ashare_fd\uff0c\u5b9e\u73b0\u5bf9\u540c\u4e00\u4e2abuffer\u7684\u5171\u4eab\u3002</p> <pre><code>int32_t ion_share(int32_t fd, ion_user_handle_t handle, int32_t *share_fd)\n{\n    int32_t ret;\n    struct ion_fd_data data = {\n        .handle = handle,\n    };\n    if (share_fd == NULL) {\n        (void)printf(\"%s Invalid share_fd!\\n\", LOG_TAG);\n        return -EINVAL;\n    }\n\n    ret = ion_ioctl(fd, ION_IOC_SHARE, (void *)&amp;data);\n    if (ret &lt; 0) {\n        (void)printf(\"%s Failed to do ION_IOC_SHARE(ret=%d)!\\n\", LOG_TAG, ret);\n        return ret;\n    }\n    *share_fd = data.fd;\n    if (*share_fd &lt; 0) {\n        (void)printf(\"%s share ioctl returned negative fd\\n\", LOG_TAG);\n        return -EINVAL;\n    }\n    return ret;\n}\n</code></pre>"},{"location":"linux/kernel/ipc/","title":"\u8fdb\u7a0b\u95f4\u901a\u4fe1","text":"<p>\u8fdb\u7a0b\u4e4b\u95f4\u7684\u5730\u5740\u7a7a\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u8981\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u9700\u8981\u7279\u6b8a\u7684\u673a\u5236\u3002</p>"},{"location":"linux/kernel/ipc/#_2","title":"\u7ba1\u9053","text":"<p>\u4e0b\u9762\u7684\u8bed\u53e5\u521b\u5efa\u4e24\u4e2a\u8fdb\u7a0b\uff0c\u5e76\u7528\u7ba1\u9053\u628a\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\u8fde\u63a5\u5728\u4e00\u8d77\u3002</p> <pre><code>$ ps aux | grep kworker\n</code></pre> <p>\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6807\u51c6\u8f93\u51fa\u88ab\u91cd\u5b9a\u5411\u5230\u7ba1\u9053\u4e2d\uff0c\u7b2c\u4e8c\u4e2a\u8fdb\u7a0b\u4ece\u8fd9\u4e2a\u7ba1\u9053\u8bfb\u53d6\u8f93\u5165\u3002</p> <p>\u901a\u8fc7\u7ba1\u9053\u4f20\u9012\u7684\u6570\u636e\u662f\u987a\u5e8f\u7684\uff0c\u4e5f\u5c31\u662f\u8bfb\u548c\u5199\u7684\u987a\u5e8f\u4e00\u81f4\u3002\u4ece\u7ba1\u9053\u4e2d\u8bfb\u53d6\u6570\u636e\u662f\u4e00\u6b21\u6027\u64cd\u4f5c\uff0c\u8bfb\u5b8c\u4e86\u7a7a\u95f4\u5c31\u88ab\u91ca\u653e\u4e86\u3002</p> <p>\u4e0a\u9762\u8fd9\u79cd\u7ba1\u9053\u7531\u4e8e\u6ca1\u6709\u540d\u5b57\uff0c\u53c8\u53eb\u505a\u533f\u540d\u7ba1\u9053\u3002</p> <p>\u533f\u540d\u7ba1\u9053\u7684\u521b\u5efa\u9700\u8981\u7ecf\u8fc7\u4ee5\u4e0b\u8fd9\u4e2a\u51fd\u6570\uff1a</p> <pre><code>int pipe(int fd[2]);\n</code></pre> <p></p> <p>fd[0]\u4ee3\u8868\u7ba1\u9053\u7684\u8bfb\u7aef\uff0cfd[1]\u4ee3\u8868\u7ba1\u9053\u7684\u5199\u7aef\u3002</p> <p>\u533f\u540d\u7ba1\u9053\u53ef\u4ee5\u7528\u4e8e\u7236\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c<code>fork()</code>\u51fd\u6570\u521b\u5efa\u7684\u5b50\u8fdb\u7a0b\u4f1a\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u8fd9\u6837\u6bcf\u4e2a\u8fdb\u7a0b\u5c31\u90fd\u6709fd[0]\u548cfd[1]\u4e24\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u7531\u4e8e\u7ba1\u9053\u53ea\u80fd\u4e00\u7aef\u8bfb\uff0c\u4e00\u7aef\u5199\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\uff1a</p> <ul> <li>\u7236\u8fdb\u7a0b\u5173\u95edfd[0]\uff0c\u53ea\u4fdd\u7559fd[1]</li> <li>\u5b50\u8fdb\u7a0b\u5173\u95edfd[1]\uff0c\u53ea\u4fdd\u7559fd[0]</li> </ul> <p>\u8fd9\u6837\u7236\u5b50\u8fdb\u7a0b\u5c31\u53ef\u4ee5\u901a\u8fc7\u533f\u540d\u7ba1\u9053\u901a\u4fe1\u4e86\u3002</p> <p></p> <p>\u8fd8\u6709\u4e00\u79cd\u7ba1\u9053\u53eb\u6709\u540d\u7ba1\u9053\u3002\u5b83\u4ee5\u4e00\u79cd\u7279\u6b8a\u7684\u6587\u4ef6\u5f62\u5f0f\u5b58\u653e\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u8fd9\u6837\u4e24\u4e2a\u6ca1\u6709\u4eb2\u7f18\u5173\u7cfb\u7684\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee\u8fd9\u4e2a\u7279\u6b8a\u6587\u4ef6\u7684\u65b9\u5f0f\u6765\u8fdb\u884c\u901a\u4fe1\u3002</p> <p>\u521b\u5efa\u6709\u540d\u7ba1\u9053\u9700\u8981\u7528\u5230\u8fd9\u4e2a\u51fd\u6570\uff1a</p> <pre><code>int mkfifo(const char *pathname, mode_t mode);\n</code></pre> <p>Note</p> <p>\u5bf9\u4e8e\u6709\u540d\u7ba1\u9053\u7684\u8bfb\u3001\u5199\u64cd\u4f5c\u90fd\u4f1a\u963b\u585e\u8fdb\u7a0b\u3002</p> <p>\u4e0d\u8bba\u662f\u533f\u540d\u7ba1\u9053\u8fd8\u662f\u6709\u540d\u7ba1\u9053\uff0c\u5176\u6570\u636e\u90fd\u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u9075\u5faa\u5148\u8fdb\u5148\u51fa\u7684\u539f\u5219\u3002</p>"},{"location":"linux/kernel/ipc/#_3","title":"\u6d88\u606f\u961f\u5217","text":"<p>\u6d88\u606f\u961f\u5217\u7684\u901a\u8baf\u65b9\u5f0f\u5c31\u50cf\u90ae\u4ef6\uff0c\u53d1\u9001\u6570\u636e\u65f6\uff0c\u4f1a\u5206\u6210\u4e00\u4e2a\u4e2a\u72ec\u7acb\u7684\u6570\u636e\u5355\u5143\uff0c\u4e5f\u5c31\u662f\u6d88\u606f\u4f53\uff0c\u6bcf\u4e2a\u6d88\u606f\u4f53\u90fd\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\u5b58\u50a8\u5757\uff0c\u5728\u5b57\u8282\u6d41\u4e0a\u4e0d\u8fde\u7eed\u3002\u6d88\u606f\u4f53\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>struct msg_buffer {\n  long mtype;       \n  char mtext[1024];   \n};\n</code></pre> <p>\u4f7f\u7528\u6d88\u606f\u961f\u5217\u524d\u9700\u8981\u5148\u8c03\u7528<code>ftok()</code>\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4f1a\u6839\u636e\u6587\u4ef6\u7684<code>inode</code>\u751f\u6210\u4e00\u4e2a\u552f\u4e00\u7684key\u3002\u53ea\u8981\u5728\u8fd9\u4e2a\u6d88\u606f\u961f\u5217\u7684\u751f\u547d\u5468\u671f\u5185\uff0c\u8fd9\u4e2a\u6587\u4ef6\u4e0d\u88ab\u5220\u9664\uff0c\u90a3\u4e48\u65e0\u8bba\u4ec0\u4e48\u65f6\u523b\uff0c\u518d\u8c03\u7528<code>ftok</code>\uff0c\u4e5f\u4f1a\u5f97\u5230\u540c\u6837\u7684key\u3002\u8fd9\u79cdkey\u7684\u4f7f\u7528\u65b9\u5f0f\u5728\u5176\u4ed6System V IPC\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\u4f53\u7cfb\u4e2d\u4e5f\u9002\u7528\u3002</p> <p>\u5e38\u7528\u51fd\u6570\uff1a</p> \u51fd\u6570\u540d \u8bf4\u660e msgget \u521b\u5efa\u6216\u8bbf\u95ee\u4e00\u4e2a\u6d88\u606f\u961f\u5217 msgsnd \u53d1\u9001\u4e00\u4e2a\u6d88\u606f msgrcv \u63a5\u6536\u4e00\u4e2a\u6d88\u606f msgctl \u63a7\u5236\u6d88\u606f\u961f\u5217"},{"location":"linux/kernel/ipc/#_4","title":"\u5171\u4eab\u5185\u5b58","text":"<p>\u5171\u4eab\u5185\u5b58\u662f\u4e00\u79cd\u9ad8\u6548\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u5141\u8bb8\u591a\u4e2a\u8fdb\u7a0b\u76f4\u63a5\u8bbf\u95ee\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\u3002</p> <p>\u5e38\u7528\u51fd\u6570\uff1a</p> \u51fd\u6570\u540d \u8bf4\u660e shmget \u521b\u5efa\u6216\u8bbf\u95ee\u4e00\u5757\u5171\u4eab\u5185\u5b58 shmat \u5c06\u5171\u4eab\u5185\u5b58\u8fde\u63a5\u5230\u5f53\u524d\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4 shmdt \u5c06\u5171\u4eab\u5185\u5b58\u4ece\u5f53\u524d\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u65ad\u5f00 shmctl \u63a7\u5236\u5171\u4eab\u5185\u5b58"},{"location":"linux/kernel/ipc/#_5","title":"\u4fe1\u53f7","text":"<p>\u4fe1\u53f7\u7684\u673a\u5236\u4e0e\u786c\u4ef6\u4e2d\u65ad\u975e\u5e38\u76f8\u4f3c\uff0c\u90fd\u662f\u5f02\u6b65\u5730\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\uff0c\u533a\u522b\u5728\u4e8e\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u662f\u5728\u5185\u6838\u6001\uff0c\u800c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u662f\u5728\u7528\u6237\u6001\u3002\u4fe1\u53f7\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u523b\u53d1\u9001\u7ed9\u4efb\u4f55\u4e00\u4e2a\u8fdb\u7a0b\u3002</p> <p>\u5728Linux\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u4e86\u54cd\u5e94\u5404\u79cd\u4e8b\u4ef6\u5b9a\u4e49\u4e86\u975e\u5e38\u591a\u7684\u4fe1\u53f7\u3002\u6bd4\u5982\u5f53\u6211\u4eec\u53d1\u9001<code>kill -9 ${pid}</code>\u65f6\uff0c\u5176\u5b9e\u5c31\u662f\u53d1\u9001SIGKILL\u4fe1\u53f7\u7ed9\u6307\u5b9a\u8fdb\u7a0b\uff0c\u5c06\u5b83\u6740\u6b7b\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>kill -l</code>\u547d\u4ee4\u67e5\u770b\u6240\u6709\u7684\u4fe1\u53f7\uff1a</p> <pre><code># kill -l\n 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL       5) SIGTRAP\n 6) SIGABRT      7) SIGBUS       8) SIGFPE       9) SIGKILL     10) SIGUSR1\n11) SIGSEGV     12) SIGUSR2     13) SIGPIPE     14) SIGALRM     15) SIGTERM\n16) SIGSTKFLT   17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP\n21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU     25) SIGXFSZ\n26) SIGVTALRM   27) SIGPROF     28) SIGWINCH    29) SIGIO       30) SIGPWR\n31) SIGSYS      34) SIGRTMIN    35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3\n38) SIGRTMIN+4  39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8\n43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13\n48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12\n53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7\n58) SIGRTMAX-6  59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2\n63) SIGRTMAX-1  64) SIGRTMAX\n</code></pre> <p>\u6bcf\u4e2a\u4fe1\u53f7\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684ID\u548c\u5176\u9ed8\u8ba4\u7684\u64cd\u4f5c\uff1a</p> <pre><code>Signal     Value     Action   Comment\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nSIGHUP        1       Term    Hangup detected on controlling terminal\n                              or death of controlling process\nSIGINT        2       Term    Interrupt from keyboard\nSIGQUIT       3       Core    Quit from keyboard\nSIGILL        4       Core    Illegal Instruction\n\n\nSIGABRT       6       Core    Abort signal from abort(3)\nSIGFPE        8       Core    Floating point exception\nSIGKILL       9       Term    Kill signal\nSIGSEGV      11       Core    Invalid memory reference\nSIGPIPE      13       Term    Broken pipe: write to pipe with no\n                              readers\nSIGALRM      14       Term    Timer signal from alarm(2)\nSIGTERM      15       Term    Termination signal\nSIGUSR1   30,10,16    Term    User-defined signal 1\nSIGUSR2   31,12,17    Term    User-defined signal 2\n...\n</code></pre> <p>\u8fdb\u7a0b\u5bf9\u4fe1\u53f7\u7684\u5904\u7406\u65b9\u5f0f\u6709\u4e09\u79cd\uff1a</p> <ol> <li>\u6267\u884c\u9ed8\u8ba4\u64cd\u4f5c\u3002</li> <li>\u6267\u884c\u81ea\u5b9a\u4e49\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002</li> <li>\u5ffd\u7565\u4fe1\u53f7\u3002</li> </ol> <p>Note</p> <p>\u6ce8\u610f\uff0cSIGKILL\u548cSIGSTOP\u4fe1\u53f7\u65e0\u6cd5\u5ffd\u7565\u3002</p> <p>Linux\u63a8\u8350\u4f7f\u7528<code>sigaction()</code>\u51fd\u6570\u6765\u81ea\u5b9a\u4e49\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002\u5b83\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>int sigaction(int signum, const struct sigaction *act, struct sigaction *oldact);\n</code></pre> <p>signum\uff1a\u8981\u5904\u7406\u7684\u4fe1\u53f7\u503c</p> <p>act\uff1a\u6307\u5411sigaction\u7ed3\u6784\u4f53\u7684\u6307\u9488\uff0c\u5b9a\u4e49\u4e86\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u548c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u7684\u9644\u52a0\u4fe1\u606f\uff0c\u82e5\u4e3a\u7a7a\u5219\u91c7\u7528\u7f3a\u7701\u65b9\u5f0f</p> <p>oldact\uff1a\u6307\u5411sigaction\u7ed3\u6784\u4f53\u7684\u6307\u9488\uff0c\u7528\u4e8e\u4fdd\u5b58\u539f\u6765\u5bf9\u4fe1\u53f7\u7684\u5904\u7406\u65b9\u5f0f</p> <p>\u800csigaction\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>struct sigaction {\n  __sighandler_t sa_handler;\n  unsigned long sa_flags;\n  __sigrestore_t sa_restorer;\n  sigset_t sa_mask;   \n};\n</code></pre> <p>\u5176\u4e2d<code>sa_handler</code>\u5c31\u662f\u4f60\u8981\u5b9a\u4e49\u7684\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002</p> <p>\u53d1\u9001\u4fe1\u53f7\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u53d1\u9001\u7ed9\u6574\u4e2a\u7ebf\u7a0b\u7ec4\u7684\uff0c\u8fd8\u6709\u4e00\u79cd\u662f\u53d1\u9001\u7ed9\u67d0\u4e2a\u5355\u72ec\u7ebf\u7a0b\u7684\u3002\u4fe1\u53f7\u5206\u4e3a\u4e0d\u53ef\u9760\u4fe1\u53f7\u548c\u53ef\u9760\u4fe1\u53f7\u3002\u5728<code>task_struct</code>\u4e2d\u6709\u4e00\u4e2a\u7ed3\u6784\u4f53<code>sigpending</code>\uff0c\u5b83\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>struct sigpending{\n    struct list_head list;\n    sigset_t signal;\n};\n</code></pre> <p>\u5bf9\u4e8e\u4e0d\u53ef\u9760\u4fe1\u53f7\uff0c\u4e5f\u5c31\u662f\u7f16\u53f7\u5c0f\u4e8e32\u7684\u4fe1\u53f7\uff0c\u4f1a\u653e\u5728<code>sigset_t signal</code>\u96c6\u5408\u4e2d\uff0c\u4e0d\u8bba\u53d1\u9001\u591a\u5c11\u6b21\uff0c\u5728\u88ab\u5904\u7406\u524d\u90fd\u53ea\u4f1a\u4fdd\u7559\u4e00\u4efd\u3002\u6240\u4ee5\u4e0d\u53ef\u9760\u4fe1\u53f7\u4f1a\u9020\u6210\u4fe1\u53f7\u7684\u4e22\u5931\u3002\u5bf9\u4e8e\u53ef\u9760\u4fe1\u53f7\uff0c\u5219\u4f1a\u6302\u5728<code>struct sigpending</code>\u7ed3\u6784\u4f53\u4e2d\u7684\u94fe\u8868\u91cc\u6328\u4e2a\u5904\u7406\u3002</p> <p>\u4e00\u65e6\u4fe1\u53f7\u6302\u5230\u4e86<code>task_struct</code>\u7ed3\u6784\u4f53\u4e2d\uff0c\u5c31\u4f1a\u8bbe\u7f6e\u4e00\u4e2aTIF_SIGPENDING\u6807\u5fd7\u4f4d\uff0c\u8868\u793a\u6709\u4fe1\u53f7\u7b49\u5f85\u5904\u7406\u3002\u7136\u540e\u5728\u7cfb\u7edf\u8c03\u7528\u7ed3\u675f\uff0c\u6216\u8005\u4e2d\u65ad\u5904\u7406\u7ed3\u675f\uff0c\u90fd\u4f1a\u68c0\u67e5\u8fd9\u4e2a\u6807\u5fd7\u4f4d\u3002\u5982\u679c\u8bbe\u7f6e\u4e86\uff0c\u5c31\u4f1a\u8c03\u7528<code>do_signal()</code>\u51fd\u6570\u6765\u5904\u7406\u4fe1\u53f7\u3002</p> <pre><code>static void exit_to_usermode_loop(struct pt_regs *regs, u32 cached_flags)\n{\n  while (true) {\n......\n    if (cached_flags &amp; _TIF_NEED_RESCHED)\n      schedule();\n......\n    /* deal with pending signal delivery */\n    if (cached_flags &amp; _TIF_SIGPENDING)\n      do_signal(regs);\n......\n    if (!(cached_flags &amp; EXIT_TO_USERMODE_LOOP_FLAGS))\n      break;\n  }\n}\n</code></pre> <p>\u4fe1\u53f7\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p>"},{"location":"linux/kernel/ipc/#netlink","title":"netlink","text":"<p>netlink\u662f\u4e00\u79cd\u7528\u6237\u6001\u548c\u5185\u6838\u6001\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u7684\u673a\u5236\uff0c\u5f53\u7136\u7528\u6237\u4e4b\u95f4\uff0c\u751a\u81f3\u5185\u6838\u4e4b\u95f4\u4e5f\u662f\u53ef\u4ee5\u901a\u4fe1\u7684\uff0c\u53ea\u4e0d\u8fc7\u8fd9\u4e0d\u662fnetlink\u7684\u4e3b\u8981\u4f7f\u7528\u573a\u666f\uff0c\u56e0\u6b64\u4e0d\u5728\u6b64\u8ba8\u8bba\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\u7684\u901a\u4fe1\u65b9\u5f0f\u6709\u4e09\u79cd\uff1a/proc\u3001ioctl\u3001netlink\u3002\u524d\u4e24\u79cd\u90fd\u662f\u5355\u5411\u7684\uff0c\u800cnetlink\u53ef\u4ee5\u5b9e\u73b0\u53cc\u5de5\u901a\u4fe1\u3002netlink\u57fa\u4e8esocket\u548cAF_NETLINK\u5730\u5740\u7c07\uff0c\u4f7f\u752832\u4f4d\u7684\u7aef\u53e3\u53f7\u5bfb\u5740\u3002</p> <p>netlink\u652f\u6301\u4e24\u79cd\u7c7b\u578b\u7684\u901a\u4fe1\u65b9\u5f0f\uff1a\u5355\u64ad\u548c\u591a\u64ad\u3002</p> <ul> <li>\u5355\u64ad\uff1a\u4e00\u4e2a\u7528\u6237\u8fdb\u7a0b\u5bf9\u5e94\u4e00\u4e2a\u5185\u6838\u8fdb\u7a0b\u3002</li> <li>\u591a\u64ad\uff1a\u591a\u4e2a\u7528\u6237\u8fdb\u7a0b\u5bf9\u5e94\u4e00\u4e2a\u5185\u6838\u8fdb\u7a0b\u3002\u5185\u6838\u4f1a\u521b\u5efa\u4e00\u4e2a\u591a\u64ad\u7ec4\uff0c\u7136\u540e\u5c06\u6709\u9700\u6c42\u7684\u7528\u6237\u8fdb\u7a0b\u52a0\u5165\u5230\u8be5\u7ec4\u4e2d\u6765\u63a5\u53d7\u5185\u6838\u6d88\u606f\u3002</li> </ul>"},{"location":"linux/kernel/ipc/#_6","title":"\u7528\u6237\u6001\u6570\u636e\u7ed3\u6784","text":"<pre><code>struct sockaddr_nl {\n    __kernel_sa_family_t    nl_family;  /* AF_NETLINK   */\n    unsigned short  nl_pad;     /* zero     */\n    __u32       nl_pid;     /* port ID  */\n  __u32     nl_groups;  /* multicast groups mask */\n};\n</code></pre> <ul> <li>nl_pid\uff1a\u5728netlink\u89c4\u8303\u4e2d\uff0cPID\u5168\u79f0\u4e3aPort-ID(32bits)\uff0c\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u57fa\u4e8enetlink\u7684socket\u901a\u9053\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\u8be5\u503c\u90fd\u4e3a\u8fdb\u7a0b\u7684PID\u53f7\uff0c\u5982\u679c\u8bbe\u7f6e\u4e3a0\uff0c\u5219\u8868\u793a\u5185\u6838\u3002</li> <li>nl_groups\uff1a\u5982\u679c\u7528\u6237\u7a7a\u95f4\u7684\u8fdb\u7a0b\u5e0c\u671b\u52a0\u5165\u67d0\u4e2a\u591a\u64ad\u7ec4\uff0c\u5219\u5fc5\u987b\u6267\u884c<code>bind()</code>\u7cfb\u7edf\u8c03\u7528\u3002\u8be5\u5b57\u6bb5\u6307\u660e\u4e86\u8c03\u7528\u8005\u5e0c\u671b\u52a0\u5165\u7684\u591a\u64ad\u7ec4\u53f7\u7684\u63a9\u7801\u3002\u5982\u679c\u4e3a0\uff0c\u5219\u8868\u793a\u4e0d\u5e0c\u671b\u52a0\u5165\u4efb\u4f55\u591a\u64ad\u7ec4\u3002</li> </ul> <p>netlink\u7684\u62a5\u6587\u7531\u6d88\u606f\u5934\u548c\u6d88\u606f\u4f53\u7ec4\u6210\uff0c<code>struct nlmsghdr</code>\u5373\u4e3a\u6d88\u606f\u5934\uff1a</p> <pre><code>struct nlmsghdr{\n    __u32 nlmsg_len;    // Length of message including header\n    __u16 nlmsg_type;   // Message content type\n    __u16 nlmsg_flags;  // Additional flags\n    __u32 nlmsg_seq;    // Sequence number\n    __u32 nlmsg_pid;    // Sending process ID\n}\n</code></pre> <p>\u5176\u4e2d<code>nlmsg_len</code>\u4e3a\u6574\u4e2a\u62a5\u6587\u7684\u957f\u5ea6\uff0c<code>nlmsg_type</code>\u4e3a\u6d88\u606f\u7c7b\u578b\uff0c<code>nlmsg_flags</code>\u4e3a\u9644\u52a0\u7684\u6807\u5fd7\u4f4d\uff0c<code>nlmsg_seq</code>\u4e3a\u62a5\u6587\u5e8f\u5217\u53f7\uff0c<code>nlmsg_pid</code>\u4e3a\u53d1\u9001\u8fdb\u7a0b\u7684ID\u3002</p>"},{"location":"linux/kernel/ipc/#api","title":"\u7528\u6237\u6001API","text":"<p>\u7528\u6237\u6001\u4f7f\u7528\u6807\u51c6\u7684socket API\uff0c\u5305\u62ec<code>socket()</code>, <code>bind()</code>, <code>sendmsg()</code>, <code>recvmsg()</code> \u548c <code>close()</code>\u5c31\u53ef\u4ee5\u4f7f\u7528netlink\u8fdb\u884c\u901a\u4fe1\u3002</p> <ol> <li>\u521b\u5efasocket\uff1a    <pre><code>int sockfd = socket(AF_NETLINK, SOCK_DGRAM, NETLINK_TYPE);\n</code></pre></li> <li> <p>\u8bbe\u7f6e<code>struct sockaddr_nl</code>\uff1a</p> <pre><code>struct sockaddr_nl addr;\naddr.nl_family = AF_NETLINK;\naddr.nl_pid = getpid();\naddr.nl_groups = 0;\n</code></pre> </li> <li> <p>\u7ed1\u5b9asocket\uff1a</p> <pre><code>bind(sockfd, (struct sockaddr*)&amp;addr, sizeof(addr));\n</code></pre> </li> <li> <p>\u53d1\u9001\u6d88\u606f\uff1a</p> <pre><code>struct iovec iov;\niov.iov_base = \"Hello, world!\";\niov.iov_len = 13;\nstruct msghdr msg;\nmsg.msg_name = &amp;addr;\nmsg.msg_namelen = sizeof(addr);\nmsg.msg_iov = &amp;iov;\nmsg.msg_iovlen = 1;\nmsg.msg_control = NULL;\nmsg.msg_controllen = 0;\nmsg.msg_flags = 0;\nsendmsg(sockfd, &amp;msg, 0);\n</code></pre> </li> <li> <p>\u63a5\u6536\u6d88\u606f\uff1a</p> <p>\u4e00\u4e2a\u63a5\u53d7\u7a0b\u5e8f\u5fc5\u987b\u5206\u914d\u4e00\u4e2a\u8db3\u591f\u5927\u7684\u5185\u5b58\u7528\u6237\u4fdd\u5b58netlink\u6d88\u606f\u5934\u548c\u6d88\u606f\u8d1f\u8f7d\uff1a</p> <pre><code>#define MAX_NL_MSG_LEN 1024 \nstruct sockaddr_nl nladdr; \nstruct msghdr msg; \nstruct iovec iov; \nstruct nlmsghdr * nlhdr; \nnlhdr = (struct nlmsghdr *)malloc(MAX_NL_MSG_LEN); \niov.iov_base = (void *)nlhdr; \niov.iov_len = MAX_NL_MSG_LEN; \nmsg.msg_name = (void *)&amp;(nladdr); \nmsg.msg_namelen = sizeof(nladdr); \nmsg.msg_iov = &amp;iov; \nmsg.msg_iovlen = 1; \nrecvmsg(fd, &amp;msg, 0);\n</code></pre> </li> </ol>"},{"location":"linux/kernel/ipc/#api_1","title":"\u5185\u6838\u6001API","text":"<ol> <li> <p>\u521b\u5efanetlink socket\uff1a</p> <pre><code>inline struct sock *netlink_kernel_create(struct net *net, int unit,struct netlink_kernel_cfg *cfg);\n</code></pre> </li> <li> <p>\u53d1\u9001\u5355\u64ad\u6d88\u606f\uff1a</p> <pre><code>int netlink_unicast(struct sock *ssk, struct sk_buff *skb, __u32 portid, int nonblock);\n</code></pre> </li> <li> <p>\u53d1\u9001\u591a\u64ad\u6d88\u606f\uff1a</p> <pre><code>int netlink_broadcast(struct sock *ssk, struct sk_buff *skb, __u32 portid, __u32 group, gfp_t allocation);\n</code></pre> </li> </ol>"},{"location":"linux/kernel/ipc/#zeromq","title":"zeromq","text":"<p>github\u5730\u5740\uff1ahttps://github.com/zeromq/libzmq\u3002</p> <p>zeromq\u662f\u4e00\u4e2a\u57fa\u4e8esocket\u3001\u5f00\u6e90\u7684\u8f7b\u91cf\u7ea7\u901a\u4fe1\u5e93\u3002</p>"},{"location":"linux/kernel/kthread/","title":"\u5185\u6838\u7ebf\u7a0b","text":"<p>\u5185\u6838\u7ebf\u7a0b\u662f\u76f4\u63a5\u7531\u5185\u6838\u672c\u8eab\u542f\u52a8\u7684\u8fdb\u7a0b\uff0c\u5b83\u4eec\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u7528\u6237\u7a7a\u95f4\u8fdb\u7a0b\uff0c\u901a\u5e38\u7528\u4e8e\u7279\u5b9a\u7684\u76ee\u7684\uff0c\u5982\u5904\u7406\u4e2d\u65ad\u3001\u6267\u884c\u540e\u53f0\u4efb\u52a1\u7b49\u3002</p> <p>\u5185\u6838\u7ebf\u7a0b\u53ef\u4ee5\u5927\u81f4\u5212\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ol> <li>\u963b\u585e\u578b\uff1a\u7ebf\u7a0b\u542f\u52a8\u540e\u5c31\u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230\u5185\u6838\u5524\u9192\u5b83</li> <li>\u5468\u671f\u578b\uff1a\u7ebf\u7a0b\u542f\u52a8\u540e\u5c31\u6309\u5468\u671f\u95f4\u9694\u8fd0\u884c</li> </ol>"},{"location":"linux/kernel/kthread/#init","title":"init\u7ebf\u7a0b","text":"<p>init \u7ebf\u7a0b\u662f\u6240\u6709\u7528\u6237\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0b\uff0c\u5b83\u662f\u7cfb\u7edf\u542f\u52a8\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4e5f\u662f\u6240\u6709\u7528\u6237\u8fdb\u7a0b\u7684\u7956\u5148\u3002\u5728\u5185\u6838\u542f\u52a8\u9636\u6bb5\uff0c\u5b83\u4f5c\u4e3a\u5185\u6838\u7ebf\u7a0b\uff0c\u6267\u884c\u4e00\u7cfb\u5217\u521d\u59cb\u5316\u4efb\u52a1\uff1a</p> init/main.c<pre><code>static int __ref kernel_init(void *unused)\n{\n    int ret;\n\n    /*\n     * Wait until kthreadd is all set-up.\n     */\n    wait_for_completion(&amp;kthreadd_done);\n\n    kernel_init_freeable(); //\n    /* need to finish all async __init code before freeing the memory */\n    async_synchronize_full();\n    kprobe_free_init_mem();\n    ftrace_free_init_mem();\n    kgdb_free_init_mem();\n    exit_boot_config();\n    free_initmem();\n    mark_readonly();\n\n    /*\n     * Kernel mappings are now finalized - update the userspace page-table\n     * to finalize PTI.\n     */\n    pti_finalize();\n\n    system_state = SYSTEM_RUNNING;\n    numa_default_policy();\n\n    rcu_end_inkernel_boot();\n\n    do_sysctl_args();\n\n    if (ramdisk_execute_command) {\n        ret = run_init_process(ramdisk_execute_command);\n        if (!ret)\n            return 0;\n        pr_err(\"Failed to execute %s (error %d)\\n\",\n               ramdisk_execute_command, ret);\n    }\n\n    /*\n     * We try each of these until one succeeds.\n     *\n     * The Bourne shell can be used instead of init if we are\n     * trying to recover a really broken machine.\n     */\n    if (execute_command) {\n        ret = run_init_process(execute_command);\n        if (!ret)\n            return 0;\n        panic(\"Requested init %s failed (error %d).\",\n              execute_command, ret);\n    }\n\n    if (CONFIG_DEFAULT_INIT[0] != '\\0') {\n        ret = run_init_process(CONFIG_DEFAULT_INIT);\n        if (ret)\n            pr_err(\"Default init %s failed (error %d)\\n\",\n                   CONFIG_DEFAULT_INIT, ret);\n        else\n            return 0;\n    }\n\n    //\u67e5\u627e\u53ef\u4ee5\u6267\u884c\u7684init\u7a0b\u5e8f\n    if (!try_to_run_init_process(\"/sbin/init\") ||\n        !try_to_run_init_process(\"/etc/init\") ||\n        !try_to_run_init_process(\"/bin/init\") ||\n        !try_to_run_init_process(\"/bin/sh\"))\n        return 0;\n\n    panic(\"No working init found.  Try passing init= option to kernel. \"\n          \"See Linux Documentation/admin-guide/init.rst for guidance.\");\n}\n</code></pre>"},{"location":"linux/kernel/kthread/#kernel_init_freeable","title":"kernel_init_freeable\u51fd\u6570","text":"<p>\u8be5\u51fd\u6570\u662f init \u7ebf\u7a0b\u4e2d\u6700\u91cd\u8981\u7684\u521d\u59cb\u5316\u51fd\u6570\uff0c\u5185\u6838\u5728\u8fd9\u91cc\u5b8c\u6210\u5927\u90e8\u5206\u7684\u521d\u59cb\u5316\u5de5\u4f5c\uff0c\u5e76\u51c6\u5907\u8df3\u5165\u7528\u6237\u7a7a\u95f4\uff1a</p> <pre><code>static noinline void __init kernel_init_freeable(void)\n{\n    /* Now the scheduler is fully set up and can do blocking allocations */\n    gfp_allowed_mask = __GFP_BITS_MASK;\n\n    /*\n     * init can allocate pages on any node\n     */\n    set_mems_allowed(node_states[N_MEMORY]);\n\n    cad_pid = get_pid(task_pid(current));\n\n    smp_prepare_cpus(setup_max_cpus);\n\n    workqueue_init();\n\n    init_mm_internals();\n\n    rcu_init_tasks_generic();\n    do_pre_smp_initcalls();\n    lockup_detector_init();\n\n    smp_init();\n    sched_init_smp();\n\n    padata_init();\n    page_alloc_init_late();\n    /* Initialize page ext after all struct pages are initialized. */\n    page_ext_init();\n\n    do_basic_setup();\n\n    kunit_run_all_tests();\n\n    wait_for_initramfs();\n    console_on_rootfs();\n\n    /*\n     * check if there is an early userspace init.  If yes, let it do all\n     * the work\n     */\n    if (init_eaccess(ramdisk_execute_command) != 0) {\n        ramdisk_execute_command = NULL;\n        prepare_namespace();\n    }\n\n    /*\n     * Ok, we have completed the initial bootup, and\n     * we're essentially up and running. Get rid of the\n     * initmem segments and start the user-mode stuff..\n     *\n     * rootfs is available now, try loading the public keys\n     * and default modules\n     */\n\n    integrity_load_keys();\n}\n</code></pre> <p><code>console_on_rootfs()</code>\u51fd\u6570\u7528\u4e8e\u6253\u5f00 /dev/console \u8bbe\u5907\uff0c\u5e76\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6807\u51c6\u8f93\u5165\u3001\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\uff1a <pre><code>/* Open /dev/console, for stdin/stdout/stderr, this should never fail */\nvoid __init console_on_rootfs(void)\n{\n    struct file *file = filp_open(\"/dev/console\", O_RDWR, 0);\n\n    if (IS_ERR(file)) {\n        pr_err(\"Warning: unable to open an initial console.\\n\");\n        return;\n    }\n    init_dup(file);\n    init_dup(file);\n    init_dup(file);\n    fput(file);\n}\n</code></pre></p> <p><code>prepare_namespace()</code>\u51fd\u6570\u7528\u4e8e\u521b\u5efa\u7528\u6237\u7a7a\u95f4\u7684\u6839\u76ee\u5f55\u548c\u6587\u4ef6\u7cfb\u7edf\uff1a</p> <pre><code>void __init prepare_namespace(void)\n{\n    if (root_delay) {\n        printk(KERN_INFO \"Waiting %d sec before mounting root device...\\n\",\n               root_delay);\n        ssleep(root_delay);\n    }\n\n    /*\n     * wait for the known devices to complete their probing\n     *\n     * Note: this is a potential source of long boot delays.\n     * For example, it is not atypical to wait 5 seconds here\n     * for the touchpad of a laptop to initialize.\n     */\n    wait_for_device_probe();\n\n    md_run_setup();\n\n    if (saved_root_name[0]) {\n        root_device_name = saved_root_name;\n        if (!strncmp(root_device_name, \"mtd\", 3) ||\n            !strncmp(root_device_name, \"ubi\", 3)) {\n            mount_block_root(root_device_name, root_mountflags);\n            goto out;\n        }\n        ROOT_DEV = name_to_dev_t(root_device_name);\n        if (strncmp(root_device_name, \"/dev/\", 5) == 0)\n            root_device_name += 5;\n    }\n\n    if (initrd_load())\n        goto out;\n\n    /* wait for any asynchronous scanning to complete */\n    if ((ROOT_DEV == 0) &amp;&amp; root_wait) {\n        printk(KERN_INFO \"Waiting for root device %s...\\n\",\n            saved_root_name);\n        while (driver_probe_done() != 0 ||\n            (ROOT_DEV = name_to_dev_t(saved_root_name)) == 0)\n            msleep(5);\n        async_synchronize_full();\n    }\n\n    mount_root();\nout:\n    devtmpfs_mount();\n    init_mount(\".\", \"/\", NULL, MS_MOVE, NULL);\n    init_chroot(\".\");\n}\n</code></pre>"},{"location":"linux/kernel/kthread/#kthreadd","title":"kthreadd\u7ebf\u7a0b","text":"<p>\u6211\u4eec\u77e5\u9053Linux\u6240\u6709\u8fdb\u7a0b\u7684\u7956\u5148\u662f0\u53f7 idle \u8fdb\u7a0b\uff0cidle \u8fdb\u7a0b\u521b\u5efa\u4e861\u53f7 init \u8fdb\u7a0b\u3002init \u8fdb\u7a0b\u662f\u6240\u6709\u7528\u6237\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0b\u3002\u800c\u5185\u6838\u7ebf\u7a0b\u540c\u6837\u4e5f\u6709\u81ea\u5df1\u7684\u7956\u5148\u90a3\u5c31\u662f2\u53f7 kthreadd \u7ebf\u7a0b\u3002\u5b83\u7684\u804c\u8d23\u662f\u521b\u5efa\u548c\u7ba1\u7406\u5176\u4ed6\u5185\u6838\u7ebf\u7a0b\uff0c\u5b83\u8fd0\u884c\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\uff0c\u4e0d\u65ad\u904d\u5386<code>kthread_create_list</code>\u94fe\u8868\uff0c\u5bfb\u627e\u65b0\u7684\u5185\u6838\u7ebf\u7a0b\u521b\u5efa\u8bf7\u6c42\u3002</p> <p>\u8fd9\u4e24\u4e2a\u8fdb\u7a0b\u90fd\u662f\u5728\u521d\u59cb\u5316\u9636\u6bb5\u88ab\u521b\u5efa\u7684\uff1a</p> <pre><code>start_kernel()      // init/main.c\n--&gt;arch_call_rest_init()\n    --&gt;rest_init()\n        --&gt;pid = kernel_thread(kernel_init, NULL, CLONE_FS);\n        --&gt;pid = kernel_thread(kthreadd, NULL, CLONE_FS | CLONE_FILES);\n</code></pre> <p><code>kernel_thread()</code>\u51fd\u6570\u7c7b\u4f3c\u4e8e\u7528\u6237\u7a7a\u95f4\u7684<code>fork()</code>\u51fd\u6570\uff0c\u5b83\u88ab\u7528\u6765\u521b\u5efa\u5185\u6838\u7ebf\u7a0b\uff1a</p> <pre><code>pid_t kernel_thread(int (*fn)(void *), void *arg, unsigned long flags)\n{\n    struct kernel_clone_args args = {\n        .flags      = ((lower_32_bits(flags) | CLONE_VM |\n                    CLONE_UNTRACED) &amp; ~CSIGNAL),\n        .exit_signal    = (lower_32_bits(flags) &amp; CSIGNAL),\n        .stack      = (unsigned long)fn,\n        .stack_size = (unsigned long)arg,\n    };\n\n    return kernel_clone(&amp;args);\n}\n</code></pre> <p><code>kernel_clone()</code>\u5176\u5b9e\u6700\u7ec8\u4e5f\u4f1a\u8c03\u7528<code>copy_process()</code>\u51fd\u6570\u3002\u6839\u636e\u524d\u9762\u6240\u8bf4\uff0cidle \u8fdb\u7a0b\u662f\u6240\u6709\u8fdb\u7a0b\u7684\u7236\u8fdb\u7a0b\uff0c\u90a3\u4e48\u5185\u6838\u7ebf\u7a0b\u7684\u521b\u5efa\u4e5f\u662f\u901a\u8fc7\u62f7\u8d1d idle \u8fdb\u7a0b\u6765\u5b9e\u73b0\u7684\u3002idle \u8fdb\u7a0b\u7684\u90e8\u5206\u5185\u5bb9\u5982\u4e0b\uff1a</p> <pre><code>//init/init_task.c\nstruct task_struct init_task = {\n    ...\n    .flags      = PF_KTHREAD,       // \u6807\u8bb0\u4e3a\u5185\u6838\u7ebf\u7a0b\n    .mm = NULL,\n    .active_mm = &amp;init_mm,\n};\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\uff0cidle \u8fdb\u7a0b\u7684 .mm \u4e3a\u7a7a\u3002\u56e0\u6b64\u5185\u6838\u7ebf\u7a0b\u7684 mm \u57df\u59cb\u7ec8\u4e3a\u7a7a\uff0c\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>static int copy_mm(unsigned long clone_flags, struct task_struct *tsk)\n{\n    struct mm_struct *mm, *oldmm;\n\n    ....\n\n    tsk-&gt;mm = NULL;\n    tsk-&gt;active_mm = NULL;\n\n    /*\n     * Are we cloning a kernel thread?\n     *\n     * We need to steal a active VM for that..\n     */\n    oldmm = current-&gt;mm;\n    if (!oldmm)     //\u5185\u6838\u7ebf\u7a0b\u5728\u8fd9\u91cc\u76f4\u63a5\u8fd4\u56de\n        return 0;\n\n    /* initialize the new vmacache entries */\n    vmacache_flush(tsk);\n\n    if (clone_flags &amp; CLONE_VM) {\n        mmget(oldmm);\n        mm = oldmm;\n    } else {\n        mm = dup_mm(tsk, current-&gt;mm);\n        if (!mm)\n            return -ENOMEM;\n    }\n\n    tsk-&gt;mm = mm;\n    tsk-&gt;active_mm = mm;\n    return 0;\n}\n</code></pre> <p>\u5f53\u5224\u65ad oldmm \u4e3a\u7a7a\u65f6\uff0c\u8bf4\u660e\u662f\u5185\u6838\u7ebf\u7a0b\uff0c\u76f4\u63a5\u8fd4\u56de0\u3002\u5f53 idle \u8fdb\u7a0b\u521b\u5efa\u5b8c kthreadd \u7ebf\u7a0b\u540e\uff0c\u5b83\u88ab\u8c03\u5ea6\u6267\u884c<code>kthreadd()</code>\u51fd\u6570\u3002</p>"},{"location":"linux/kernel/kthread/#kthreadd_1","title":"kthreadd\u51fd\u6570","text":"<pre><code>int kthreadd(void *unused)\n{\n    struct task_struct *tsk = current;\n\n    /* Setup a clean context for our children to inherit. */\n    set_task_comm(tsk, \"kthreadd\");\n    ignore_signals(tsk);\n    set_cpus_allowed_ptr(tsk, housekeeping_cpumask(HK_FLAG_KTHREAD));\n    set_mems_allowed(node_states[N_MEMORY]);\n\n    current-&gt;flags |= PF_NOFREEZE;\n    cgroup_init_kthreadd();\n\n    for (;;) {\n        set_current_state(TASK_INTERRUPTIBLE);\n        if (list_empty(&amp;kthread_create_list))\n            schedule();\n        __set_current_state(TASK_RUNNING);\n\n        spin_lock(&amp;kthread_create_lock);\n        while (!list_empty(&amp;kthread_create_list)) {\n            struct kthread_create_info *create;\n\n            create = list_entry(kthread_create_list.next,\n                        struct kthread_create_info, list);\n            list_del_init(&amp;create-&gt;list);\n            spin_unlock(&amp;kthread_create_lock);\n\n            create_kthread(create);\n\n            spin_lock(&amp;kthread_create_lock);\n        }\n        spin_unlock(&amp;kthread_create_lock);\n    }\n\n    return 0;\n}\n</code></pre> <p>\u8be5\u51fd\u6570\u7684\u6838\u5fc3\u5176\u5b9e\u5c31\u662f\u56f4\u7ed5\u7740<code>kthread_create_list</code>\u3002\u8fd9\u4e2a\u94fe\u8868\u5b58\u653e\u5176\u4ed6\u5185\u6838\u8def\u5f84\u521b\u5efa\u7684<code>struct kthread_create_info</code>\u7ed3\u6784\u4f53\uff1a</p> <pre><code>struct kthread_create_info\n{\n    /* Information passed to kthread() from kthreadd. */\n    int (*threadfn)(void *data);\n    void *data;\n    int node;\n\n    /* Result passed back to kthread_create() from kthreadd. */\n    struct task_struct *result;\n    struct completion *done;\n\n    struct list_head list;\n};\n</code></pre> <p>kthreadd \u7ebf\u7a0b\u5148\u5224\u65ad<code>kthread_create_list</code>\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u8c03\u7528<code>schedule()</code>\u51fd\u6570\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u3002\u4e00\u65e6\u6709<code>kthread_create_info</code>\u7ed3\u6784\u4f53\u52a0\u5165\u5230\u94fe\u8868\u4e2d\uff0c\u5219 kthreadd \u7ebf\u7a0b\u88ab\u5524\u9192\uff0c\u5e76\u4ece<code>__set_current_state(TASK_RUNNING)</code>\u5904\u5f00\u59cb\u6267\u884c\u3002\u5b83\u8fdb\u5165\u4e00\u4e2a\u5faa\u73af\uff0c\u4e0d\u65ad\u4ece<code>kthread_create_list</code>\u4e2d\u53d6\u51fa<code>struct kthread_create_info</code>\u7ed3\u6784\u4f53\uff0c\u5e76\u8c03\u7528<code>create_kthread()</code>\u51fd\u6570\u521b\u5efa\u5185\u6838\u7ebf\u7a0b\u3002</p> <p><code>create_kthread()</code>\u51fd\u6570\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8c03\u7528<code>kernel_thread()</code>\u51fd\u6570\u521b\u5efa\u5185\u6838\u7ebf\u7a0b\uff1a</p> <pre><code>create_kthread()\n--&gt;pid = kernel_thread(kthread, create, CLONE_FS | CLONE_FILES | SIGCHLD);\n</code></pre>"},{"location":"linux/kernel/kthread/#kthread","title":"kthread\u51fd\u6570","text":"<p>\u5f53 kthreadd \u7ebf\u7a0b\u521b\u5efa\u5b8c\u5185\u6838\u7ebf\u7a0b\u4e4b\u540e\u5c31\u5b8c\u6210\u4e86\u5b83\u7684\u4f7f\u547d\uff0c\u5185\u6838\u7ebf\u7a0b\u6267\u884c\u7684\u5176\u5b9e\u662f<code>kthread()</code>\u51fd\u6570\u3002\u8be5\u51fd\u6570\u4f1a\u521d\u59cb\u5316<code>struct kthread</code>\u7ed3\u6784\u4f53\uff0c\u8bbe\u7f6e\u5b8c\u6210\u53d8\u91cf\uff0c\u7136\u540e\u901a\u77e5 kthreadd \u7ebf\u7a0b\u5b83\u5df2\u7ecf\u51c6\u5907\u597d\u3002\u5f53\u5f00\u59cb\u6267\u884c\u65f6\uff0c\u5c31\u4f1a\u8c03\u7528\u7528\u6237\u5b9a\u4e49\u7684<code>threadfn()</code>\u51fd\u6570\u6765\u6267\u884c\u5b9e\u9645\u7684\u5de5\u4f5c\uff1a</p> <pre><code>static int kthread(void *_create)\n{\n    /* Copy data: it's on kthread's stack */\n    struct kthread_create_info *create = _create;\n    int (*threadfn)(void *data) = create-&gt;threadfn;\n    void *data = create-&gt;data;\n    struct completion *done;\n    struct kthread *self;\n    int ret;\n\n    set_kthread_struct(current);\n    self = to_kthread(current);\n\n    /* If user was SIGKILLed, I release the structure. */\n    done = xchg(&amp;create-&gt;done, NULL);       //\u83b7\u53d6\u5b8c\u6210\u53d8\u91cfdone\n    if (!done) {\n        kfree(create);\n        do_exit(-EINTR);\n    }\n\n    if (!self) {\n        create-&gt;result = ERR_PTR(-ENOMEM);\n        complete(done);\n        do_exit(-ENOMEM);\n    }\n\n    self-&gt;threadfn = threadfn;\n    self-&gt;data = data;                      //\u8bbe\u7f6e\u7ebf\u7a0b\u6267\u884c\u51fd\u6570\u548c\u53c2\u6570\n    init_completion(&amp;self-&gt;exited);\n    init_completion(&amp;self-&gt;parked);\n    current-&gt;vfork_done = &amp;self-&gt;exited;\n\n    /* OK, tell user we're spawned, wait for stop or wakeup */\n    __set_current_state(TASK_UNINTERRUPTIBLE);\n    create-&gt;result = current;\n    /*\n     * Thread is going to call schedule(), do not preempt it,\n     * or the creator may spend more time in wait_task_inactive().\n     */\n    preempt_disable();\n    complete(done);                 //\u901a\u77e5kthreadd\u7ebf\u7a0b\u5b8c\u6210\n    schedule_preempt_disabled();    //\u7761\u7720\n    preempt_enable();               //\u5524\u9192\u65f6\u4ece\u8fd9\u91cc\u5f00\u59cb\u6267\u884c\n\n    ret = -EINTR;\n    if (!test_bit(KTHREAD_SHOULD_STOP, &amp;self-&gt;flags)) {\n        cgroup_kthread_ready();\n        __kthread_parkme(self);\n        ret = threadfn(data);       //\u8fd9\u91cc\u624d\u771f\u6b63\u6267\u884c\u7528\u6237\u5b9a\u4e49\u7684\u51fd\u6570\n    }\n    do_exit(ret);\n}\n</code></pre>"},{"location":"linux/kernel/kthread/#kthread_run","title":"kthread_run\u51fd\u6570","text":"<p><code>kthread_run()</code>\u51fd\u6570\u5728\u521b\u5efa\u5b8c\u5185\u6838\u7ebf\u7a0b\u540e\u5c31\u7acb\u5373\u5524\u9192\u5b83\uff1a</p> <pre><code>#define kthread_run(threadfn, data, namefmt, ...)              \\\n({                                     \\\n    struct task_struct *__k                        \\\n        = kthread_create(threadfn, data, namefmt, ## __VA_ARGS__); \\\n    if (!IS_ERR(__k))                          \\\n        wake_up_process(__k);                      \\\n    __k;                                   \\\n})\n</code></pre>"},{"location":"linux/kernel/kthread/#kthread_create","title":"kthread_create\u51fd\u6570","text":"<pre><code>kthread_create()\n--&gt;kthread_create_on_node()\n    --&gt;__kthread_create_on_node()\n</code></pre> <p><code>__kthread_create_on_node()</code>\u51fd\u6570\u7684\u903b\u8f91\u5e76\u4e0d\u590d\u6742\uff0c\u5b83\u9996\u5148\u586b\u5145<code>struct kthread_create_info</code>\u7ed3\u6784\u4f53\uff0c\u7136\u540e\u5524\u9192 kthreadd \u7ebf\u7a0b\u6765\u5904\u7406\u521b\u5efa\u5185\u6838\u7ebf\u7a0b\u7684\u8bf7\u6c42\uff0c\u6700\u540e\u518d\u8fdb\u884c\u4e00\u4e9b\u540e\u7eed\u7684\u5904\u7406\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u51fd\u6570\u521b\u5efa\u7684\u5185\u6838\u7ebf\u7a0b\u5904\u4e8e\u7761\u7720\u72b6\u6001\uff1a</p> <pre><code>struct task_struct *__kthread_create_on_node(int (*threadfn)(void *data),\n                            void *data, int node,\n                            const char namefmt[],\n                            va_list args)\n{\n    DECLARE_COMPLETION_ONSTACK(done);\n    struct task_struct *task;\n    struct kthread_create_info *create = kmalloc(sizeof(*create),\n                             GFP_KERNEL);\n\n    if (!create)\n        return ERR_PTR(-ENOMEM);\n    create-&gt;threadfn = threadfn;\n    create-&gt;data = data;\n    create-&gt;node = node;\n    create-&gt;done = &amp;done;           //\u586b\u5145kthread_create_info\u7ed3\u6784\u4f53\n\n    spin_lock(&amp;kthread_create_lock);\n    list_add_tail(&amp;create-&gt;list, &amp;kthread_create_list);     //\u52a0\u5165\u94fe\u8868\n    spin_unlock(&amp;kthread_create_lock);\n\n    wake_up_process(kthreadd_task);     //\u5524\u9192kthreadd\u7ebf\u7a0b\n    /*\n     * Wait for completion in killable state, for I might be chosen by\n     * the OOM killer while kthreadd is trying to allocate memory for\n     * new kernel thread.\n     */\n    if (unlikely(wait_for_completion_killable(&amp;done))) {\n        /*\n         * If I was SIGKILLed before kthreadd (or new kernel thread)\n         * calls complete(), leave the cleanup of this structure to\n         * that thread.\n         */\n        if (xchg(&amp;create-&gt;done, NULL))\n            return ERR_PTR(-EINTR);\n        /*\n         * kthreadd (or new kernel thread) will call complete()\n         * shortly.\n         */\n        wait_for_completion(&amp;done);\n    }\n    task = create-&gt;result;          //\u83b7\u53d6\u521b\u5efa\u7684\u5185\u6838\u7ebf\u7a0b\n    if (!IS_ERR(task)) {            //\u540e\u7eed\u5904\u7406\n        static const struct sched_param param = { .sched_priority = 0 };\n        char name[TASK_COMM_LEN];\n\n        /*\n         * task is already visible to other tasks, so updating\n         * COMM must be protected.\n         */\n        vsnprintf(name, sizeof(name), namefmt, args);\n        set_task_comm(task, name);\n        /*\n         * root may have changed our (kthreadd's) priority or CPU mask.\n         * The kernel thread should not inherit these properties.\n         */\n        sched_setscheduler_nocheck(task, SCHED_NORMAL, &amp;param);\n        set_cpus_allowed_ptr(task,\n                     housekeeping_cpumask(HK_FLAG_KTHREAD));\n    }\n    kfree(create);\n    return task;\n}\n</code></pre>"},{"location":"linux/kernel/kthread/#kthread_stop","title":"kthread_stop\u51fd\u6570","text":"<p>\u4e00\u822c\uff0c\u901a\u8fc7<code>kthread_create()</code>\u51fd\u6570\u521b\u5efa\u7684\u5185\u6838\u7ebf\u7a0b\u53ef\u4ee5\u901a\u8fc7<code>kthread_stop()</code>\u51fd\u6570\u6765\u505c\u6b62\uff1a</p> <pre><code>int kthread_stop(struct task_struct *k)\n{\n    struct kthread *kthread;\n    int ret;\n\n    trace_sched_kthread_stop(k);\n\n    get_task_struct(k);\n    kthread = to_kthread(k);\n    set_bit(KTHREAD_SHOULD_STOP, &amp;kthread-&gt;flags);\n    kthread_unpark(k);\n    wake_up_process(k);\n    wait_for_completion(&amp;kthread-&gt;exited);\n    ret = k-&gt;exit_code;\n    put_task_struct(k);\n\n    trace_sched_kthread_stop_ret(ret);\n    return ret;\n}\n</code></pre>"},{"location":"linux/kernel/kthread/#kthread_worker","title":"kthread_worker\u673a\u5236","text":"<p><code>kthread_worker</code>\u548c<code>kthread_work</code>\u662f\u7528\u6765\u5b9e\u73b0\u5185\u6838\u5f02\u6b65\u6267\u884c\u5de5\u4f5c\u7684\u673a\u5236\u3002<code>kthread_worker</code>\u4ee3\u8868\u5de5\u4f5c\u961f\u5217\uff0c\u5b83\u4e0d\u6267\u884c\u5177\u4f53\u5de5\u4f5c\uff0c\u800c\u662f\u8d1f\u8d23\u534f\u8c03\u548c\u8c03\u5ea6\u5de5\u4f5c\u9879\u7684\u6267\u884c\u3002<code>kthread_work</code>\u4ee3\u8868\u4e00\u4e2a\u53ef\u4ee5\u88ab<code>kthread_worker</code>\u6267\u884c\u7684\u5de5\u4f5c\u5355\u5143\uff0c\u6bcf\u4e2a\u5de5\u4f5c\u5355\u5143\u5305\u542b\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u5f53\u8be5\u5de5\u4f5c\u88ab\u8c03\u5ea6\u6267\u884c\u65f6\uff0c\u8fd9\u4e2a\u5904\u7406\u51fd\u6570\u5c31\u4f1a\u88ab\u8c03\u7528\u3002</p> <p>\u6211\u4eec\u6765\u770b\u4e0b\u8fd9\u4e24\u4e2a\u7ed3\u6784\u4f53\u7684\u7ec4\u6210\uff1a</p> <pre><code>struct kthread_worker {\n    unsigned int        flags;\n    raw_spinlock_t      lock;\n    struct list_head    work_list;\n    struct list_head    delayed_work_list;\n    struct task_struct  *task;\n    struct kthread_work *current_work;\n};\n\nstruct kthread_work {\n    struct list_head    node;\n    kthread_work_func_t func;\n    struct kthread_worker   *worker;\n    /* Number of canceling calls that are running at the moment. */\n    int         canceling;\n};\n</code></pre> <p>\u4e3a\u4e86\u63d0\u4f9b\u5ef6\u8fdf\u6267\u884c\u673a\u5236\uff0c\u5185\u6838\u8fd8\u8bbe\u8ba1\u4e86<code>kthread_delayed_work</code>\u7ed3\u6784\u4f53\uff0c\u5b83\u548c<code>kthread_work</code>\u7c7b\u4f3c\uff0c\u4f46\u5b83\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u5ef6\u8fdf\u65f6\u95f4\uff0c\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u540e\u624d\u4f1a\u88ab\u6267\u884c\uff1a</p> <pre><code>struct kthread_delayed_work {\n    struct kthread_work work;\n    struct timer_list   timer;\n};\n</code></pre> <p>\u7531\u4e8e\u539f\u7406\u4e0e<code>kthread_work</code>\u7c7b\u4f3c\uff0c\u56e0\u6b64\u8fd9\u91cc\u5c31\u4e0d\u7ec6\u8bb2\u4e86\u3002</p>"},{"location":"linux/kernel/kthread/#_2","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<ol> <li> <p>\u521d\u59cb\u5316<code>kthread_worker</code>\u548c<code>kthread_work</code>\uff1a</p> <pre><code>kthread_init_worker(&amp;worker);\nkthread_init_work(&amp;work, work_function);\n</code></pre> </li> <li> <p>\u521b\u5efa\u5e76\u542f\u52a8\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\u6765\u670d\u52a1\u8fd9\u4e2a\u5de5\u4f5c\u961f\u5217\uff1a</p> <pre><code>kthread_run(kthread_worker_fn, &amp;worker, \"woker_thread\");\n</code></pre> </li> <li> <p>\u5c06\u5de5\u4f5c\u9879\u6dfb\u52a0\u5230\u5de5\u4f5c\u961f\u5217\uff1a</p> <pre><code>kthread_queue_work(&amp;worker, &amp;work);\n</code></pre> </li> <li> <p>\u5f53\u4e0d\u518d\u9700\u8981\u5de5\u4f5c\u961f\u5217\u65f6\uff0c\u9500\u6bc1\u5b83\uff1a</p> <pre><code>kthread_flush_worker(&amp;worker);\nkthread_destroy_worker(&amp;worker);\n</code></pre> </li> </ol> <p>\u6ce8\u610f\uff1a</p> <ol> <li><code>kthread_run()</code>\u51fd\u6570\u5fc5\u987b\u6307\u5b9a<code>kthread_worker_fn</code>\u4f5c\u4e3a\u5185\u6838\u7ebf\u7a0b\u51fd\u6570\u3002</li> <li>\u7528\u6237\u9700\u8981\u81ea\u5df1\u5b9e\u73b0<code>kthread_init_work()</code>\u4e2d\u7684<code>work_function()</code>\u51fd\u6570\u3002</li> </ol>"},{"location":"linux/kernel/kthread/#kthread_worker_fn","title":"kthread_worker_fn\u51fd\u6570","text":"<p><code>kthread_worker_fn()</code>\u51fd\u6570\u662f\u7531\u5185\u6838\u5b9e\u73b0\u7684\uff0c\u5b83\u8d1f\u8d23\u4ece\u5de5\u4f5c\u961f\u5217\u4e2d\u53d6\u51fa\u5de5\u4f5c\u9879\uff0c\u5e76\u6267\u884c\u5b83\u4eec\u3002\u5b83\u9996\u5148\u5224\u65ad\u662f\u5426\u9700\u8981\u505c\u6b62\uff0c\u5982\u679c\u9700\u8981\u505c\u6b62\uff0c\u5219\u5c06<code>worker-&gt;task</code>\u8bbe\u7f6e\u4e3a<code>NULL</code>\uff0c\u5e76\u8fd4\u56de\u3002\u7136\u540e\u5b83\u5c1d\u8bd5\u4ece<code>kthread_worker</code>\u7684<code>work_list</code>\u4e2d\u53d6\u51fa\u4e00\u4e2a\u5de5\u4f5c\u9879\uff0c\u5982\u679c\u53d6\u5230\uff0c\u5219\u5c06<code>worker-&gt;current_work</code>\u8bbe\u7f6e\u4e3a\u8be5\u5de5\u4f5c\u9879\uff0c\u5e76\u8c03\u7528\u8be5\u5de5\u4f5c\u9879\u7684\u56de\u8c03\u51fd\u6570\u3002\u5982\u679c\u5de5\u4f5c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u8c03\u7528<code>schedule()</code>\u51fd\u6570\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u3002\u8df3\u8f6c\u5230 repeat \u5904\uff0c\u91cd\u590d\u6267\u884c\u4e0a\u9762\u7684\u64cd\u4f5c\u3002</p> <pre><code>int kthread_worker_fn(void *worker_ptr)\n{\n    struct kthread_worker *worker = worker_ptr;\n    struct kthread_work *work;\n\n    /*\n     * FIXME: Update the check and remove the assignment when all kthread\n     * worker users are created using kthread_create_worker*() functions.\n     */\n    WARN_ON(worker-&gt;task &amp;&amp; worker-&gt;task != current);\n    worker-&gt;task = current;\n\n    if (worker-&gt;flags &amp; KTW_FREEZABLE)\n        set_freezable();\n\nrepeat:\n    set_current_state(TASK_INTERRUPTIBLE);  /* mb paired w/ kthread_stop */\n\n    if (kthread_should_stop()) {\n        __set_current_state(TASK_RUNNING);\n        raw_spin_lock_irq(&amp;worker-&gt;lock);\n        worker-&gt;task = NULL;\n        raw_spin_unlock_irq(&amp;worker-&gt;lock);\n        return 0;\n    }\n\n    work = NULL;\n    raw_spin_lock_irq(&amp;worker-&gt;lock);\n    if (!list_empty(&amp;worker-&gt;work_list)) {\n        work = list_first_entry(&amp;worker-&gt;work_list,\n                    struct kthread_work, node);\n        list_del_init(&amp;work-&gt;node);\n    }\n    worker-&gt;current_work = work;\n    raw_spin_unlock_irq(&amp;worker-&gt;lock);\n\n    if (work) {\n        kthread_work_func_t func = work-&gt;func;\n        __set_current_state(TASK_RUNNING);\n        trace_sched_kthread_work_execute_start(work);\n        work-&gt;func(work);\n        /*\n         * Avoid dereferencing work after this point.  The trace\n         * event only cares about the address.\n         */\n        trace_sched_kthread_work_execute_end(work, func);\n    } else if (!freezing(current))\n        schedule();\n\n    try_to_freeze();\n    cond_resched();\n    goto repeat;\n}\n</code></pre>"},{"location":"linux/kernel/load/","title":"\u8fdb\u7a0b\u52a0\u8f7d\u4e0e\u542f\u52a8","text":""},{"location":"linux/kernel/load/#_2","title":"\u53ef\u6267\u884c\u6587\u4ef6\u683c\u5f0f","text":""},{"location":"linux/kernel/load/#shell","title":"shell\u542f\u52a8\u8fdb\u7a0b","text":""},{"location":"linux/kernel/load/#execve","title":"execve\u7cfb\u7edf\u8c03\u7528","text":""},{"location":"linux/kernel/load/#elf","title":"\u52a0\u8f7dELF\u6587\u4ef6","text":""},{"location":"linux/kernel/load/#elf_1","title":"ELF\u89e3\u6790","text":"<p>ELF \u6587\u4ef6\u662f Linux \u7cfb\u7edf\u4e0a\u901a\u7528\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3001\u5171\u4eab\u5e93\u3001\u6838\u5fc3\u8f6c\u50a8\u6587\u4ef6\u683c\u5f0f\u3002\u53ef\u4ee5\u901a\u8fc7<code>file</code>\u547d\u4ee4\u67e5\u770b ELF \u6587\u4ef6\u7684\u4fe1\u606f\uff1a</p> <pre><code>$ file /usr/bin/ls\n/usr/bin/ls: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=36b86f957a1be53733633d184c3a3354f3fc7b12, for GNU/Linux 3.2.0, stripped\n</code></pre> <p><code>readelf</code>\u547d\u4ee4\u67e5\u770b ELF \u6587\u4ef6\u7684\u7ed3\u6784\uff1a</p> <pre><code>$ readelf -h /usr/bin/ls\nELF Header:\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 \n  Class:                             ELF64\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              DYN (Position-Independent Executable file)\n  Machine:                           Advanced Micro Devices X86-64\n  Version:                           0x1\n  Entry point address:               0x6aa0\n  Start of program headers:          64 (bytes into file)\n  Start of section headers:          136232 (bytes into file)\n  Flags:                             0x0\n  Size of this header:               64 (bytes)\n  Size of program headers:           56 (bytes)\n  Number of program headers:         13\n  Size of section headers:           64 (bytes)\n  Number of section headers:         31\n  Section header string table index: 30\n</code></pre> <ul> <li>\u9b54\u6570\uff1a\u524d4\u4e2a\u5b57\u8282\u56fa\u5b9a\u4e3a<code>7f 45 4c 46</code>\uff0c\u8868\u793a\u8fd9\u662f\u4e00\u4e2a ELF \u6587\u4ef6(45=E\uff0c4c=L\uff0c46=F)\u3002</li> <li>\u7c7b\u522b\uff1a\u5728 ELF \u6587\u4ef6\u4e4b\u540e\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b\u522b\u5b57\u6bb5\uff0c\u8fd9\u4e2a\u503c\u51b3\u5b9a\u4e86\u8be5\u6587\u4ef6\u662f 32(=01) \u4f4d\u67b6\u6784\u8fd8\u662f 64(=02) \u4f4d\u67b6\u6784\u3002</li> <li>\u5927\u5c0f\u7aef\uff1a\u540e\u9762\u8ddf\u7740\u7684\u6570\u636e\u51b3\u5b9a\u4e86\u6587\u4ef6\u662f\u5927\u7aef\u8fd8\u662f\u5c0f\u7aef\uff0c01 \u8868\u793a\u5c0f\u7aef\uff0c02 \u8868\u793a\u5927\u7aef\u3002</li> <li>\u7248\u672c\uff1a\u63a5\u4e0b\u6765\u7684 01 \u8868\u793a\u7248\u672c\u53f7\u3002</li> </ul>"},{"location":"linux/kernel/mm/","title":"\u7269\u7406\u5185\u5b58\u7ba1\u7406","text":""},{"location":"linux/kernel/mm/#umanuma","title":"UMA\u548cNUMA\u67b6\u6784","text":"<p>UMA (\u4e00\u81f4\u6027\u5185\u5b58\u8bbf\u95ee)\u662f\u4e00\u79cd\u4f20\u7edf\u7684 SMP \u7cfb\u7edf\u7684\u5185\u5b58\u8bbf\u95ee\u67b6\u6784\uff0c\u6240\u6709\u5904\u7406\u5668\u5728\u8bbf\u95ee\u5185\u5b58\u65f6\u5171\u4eab\u540c\u4e00\u603b\u7ebf\u3002\u8fd9\u79cd\u67b6\u6784\u4ec5\u9002\u7528\u4e8e\u5c0f\u578b\u7cfb\u7edf\uff0c\u4e00\u65e6\u7cfb\u7edf\u4e2d\u7684 CPU \u6570\u91cf\u589e\u52a0\u5230\u4e00\u5b9a\u7a0b\u5ea6\uff0c\u5b83\u4eec\u4f1a\u7ade\u4e89\u603b\u7ebf\u8d44\u6e90\uff0c\u6700\u7ec8\u5bfc\u81f4\u603b\u7ebf\u6210\u4e3a\u7cfb\u7edf\u6027\u80fd\u7684\u74f6\u9888\u3002</p> <p>\u73b0\u4ee3\u591a\u6838\u5904\u7406\u5668\u5927\u591a\u91c7\u7528\u4e86 NUMA (\u975e\u4e00\u81f4\u6027\u5185\u5b58\u8bbf\u95ee)\u67b6\u6784\uff0c\u5c06\u5185\u5b58\u548c CPU \u5206\u7ec4\uff0c\u6bcf\u4e2aCPU\u90fd\u6709\u81ea\u5df1\u7684\u672c\u5730\u5185\u5b58\uff0c\u8bbf\u95ee\u8d77\u6765\u66f4\u5feb\u3002\u5c06\u4e00\u7ec4 CPU \u548c\u672c\u5730\u5185\u5b58\u5212\u5206\u4e3a\u4e00\u4e2a\u8282\u70b9(node)\u3002\u8fdb\u7a0b\u5728\u7533\u8bf7\u5185\u5b58\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u4f18\u5148\u7533\u8bf7\u4e0e\u8fdb\u7a0b\u5f53\u524d CPU \u540c\u5c5e\u4e8e\u4e00\u4e2a node \u7684\u5185\u5b58\u3002 BIOS \u63d0\u4f9b\u4e86 SRAT \u548c SLIT \u8868\uff0c \u7528\u4e8e\u914d\u7f6e NUMA \u4fe1\u606f\uff1a</p> <ul> <li>SRAT\uff1aSystem Resource Affinity Table\uff0c\u8bb0\u5f55 CPU \u6838\u5fc3\u4e0e\u5185\u5b58\u7684\u5173\u7cfb\u56fe\uff0c\u5305\u62ec\u6709\u51e0\u4e2a node\uff0c\u6bcf\u4e2a node \u5305\u542b\u51e0\u4e2a CPU \u6838\u5fc3\uff0c\u6bcf\u4e2a CPU \u6838\u5fc3\u5bf9\u5e94\u54ea\u4e9b\u5185\u5b58</li> <li>SLIT\uff1aSystem Locality Information Table\uff0c\u8bb0\u5f55 node \u4e4b\u95f4\u7684\u8ddd\u79bb</li> </ul> <p>\u5185\u6838\u5728\u542f\u52a8\u65f6\u8bfb\u53d6\u8fd9\u4e24\u4e2a\u8868\u5c31\u53ef\u4ee5\u83b7\u53d6 NUMA \u7cfb\u7edf\u7684 CPU \u548c\u7269\u7406\u5185\u5b58\u5206\u5e03\u4fe1\u606f\u3002</p>"},{"location":"linux/kernel/mm/#_2","title":"\u9875\u548c\u533a","text":"<p>\u5982\u679c\u8ba9\u5185\u6838\u53bb\u7ba1\u7406\u6bcf\u4e2a\u7269\u7406\u5730\u5740\uff0c\u6210\u672c\u4f1a\u975e\u5e38\u9ad8\uff0c\u4e5f\u4e0d\u73b0\u5b9e\u3002\u6240\u4ee5\u9700\u8981\u4e00\u79cd\u9ad8\u6548\u4e14\u7075\u6d3b\u7684\u673a\u5236\u6765\u7ba1\u7406\u7269\u7406\u5730\u5740\uff0c\u8fd9\u79cd\u673a\u5236\u6211\u4eec\u79f0\u4e3a\u9875\uff08page\uff09\u673a\u5236\u3002\u5185\u6838\u5c06\u7269\u7406\u5730\u5740\u5212\u5206\u4e3a\u4e00\u4e2a\u4e2a\u5927\u5c0f\u76f8\u540c\u7684\u9875\uff0c\u6bcf\u9875\u5305\u542b4KB\u7684\u7a7a\u95f4\u3002</p> <p>\u8fd9\u4e3b\u8981\u662f\u4e3a\u4e86\u63d0\u5347\u5185\u6838\u5728\u5185\u5b58\u5206\u914d\u548c\u56de\u6536\u65b9\u9762\u7684\u6548\u7387\uff0c\u53ef\u4ee5\u66f4\u52a0\u7075\u6d3b\u5730\u5904\u7406\u5185\u5b58\u8bf7\u6c42\uff0c\u4f18\u5316\u8d44\u6e90\u5206\u914d\uff0c\u5e76\u7b80\u5316\u4e86\u5185\u5b58\u5bfb\u5740\u548c\u6620\u5c04\u7684\u8fc7\u7a0b\uff0c\u540c\u65f6\u4e5f\u4e3a\u865a\u62df\u5185\u5b58\u7684\u7ba1\u7406\u63d0\u4f9b\u4e86\u4fbf\u5229\u3002page\u7684\u5185\u5b58\u533a\u57df\u6211\u4eec\u79f0\u4e4b\u4e3a\u9875\u5e27\uff0c\u7528<code>struct page</code>\u7ed3\u6784\u4f53\u8868\u793a\uff0c\u800cpage\u7684\u7f16\u53f7\u5c31\u53eb\u505a\u9875\u5e27\u53f7(Page Frame Number)\uff0c\u5185\u6838\u5b9a\u4e49\u4e86<code>page_to_pfn()</code>\u548c<code>pfn_to_page()</code>\u4e24\u4e2a\u51fd\u6570\u7528\u4e8e\u76f8\u4e92\u8f6c\u6362\uff1a</p> <pre><code>struct page {\n    unsigned long flags;\n    atomic_t _count;\n    atomic_t _mapcount;\n    unsigned long private;\n    struct address_space *mapping;\n    pgoff_t index;\n    struct list_head lru;\n    void *virtual;\n};\n</code></pre> <p>flags\uff1a\u5b58\u653e\u9875\u7684\u72b6\u6001\uff0c\u662f\u4e0d\u662f\u810f\u9875\uff0c\u662f\u4e0d\u662f\u9501\u5b9a\u5728\u5185\u5b58\u4e2d\u7b49\uff0c\u6bcf\u4e00\u4f4d\u5355\u72ec\u8868\u793a\u4e00\u79cd\u72b6\u6001\uff0c\u5b9a\u4e49\u5728&lt;linux/page-flags.h&gt;\u4e2d\u3002</p> <p>_count\uff1a\u5b58\u653e\u9875\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u5f53\u9875\u88ab\u5206\u914d\u7ed9\u4e00\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\u65f6\uff0c\u8fd9\u4e2a\u8ba1\u6570\u5668\u4f1a\u589e\u52a0\u3002\u5f53\u9875\u88ab\u91ca\u653e\u65f6\uff0c\u8ba1\u6570\u5668\u51cf\u5c11\u3002\u76f4\u5230\u8ba1\u6570\u5668\u964d\u81f30\uff0c\u9875\u624d\u80fd\u88ab\u56de\u6536\u3002</p> <p>_mapcount\uff1a\u7528\u4e8e\u8bb0\u5f55\u9875\u8868\u9879\u6620\u5c04\u5230\u8be5\u7269\u7406\u9875\u7684\u6b21\u6570\u3002\u8fd9\u901a\u5e38\u7528\u4e8e\u5171\u4eab\u5185\u5b58\u9875\uff0c\u591a\u4e2a\u8fdb\u7a0b\u53ef\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u7269\u7406\u9875\u3002</p> <p>mapping\uff1a\u6307\u5411\u4e00\u4e2aaddress_space\u7ed3\u6784\u7684\u6307\u9488\uff0c\u8fd9\u4e2a\u7ed3\u6784\u4f53\u7528\u4e8e\u63cf\u8ff0\u4e0e\u6587\u4ef6\u76f8\u5173\u7684\u5185\u5b58\u6620\u5c04\u4fe1\u606f\u3002\u5982\u679c\u9875\u5c5e\u4e8e\u6587\u4ef6\u7f13\u5b58\uff0c\u8fd9\u4e2a\u5b57\u6bb5\u5c06\u6307\u5411\u76f8\u5e94\u7684address_space\u7ed3\u6784\u3002</p> <p>index\uff1a\u8868\u793a\u9875\u5728\u6620\u5c04\u7684\u6587\u4ef6\u4e2d\u7684\u504f\u79fb\u91cf\uff0c\u5373\u9875\u5728\u6587\u4ef6\u4e2d\u7684\u7d22\u5f15\u53f7\u3002</p> <p>lru\uff1a\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u8282\u70b9\uff0c\u7528\u4e8e\u5c06\u9875\u94fe\u5165\u5230\u5404\u79cd\u94fe\u8868\u4e2d\uff0c\u6bd4\u5982\u6d3b\u8dc3\u94fe\u8868\u3001\u4e0d\u6d3b\u8dc3\u94fe\u8868\u7b49\u3002\u8fd9\u662f\u5185\u6838\u5b9e\u73b0\u9875\u7f6e\u6362\u7b97\u6cd5\uff08\u5982lru\uff09\u7684\u4e00\u90e8\u5206\u3002</p> <p>virtual\uff1a\u9875\u5728\u865a\u62df\u5185\u5b58\u4e2d\u7684\u5730\u5740\u3002</p> <p>\u4e3a\u4e86\u66f4\u597d\u5730\u7ba1\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u5185\u5b58\u548c\u4f18\u5316\u5185\u5b58\u5206\u914d\u7b56\u7565\uff0c\u5185\u6838\u8fd8\u5c06\u9875\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u533a(zone)\uff0c\u901a\u5e38\u5212\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u533a\uff1a</p> <ul> <li> <p>ZONE_DMA\uff1a\u7528\u4e8edma\u64cd\u4f5c\u7684\u5185\u5b58\u533a\uff0c\u901a\u5e38\u4f4d\u4e8e\u7269\u7406\u5185\u5b58\u7684\u4f4e\u5730\u5740\u90e8\u5206\u3002</p> </li> <li> <p>ZONE_DMA32\uff1a\u7528\u4e8e\u652f\u630132\u4f4d\u5730\u5740\u603b\u7ebf\u7684 DMA \u8bbe\u5907\uff0c\u4ec5\u572864\u4f4d\u7cfb\u7edf\u4e0a\u6709\u6548\u3002</p> </li> <li> <p>ZONE_NORMAL\uff1a\u666e\u901a\u7684\u5185\u5b58\u533a\uff0c\u53ef\u4ee5\u7531\u5185\u6838\u548c\u7528\u6237\u7a7a\u95f4\u8fdb\u7a0b\u4f7f\u7528\u3002</p> </li> <li> <p>ZONE_HIGHMEM\uff1a\u9ad8\u7aef\u5185\u5b58\u533a\uff0c\u7528\u4e8e\u5904\u7406\u8d85\u8fc7\u76f4\u63a5\u6620\u5c04\u8303\u56f4\u7684\u5185\u5b58\u3002</p> </li> </ul> <p>\u4f7f\u7528<code>cat /proc/zoneinfo</code>\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u7cfb\u7edf\u7684\u5185\u5b58\u533a\u4fe1\u606f\u3002\u533a\u7684\u4f7f\u7528\u548c\u5206\u5e03\u4e0e\u4f53\u7cfb\u7ed3\u6784\u5bc6\u5207\u76f8\u5173\uff0c\u5185\u6838\u5c06\u9875\u5212\u5206\u4e3a\u533a\uff0c\u5c31\u53ef\u4ee5\u6839\u636e\u7528\u9014\u8fdb\u884c\u5206\u914d\u3002\u533a\u7684\u5212\u5206\u6ca1\u6709\u7269\u7406\u610f\u4e49\uff0c\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u7ba1\u7406\u800c\u91c7\u53d6\u7684\u4e00\u79cd\u903b\u8f91\u5206\u7ec4\u3002</p>"},{"location":"linux/kernel/mm/#_3","title":"\u9875\u7684\u5206\u914d\u4e0e\u91ca\u653e","text":"<p>\u5185\u6838\u63d0\u4f9b\u4e86\u4e00\u4e9b\u4ee5\u9875\u4e3a\u5355\u4f4d\u7684\u8fde\u7eed\u5185\u5b58\u5206\u914d\u4e0e\u91ca\u653e\u7684\u51fd\u6570\uff0c\u4e5f\u88ab\u79f0\u4e3a\u4f4e\u7ea7\u9875\u5206\u914d\u5668\uff0c\u662f\u4f19\u4f34\u7cfb\u7edf\u9875\u5206\u914d\u7684\u6838\u5fc3\u51fd\u6570\uff1a</p> \u51fd\u6570 \u63cf\u8ff0 alloc_page(gfp_mask) \u53ea\u5206\u914d\u4e00\u9875\uff0c\u8fd4\u56de\u6307\u5411\u9875\u7684\u6307\u9488 alloc_pages(gfp_mask, order) \u5206\u914d2<sup>order</sup>\u4e2a\u9875\uff0c\u8fd4\u56de\u6307\u5411\u7b2c\u4e00\u9875\u7684\u6307\u9488 __get_free_page(gfp_mask) \u53ea\u5206\u914d\u4e00\u9875\uff0c\u8fd4\u56de\u6307\u5411\u5176\u903b\u8f91\u5730\u5740\u7684\u6307\u9488 __get_free_pages(gfp_mask, order) \u5206\u914d2<sup>order</sup>\u4e2a\u9875\uff0c\u8fd4\u56de\u6307\u5411\u7b2c\u4e00\u9875\u903b\u8f91\u5730\u5740\u7684\u6307\u9488 get_zero_page(gfp_mask) \u53ea\u5206\u914d\u4e00\u9875\uff0c\u586b\u5145\u4e3a0\uff0c\u8fd4\u56de\u6307\u5411\u5176\u903b\u8f91\u5730\u5740\u7684\u6307\u9488 __free_pages(page, order) \u4f20\u5165\u9875\u7684\u6307\u9488\uff0c\u91ca\u653e2<sup>order</sup>\u4e2a\u9875 free_pages(addr, order) \u4f20\u5165\u7b2c\u4e00\u9875\u7684\u903b\u8f91\u5730\u5740\uff0c\u91ca\u653e2<sup>order</sup>\u4e2a\u9875 free_page(addr) \u91ca\u653e\u5355\u5f20\u9875 <p>\u6240\u6709\u7684\u591a\u9875\u7533\u8bf7\u6216\u91ca\u653e\u51fd\u6570\u90fd\u5e26\u4e00\u4e2a\u53c2\u6570 order \u8868\u793a\u7533\u8bf7\u7684\u5185\u5b58\u5757\u7684\u9636\u6570\uff0c\u6bd4\u5982 32 \u9875\u5185\u5b58\uff0corder \u5c31\u7b49\u4e8e 5\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u7533\u8bf7 33 \u9875\u5185\u5b58\uff0c\u6839\u636e\u8ba1\u7b97 order \u4e3a6\uff0c\u56e0\u6b64\u4f1a\u4e00\u6b21\u6027\u7533\u8bf7 64 \u9875\u5185\u5b58\uff0c\u8fd9\u662f\u4e00\u79cd\u6d6a\u8d39\u3002\u90a3\u4e48\u5982\u679c\u5148\u7533\u8bf7 32 \u9875\u5185\u5b58\uff0c\u7136\u540e\u518d\u7533\u8bf7 1 \u9875\u5185\u5b58\uff0c\u662f\u5426\u53ef\u884c\u5462\uff1f\u7b54\u6848\u662f\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0d\u53ef\u884c\uff0c\u56e0\u4e3a\u591a\u6b21\u7533\u8bf7\u7684\u5185\u5b58\u4e0d\u4e00\u5b9a\u662f\u8fde\u7eed\u7684\u3002\u5982\u679c\u7a0b\u5e8f\u7684\u5e94\u7528\u573a\u666f\u8981\u6c42\u5185\u5b58\u8fde\u7eed\uff0c\u5219\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u53ef\u884c\u3002</p> <p>\u6362\u4e00\u79cd\u89d2\u5ea6\u8bb2\uff0c\u5982\u679c\u5e76\u4e0d\u8981\u6c42\u8fde\u7eed\u5185\u5b58\uff0c\u5e94\u8be5\u4f18\u5148\u591a\u6b21\u4f7f\u7528<code>alloc_page()</code>\u51fd\u6570\uff0c\u5373\u4e00\u6b21\u7533\u8bf7 1 \u9875\u5185\u5b58\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5185\u5b58\u7684\u6d6a\u8d39\u3002</p>"},{"location":"linux/kernel/mm/#_4","title":"\u5b57\u8282\u7684\u5206\u914d\u4e0e\u91ca\u653e","text":""},{"location":"linux/kernel/mm/#kmalloc","title":"kmalloc()","text":"<p><code>kmalloc()</code>\u4e0e\u7528\u6237\u7a7a\u95f4\u7684<code>malloc()</code>\u7c7b\u4f3c\uff0c\u90fd\u662f\u5206\u914d\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\u4e00\u5757\u5185\u5b58\uff0c\u533a\u522b\u5728\u4e8e<code>kmalloc()</code>\u591a\u4e86\u4e00\u4e2aflags\u53c2\u6570\uff1a</p> <pre><code>void *kmalloc(size_t size, gfp_t flags);\n</code></pre> <p>\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5185\u5b58\u5757\u7684\u6307\u9488\uff0c\u81f3\u5c11\u6709size\u5927\u5c0f\u3002\u6240\u5206\u914d\u7684\u5185\u5b58\u533a\u5728\u7269\u7406\u4e0a\u662f\u8fde\u7eed\u7684\u4e14\u4e0d\u6e05\u96f6\u3002\u9664\u975e\u6ca1\u6709\u8db3\u591f\u7684\u5185\u5b58\u53ef\u7528\uff0c\u5426\u5219\u5185\u6838\u603b\u80fd\u5206\u914d\u6210\u529f\u3002<code>kmalloc()</code>\u5206\u914d\u51fd\u6570\u603b\u662f\u8c03\u7528<code>__get_free_pages()</code>\u6765\u5206\u914d\u5185\u5b58\uff0c\u901a\u5e38\u6765\u8bf4\u5176\u6700\u5927\u53ea\u80fd\u5206\u914d32\u4e2a\u9875\uff0c\u4e5f\u5c31\u662f128k\u5927\u5c0f\u3002</p> <p>\u5f53\u7136\uff0c\u5728\u5bf9<code>kmalloc()</code>\u8c03\u7528\u4e4b\u540e\uff0c\u4f60\u8fd8\u662f\u9700\u8981\u68c0\u67e5\u8fd4\u56de\u503c\u662f\u5426\u4e3aNULL\uff1a</p> <p>Example</p> <pre><code>struct dog *p;\np = kmalloc(sizeof(struct dog), GPF_KERNEL)\uff1b\nif(!p)\n    /*\u5904\u7406\u9519\u8bef*/\n</code></pre> <p>\u4e0d\u7ba1\u662f\u5728\u9875\u5206\u914d\u51fd\u6570\u8fd8\u662f\u5728<code>kmalloc()</code>\u4e2d\uff0c\u90fd\u7528\u5230\u4e86\u5206\u914d\u5668\u6807\u5fd7\u3002\u6807\u5fd7\u5206\u4e3a\u4e09\u7c7b\uff1a\u884c\u4e3a\u4fee\u9970\u7b26\u3001\u533a\u4fee\u9970\u7b26\u548c\u7c7b\u578b\u6807\u5fd7\u3002\u7c7b\u578b\u6807\u5fd7\u7ec4\u5408\u4e86\u524d\u4e24\u8005\uff0c\u7b80\u5316\u4e86\u4fee\u9970\u7b26\u7684\u4f7f\u7528\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u7c7b\u578b\u6807\u5fd7\u5373\u53ef\u3002\u5185\u6838\u4e2d\u6700\u5e38\u7528\u7684\u5c31\u662f GPF_KERNEL\uff0c\u8be5\u6807\u5fd7\u9002\u7528\u4e8e\u7edd\u5927\u591a\u6570\u5185\u5b58\u5206\u914d\u573a\u666f\u3002\u7136\u800c\u8fd9\u79cd\u5206\u914d\u65b9\u5f0f\u53ef\u80fd\u4f1a\u5f15\u8d77\u7761\u7720\uff0c\u6240\u4ee5\u53ea\u80fd\u7528\u5728\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d\u3002</p> <p>\u53e6\u4e00\u4e2a\u622a\u7136\u76f8\u53cd\u7684\u6807\u5fd7\u662f GFP_ATOMIC\uff0c\u8fd9\u4e2a\u6807\u5fd7\u8868\u793a\u4e0d\u80fd\u7761\u7720\u7684\u5185\u5b58\u5206\u914d\u3002\u4e0e GPF_KERNEL \u76f8\u6bd4\uff0c\u5b83\u5206\u914d\u6210\u529f\u7684\u673a\u4f1a\u8f83\u5c0f\uff0c\u4f46\u662f\u5728\u4e00\u4e9b\u65e0\u6cd5\u7761\u7720\u7684\u4ee3\u7801\u4e2d\uff0c\u4e5f\u53ea\u80fd\u9009\u62e9 GFP_ATOMIC\u3002GFP_DMA \u6807\u5fd7\u8868\u793a\u5206\u914d\u5668\u5fc5\u987b\u4ece ZONE_DMA \u8fdb\u884c\u5206\u914d\u7684\u8bf7\u6c42\uff0c\u8be5\u6807\u5fd7\u7528\u5728\u9700\u8981 DMA \u7684\u5185\u5b58\u7684\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u4e2d\u3002\u5728\u7f16\u5199\u7684\u7edd\u5927\u591a\u6570\u4ee3\u7801\u4e2d\uff0c\u8981\u4e48\u662f GPF_KERNEL\uff0c\u8981\u4e48\u662f GFP_ATOMIC\uff0c\u5176\u4ed6\u6807\u5fd7\u7528\u5230\u7684\u60c5\u51b5\u6781\u5c11\uff0c\u5c31\u4e0d\u505a\u8bf4\u660e\u4e86\u3002\u4e0b\u9762\u8fd9\u5f20\u8868\u683c\u603b\u7ed3\u4e86\u6807\u5fd7\u7684\u4f7f\u7528\u573a\u666f\u3002</p> \u60c5\u5f62 \u76f8\u5e94\u6807\u5fd7 \u53ef\u4ee5\u7761\u7720\u7684\u8fdb\u7a0b\u4e0a\u4e0b\u6587 GPF_KERNEL \u4e0d\u53ef\u4ee5\u7761\u7720\u7684\u8fdb\u7a0b\u4e0a\u4e0b\u6587 GFP_ATOMIC \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f GFP_ATOMIC \u8f6f\u4e2d\u65ad GFP_ATOMIC TASKLET GFP_ATOMIC \u53ef\u4ee5\u7761\u7720\u7684DMA\u5185\u5b58 GFP_DMA | GPF_KERNEL \u4e0d\u53ef\u4ee5\u7761\u7720\u7684DMA\u5185\u5b58 GFP_DMA | GFP_ATOMIC <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5c3d\u7ba1<code>kmalloc()</code>\u51fd\u6570\u5728\u6ca1\u6709\u7a7a\u95f2\u5185\u5b58\u65f6\u4f1a\u5931\u8d25\uff0c\u4f46\u662f\u5185\u6838\u603b\u4f1a\u5c3d\u53ef\u80fd\u6ee1\u8db3\u8fd9\u4e2a\u5185\u5b58\u5206\u914d\u8bf7\u6c42\u3002\u56e0\u6b64\uff0c\u5728\u7cfb\u7edf\u5185\u5b58\u7a7a\u95f4\u4e0d\u8db3\u7684\u60c5\u51b5\u4e0b\uff0c\u5f53\u7cfb\u7edf\u4e3a\u4e86\u6ee1\u8db3<code>kmalloc()</code>\u7684\u5206\u914d\u8bf7\u6c42\uff0c\u4f1a\u8bd5\u56fe\u4e0e\u78c1\u76d8\u4ea4\u6362\u5c3d\u53ef\u80fd\u591a\u7684\u9875\u7a7a\u95f4\u800c\u5bfc\u81f4\u7cfb\u7edf\u5361\u6b7b\u3002</p>"},{"location":"linux/kernel/mm/#kzalloc","title":"kzalloc()","text":"<p><code>kzalloc()</code>\u4e0e<code>kmalloc()</code>\u529f\u80fd\u7c7b\u4f3c\uff0c\u4f46\u662f\u4f1a\u5bf9\u5206\u914d\u7684\u5185\u5b58\u5757\u8fdb\u884c\u6e05\u96f6\u64cd\u4f5c\uff1a</p> <pre><code>static inline void *kzalloc(size_t size, gfp_t flags)\n{\n    return kmalloc(size, flags | __GFP_ZERO);\n}\n</code></pre>"},{"location":"linux/kernel/mm/#vmalloc","title":"vmalloc()","text":"<p><code>kmalloc()</code>\u5206\u914d\u7684\u5185\u5b58\u5728\u7269\u7406\u5730\u5740\u4e0a\u662f\u8fde\u7eed\u7684\uff0c\u4f46\u662f<code>vmalloc()</code>\u53ef\u4ee5\u662f\u4e0d\u8fde\u7eed\u7684\u3002\u8be5\u51fd\u6570\u9002\u7528\u4e8e\u6709\u5927\u5757\u5185\u5b58\u7684\u9700\u6c42\uff0c\u4f46\u662f\u5bf9\u5185\u5b58\u8fde\u7eed\u6027\u6ca1\u6709\u8981\u6c42\u7684\u573a\u666f\u3002</p> <p>\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u786c\u4ef6\u8bbe\u5907\u9700\u8981\u8bbf\u95ee\u7269\u7406\u5730\u5740\u8fde\u7eed\u7684\u5185\u5b58\u9875\u3002\u8fd9\u662f\u56e0\u4e3a\u8bb8\u591a\u4f53\u7cfb\u7ed3\u6784\u7684\u786c\u4ef6\u8bbe\u5907\u5b58\u5728\u4e8e MMU \u4e4b\u5916\uff0c\u5b83\u4eec\u65e0\u6cd5\u5904\u7406\u865a\u62df\u5730\u5740\u3002\u56e0\u6b64\uff0c\u786c\u4ef6\u8bbe\u5907\u6240\u4f7f\u7528\u7684\u4efb\u4f55\u5185\u5b58\u533a\u57df\u90fd\u5fc5\u987b\u662f\u7269\u7406\u4e0a\u8fde\u7eed\u7684\u5185\u5b58\u5757\u3002</p> <p>\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u7528\u6237\u7a7a\u95f4\u4f7f\u7528\u7684\u5185\u5b58\u5219\u6ca1\u6709\u8fd9\u6837\u7684\u4e25\u683c\u8981\u6c42\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5c06\u4e0d\u8fde\u7eed\u7684\u7269\u7406\u7a7a\u95f4\u6620\u5c04\u5230\u8fde\u7eed\u7684\u865a\u62df\u7a7a\u95f4\u3002</p> <p><code>vmalloc()</code>\u5728\u5206\u914d\u5927\u5757\u5185\u5b58\u4e0a\u6bd4<code>kmalloc()</code>\u6709\u4f18\u52bf\uff0c\u4ee3\u4ef7\u662f\u9700\u8981\u5bf9\u4e0d\u8fde\u7eed\u7684\u9875\u8fdb\u884c\u4e13\u95e8\u7684\u6620\u5c04\u5904\u7406\uff0c\u6240\u4ee5\u5176\u6027\u80fd\u4e0d\u5982<code>kmalloc()</code>\uff0c\u4ec5\u5728\u4e0d\u5f97\u5df2\u7684\u60c5\u5f62\u4e0b\u624d\u4f1a\u4f7f\u7528\u3002</p> <p><code>vmalloc()</code>\u7684\u5206\u914d\u548c\u91ca\u653e\u63a5\u53e3\u5982\u4e0b\uff1a</p> <pre><code>void *vmalloc(unsinged long size)\n\nvoid vfree(const void *addr)\n</code></pre> <p>\u8fd9\u4e24\u4e2a\u51fd\u6570\u90fd\u4f1a\u7761\u7720\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u3002</p>"},{"location":"linux/kernel/mm/#_5","title":"\u4f19\u4f34\u7cfb\u7edf","text":"<p>\u4f19\u4f34\u7cfb\u7edf\uff08buddy system\uff09\u662f\u5185\u6838\u8bbe\u8ba1\u7528\u4e8e\u89e3\u51b3\u5185\u5b58\u788e\u7247\u5316\u7684\u4e00\u79cd\u7ba1\u7406\u7cfb\u7edf\u3002\u8be5\u7cfb\u7edf\u5c06\u7a7a\u95f2\u7684\u9875\u5212\u5206\u4e3a11\u4e2a\u7ec4\uff0c\u5bf9\u5e9411\u79cd\u5927\u5c0f\u4e0d\u540c\u7684\u8fde\u7eed\u5185\u5b58\u5757\u2014\u2014\u4ece2<sup>0</sup>\u52302<sup>10</sup>\u4e2a\u9875\uff1a</p> <p></p> <p>\u5f53\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u5206\u914d\u5185\u5b58\u65f6\uff0c\u5b83\u4f1a\u6839\u636e\u8bf7\u6c42\u7684\u5927\u5c0f\u627e\u5230\u6700\u63a5\u8fd1\u7684\u4e14\u5927\u5c0f\u8db3\u591f\u7684\u5757\u8fdb\u884c\u5206\u914d\u3002\u5982\u679c\u5206\u914d\u7684\u5757\u6bd4\u6240\u9700\u7684\u5927\u5c0f\u5927\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5757\u4f1a\u88ab\u5206\u6210\u4e24\u4e2a\u5927\u5c0f\u76f8\u7b49\u7684\u5b50\u5757\uff0c\u5176\u4e2d\u4e00\u4e2a\u5b50\u5757\u88ab\u7528\u6765\u6ee1\u8db3\u5185\u5b58\u5206\u914d\u8bf7\u6c42\uff0c\u800c\u53e6\u4e00\u4e2a\u5219\u6210\u4e3a\u5b83\u7684\"\u4f19\u4f34\"\u3002\u5f53\u4e00\u4e2a\u5757\u88ab\u91ca\u653e\u65f6\uff0c\u4f1a\u81ea\u52a8\u5408\u5e76\u7a7a\u95f2\u7684\u4f19\u4f34\u5757\u3002</p> <p><code>cat /proc/pagetypeinfo</code>\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u4e2d\u4f19\u4f34\u7cfb\u7edf\u5404\u4e2a\u5c3a\u5bf8\u7684\u53ef\u7528\u8fde\u7eed\u5185\u5b58\u5757\u6570\u91cf\u3002</p>"},{"location":"linux/kernel/mm/#_6","title":"\u5206\u914d\u7b97\u6cd5","text":"<p>\u5728\u4f19\u4f34\u7cfb\u7edf\u4e2d\uff0c\u5f53\u9700\u8981\u5206\u914d\u4e00\u4e2a\u7279\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u5757\u65f6\uff0c\u7cfb\u7edf\u4f1a\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a</p> <ol> <li> <p>\u9996\u5148\uff0c\u786e\u5b9a\u6240\u9700\u5185\u5b58\u5757\u7684\u5927\u5c0f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u9700\u8981128\u4e2a\u9875\u7684\u5757\uff0c\u7cfb\u7edf\u4f1a\u68c0\u67e5128\u4e2a\u9875\u7684\u7a7a\u95f2\u5757\u94fe\u8868\u3002</p> </li> <li> <p>\u5982\u679c\u5728128\u4e2a\u9875\u7684\u94fe\u8868\u4e2d\u6ca1\u6709\u627e\u5230\u7a7a\u95f2\u5757\uff0c\u7cfb\u7edf\u4f1a\u5bfb\u627e\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u5185\u5b58\u5757\u5c3a\u5bf8\uff0c\u5373256\u4e2a\u9875\u7684\u5757\u3002</p> </li> <li> <p>\u5982\u679c\u5728256\u4e2a\u9875\u7684\u94fe\u8868\u4e2d\u627e\u5230\u4e86\u7a7a\u95f2\u5757\uff0c\u7cfb\u7edf\u4f1a\u5c06\u8fd9\u4e2a\u5757\u5206\u6210\u4e24\u4e2a\u5927\u5c0f\u76f8\u7b49\u7684\u5757\uff0c\u6bcf\u4e2a\u5757\u5305\u542b128\u4e2a\u9875\u3002\u5176\u4e2d\u4e00\u4e2a\u5757\u88ab\u5206\u914d\u7ed9\u8bf7\u6c42\u8005\uff0c\u53e6\u4e00\u4e2a\u5757\u4f5c\u4e3a\u65b0\u7684\u7a7a\u95f2\u5757\u63d2\u5165\u5230128\u4e2a\u9875\u7684\u94fe\u8868\u4e2d\u3002</p> </li> <li> <p>\u5982\u679c256\u4e2a\u9875\u7684\u94fe\u8868\u4e2d\u4e5f\u6ca1\u6709\u7a7a\u95f2\u5757\uff0c\u7cfb\u7edf\u4f1a\u7ee7\u7eed\u68c0\u67e5\u66f4\u5927\u7684\u5757\uff0c\u6bd4\u5982512\u4e2a\u9875\u7684\u5757\u3002</p> </li> <li> <p>\u5982\u679c\u5728512\u4e2a\u9875\u7684\u94fe\u8868\u4e2d\u627e\u5230\u4e86\u7a7a\u95f2\u5757\uff0c\u7cfb\u7edf\u4f1a\u5c06\u8fd9\u4e2a\u5757\u5206\u88c2\u6210\u4e09\u4e2a\u5757\uff1a\u4e24\u4e2a128\u4e2a\u9875\u7684\u5757\u548c\u4e00\u4e2a256\u4e2a\u9875\u7684\u5757\u3002\u5176\u4e2d\u4e00\u4e2a128\u4e2a\u9875\u7684\u5757\u88ab\u5206\u914d\u51fa\u53bb\uff0c\u5176\u4f59\u4e24\u4e2a\u5757\u5206\u522b\u63d2\u5165\u5230\u76f8\u5e94\u7684\u94fe\u8868\u4e2d\u3002</p> </li> </ol> <p>\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f19\u4f34\u7cfb\u7edf\u53ef\u4ee5\u6709\u6548\u5730\u7ba1\u7406\u5185\u5b58\uff0c\u786e\u4fdd\u5185\u5b58\u5206\u914d\u65e2\u9ad8\u6548\u53c8\u7075\u6d3b\u3002</p>"},{"location":"linux/kernel/mm/#_7","title":"\u56de\u6536\u7b97\u6cd5","text":"<p>\u5f53\u5185\u5b58\u5757\u88ab\u91ca\u653e\u65f6\uff0c\u7cfb\u7edf\u4f1a\u68c0\u67e5\u662f\u5426\u6709\u4e0e\u5176\u7269\u7406\u5730\u5740\u8fde\u7eed\u7684\u9875\u5757\uff0c\u5982\u679c\u5b58\u5728\u4e14\u4e24\u8005\u90fd\u662f\u7a7a\u95f2\u7684\uff0c\u5219\u5408\u5e76\u6210\u4e00\u4e2a\u5927\u5757\uff0c\u91cd\u590d\u8be5\u8fc7\u7a0b\u76f4\u5230\u4e0d\u80fd\u5408\u5e76\u4e3a\u6b62\u3002</p>"},{"location":"linux/kernel/mm/#_8","title":"\u5185\u5b58\u5757\u8fc1\u79fb","text":"<p>\u4e3a\u4e86\u7f13\u89e3\u5185\u5b58\u788e\u7247\u7684\u95ee\u9898\uff0c\u4f19\u4f34\u7cfb\u7edf\u53ef\u4ee5\u901a\u8fc7\u6570\u636e\u62f7\u8d1d\u7684\u65b9\u5f0f\u5c06\u5185\u5b58\u5757\u8fdb\u884c\u8fc1\u79fb\uff0c\u4ece\u800c\"\u51d1\u51fa\"\u8fde\u7eed\u7684\u7269\u7406\u9875\u9762\u3002\u4e0b\u9762\u662f\u5185\u6838\u4e2d\u7528\u4e8e\u63cf\u8ff0\u4e0d\u540c\u5185\u5b58\u533a\u57df\u7684\u8fc1\u79fb\u7c7b\u578b\uff1a</p> <ul> <li>MIGRATE_ISOLATE\uff1a\u4e0d\u53ef\u79fb\u52a8\uff0c\u5e76\u4e14\u9700\u8981\u72ec\u7acb\u51fa\u6765\uff0c\u4f8b\u5982\u7528\u4e8e\u8bbe\u5907DMA</li> <li>MIGRATE_CMA\uff1a\u8fde\u7eed\u5185\u5b58\u5206\u914d\uff0c\u901a\u5e38\u7528\u4e8e\u5d4c\u5165\u5f0f\u7cfb\u7edf\u4e2d</li> <li>MIGRATE_HIGHATOMIC\uff1a\u9ad8\u4f18\u5148\u7ea7\u5206\u914d\u64cd\u4f5c</li> <li>MIGRATE_MOVABLE\uff1a\u53ef\u4ee5\u88ab\u81ea\u7531\u8fc1\u79fb</li> <li>MIGRATE_RECLAIMABLE\uff1a\u53ef\u4ee5\u88ab\u56de\u6536\uff0c\u4f8b\u5982\u7f13\u5b58\u9875\u3001\u533f\u540d\u9875</li> <li>MIGRATE_UNMOVABLE\uff1a\u4e0d\u53ef\u79fb\u52a8\uff0c\u4f8b\u5982\u5185\u6838\u4ee3\u7801</li> </ul>"},{"location":"linux/kernel/mm/#slab","title":"slab\u5206\u914d\u5668","text":"<p>\u5185\u6838\u914d\u7f6e\u754c\u9762</p> <p>\u5728general setup-&gt;choose slab allocator\u4e2d\uff0c\u53ef\u4ee5\u9009\u62e9\u4e09\u79cd\u4e0d\u540c\u7684slab\u5206\u914d\u6280\u672f\uff1a</p> <ul> <li>config_slab\uff1a\u9057\u7559\u7248\u672c</li> <li>config_slob\uff1a\u7b80\u5355\u7684\u5206\u914d\u5668\uff0c\u9002\u7528\u4e8e\u5185\u5b58\u53d7\u9650\u7684\u7cfb\u7edf(\u914d\u7f6econfig_embedded\u540e\u53ef\u6fc0\u6d3b)</li> <li>config_slub\uff1a\u9ed8\u8ba4\u5206\u914d\u5668\uff0c\u6bd4slab\u7b80\u5355\uff0c\u6269\u5c55\u6027\u66f4\u597d</li> </ul> <p>\u4f19\u4f34\u7cfb\u7edf\u5b9e\u73b0\u4e86\u4ee5\u9875\u4e3a\u5355\u4f4d\u3001\u5927\u5757\u5185\u5b58\u7684\u5206\u914d\u548c\u91ca\u653e\u3002\u4f46\u662f\uff0c\u5411\u64cd\u4f5c\u7cfb\u7edf\u9891\u7e41\u5730\u7533\u8bf7\u4e0e\u91ca\u653e\u5185\u5b58\u6bd5\u7adf\u8fd8\u662f\u6709\u70b9\u9ebb\u70e6\u3002\u56e0\u6b64\uff0cslab \u5206\u914d\u5668\u5e94\u8fd0\u800c\u751f\u3002</p> <p>slab \u5206\u914d\u5668\u628a\u4e0d\u540c\u7684\u5bf9\u8c61\u5212\u5206\u4e3a\u9ad8\u901f\u7f13\u5b58\uff0c\u5176\u4e2d\u6bcf\u4e2a\u9ad8\u901f\u7f13\u5b58\u4e13\u95e8\u7528\u4e8e\u5b58\u50a8\u4e00\u79cd\u7279\u5b9a\u7c7b\u578b\u7684\u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u9ad8\u901f\u7f13\u5b58\u53ef\u80fd\u7528\u4e8e\u7ba1\u7406\u8fdb\u7a0b\u63cf\u8ff0\u7b26\uff08<code>task_struct</code>\u7ed3\u6784\uff09\uff0c\u800c\u53e6\u4e00\u4e2a\u5219\u7528\u4e8e\u7d22\u5f15\u8282\u70b9\u5bf9\u8c61\uff08<code>struct inode</code>\uff09\u3002\u5f53\u7cfb\u7edf\u9700\u8981\u65b0\u7684\u6570\u636e\u7ed3\u6784\u5b9e\u4f8b\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4ece\u9ad8\u901f\u7f13\u5b58\u4e2d\u83b7\u53d6\u4e00\u4e2a\u73b0\u6210\u7684\u5757\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u65b0\u5185\u5b58\u7684\u6d88\u8017\u3002\u4f7f\u7528\u5b8c\u6bd5\u540e\uff0c\u8be5\u6570\u636e\u7ed3\u6784\u5b9e\u4f8b\u88ab\u5f52\u8fd8\u5230\u9ad8\u901f\u7f13\u5b58\u4e2d\uff0c\u800c\u4e0d\u662f\u88ab\u76f4\u63a5\u91ca\u653e\u3002\u5728\u8fd9\u79cd\u673a\u5236\u4e0b\uff0c\u9ad8\u901f\u7f13\u5b58\u5b9e\u9645\u4e0a\u8d77\u5230\u4e86\u5185\u5b58\u6c60(memory pool)\u7684\u4f5c\u7528\uff0c\u662f\u4e00\u79cd\u975e\u5e38\u5b9e\u7528\u7684\u7ba1\u7406\u5185\u5b58\u7684\u65b9\u5f0f\u3002</p> <p>slab \u5206\u914d\u5668\u7684\u6570\u636e\u7ed3\u6784\u5173\u7cfb\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>slab \u5206\u914d\u5668\u53ef\u4ee5\u5904\u4e8e\u4e09\u79cd\u72b6\u6001\u4e4b\u4e00\uff1a\u6ee1\u3001\u90e8\u5206\u6ee1\u6216\u7a7a\u3002\u6ee1\u7684 slab \u610f\u5473\u7740\u6240\u6709\u5bf9\u8c61\u90fd\u5df2\u5206\u914d\u51fa\u53bb\uff0c\u7a7a\u7684 slab \u5219\u8868\u793a\u6240\u6709\u5bf9\u8c61\u90fd\u672a\u88ab\u5206\u914d\uff0c\u800c\u90e8\u5206\u6ee1\u7684 slab \u5219\u5305\u542b\u4e86\u5df2\u5206\u914d\u548c\u672a\u5206\u914d\u7684\u5bf9\u8c61\u3002\u5f53\u5185\u6838\u8bf7\u6c42\u65b0\u5bf9\u8c61\u65f6\uff0c\u4f18\u5148\u4ece\u90e8\u5206\u6ee1\u7684 slab \u4e2d\u5206\u914d\u3002\u5982\u679c\u6ca1\u6709\uff0c\u5219\u4ece\u7a7a\u7684 slab \u4e2d\u5206\u914d\u3002\u5982\u679c\u8fde\u7a7a\u7684 slab \u90fd\u6ca1\u6709\uff0c\u5c31\u4f1a\u521b\u5efa\u65b0\u7684 slab\u3002</p> <p>\u6bcf\u4e2a\u9ad8\u901f\u7f13\u5b58\u90fd\u4f7f\u7528<code>struct kmem_cache</code>\u7ed3\u6784\u4f53\u8868\u793a\u3002\u8fd9\u4e2a\u7ed3\u6784\u5305\u542b\u4e09\u4e2a\u94fe\u8868\uff1aslabs_full\u3001slabs_partial\u3001slabs_empty\uff0c\u8fd9\u4e9b\u94fe\u8868\u5305\u542b\u4e86\u9ad8\u901f\u7f13\u5b58\u4e2d\u7684\u6240\u6709 slab\u3002</p> <pre><code>struct kmem_cache *kmem_cache_create(const char *name, size_t size,\n                                     size_t align, unsigned int flags,\n                                     void (*ctor)(void *))              //\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9ad8\u901f\u7f13\u5b58\nint kmem_cache_destroy(struct kmem_cache *cachep)                       //\u64a4\u9500\u4e00\u4e2a\u9ad8\u901f\u7f13\u5b58\nvoid *kmem_cache_alloc(struct kmem_cache *cachep, gfp_t flags)          //\u4ece\u7f13\u5b58\u4e2d\u5206\u914d\u5bf9\u8c61\nvoid kmem_cache_free(struct kmem_cache *cachep, void *objp)             //\u91ca\u653e\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5c06\u5b83\u8fd4\u56de\u7ed9\u539f\u5148\u7684slab\n</code></pre> <p>\u9ad8\u901f\u7f13\u5b58\u7684\u4f7f\u7528\u7edf\u8ba1\u60c5\u51b5\u53ef\u4ee5\u4ece/proc/slabinfo\u4e2d\u83b7\u5f97\u3002\u5176\u4e2d\u5f62\u5982 kmalloc-xxx \u7684 slab \u79f0\u4e3a\u901a\u7528\u578b slab\uff0c\u542b\u6709\u5177\u4f53\u540d\u5b57\u7684 slab \u79f0\u4e3a\u4e13\u7528 slab\uff0c\u7528\u6765\u4e3a\u7279\u5b9a\u7684\u7ed3\u6784\u4f53\u5206\u914d\u5185\u5b58\u3002  </p> <p>\u7531\u4e8e<code>fork()</code>\u7cfb\u7edf\u8c03\u7528\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u800c\u8fdb\u7a0b\u7684\u521b\u5efa\u4e0e\u9500\u6bc1\u662f\u975e\u5e38\u9891\u7e41\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5728\u6587\u4ef6&lt;kernel/fork.c&gt;\u4e2d\uff0c\u770b\u5230\u8bb8\u591a\u9ad8\u901f\u7f13\u5b58\u7684\u5b9e\u73b0\uff1a</p> <pre><code>/* slab cache for signal_struct structures (tsk-&gt;signal) */\nstatic struct kmem_cache *signal_cachep;\n\n/* slab cache for sighand_struct structures (tsk-&gt;sighand) */\nstruct kmem_cache *sighand_cachep;\n\n/* slab cache for files_struct structures (tsk-&gt;files) */\nstruct kmem_cache *files_cachep;\n\n/* slab cache for fs_struct structures (tsk-&gt;fs) */\nstruct kmem_cache *fs_cachep;\n\n/* slab cache for vm_area_struct structures */\nstatic struct kmem_cache *vm_area_cachep;\n\n/* slab cache for mm_struct structures (tsk-&gt;mm) */\nstatic struct kmem_cache *mm_cachep;\n</code></pre>"},{"location":"linux/kernel/oom/","title":"OOM","text":"<p>OOM\uff0c\u5373out of memory\u7684\u7f29\u5199\uff0c\u662f\u5185\u6838\u7684\u4e00\u79cd\u5185\u5b58\u7ba1\u7406\u673a\u5236\u3002\u5728\u53ef\u7528\u5185\u5b58\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7cfb\u7edf\u7684\u6b63\u5e38\u8fd0\u884c\uff0cOOM\u4f1a\u9009\u62e9\u6740\u6389\u4e00\u4e9b\u8fdb\u7a0b\u91ca\u653e\u5185\u5b58\u3002</p> <p>\u901a\u5e38OOM\u89e6\u53d1\u7684\u6d41\u7a0b\u662f\uff1a\u8fdb\u7a0bA\u60f3\u8981\u5206\u914d\u7269\u7406\u5185\u5b58\uff08\u901a\u5e38\u662f\u5f53\u8fdb\u7a0b\u771f\u6b63\u53bb\u8bfb\u5199\u4e00\u5757\u5185\u6838\u5df2\u7ecf\u201c\u5206\u914d\u201d\u7ed9\u5b83\u7684\u5185\u5b58\uff09-&gt;\u89e6\u53d1\u7f3a\u9875\u5f02\u5e38-&gt;\u5185\u6838\u53bb\u5206\u914d\u7269\u7406\u5185\u5b58-&gt;\u7269\u7406\u5185\u5b58\u4e0d\u591f-&gt;\u89e6\u53d1OOM\u3002</p> <p>\u5f53\u7cfb\u7edf\u7269\u7406\u5185\u5b58\u4e0d\u8db3\u65f6\uff0coom_killer\u904d\u5386\u5f53\u524d\u6240\u6709\u8fdb\u7a0b\uff0c\u6839\u636e\u8fdb\u7a0b\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u8fdb\u884c\u6253\u5206\uff0c\u7136\u540e\u4ece\u4e2d\u9009\u62e9\u4e00\u4e2a\u5206\u6570\u6700\u9ad8\u7684\u8fdb\u7a0b\uff0c\u6740\u6b7b\u5b83\u83b7\u53d6\u5185\u5b58\u3002</p> <p>\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>bool out_of_memory(struct oom_control *oc)\n{\n    unsigned long freed = 0;\n\n    //\u5982\u679c\u7981\u7528\u4e86oom killer\uff0c\u76f4\u63a5\u8fd4\u56defalse\n    if (oom_killer_disabled)\n        return false;\n\n    //\u5982\u679c\u5f53\u524d\u8def\u5f84\u4e0d\u662f\u7531memory cgroup\u63a7\u5236\u7684\uff0c\u5219\u5524\u9192\u5176\u4ed6\u7a0b\u5e8f\u6765\u5904\u7406oom\n    if (!is_memcg_oom(oc)) {\n        blocking_notifier_call_chain(&amp;oom_notify_list, 0, &amp;freed);\n        if (freed &gt; 0)\n            /* Got some memory back in the last second. */\n            return true;\n    }\n\n    /*\n     * If current has a pending SIGKILL or is exiting, then automatically\n     * select it.  The goal is to allow it to allocate so that it may\n     * quickly exit and free its memory.\n     */\n    if (task_will_free_mem(current)) {\n        mark_oom_victim(current);\n        queue_oom_reaper(current);\n        return true;\n    }\n\n    /*\n     * The OOM killer does not compensate for IO-less reclaim.\n     * pagefault_out_of_memory lost its gfp context so we have to\n     * make sure exclude 0 mask - all other users should have at least\n     * ___GFP_DIRECT_RECLAIM to get here. But mem_cgroup_oom() has to\n     * invoke the OOM killer even if it is a GFP_NOFS allocation.\n     */\n    if (oc-&gt;gfp_mask &amp;&amp; !(oc-&gt;gfp_mask &amp; __GFP_FS) &amp;&amp; !is_memcg_oom(oc))\n        return true;\n\n    /*\n     * Check if there were limitations on the allocation (only relevant for\n     * NUMA and memcg) that may require different handling.\n     */\n    oc-&gt;constraint = constrained_alloc(oc);\n    if (oc-&gt;constraint != CONSTRAINT_MEMORY_POLICY)\n        oc-&gt;nodemask = NULL;\n\n    /*\n    * \u68c0\u67e5sysctl_panic_on_oom\u53c2\u6570\uff0c\u662f\u5426\u8981\u89e6\u53d1oom_panic\uff0c\u8be5\u503c\u4e00\u822c\u8bbe\u4e3a0\uff0c\u5373\u4e0d\u89e6\u53d1\n    */\n    check_panic_on_oom(oc);\n\n    /*\n    * \u68c0\u67e5\u662f\u5426\u9700\u8981\u6740\u6b7b\u5f53\u524d\u8fdb\u7a0b\n    */\n    if (!is_memcg_oom(oc) &amp;&amp; sysctl_oom_kill_allocating_task &amp;&amp;\n        current-&gt;mm &amp;&amp; !oom_unkillable_task(current) &amp;&amp;\n        oom_cpuset_eligible(current, oc) &amp;&amp;\n        current-&gt;signal-&gt;oom_score_adj != OOM_SCORE_ADJ_MIN) {\n        get_task_struct(current);\n        oc-&gt;chosen = current;\n        oom_kill_process(oc, \"Out of memory (oom_kill_allocating_task)\");\n        return true;\n    }\n\n    /*\n    * \u5982\u679c\u5f53\u524d\u8fdb\u7a0b\u6ca1\u6709\u88ab\u6740\u6b7b\uff0c\u5219\u9009\u62e9\u5176\u4ed6\u8fdb\u7a0b\n    */\n    select_bad_process(oc);\n    /* Found nothing?!?! */\n    if (!oc-&gt;chosen) {\n        dump_header(oc, NULL);\n        pr_warn(\"Out of memory and no killable processes...\\n\");\n        /*\n         * If we got here due to an actual allocation at the\n         * system level, we cannot survive this and will enter\n         * an endless loop in the allocator. Bail out now.\n         */\n        if (!is_sysrq_oom(oc) &amp;&amp; !is_memcg_oom(oc))\n            panic(\"System is deadlocked on memory\\n\");\n    }\n    if (oc-&gt;chosen &amp;&amp; oc-&gt;chosen != (void *)-1UL)\n        oom_kill_process(oc, !is_memcg_oom(oc) ? \"Out of memory\" :\n                 \"Memory cgroup out of memory\");\n    return !!oc-&gt;chosen;\n}\n</code></pre> <p>\u51fd\u6570<code>check_panic_on_oom()</code>\u4f1a\u6839\u636e<code>sysctl_panic_on_oom</code>\u53c2\u6570\u505a\u76f8\u5e94\u7684\u5904\u7406\uff1a</p> <pre><code>static void check_panic_on_oom(struct oom_control *oc)\n{\n    if (likely(!sysctl_panic_on_oom))\n        return;\n    if (sysctl_panic_on_oom != 2) {\n        /*\n         * panic_on_oom == 1 only affects CONSTRAINT_NONE, the kernel\n         * does not panic for cpuset, mempolicy, or memcg allocation\n         * failures.\n         */\n        if (oc-&gt;constraint != CONSTRAINT_NONE)\n            return;\n    }\n    /* Do not panic for oom kills triggered by sysrq */\n    if (is_sysrq_oom(oc))\n        return;\n    dump_header(oc, NULL);\n    panic(\"Out of memory: %s panic_on_oom is enabled\\n\",\n        sysctl_panic_on_oom == 2 ? \"compulsory\" : \"system-wide\");\n}\n</code></pre> <p>\u5b83\u6709\u4e09\u79cd\u9009\u62e9\uff1a</p> <ol> <li>\u5f53\u8be5\u53c2\u6570\u4e3a2\u65f6\uff1a\u4ea7\u751fkernel panic\uff0c\u5373\u7cfb\u7edf\u5d29\u6e83</li> <li>\u5f53\u8be5\u53c2\u6570\u4e3a0\u65f6\uff1a\u542f\u52a8OOM killer\uff0c\u5e72\u6389\u4e00\u4e9b\u8fdb\u7a0b\uff0c\u91ca\u653e\u5185\u5b58\uff0c\u8ba9\u7cfb\u7edf\u8fd8\u80fd\u6b63\u5e38\u8fd0\u8f6c</li> <li>\u5f53\u8be5\u53c2\u6570\u4e3a1\u65f6\uff1a\u8981\u5206\u60c5\u51b5\u5904\u7406\u3002<code>enum oom_constraint</code>\u5b9a\u4e49\u4e86\u56db\u79cd\u60c5\u51b5\uff1a</li> </ol> <pre><code>enum oom_constraint {\n    CONSTRAINT_NONE,\n    CONSTRAINT_CPUSET,\n    CONSTRAINT_MEMORY_POLICY,\n    CONSTRAINT_MEMCG,\n}; \n</code></pre> <p>\u5bf9\u4e8eUMA\u67b6\u6784\u800c\u8a00\uff0c<code>oom_constraint</code>\u6c38\u8fdc\u662fCONSTRAINT_NONE\uff0c\u56e0\u4e3aUMA\u67b6\u6784\uff0c\u5185\u5b58\u662f\u7edf\u4e00\u7ba1\u7406\u7684\uff0c\u89e6\u53d1OOM\u90a3\u5c31\u662f\u5185\u5b58\u4e0d\u8db3\u3002</p> <p>\u5bf9\u4e8eNUMA\u67b6\u6784\u5c31\u590d\u6742\u5f97\u591a\uff0c\u56e0\u4e3aNUMA\u67b6\u6784\u4e0b\uff0c\u5185\u5b58\u6839\u636e\u4e0d\u540c\u7684node\u5206\u533a\u7ba1\u7406\u3002\u5f53\u89e6\u53d1OOM\uff0c\u4ec5\u80fd\u8bf4\u660e\u5f53\u524d\u5206\u914d\u5185\u5b58\u7684node\u51fa\u73b0\u4e86\u72b6\u51b5\uff0c\u800c\u5176\u5b83node\u53ef\u80fd\u6709\u5145\u8db3\u7684\u5185\u5b58\u3002</p> <ul> <li> <p><code>CONSTRAINT_CPUSET</code>\uff1acpuset\u662f\u5185\u6838\u7684\u4e00\u79cd\u673a\u5236\uff0c\u5c06\u7279\u5b9a\u7684cpu\u548cmemory node\u5206\u914d\u7ed9\u7279\u5b9a\u7684\u8fdb\u7a0b\u3002</p> </li> <li> <p><code>CONSTRAINT_MEMORY_POLICY</code>\uff1aNUMA\u67b6\u6784\u4e0b\u7684memory node\u7684\u5206\u914d\u7b56\u7565\uff0c\u53ef\u4ee5\u9488\u5bf9\u7279\u5b9a\u7684\u8fdb\u7a0b\u3002</p> </li> <li> <p><code>CONSTRAINT_MEMCG</code>\uff1amemcg\u5c31\u662fmemory control group\uff0c\u53ef\u4ee5\u9650\u5236\u8fdb\u7a0b\u7684cpu\u548c\u5185\u5b58\u8d44\u6e90\u3002</p> </li> </ul>"},{"location":"linux/kernel/oom/#killer","title":"killer\u7b56\u7565","text":"<p>\u7ecf\u8fc7\u4e86\u4e00\u7cfb\u5217\u7684\u53c2\u6570\u548c\u73af\u5883\u68c0\u67e5\uff0c\u7cfb\u7edf\u7ec8\u4e8e\u6765\u5230\u4e86\u5173\u952e\u7684killer process\u3002\u4e00\u4e2a\u5f88\u5934\u75bc\u7684\u95ee\u9898\u5c31\u662f\uff0c\u5230\u5e95\u6740\u6389\u54ea\u4e2a\u8fdb\u7a0b\uff1f</p> <p>\u968f\u4e4b\u53c8\u5f15\u7533\u51fa\u53e6\u4e00\u4e2a\u95ee\u9898\uff1a\u662f\u4e0d\u662f\u6240\u6709\u7684\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u6740\uff1f</p> <p>\u51fd\u6570<code>oom_unkillable_task()</code>\u4f1a\u68c0\u67e5\u5f53\u524d\u8fdb\u7a0b\u662f\u5426\u53ef\u4ee5\u88ab\u6740\u6b7b\uff1a</p> <pre><code>static bool oom_unkillable_task(struct task_struct *p)\n{\n    if (is_global_init(p))\n        return true;\n    if (p-&gt;flags &amp; PF_KTHREAD)\n        return true;\n    return false;\n}\n</code></pre> <p>\u663e\u7136\uff0c\u6709\u4e24\u79cd\u8fdb\u7a0b\u4e0d\u80fd\u88ab\u6740\uff1a</p> <ul> <li>\u5168\u5c40\u7684\u7cfb\u7edf\u521d\u59cb\u5316\u8fdb\u7a0b</li> <li>\u5185\u6838\u8fdb\u7a0b</li> </ul> <p>\u9664\u4e86\u8fd9\u4e9b\uff0c\u5269\u4e0b\u7684\u8fdb\u7a0b\u90fd\u662f\u53ef\u4ee5\u6740\u7684\uff0c\u6740\u6389\u54ea\u4e2a\u624d\u5408\u9002\u5462\uff1f\u5185\u6838\u6709\u4e24\u79cd\u9009\u62e9\uff1a</p> <ul> <li>\u8c01\u89e6\u53d1\u4e86OOM\u5c31\u5e72\u6389\u8c01</li> <li>\u8c01\u6700\u8017\u8d39\u6027\u80fd\u5c31\u5e72\u6389\u8c01</li> </ul> <p><code>sysctl_oom_kill_allocating_task</code>\u53c2\u6570\u4e3a0\u65f6\u9009\u62e9\u7b56\u75652\uff0c\u5426\u5219\u9009\u62e9\u7b56\u75651\u3002</p> <p>\u51fd\u6570<code>select_bad_process()</code>\u4f1a\u904d\u5386\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u7136\u540e\u8c03\u7528<code>oom_evaluate_task()</code>\u5bf9\u5176\u6253\u5206\uff0c\u9009\u62e9\u4e00\u4e2a\u5206\u6570\u6700\u9ad8\u7684\u6740\u6b7b\u3002\u8ba1\u7b97\u5206\u6570\u7684\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>long oom_badness(struct task_struct *p, unsigned long totalpages)\n{\n    ......\n\n    /*\n     * Do not even consider tasks which are explicitly marked oom\n     * unkillable or have been already oom reaped or the are in\n     * the middle of vfork\n     */\n    adj = (long)p-&gt;signal-&gt;oom_score_adj;\n    if (adj == OOM_SCORE_ADJ_MIN ||\n            test_bit(MMF_OOM_SKIP, &amp;p-&gt;mm-&gt;flags) ||\n            in_vfork(p)) {\n        task_unlock(p);\n        return LONG_MIN;\n    }\n\n    /*\n     * The baseline for the badness score is the proportion of RAM that each\n     * task's rss, pagetable and swap space use.\n     */\n    points = get_mm_rss(p-&gt;mm) + get_mm_counter(p-&gt;mm, MM_SWAPENTS) +\n        mm_pgtables_bytes(p-&gt;mm) / PAGE_SIZE;\n    task_unlock(p);\n\n    /* Normalize to oom_score_adj units */\n    adj *= totalpages / 1000;\n    points += adj;\n\n    return points;\n}\n</code></pre> <p>\u4e00\u4e2a\u8fdb\u7a0b\u7684oom_score\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u7cfb\u7edf\u6253\u5206\uff1a\u4e3b\u8981\u6839\u636e\u8be5\u8fdb\u7a0b\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5</li> <li>\u7528\u6237\u6253\u5206\uff1a\u4e3b\u8981\u6839\u636e\u8be5\u8fdb\u7a0b\u7684oom_score_adj\u53c2\u6570\uff0c\u53ef\u4ee5\u7531\u7528\u6237\u8bbe\u7f6e</li> </ul>"},{"location":"linux/kernel/others/","title":"\u5176\u4ed6","text":"<p>\u8fd9\u91cc\u4e3b\u8981\u653e\u4e00\u4e9b\u96f6\u788e\u7684\u5185\u5bb9\u3002</p>"},{"location":"linux/kernel/others/#_2","title":"\u7cfb\u7edf\u8c03\u7528","text":"<p>\u5f53\u4f60\u7684\u7a0b\u5e8f\u8c03\u7528open, read, write, close\u7b49\u51fd\u6570\u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1\u7cfb\u7edf\u8c03\u7528\uff08syscall\uff09\u3002\u7cfb\u7edf\u8c03\u7528\u672c\u8d28\u662f\u7528\u6237\u6001\u8fdb\u7a0b\u4e0e\u786c\u4ef6\u8bbe\u5907\u4ea4\u4e92\u7684\u63a5\u53e3\uff0c\u5185\u6838\u8d1f\u8d23\u68c0\u67e5\u7cfb\u7edf\u8c03\u7528\u7684\u6b63\u786e\u6027\uff0c\u7136\u540e\u53d1\u51fa\u6307\u4ee4\u7ed9\u786c\u4ef6\u3002\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u8005\uff0c\u4e0d\u7528\u5173\u5fc3\u5e95\u5c42\u786c\u4ef6\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u800c\u53ea\u9700\u8981\u8c03\u7528\u666e\u901a\u51fd\u6570\u5c31\u53ef\u4ee5\u4f7f\u7528\u7cfb\u7edf\u8c03\u7528\u4e86\u3002glibc\u5e93\u8fdb\u4e00\u6b65\u5c01\u88c5\u4e86\u7ec6\u8282\uff0c\u56e0\u6b64\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528glibc\u5e93\u66b4\u9732\u7684API\u5373\u53ef\u3002</p> <p>x86\u4f53\u7cfb\u8fdb\u5165\u548c\u9000\u51fa\u7cfb\u7edf\u8c03\u7528\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>int $0x80 \u548c iret</li> <li>sysenter \u548c sysexit</li> </ul> <p>\u7b2c\u4e8c\u79cd\u88ab\u79f0\u4e3a\u5feb\u901f\u7cfb\u7edf\u8c03\u7528\u3002</p> <p>\u65e0\u8bba\u54ea\u79cd\u65b9\u5f0f\uff0c\u6700\u7ec8\u7ed3\u679c\u90fd\u662f\u8df3\u8f6c\u5230\u7cfb\u7edf\u8c03\u7528\u5904\u7406\u51fd\u6570\uff08system call handler\uff09\u3002\u7531\u4e8e\u5185\u6838\u5b9e\u73b0\u4e86\u5f88\u591a\u4e0d\u540c\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u56e0\u6b64\u8fdb\u7a0b\u5fc5\u987b\u4f20\u9012\u4e00\u4e2a\u540d\u4e3a\u7cfb\u7edf\u8c03\u7528\u53f7\uff08system call number\uff09\u7684\u53c2\u6570\u6765\u8bc6\u522b\u6240\u9700\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u8fd9\u4e2a\u53c2\u6570\u5b58\u653e\u5728eax\u5bc4\u5b58\u5668\u4e2d\u3002\u6267\u884c\u5b8c\u7cfb\u7edf\u8c03\u7528\u540e\u7684\u8fd4\u56de\u503c\u4e5f\u653e\u5728eax\u5bc4\u5b58\u5668\u4e2d\uff0c\u5176\u4e2d\u6b63\u6570\u62160\u8868\u793a\u7cfb\u7edf\u8c03\u7528\u6210\u529f\uff0c\u8d1f\u6570\u8868\u793a\u51fa\u9519\uff0c\u5b58\u653e\u4e8e<code>errno</code>\u5168\u5c40\u53d8\u91cf\u4e2d\u3002</p> <p>\u7cfb\u7edf\u8c03\u7528\u5904\u7406\u6d41\u7a0b\u662f\uff1a</p> <ul> <li>\u5c06\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\u5199\u5165CPU\u5bc4\u5b58\u5668</li> <li>\u68c0\u67e5\u6240\u6709\u7684\u7cfb\u7edf\u8c03\u7528\u53c2\u6570</li> <li>\u5c06CPU\u4e2d\u7684\u53c2\u6570\u62f7\u8d1d\u81f3\u5185\u6838\u6001\u5806\u6808</li> <li>\u8c03\u7528\u540d\u4e3a\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\u4f8b\u7a0b\uff08system call service routine\uff09\u7684C\u51fd\u6570\u6765\u5904\u7406\u7cfb\u7edf\u8c03\u7528</li> <li>\u9000\u51fa\u7cfb\u7edf\u8c03\u7528\u5904\u7406\u7a0b\u5e8f\uff0c\u5c06\u5185\u6838\u6808\u4e2d\u7684\u503c\u52a0\u8f7d\u81f3\u5bc4\u5b58\u5668\uff0c\u5e76\u4ece\u5185\u6838\u6001\u5207\u6362\u56de\u7528\u6237\u6001</li> </ul> <p>\u4e3a\u4e86\u5c06\u7cfb\u7edf\u8c03\u7528\u53f7\u4e0e\u5bf9\u5e94\u7684\u670d\u52a1\u4f8b\u7a0b\u8054\u7cfb\u8d77\u6765\uff0c\u5185\u6838\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u5206\u6d3e\u8868\uff08system call dispatch table\uff09\uff0c\u8fd9\u4e2a\u8868\u5b58\u653e\u5728<code>sys_call_table</code>\u6570\u7ec4\u4e2d\u3002\u5185\u6838\u62ff\u5230\u7cfb\u7edf\u8c03\u7528\u53f7\u4e4b\u540e\uff0c\u5c31\u53bb<code>sys_call_table</code>\u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0\u51fd\u6570\u53bb\u6267\u884c\u3002\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u4f7f\u7528\u8fd4\u56de\u6307\u4ee4\u4ece\u5185\u6838\u6001\u8fd4\u56de\u81f3\u7528\u6237\u6001\u3002</p> <p>\u5185\u6838\u5728\u6267\u884c\u7cfb\u7edf\u8c03\u7528\u7684\u65f6\u5019\u5904\u4e8e\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u3002<code>current</code>\u6307\u9488\u6307\u5411\u5f53\u524d\u4efb\u52a1\uff0c\u5373\u5f15\u53d1\u7cfb\u7edf\u8c03\u7528\u7684\u90a3\u4e2a\u8fdb\u7a0b\u3002\u5728\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d\uff0c\u5185\u6838\u53ef\u4ee5\u4f11\u7720\u5e76\u4e14\u53ef\u4ee5\u88ab\u62a2\u5360\u3002\u56e0\u6b64\u5fc5\u987b\u4fdd\u8bc1\u7cfb\u7edf\u8c03\u7528\u65f6\u53ef\u91cd\u5165\u7684\uff0c\u56e0\u4e3a\u65b0\u7684\u8fdb\u7a0b\u53ef\u80fd\u4f1a\u4f7f\u7528\u76f8\u540c\u7684\u7cfb\u7edf\u8c03\u7528\u3002</p>"},{"location":"linux/kernel/others/#_3","title":"\u7ec8\u7aef\u5feb\u6377\u952e","text":"<p>\u4e0e\u7ec8\u7aef\u6253\u4ea4\u9053\u662f\u6bcf\u4e2aLinux\u5de5\u7a0b\u5e08\u7ed5\u4e0d\u5f00\u7684\u5de5\u4f5c\uff0c\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684\u5feb\u6377\u952e\uff0c\u53ef\u4ee5\u63d0\u5347\u4f60\u8f93\u5165\u547d\u4ee4\u7684\u6548\u7387\u3002</p> \u5feb\u6377\u952e \u529f\u80fd\u63cf\u8ff0 Ctrl + A \u79fb\u52a8\u5230\u884c\u9996 Ctrl + E \u79fb\u52a8\u5230\u884c\u5c3e Ctrl + U \u5220\u9664\u5149\u6807\u81f3\u884c\u9996\u7684\u6240\u6709\u5185\u5bb9 Ctrl + K \u5220\u9664\u5149\u6807\u81f3\u884c\u5c3e\u7684\u6240\u6709\u5185\u5bb9 Ctrl + W \u5220\u9664\u5149\u6807\u524d\u7684\u4e00\u4e2a\u5355\u8bcd Ctrl + L \u6e05\u5c4f Ctrl + D \u6ce8\u9500\u6216\u9000\u51fa\u7ec8\u7aef Ctrl + Z \u6682\u505c\u8fdb\u7a0b Ctrl + C \u505c\u6b62\u8fdb\u7a0b Ctrl + R \u9006\u5411\u641c\u7d22\u5386\u53f2\u547d\u4ee4 !! \u91cd\u590d\u6267\u884c\u6700\u8fd1\u7684\u547d\u4ee4 !n \u91cd\u590d\u6267\u884c\u547d\u4ee4\u5386\u53f2\u4e2d\u7684\u7b2c n \u6761\u547d\u4ee4 Ctrl + Shift + N \u6253\u5f00\u65b0\u7684\u7ec8\u7aef\u7a97\u53e3 Ctrl + Shift + T \u5728\u5f53\u524d\u7ec8\u7aef\u4e2d\u6253\u5f00\u65b0\u7684\u9009\u9879\u5361 Ctrl + Tab \u6216 Ctrl + PageDown \u5728\u7ec8\u7aef\u7684\u9009\u9879\u5361\u4e4b\u95f4\u5207\u6362"},{"location":"linux/kernel/pm/","title":"\u7535\u6e90\u7ba1\u7406","text":""},{"location":"linux/kernel/pm/#autosleep","title":"autosleep","text":"<p>autosleep\u662fLinux\u7cfb\u7edf\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u5b83\u53ef\u4ee5\u8ba9\u7cfb\u7edf\u8fdb\u5165\u4f11\u7720\u72b6\u6001\uff0c\u5b9e\u73b0\u4ee3\u7801\u4f4d\u4e8e&lt;kernel/power/autosleep.c&gt;\u3002\u5728\u7f16\u8bd1\u5185\u6838\u65f6\uff0c\u5fc5\u987b\u5f00\u542fCONFIG_PM_AUTOSLEEP\u9009\u9879\u624d\u80fd\u4f7f\u7528\u8be5\u529f\u80fd\u3002  </p> <p>/sys/power/autosleep\u53ef\u4ee5\u7528\u6765\u914d\u7f6eautosleep\uff0c\u4e0d\u540c\u7684\u72b6\u6001\u6709\uff1a</p> <ol> <li>freeze\uff1a\u7cfb\u7edf\u8fdb\u5165\u4f11\u7720\u72b6\u6001\uff0c\u4f46\u4e0d\u5173\u95ed\u7535\u6e90\uff0c\u7cfb\u7edf\u53ef\u4ee5\u88ab\u5524\u9192\u3002</li> <li>standby\uff1a\u7cfb\u7edf\u8fdb\u5165\u4f11\u7720\u72b6\u6001\uff0c\u5e76\u5173\u95ed\u7535\u6e90\uff0c\u7cfb\u7edf\u53ef\u4ee5\u88ab\u5524\u9192\u3002</li> <li>mem\uff1a\u7cfb\u7edf\u8fdb\u5165\u4f11\u7720\u72b6\u6001\uff0c\u5e76\u5173\u95ed\u5185\u5b58\uff0c\u7cfb\u7edf\u53ef\u4ee5\u88ab\u5524\u9192\u3002</li> <li>disk\uff1a\u7cfb\u7edf\u8fdb\u5165\u4f11\u7720\u72b6\u6001\uff0c\u5e76\u5173\u95ed\u78c1\u76d8\uff0c\u7cfb\u7edf\u53ef\u4ee5\u88ab\u5524\u9192\u3002</li> <li>off\uff1a\u7cfb\u7edf\u8fdb\u5165\u4f11\u7720\u72b6\u6001\uff0c\u5e76\u5173\u95ed\u7535\u6e90\uff0c\u5185\u5b58\u548c\u78c1\u76d8\uff0c\u7cfb\u7edf\u4e0d\u80fd\u88ab\u5524\u9192\u3002</li> </ol>"},{"location":"linux/kernel/preempt/","title":"\u5185\u6838\u62a2\u5360","text":"<p>\u5185\u6838\u62a2\u5360\u5141\u8bb8\u9ad8\u4f18\u5148\u7ea7\u4efb\u52a1\u62a2\u5360\u6b63\u5728\u6267\u884c\u7684\u4f4e\u4f18\u5148\u7ea7\u4efb\u52a1\uff0c\u4ece\u800c\u51cf\u5c11\u8c03\u5ea6\u5ef6\u8fdf\uff0c\u63d0\u5347\u7cfb\u7edf\u54cd\u5e94\u6027\u80fd\uff0c\u5728\u591a\u4efb\u52a1\u5904\u7406\u548c\u5b9e\u65f6\u54cd\u5e94\u65b9\u9762\u81f3\u5173\u91cd\u8981\u3002</p> <p>\u5728\u8001\u7248\u672c\u7684\u5185\u6838\u4e2d(2.6\u4ee5\u524d)\uff0cLinux\u662f\u4e0d\u652f\u6301\u5185\u6838\u6001\u62a2\u5360\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u62a2\u5360\u53ea\u80fd\u53d1\u751f\u5728\u7528\u6237\u6001\uff0c\u5176\u6267\u884c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <p></p> <p>\u8fd9\u5f20\u56fe\u5c55\u793a\u4e86\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ol> <li>\u4e2d\u65ad\u53d1\u751f\u5728\u7528\u6237\u6001\uff0c\u6b64\u65f6\u8fdb\u5165\u5185\u6838\u7a7a\u95f4\uff0c\u5728\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u65f6\uff0c\u5185\u6838\u68c0\u67e5TIF_NEED_RESCHED\u6807\u5fd7\u4f4d\uff0c\u5982\u679c\u4e3atrue\uff0c\u5219\u89e6\u53d1\u8fdb\u7a0b\u8c03\u5ea6\u3002</li> <li>\u4e2d\u65ad\u53d1\u751f\u5728\u5185\u6838\u6001\uff0c\u4e2d\u65ad\u8fd4\u56de\u524d\u4e0d\u4f1a\u8fdb\u884c\u8c03\u5ea6\uff0c\u56e0\u4e3a\u8fd4\u56de\u7684\u662f\u5185\u6838\u7a7a\u95f4\uff0c\u53ea\u6709\u5728\u5185\u6838\u7a7a\u95f4\u8fd4\u56de\u81f3\u7528\u6237\u7a7a\u95f4\u65f6\u624d\u4f1a\u68c0\u67e5\u6807\u5fd7\u4f4d\u5e76\u8fdb\u884c\u8c03\u5ea6\u3002</li> </ol> <p>\u5185\u6838\u62a2\u5360\uff0c\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u5728\u5185\u6838\u6001\u5bf9\u5f53\u524d\u8fdb\u7a0b\u62a2\u5360\uff0c\u8c03\u5ea6\u5176\u4ed6\u8fdb\u7a0b\u8fd0\u884c\u3002</p> <p></p> <p>\u5f53\u7136\uff0c\u4e3a\u4e86\u786e\u4fdd\u5b89\u5168\uff0c\u5185\u6838\u8fd8\u4f1a\u989d\u5916\u68c0\u67e5\u5185\u6838\u62a2\u5360\u6807\u5fd7\u4f4d\u662f\u5426\u88ab\u8bbe\u7f6e\u3002</p>"},{"location":"linux/kernel/preempt/#_2","title":"\u62a2\u5360\u6807\u5fd7\u4f4d","text":"<p>ARM64\u4e2d\u5bf9<code>struct thread_info</code>\u7ed3\u6784\u4f53\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>/*\n * low level task data that entry.S needs immediate access to.\n */\nstruct thread_info {\n    unsigned long       flags;      /* low level flags */\n#ifdef CONFIG_ARM64_SW_TTBR0_PAN\n    u64         ttbr0;      /* saved TTBR0_EL1 */\n#endif\n    union {\n        u64     preempt_count;  /* 0 =&gt; preemptible, &lt;0 =&gt; bug */\n        struct {\n#ifdef CONFIG_CPU_BIG_ENDIAN\n            u32 need_resched;\n            u32 count;\n#else\n            u32 count;\n            u32 need_resched;\n#endif\n        } preempt;\n    };\n#ifdef CONFIG_SHADOW_CALL_STACK\n    void            *scs_base;\n    void            *scs_sp;\n#endif\n};\n</code></pre>"},{"location":"linux/kernel/preempt/#tif_need_resched","title":"TIF_NEED_RESCHED","text":"<p>\u5185\u6838\u5bf9\u4e8e\u8fdb\u7a0b\u7684\u8c03\u5ea6\u5e76\u4e0d\u662f\u7acb\u5373\u8fdb\u884c\u7684\uff0c\u800c\u662f\u8bbe\u7f6eTIF_NEED_RESCHED\u6807\u5fd7\u4f4d\uff0c\u7531\u8c03\u5ea6\u7a0b\u5e8f\u9009\u62e9\u5408\u9002\u7684\u65f6\u673a\uff0c\u68c0\u67e5\u8be5\u6807\u5fd7\u4f4d\u3002\u5982\u679c\u4e3a\u771f\uff0c\u5219\u89e6\u53d1\u8c03\u5ea6\u7a0b\u5e8f\u3002</p> <pre><code>static inline void set_tsk_need_resched(struct task_struct *tsk)\n{\n    set_tsk_thread_flag(tsk, TIF_NEED_RESCHED);\n}\n</code></pre>"},{"location":"linux/kernel/preempt/#preempt_count","title":"PREEMPT_COUNT","text":"<p>\u4e3a\u4e86\u6b63\u786e\u534f\u8c03\u7cfb\u7edf\u4e2d\u6240\u6709\u4efb\u52a1\u80fd\u6b63\u786e\u8fd0\u884c\uff0c\u5185\u6838\u5fc5\u987b\u8ddf\u8e2a\u5f53\u524d\u7ebf\u7a0b\u7684\u6267\u884c\u72b6\u6001\uff0c\u6bcf\u4e2a<code>task_struct</code>\u4e2d\u90fd\u5b58\u50a8\u4e86<code>preempt_count</code>\u8ba1\u6570\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7<code>preempt_count()</code>\u51fd\u6570\u6765\u8bbf\u95ee\uff1a</p> <pre><code>static inline int preempt_count(void)\n{\n    return READ_ONCE(current_thread_info()-&gt;preempt_count);\n}\n</code></pre> <p>\u8be5\u8ba1\u6570\u503c\u7528\u6765\u6307\u793a\u5f53\u524d\u7ebf\u7a0b\u7684\u72b6\u6001\u3001\u5b83\u662f\u5426\u53ef\u4ee5\u88ab\u62a2\u5360\uff0c\u4ee5\u53ca\u5b83\u662f\u5426\u88ab\u5141\u8bb8\u7761\u7720\u3002<code>preempt_count</code>\u7528\u591a\u4e2a\u5b57\u6bb5\u6765\u8bb0\u5f55\uff1a</p> <p></p> <ul> <li> <p>\u6700\u4f4e\u4f4d\u7684\u8fd9\u4e2a byte \u662f\u7528\u6765\u8bb0\u5f55<code>preempt_disable()</code>\u5d4c\u5957\u8c03\u7528\u7684\u6b21\u6570\u3002</p> </li> <li> <p>SOFTIRQ\uff1a\u5f53CPU\u8fdb\u5165\u8f6f\u4e2d\u5904\u7406\u7a0b\u5e8f\u65f6\uff0c\u5bf9\u8be5\u4f4d\u57df\u52a01\uff0c\u9000\u51fa\u65f6\u51cf1\u3002</p> </li> <li> <p>HARDIRQ\uff1a\u5f53CPU\u8fdb\u5165\u786c\u4ef6\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u65f6\uff0c\u5bf9\u8be5\u4f4d\u57df\u52a01\uff0c\u9000\u51fa\u65f6\u51cf1\uff0c\u4f4d\u57df\u6570\u503c\u8868\u793a\u4e2d\u65ad\u5d4c\u5957\u5c42\u7ea7\u3002</p> </li> <li> <p>NMI\uff1aCPU\u8fdb\u5165\u4e0d\u53ef\u5c4f\u853d\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u65f6\uff0c\u6b64\u4f4d\u7f6e1\uff0c\u9000\u51fa\u65f6\u6e050\u3002</p> </li> <li> <p>\u6700\u540e\uff0c\u6700\u9ad8\u4f4d\u8868\u793a\u5f53\u524d\u8fdb\u7a0b\u662f\u5426\u9700\u8981\u88ab\u8c03\u5ea6\u3002</p> </li> </ul> <p>\u4e0b\u9762\u662f\u4e00\u4e9b<code>preempt_count</code>\u76f8\u5173\u7684\u6761\u4ef6\u5224\u65ad\u51fd\u6570\uff0c\u5728\u5224\u65ad\u662f\u5426\u8981\u62a2\u5360\u65f6\u4f1a\u88ab\u9891\u7e41\u4f7f\u7528\u5230\uff1a</p> <pre><code>#define in_nmi()        (nmi_count())\n#define in_hardirq()        (hardirq_count())\n#define in_serving_softirq()    (softirq_count() &amp; SOFTIRQ_OFFSET)\n#define in_task()       (!(in_nmi() | in_hardirq() | in_serving_softirq()))\n\n#define in_softirq()        (softirq_count())\n#define in_interrupt()      (irq_count())\n</code></pre> <ul> <li><code>in_nmi()</code>\uff1a\u5f53\u524dCPU\u662f\u5426\u5904\u4e8e\u4e0d\u53ef\u5c4f\u853d\u4e2d\u65ad\uff0c\u8fd4\u56deNMI\u8ba1\u6570\u503c</li> <li><code>in_hardirq()</code>\uff1a\u5f53\u524dCPU\u662f\u5426\u5904\u4e8e\u786c\u4ef6\u4e2d\u65ad\uff0c\u8fd4\u56deHARDIRQ\u8ba1\u6570\u503c</li> <li><code>in_serving_softirq()</code>\uff1a\u5f53\u524dCPU\u662f\u5426\u5904\u4e8e\u8f6f\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4e2d\uff0c\u8fd4\u56deSOFTIRQ\u8ba1\u6570\u503c</li> <li><code>in_task()</code>\uff1a\u5f53\u524dCPU\u662f\u5426\u5904\u4e8e\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d</li> <li><code>in_softirq()</code>\uff1a\u5f53\u524dCPU\u662f\u5426\u5904\u4e8e\u7981\u7528\u4e0b\u534a\u90e8\u6216\u8005\u8f6f\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4e2d\uff0c\u8fd4\u56deSOFTIRQ\u8ba1\u6570\u503c</li> <li><code>in_interrupt()</code>\uff1a\u5f53\u524dCPU\u662f\u5426\u5904\u4e8e\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u5185</li> </ul> <p>\u603b\u7ed3\u4e00\u4e0b\u5185\u6838\u7684\u56db\u7c7bcontext\uff1a</p> <ul> <li>\u4e2d\u65ad</li> <li>\u8f6f\u4e2d\u65ad(\u5305\u62ecsoftirq\u548ctasklet)</li> <li>\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u7684spinlock</li> <li>\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u7684\u5176\u4ed6\u60c5\u5f62</li> </ul> <p>\u5728\u4e0a\u9762\u56db\u7c7bcontext\u4e2d\uff0c\u524d\u4e09\u8005\u90fd\u662f\u539f\u5b50\u7684\uff0c\u53ea\u6709\u7b2c\u56db\u7c7b\u652f\u6301\u62a2\u5360\u8c03\u5ea6\u3002</p>"},{"location":"linux/kernel/preempt/#_3","title":"\u62a2\u5360\u914d\u7f6e\u9009\u9879","text":"<p>Linux\u5185\u6838\u652f\u6301\u591a\u79cd\u62a2\u5360\u914d\u7f6e\uff0c\u53ef\u4ee5\u6839\u636e\u5177\u4f53\u573a\u666f\u7075\u6d3b\u9009\u62e9\uff1a</p> <ul> <li>CONFIG_PREEMPT_NONE=y\uff1a\u4e0d\u5141\u8bb8\u5185\u6838\u62a2\u5360</li> <li>CONFIG_PREEMPT_VOLUNTARY=y\uff1a\u5141\u8bb8\u5185\u6838\u62a2\u5360\uff0c\u4f46\u662f\u53ea\u6709\u5f53\u8fdb\u7a0b\u4e3b\u52a8\u8c03\u7528\u8c03\u5ea6\u51fd\u6570\u65f6\u624d\u4f1a\u89e6\u53d1</li> <li>CONFIG_PREEMPT=y\uff1a\u9664\u4e86\u6301\u6709spinlock\u7684\u65f6\u5019\uff0c\u90fd\u5141\u8bb8\u62a2\u5360</li> <li>CONFIG_PREEMPT_RT\uff1a\u5b9e\u65f6\u5185\u6838\u62a2\u5360\u8865\u4e01\uff0c\u53ef\u4ee5\u8ba4\u4e3a\u968f\u65f6\u53ef\u88ab\u62a2\u5360</li> </ul>"},{"location":"linux/kernel/preempt/#_4","title":"\u8c03\u5ea6\u5ef6\u8fdf","text":"<p>\u4ece\u5185\u6838\u89e6\u53d1\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u5230\u8fdb\u7a0b\u771f\u6b63\u88ab\u8c03\u5ea6\u8fd0\u884c\uff0c\u4e2d\u95f4\u7684\u65f6\u95f4\u5dee\u88ab\u79f0\u4e3a\u8c03\u5ea6\u5ef6\u8fdf\u3002\u90a3\u4e48\u5185\u6838\u4e2d\u6709\u54ea\u4e9b\u60c5\u51b5\u4f1a\u4ea7\u751f\u8c03\u5ea6\u5ef6\u8fdf\uff1f</p> <p>\u4ece\u7406\u8bba\u4e0a\u6765\u8bb2\uff0c\u8c03\u5ea6\u5ef6\u8fdf\u5e94\u8be5\u7b49\u4e8e\u8c03\u5ea6\u7a0b\u5e8f\u5904\u7406\u65f6\u95f4 + \u8fdb\u7a0b\u5207\u6362\u5904\u7406\u65f6\u95f4\uff0c\u4f46\u662f\u5b9e\u9645\u60c5\u51b5\u8981\u6bd4\u8fd9\u590d\u6742\u5f88\u591a\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5728\u6267\u884c\u8c03\u5ea6\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u4e2d\u65ad\u53ef\u4ee5\u968f\u65f6\u53d1\u751f\uff0c\u56e0\u6b64\u771f\u6b63\u7684\u8c03\u5ea6\u5ef6\u8fdf = \u4e2d\u65ad\u5ef6\u8fdf + \u4e2d\u65ad\u5904\u7406\u65f6\u95f4 + \u8c03\u5ea6\u7a0b\u5e8f\u5904\u7406\u65f6\u95f4 + \u8fdb\u7a0b\u5207\u6362\u5904\u7406\u65f6\u95f4\u3002</p> <p></p>"},{"location":"linux/kernel/preempt/#_5","title":"\u4e2d\u65ad\u5ef6\u8fdf","text":"<p>\u5f53\u4e2d\u65ad\u53d1\u751f\uff0c\u8fdb\u5165\u771f\u6b63\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4e4b\u524d\uff0c\u5185\u6838\u8fd8\u9700\u8981\u5904\u7406\u4e00\u4e9b\u5176\u4ed6\u64cd\u4f5c\uff0c\u8fd9\u88ab\u7edf\u79f0\u4e3a\u4e2d\u65ad\u5ef6\u8fdf\u3002</p> <p>\u4e2d\u65ad\u5ef6\u8fdf\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ol> <li>\u4e2d\u65ad\u5fc5\u987b\u4fdd\u8bc1\u5e76\u53d1\u5b89\u5168\uff0c\u56e0\u6b64\u5f53\u4e2d\u65ad\u53d1\u751f\u65f6\uff0c\u5185\u6838\u5904\u4e8e\u5173\u4e2d\u65ad\u72b6\u6001\u3002</li> <li>\u4e2d\u65ad\u63a7\u5236\u5668\u5bf9\u4e2d\u65ad\u7684\u4f18\u5148\u7ea7\u8fdb\u884c\u4ef2\u88c1\uff0c\u4fdd\u8bc1\u5bf9\u9ad8\u4f18\u5148\u7ea7\u4e2d\u65ad\u7684\u54cd\u5e94\u3002</li> <li>\u4e2d\u65ad\u9700\u8981\u4fdd\u5b58\u73b0\u573a\uff0c\u5207\u6362\u6267\u884c\u6a21\u5f0f\u3002</li> <li>\u5f53\u591a\u4e2a\u8bbe\u5907\u5171\u4eab\u4e00\u4e2a\u4e2d\u65ad\u53f7\u65f6\uff0c\u8fd8\u9700\u8981\u8bc6\u522b\u4e0d\u540c\u7684\u4e2d\u65ad\u6e90\u3002</li> </ol>"},{"location":"linux/kernel/preempt/#_6","title":"\u4e2d\u65ad\u5904\u7406\u65f6\u95f4","text":"<p>\u5185\u6838\u4e2d\u7684\u4e2d\u65ad\u5904\u7406\u5206\u4e3a\u4e0a\u534a\u90e8\u548c\u4e0b\u534a\u90e8\uff1a</p> <ul> <li>\u4e0a\u534a\u90e8\uff0c\u5728\u7981\u6b62\u4e2d\u65ad\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\uff0c\u505a\u5230\u5feb\u8fdb\u5feb\u51fa</li> <li>\u4e0b\u534a\u90e8\uff0c\u7531\u4e0a\u534a\u90e8\u6267\u884c\u5b8c\u6bd5\u540e\u5f00\u59cb\uff0c\u6b64\u65f6\u4e3a\u5f00\u4e2d\u65ad\uff0c\u53ef\u4ee5\u88ab\u5176\u4ed6\u4e2d\u65ad\u6253\u65ad\u6267\u884c</li> </ul> <p>\u5728\u5904\u7406\u4e0a\u534a\u90e8\u540e\uff0c\u5982\u679c\u6709\u5176\u4ed6\u5916\u8bbe\u4e2d\u65ad\u53d1\u751f\uff0c\u6574\u4e2a\u8fc7\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p>"},{"location":"linux/kernel/preempt/#_7","title":"\u8c03\u5ea6\u7a0b\u5e8f\u5904\u7406\u65f6\u95f4","text":"<p>\u8fd9\u4e2a\u6bd4\u8f83\u597d\u7406\u89e3\uff0c\u8c03\u5ea6\u5668\u9009\u62e9\u54ea\u4e2a\u8fdb\u7a0b\u53bb\u6267\u884c\uff0c\u4e5f\u662f\u9700\u8981\u65f6\u95f4\u7684\u3002\u4f46\u662f\uff0c\u8c03\u5ea6\u5668\u9009\u62e9\u8fdb\u7a0b\u53bb\u6267\u884c\u65f6\uff0c\u5e76\u4e0d\u662f\u6240\u6709\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u7acb\u5373\u6267\u884c\u7684\u3002\u5047\u5982\u8fdb\u7a0bA\u548c\u8fdb\u7a0bB\u5171\u4eab\u4e86\u67d0\u4e2a\u4e34\u754c\u533a\u7684\u8d44\u6e90\uff0c\u5728\u8fdb\u7a0bA\u6267\u884c\u671f\u95f4\u8c03\u5ea6\u5668\u9009\u62e9\u8fdb\u7a0bB\u53bb\u6267\u884c\uff0c\u90a3\u4e48\u8fdb\u7a0bB\u53ea\u80fd\u7b49\u5f85\u8fdb\u7a0bA\u91ca\u653e\u8d44\u6e90\u624d\u80fd\u6267\u884c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e5f\u4f1a\u589e\u52a0\u8c03\u5ea6\u5ef6\u8fdf\uff0c\u5e76\u4e14\u5f88\u96be\u88ab\u53d1\u73b0\u3002</p>"},{"location":"linux/kernel/preempt/#_8","title":"\u8fdb\u7a0b\u5207\u6362\u5904\u7406\u65f6\u95f4","text":"<p>\u5728\u6700\u540e\u65f6\u523b\uff0c\u8fd8\u9700\u8981\u8fdb\u884c\u4e0a\u4e0b\u6587\u5207\u6362\u540e\u624d\u80fd\u6267\u884c\u8fdb\u7a0b\u3002\u4e0a\u4e0b\u6587\u5207\u6362\u4e5f\u662f\u4e2a\u6bd4\u8f83\u8017\u65f6\u7684\u8fc7\u7a0b\uff0c\u9700\u8981\u5237\u65b0\u7f13\u5b58\u3001\u91cd\u5efa\u9875\u8868\u7b49\uff0c\u8fd9\u91cc\u5c31\u4e0d\u7ec6\u8bb2\u4e86\u3002</p>"},{"location":"linux/kernel/program/","title":"\u5185\u6838\u7f16\u7a0b","text":"<p>\u5185\u6838\u5f00\u53d1\u7684\u7279\u70b9\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u4e0d\u80fd\u4f7f\u7528\u6807\u51c6C\u5e93\u5934\u6587\u4ef6\uff0c\u53ea\u80fd\u4f7f\u7528\u5185\u6838\u63d0\u4f9b\u7684\u5934\u6587\u4ef6\u3002\u4e0e\u4f53\u7cfb\u7ed3\u6784\u65e0\u5173\u7684\u5934\u6587\u4ef6\u4f4d\u4e8e\u5185\u6838\u6e90\u7801\u6839\u76ee\u5f55\u4e0b\u7684include\u76ee\u5f55\u3002\u4e0e\u4f53\u7cfb\u7ed3\u6784\u76f8\u5173\u7684\u5934\u6587\u4ef6\u4f4d\u4e8e&lt;arch/[architecture]/include/asm&gt;\u76ee\u5f55\uff0c\u5185\u6838\u4ee3\u7801\u4ee5asm\u524d\u7f00\u7684\u5f62\u5f0f\u5305\u542b\u8fd9\u4e9b\u5934\u6587\u4ef6\u3002</p> </li> <li> <p>\u5fc5\u987b\u4f7f\u7528GNU C\u3002gcc\u7f16\u8bd1\u5668\u652f\u6301\u4ee5asm()\u6307\u4ee4\u5f00\u5934\u5d4c\u5165\u6c47\u7f16\u4ee3\u7801\u3002</p> </li> <li> <p>\u6ca1\u6709\u5185\u5b58\u4fdd\u62a4\u673a\u5236\u3002\u5982\u679c\u662f\u5185\u6838\u8bbf\u95ee\u4e86\u975e\u6cd5\u5185\u5b58\uff0c\u540e\u679c\u4e0d\u582a\u8bbe\u60f3\u3002</p> </li> <li> <p>\u65e0\u6cd5\u6267\u884c\u6d6e\u70b9\u8fd0\u7b97\u3002\u5185\u6838\u5bf9\u4e8e\u6d6e\u70b9\u8fd0\u7b97\u7684\u652f\u6301\u5ea6\u4e0d\u591f\u3002</p> </li> <li> <p>\u5fc5\u987b\u8003\u8651\u540c\u6b65\u4e0e\u5e76\u53d1\u3002Linux\u5185\u6838\u662f\u62a2\u5360\u5f0f\u591a\u4efb\u52a1\u5904\u7406\u7cfb\u7edf\uff0c\u5f53\u524d\u4efb\u52a1\u968f\u65f6\u6709\u53ef\u80fd\u88ab\u53e6\u4e00\u4e2a\u4efb\u52a1\u62a2\u5360\u3002</p> </li> <li> <p>\u5fc5\u987b\u8003\u8651\u53ef\u79fb\u690d\u6027\u3002\u6bd4\u5982\u4fdd\u6301\u5b57\u8282\u5e8f\u300164 \u4f4d\u5bf9\u9f50\u3001\u4e0d\u5047\u5b9a\u5b57\u957f\u548c\u9875\u9762\u957f\u5ea6\u7b49\u4e00\u7cfb\u5217\u51c6\u5219\u3002</p> </li> </ul> <p>Tip</p> <p>&lt;Documentation/CodingStyle&gt;\u63cf\u8ff0\u4e86Linux\u5185\u6838\u5bf9\u7f16\u7801\u98ce\u683c\u7684\u8981\u6c42\uff0c&lt;scripts/checkpatch.pl&gt;\u63d0\u4f9b\u4e86\u68c0\u67e5\u4ee3\u7801\u98ce\u683c\u7684\u811a\u672c\u3002</p>"},{"location":"linux/kernel/program/#_2","title":"\u53ef\u79fb\u690d\u6027","text":"<p>\u9875\u7684\u5927\u5c0f\u4e3aPAGE_SIZE\uff0c\u4e0d\u4e00\u5b9a\u662f4KB\u3002</p> <p>\u5b57\u8282\u5e8f\uff0c\u6ce8\u610f\u5e73\u53f0\u662f\u5927\u7aef\u8fd8\u662f\u5c0f\u7aef\u3002</p> <p>\u6570\u636e\u5bf9\u9f50\uff0c\u5185\u6838\u4ee3\u7801\u4e2d\u5fc5\u987b\u4fdd\u8bc1\u6240\u6709\u6570\u636e\u7ed3\u6784\u90fd\u6309\u7167\u5176\u5b9a\u4e49\u7684\u5927\u5c0f\u5bf9\u9f50\u3002</p>"},{"location":"linux/kernel/program/#_3","title":"\u5185\u6838\u6570\u636e\u7c7b\u578b","text":"<p>\u5185\u6838\u7684\u6570\u636e\u7c7b\u578b\u4e3b\u8981\u5206\u4e3a\u4e09\u5927\u7c7b\uff1aint\u2014\u2014\u6807\u51c6C\u8bed\u8a00\u7c7b\u578b\uff0cu32\u2014\u2014\u786e\u5b9a\u5927\u5c0f\u7c7b\u578b\uff0cpid_t\u2014\u2014\u7279\u5b9a\u5185\u6838\u5bf9\u8c61\u7c7b\u578b\u3002</p> <p>\u5185\u6838\u4e2d\u6700\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\u7531\u5b83\u4eec\u81ea\u5df1\u7684typedef\u58f0\u660e\uff0c\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u51fa\u73b0\u4efb\u4f55\u79fb\u690d\u6027\u95ee\u9898\u3002\u6bd4\u5982pid_t\u5c31\u5c4f\u853d\u4e86\u53ef\u80fd\u7684\u5dee\u5f02\u3002</p>"},{"location":"linux/kernel/program/#_4","title":"\u5185\u6838\u6570\u636e\u7ed3\u6784","text":"<p>\u5185\u6838\u6570\u636e\u7ed3\u6784\u8d2f\u7a7f\u4e8e\u6574\u4e2a\u5185\u6838\u4ee3\u7801\u4e2d\uff0c\u8fd9\u91cc\u4ecb\u7ecd4\u4e2a\u57fa\u672c\u7684\u5185\u6838\u6570\u636e\u7ed3\u6784\u3002</p> <ul> <li>\u94fe\u8868</li> <li>\u961f\u5217</li> <li>\u6620\u5c04</li> <li>\u7ea2\u9ed1\u6811</li> </ul>"},{"location":"linux/kernel/program/#_5","title":"\u94fe\u8868","text":"<p>\u94fe\u8868\u662flinux\u5185\u6838\u4e2d\u6700\u7b80\u5355\uff0c\u540c\u65f6\u4e5f\u662f\u5e94\u7528\u6700\u5e7f\u6cdb\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b9a\u4e49\u5728\u6587\u4ef6&lt;linux/list.h&gt;\u4e2d\u3002</p> <p>\u4e0e\u4f20\u7edf\u94fe\u8868\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0d\u540c\uff0c\u5185\u6838\u7684\u94fe\u8868\u6ca1\u6709\u6570\u636e\uff0c\u53ea\u6709\u524d\u540e\u6307\u9488\uff1a</p> <pre><code>struct list_head {\n    struct list_head *prev, *next;\n};\n</code></pre> <p>\u94fe\u8868\u5728\u4f7f\u7528\u524d\u5fc5\u987b\u8c03\u7528<code>INIT_LIST_HEAD</code>\u5b8f\u8fdb\u884c\u521d\u59cb\u5316\u3002\u94fe\u8868\u5934\u8282\u70b9\u53ef\u4ee5\u7528<code>LIST_HEAD</code>\u5b8f\u58f0\u660e\u3002</p> <p>\u5185\u6838\u4f1a\u5c06\u94fe\u8868\u5d4c\u5165\u5230\u5176\u4ed6\u7ed3\u6784\u4f53\u4e2d\uff0c\u7136\u540e\u4f7f\u7528<code>container_of</code>\u5b8f\u83b7\u53d6\u7ed3\u6784\u4f53\u7684\u5730\u5740\u3002</p> <p>\u94fe\u8868\u7684\u4f7f\u7528\u793a\u4f8b</p> <pre><code>struct student {\n    int id;\n    char name[64];\n    struct list_head list;\n};\n\nstruct student *stu = container_of(list, struct student, list);\n</code></pre> <p>\u64cd\u4f5c\u94fe\u8868\uff1a</p> <pre><code>/*\u5728head\u8282\u70b9\u540e\u63d2\u5165new\u8282\u70b9*/\nlist_add(struct list_head *new, struct list_head *head);\n\n/*\u5728head\u8282\u70b9\u524d\u63d2\u5165new\u8282\u70b9*/\nlist_add_tail(struct list_head *new, struct list_head *head);\n\n/*\u5220\u9664\u8282\u70b9*/\nlist_del(struct list_head *entry);\n\n/*\u79fb\u9664\u94fe\u8868\u4e2d\u7684list\u9879\uff0c\u7136\u540e\u52a0\u5165\u5230\u53e6\u4e00\u94fe\u8868\u7684head\u8282\u70b9\u540e*/\nlist_move(struct list_head *list, struct list_head *head);\n\n/*\u5224\u65ad\u94fe\u8868\u662f\u5426\u4e3a\u7a7a*/\nlist_empty(struct list_head *head);\n\n/*\u62fc\u63a5\u4e24\u4e2a\u94fe\u8868*/\nlist_splice(struct list_head *list, struct list_head *head);\n\n/*\u904d\u5386\u94fe\u8868*/\nlist_for_each_entry(pos, head, member);\n</code></pre>"},{"location":"linux/kernel/program/#_6","title":"\u961f\u5217","text":"<p>Linux\u5185\u6838\u901a\u7528\u961f\u5217\u7684\u5b9e\u73b0\u88ab\u79f0\u4e3akfifo\uff0c\u5b9a\u4e49\u5728&lt;linux/kfifo.h&gt;\u4e2d\uff1a</p> <pre><code>struct __kfifo {\n    unsigned int    in;\n    unsigned int    out;\n    unsigned int    mask;\n    unsigned int    esize;\n    void        *data;\n};\n</code></pre> <p>Linux\u7684kfifo\u548c\u591a\u6570\u5176\u4ed6\u961f\u5217\u7684\u5b9e\u73b0\u7c7b\u4f3c\uff0c\u63d0\u4f9b\u4e86\u4e24\u4e2a\u4e3b\u8981\u64cd\u4f5c\uff1aenqueue(\u5165\u961f)\u548cdequeue(\u51fa\u961f)\u3002kfifo\u5bf9\u8c61\u7ef4\u62a4\u4e86\u4e24\u4e2a\u504f\u79fb\u91cf:\u4eba\u53e3\u504f\u79fb\u548c\u51fa\u53e3\u504f\u79fb\u3002\u5165\u53e3\u504f\u79fb\u662f\u6307\u4e0b\u4e00\u6b21\u5165\u961f\u5217\u65f6\u7684\u4f4d\u7f6e\uff0c\u51fa\u53e3\u504f\u79fb\u662f\u6307\u4e0b\u4e00\u6b21\u51fa\u961f\u5217\u65f6\u7684\u4f4d\u7f6e\u3002\u51fa\u53e3\u504f\u79fb\u603b\u662f\u5c0f\u4e8e\u7b49\u4e8e\u5165\u53e3\u504f\u79fb\uff0c\u5426\u5219\u65e0\u610f\u4e49\uff0c\u56e0\u4e3a\u90a3\u6837\u8bf4\u660e\u8981\u51fa\u961f\u5217\u7684\u5143\u7d20\u6839\u672c\u8fd8\u6ca1\u6709\u5165\u961f\u5217\u3002</p> <p>enqueue\u64cd\u4f5c\u62f7\u8d1d\u6570\u636e\u5230\u961f\u5217\u4e2d\u7684\u5165\u53e3\u504f\u79fb\u4f4d\u7f6e\u3002\u5f53\u4e0a\u8ff0\u52a8\u4f5c\u5b8c\u6210\u540e\uff0c\u5165\u53e3\u504f\u79fb\u968f\u4e4b\u52a0\u4e0a\u63a8\u5165\u7684\u5143\u7d20\u6570\u76ee\u3002dequeue\u64cd\u4f5c\u4ece\u961f\u5217\u4e2d\u51fa\u53e3\u504f\u79fb\u5904\u62f7\u8d1d\u6570\u636e\uff0c\u5f53\u4e0a\u8ff0\u52a8\u4f5c\u5b8c\u6210\u540e\uff0c\u51fa\u53e3\u504f\u79fb\u968f\u4e4b\u51cf\u53bb\u6458\u53d6\u7684\u5143\u7d20\u6570\u76ee\u3002\u5f53\u51fa\u53e3\u504f\u79fb\u7b49\u4e8e\u5165\u53e3\u504f\u79fb\u65f6\uff0c\u8bf4\u660e\u961f\u5217\u7a7a\u4e86\uff1a\u5728\u65b0\u6570\u636e\u88ab\u63a8\u5165\u524d\uff0c\u4e0d\u53ef\u518d\u6458\u53d6\u4efb\u4f55\u6570\u636e\u4e86\u3002\u5f53\u5165\u53e3\u504f\u79fb\u7b49\u4e8e\u961f\u5217\u957f\u5ea6\u65f6\uff0c\u8bf4\u660e\u5728\u961f\u5217\u91cd\u7f6e\u524d\uff0c\u4e0d\u53ef\u518d\u6709\u65b0\u6570\u636e\u63a8\u5165\u961f\u5217\u3002</p> <p>kfifo\u5728\u4f7f\u7528\u524d\uff0c\u5fc5\u987b\u8c03\u7528<code>kfifo_alloc</code>\u5b8f\u8fdb\u884c\u521d\u59cb\u5316\u3002</p> <p>\u64cd\u4f5c\u961f\u5217\uff1a</p> <pre><code>/*\u5c06\u6570\u636e\u63a8\u5165\u961f\u5217*/\nkfifo_in(struct __kfifo *fifo, const void *buf, unsigned int len);\n\n/*\u4ece\u961f\u5217\u4e2d\u6458\u53d6\u6570\u636e*/\nkfifo_out(struct __kfifo *fifo, void *buf, unsigned int len);\n\n/*\u83b7\u53d6\u961f\u5217\u7684\u5b57\u8282\u5927\u5c0f*/\nkfifo_size(struct __kfifo *fifo);\n\n/*\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a*/\nkfifo_is_empty(struct __kfifo *fifo);\n\n/*\u5224\u65ad\u961f\u5217\u662f\u5426\u5df2\u6ee1*/\nkfifo_is_full(struct __kfifo *fifo);\n</code></pre>"},{"location":"linux/kernel/program/#_7","title":"\u6620\u5c04","text":"<p>\u6620\u5c04\uff0c\u5373\u5173\u8054\u6570\u7ec4\uff0c\u662f\u4e00\u4e2a\u7531\u552f\u4e00\u952e\u7ec4\u6210\u7684\u96c6\u5408\uff0c\u6bcf\u4e2a\u952e\u5173\u8054\u4e00\u4e2a\u7279\u5b9a\u7684\u503c\uff0c\u8fd9\u79cd\u952e\u503c\u5bf9\u7684\u5173\u8054\u5173\u7cfb\u5c31\u53eb\u505a\u6620\u5c04\u3002\u5b9a\u4e49\u5728&lt;linux/idr.h&gt;\u4e2d\u3002</p> <pre><code>struct idr {\n    struct radix_tree_root  idr_rt;\n    unsigned int        idr_base;\n    unsigned int        idr_next;\n};\n</code></pre>"},{"location":"linux/kernel/program/#_8","title":"\u4e8c\u53c9\u6811","text":"<p>\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811(BST)\u662f\u4e00\u4e2a\u8282\u70b9\u6709\u5e8f\u7684\u4e8c\u53c9\u6811\uff0c\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a</p> <ul> <li>\u6839\u7684\u5de6\u5206\u652f\u8282\u70b9\u503c\u90fd\u5c0f\u4e8e\u6839\u8282\u70b9\u503c</li> <li>\u53f3\u5206\u652f\u8282\u70b9\u503c\u90fd\u5927\u4e8e\u6839\u8282\u70b9\u503c</li> <li>\u6240\u6709\u7684\u5b50\u6811\u4e5f\u662f\u4e8c\u53c9\u641c\u7d22\u6811</li> </ul> <p>\u7ea2\u9ed1\u6811\u662f\u4e00\u79cd\u81ea\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5185\u6838\u5b9e\u73b0\u7684\u7ea2\u9ed1\u6811\u53ebrbtree\uff0c\u5b9a\u4e49\u5728&lt;linux/rbtree.h&gt;\uff0c\u5b83\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a</p> <ul> <li>\u6240\u6709\u7684\u8282\u70b9\u8981\u4e48\u7ea2\u8272\uff0c\u8981\u4e48\u9ed1\u8272</li> <li>\u53f6\u5b50\u8282\u70b9\u90fd\u662f\u9ed1\u8272</li> <li>\u53f6\u5b50\u8282\u70b9\u4e0d\u5305\u542b\u6570\u636e</li> <li>\u6240\u6709\u7684\u975e\u53f6\u5b50\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9</li> <li>\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\uff0c\u90a3\u4e48\u5b83\u7684\u5b50\u8282\u70b9\u90fd\u662f\u9ed1\u8272</li> <li>\u5728\u4e00\u4e2a\u8282\u70b9\u5230\u5176\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u4e2d\uff0c\u5982\u679c\u603b\u662f\u5305\u542b\u540c\u6837\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9\uff0c\u5219\u8be5\u8def\u5f84\u76f8\u6bd4\u5176\u4ed6\u8def\u5f84\u662f\u6700\u77ed\u7684</li> </ul> <pre><code>struct rb_node {\n    unsigned long  __rb_parent_color;\n    struct rb_node *rb_right;\n    struct rb_node *rb_left;\n} __attribute__((aligned(sizeof(long))));\n</code></pre>"},{"location":"linux/kernel/recycle/","title":"\u5185\u5b58\u56de\u6536","text":"<p>Linux \u7684\u8bbe\u8ba1\u54f2\u5b66\u662f\u4e0e\u5176\u8ba9\u5185\u5b58\u7a7a\u7740\u4e0d\u5982\u90fd\u5229\u7528\u8d77\u6765\uff0c\u6bd4\u5982\u5c06\u7a7a\u4f59\u7684\u5185\u5b58\u4f5c\u4e3a\u6587\u4ef6\u7f13\u5b58(page cache)\u4ece\u800c\u63d0\u9ad8\u8bfb\u5199IO\u7684\u6027\u80fd\u3002\u5f53\u5185\u5b58\u4e0d\u8db3\u65f6\uff0c\u5219\u4f1a\u8fdb\u884c\u5185\u5b58\u56de\u6536\u3002\u5185\u5b58\u56de\u6536\u662f\u4e2a\u5f88\u590d\u6742\u7684\u8fc7\u7a0b\uff0c\u800c\u4e14\u5e76\u4e0d\u662f\u56de\u6536\u5f97\u8d8a\u591a\u8d8a\u597d\u3002</p>"},{"location":"linux/kernel/recycle/#buffercache","title":"buffer/cache","text":"<p><code>free</code>\u547d\u4ee4\u662f\u6700\u5e38\u7528\u7684\u67e5\u770b\u5185\u5b58\u72b6\u51b5\u7684\u5de5\u5177\uff0cbuffer/cache \u662f\u6307\u7cfb\u7edf\u4e2d\u7528\u6765\u5b58\u653e\u6570\u636e\u7684\u7f13\u5b58\u9875\u3002buffer \u8868\u793a\u5757\u8bbe\u5907\u5360\u7528\u7684\u7f13\u5b58\u9875\uff0c\u800c cache \u8868\u793a\u666e\u901a\u6587\u4ef6\u5360\u7528\u7684\u7f13\u5b58\u9875\u3002</p> <p>\u7528\u6237\u7a7a\u95f4\u7684\u8fdb\u7a0b\u7684\u5185\u5b58\u9875\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ul> <li>\u6587\u4ef6\u9875\uff1a\u5373\u4e0e\u6587\u4ef6\u5b58\u5728\u6620\u5c04\u5173\u7cfb\u7684\u9875\uff0c\u6bd4\u5982\u8fdb\u7a0b\u7684\u4ee3\u7801\u6bb5</li> <li>\u533f\u540d\u9875\uff1a\u5373\u4e0d\u4e0e\u6587\u4ef6\u5173\u8054\u7684\u9875\uff0c\u6bd4\u5982\u5806\u3001\u6808</li> </ul> <p></p>"},{"location":"linux/kernel/recycle/#swap-cache","title":"swap cache","text":"<p>\u533f\u540d\u9875\u662f\u4e0d\u5173\u8054\u4efb\u4f55\u6587\u4ef6\u7684\uff0c\u4e00\u65e6\u53d1\u751f\u6362\u9875\uff0c\u56e0\u4e3a\u6ca1\u6709\u5bf9\u5e94\u7684\u6587\u4ef6\u53ef\u4ee5\u6267\u884c\u56de\u5199\u64cd\u4f5c\uff0c\u6240\u4ee5\u5185\u6838\u4f1a\u5c06\u5b83\u4eec\u5148\u5199\u5165\u5230\u4ea4\u6362\u533a\u3002</p> <p>\u4ea4\u6362\u533a\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5206\u533a\uff0c\u53ef\u4ee5\u5305\u62ec\u4e00\u4e2a\u6216\u591a\u4e2a\u4ea4\u6362\u533a\u8bbe\u5907\uff08\u88f8\u76d8\u3001\u903b\u8f91\u5377\u3001\u6587\u4ef6\u90fd\u53ef\u4ee5\u5145\u5f53\u4ea4\u6362\u533a\u8bbe\u5907\uff09\uff0c\u6bcf\u4e00\u4e2a\u4ea4\u6362\u533a\u8bbe\u5907\u5728\u5185\u5b58\u91cc\u90fd\u6709\u5bf9\u5e94\u7684 swap cache\u3002</p> <p>\u5f53\u4e00\u4e2a\u533f\u540d\u9875\u5373\u5c06\u88ab\u5199\u5165\u4ea4\u6362\u533a\u4ee5\u91ca\u653e\u5185\u5b58\u65f6\uff0c\u5b83\u9996\u5148\u88ab\u653e\u5165 swap cache\u3002\u4f46\u8fd9\u4e2a\u8fc7\u7a0b\u5f88\u77ed\u6682\uff0c\u56e0\u4e3a\u4e00\u65e6\u9875\u9762\u5199\u5165\u5b8c\u6210\uff0c\u5b83\u5c31\u4f1a\u4ece swap cache \u4e2d\u79fb\u9664\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u533f\u540d\u9875\u66fe\u7ecf\u88ab\u5199\u5165\u4ea4\u6362\u533a\uff0c\u540e\u6765\u53c8\u88ab\u8bfb\u56de\u5185\u5b58\uff08swap-in\uff09\uff0c\u90a3\u4e48\u5b83\u4f1a\u5728 swap cache \u4e2d\u4fdd\u7559\uff0c\u76f4\u5230\u4ee5\u4e0b\u60c5\u51b5\u53d1\u751f\uff1a</p> <ul> <li>\u9875\u9762\u5185\u5bb9\u53d1\u751f\u53d8\u5316\uff0c\u6b64\u65f6\u5bf9\u5e94\u7684swap cache\u4f1a\u88ab\u5220\u9664</li> <li>\u4e4b\u524d\u4f7f\u7528\u7684\u4ea4\u6362\u533a\u7a7a\u95f4\u88ab\u56de\u6536\uff0c\u8fd9\u65f6swap cache\u4e5f\u4f1a\u88ab\u5220\u9664</li> </ul>"},{"location":"linux/kernel/recycle/#lru","title":"LRU\u7b97\u6cd5","text":"<p>\u5185\u5b58\u56de\u6536\u662f\u901a\u8fc7 LRU \u94fe\u8868\u5b9e\u73b0\u7684\u3002LRU \u94fe\u8868\u5bf9\u9875\u8fdb\u884c\u6392\u5e8f\uff0c\u5c06\u9891\u7e41\u4f7f\u7528\u7684\u9875\u653e\u5230\u5934\u90e8\uff0c\u5c06\u4f7f\u7528\u9891\u7387\u4f4e\u7684\u9875\u653e\u5230\u5c3e\u90e8\u3002\u5185\u5b58\u56de\u6536\u5176\u5b9e\u5c31\u662f\u5c06\u5c3e\u90e8\u7684\u9875\u4ece\u5185\u5b58\u8f6c\u5b58\u5230\u78c1\u76d8\u4e2d\uff0c\u7136\u540e\u5c06\u9875\u91ca\u653e\u7ed9\u4f19\u4f34\u7cfb\u7edf\u3002</p> <p>Linux \u5185\u6838\u91c7\u7528\u4e86\u6539\u8fdb\u7684 LRU \u7b97\u6cd5\uff0c\u88ab\u79f0\u4e3a\u53cc\u94fe\u7b97\u6cd5\u2014\u2014\u7ef4\u62a4\u4e24\u4e2a\u94fe\u8868\uff1a\u6d3b\u8dc3\u94fe\u8868\uff08active list\uff09\u548c\u4e0d\u6d3b\u8dc3\u94fe\u8868\uff08inactive list\uff09\u3002\u5728\u6d3b\u8dc3\u94fe\u8868\u4e2d\u4f7f\u7528\u9891\u7387\u6700\u4f4e\u7684\u9875\u5c06\u4f1a\u88ab\u79fb\u5230\u5c3e\u90e8\uff0c\u7136\u540e\u518d\u8f6c\u79fb\u5230\u4e0d\u6d3b\u8dc3\u94fe\u8868\u4e2d\uff0c\u6700\u540e\u6362\u51fa\u9875\u9762\u3002</p> <p>\u9884\u8bfb\u9875\u5148\u52a0\u5165\u5230\u4e0d\u6d3b\u8dc3\u94fe\u8868\u7684\u5934\u90e8\uff0c\u5f53\u9875\u88ab\u771f\u6b63\u8bbf\u95ee\u7684\u65f6\u5019\uff0c\u624d\u5c06\u9875\u63d2\u5165\u5230\u6d3b\u8dc3\u94fe\u8868\u7684\u5934\u90e8\u3002</p> <p></p> mmzone.h<pre><code>enum lru_list {\n    LRU_INACTIVE_ANON = LRU_BASE,\n    LRU_ACTIVE_ANON = LRU_BASE + LRU_ACTIVE,\n    LRU_INACTIVE_FILE = LRU_BASE + LRU_FILE,\n    LRU_ACTIVE_FILE = LRU_BASE + LRU_FILE + LRU_ACTIVE,\n    LRU_UNEVICTABLE,\n    NR_LRU_LISTS\n};\n</code></pre> <p>\u6839\u636e\u8fd9\u4e2a\u679a\u4e3e\u4f53\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5185\u5b58\u56de\u6536\u4e3b\u8981\u9488\u5bf9\u7684\u662f\u533f\u540d\u9875\u548c\u6587\u4ef6\u9875\u7684\u6d3b\u8dc3\u548c\u975e\u6d3b\u8dc3\u603b\u8ba1\u56db\u79cd\u94fe\u8868\u3002</p> <p>\u9875\u9762\u56de\u6536\u65f6\uff0c\u4f1a\u4f18\u5148\u56de\u6536\u4e0d\u6d3b\u8dc3\u94fe\u8868\u7684\u9875\uff0c\u7136\u540e\u624d\u8003\u8651\u6d3b\u8dc3\u94fe\u8868\u3002</p>"},{"location":"linux/kernel/recycle/#_2","title":"\u6c34\u4f4d\u7ebf","text":"<p>\u5185\u5b58\u6c34\u4f4d\u7ebf\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u5185\u5b58\u56de\u6536\u7684\u65f6\u673a\u3002\u5f53\u7cfb\u7edf\u4e2d\u53ef\u7528\u5185\u5b58\u4f4e\u4e8e WMARK_LOW \u65f6\uff0c\u5c31\u4f1a\u5524\u9192\u5185\u6838\u7ebf\u7a0b<code>kswapd</code>\u8fdb\u884c\u5185\u5b58\u56de\u6536\uff0c\u56de\u6536\u7684\u8fc7\u7a0b\u662f\u5f02\u6b65\u7684\u3002</p> <p></p> <p>\u4ee5\u4e0b\u4e09\u79cd\u9875\u9762\u56de\u6536\u65b9\u5f0f\uff0c\u6700\u7ec8\u90fd\u4f1a\u8c03\u7528<code>shrink_node()</code>\u51fd\u6570\uff1a</p> <ul> <li>\u5feb\u901f\u56de\u6536\uff1a\u8c03\u7528<code>node_reclaim()</code>\u51fd\u6570\uff0c\u4e0d\u56de\u6536\u810f\u6587\u4ef6\u9875\uff0c\u907f\u514d\u8017\u65f6\u7684IO\u64cd\u4f5c</li> <li>\u5f02\u6b65\u56de\u6536\uff1a\u5524\u9192<code>kswapd</code>\u5185\u6838\u7ebf\u7a0b\uff0c\u5728\u540e\u53f0\u8fdb\u884c\u9875\u9762\u56de\u6536</li> <li>\u76f4\u63a5\u56de\u6536\uff1a\u6162\u901f\u8def\u5f84\u5185\u5b58\u5206\u914d\u65f6\u5931\u8d25\uff0c\u89e6\u53d1\u76f4\u63a5\u56de\u6536</li> </ul> <p></p>"},{"location":"linux/kernel/recycle/#_3","title":"\u56de\u6536\u7b56\u7565","text":""},{"location":"linux/kernel/rt_patch/","title":"\u5b9e\u65f6\u8865\u4e01","text":"<p>Linux 5.3 \u5f15\u5165\u4e86 PREEMPT_RT \u8865\u4e01\uff0c\u610f\u5473\u7740\u5f00\u53d1\u4e86\u5341\u51e0\u5e74\u7684\u5b9e\u65f6\u8865\u4e01\u5c06\u4e0e\u4e3b\u7ebf Linux \u5408\u5e76\u3002</p> <p>\u6240\u8c13\u5b9e\u65f6\uff0c\u5c31\u662f\u6307\u4e00\u4e2a\u7279\u5b9a\u7684\u4efb\u52a1\u7684\u6267\u884c\u65f6\u95f4\u662f\u786e\u5b9a\u7684\uff0c\u5e76\u4e14\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u80fd\u4fdd\u8bc1\u4efb\u52a1\u7684\u65f6\u9650\uff08\u6700\u5927\u6267\u884c\u65f6\u95f4\u9650\u5236\uff09\u3002\u6839\u636e\u5bf9\u5b9e\u65f6\u6027\u7684\u4e25\u683c\u7a0b\u5ea6\u53c8\u5206\u4e3a\u8f6f\u5b9e\u65f6\u548c\u786c\u5b9e\u65f6\uff1a\u8f6f\u5b9e\u65f6\u5141\u8bb8\u4efb\u52a1\u5ef6\u8fdf\u4e00\u6bb5\u65f6\u95f4\u6267\u884c\uff0c\u800c\u786c\u5b9e\u65f6\u5219\u8981\u6c42\u4efb\u52a1\u5fc5\u987b\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u3002</p>"},{"location":"linux/kernel/rt_patch/#_2","title":"\u5b9e\u65f6\u6027\u6307\u6807","text":"<p>\u5224\u65ad\u4e00\u4e2a\u7cfb\u7edf\u662f\u5426\u662f\u5b9e\u65f6\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u4e24\u4e2a\u6307\u6807\uff1a</p> <ul> <li>\u4e2d\u65ad\u5ef6\u8fdf\uff1a\u4e2d\u65ad\u5ef6\u8fdf\u6307\u5916\u90e8\u4e2d\u65ad\u4e8b\u4ef6\u53d1\u751f\u5230\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u7684\u7b2c\u4e00\u6761\u6307\u4ee4\u5f00\u59cb\u6267\u884c\uff0c\u8fd9\u4e2d\u95f4\u7684\u5dee\u503c\u3002</li> <li>\u62a2\u5360\u5ef6\u8fdf\uff1a\u5373\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7684\u4efb\u52a1\u88ab\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u4efb\u52a1\u62a2\u5360\u540e\uff0c\u7cfb\u7edf\u5b8c\u6210\u4efb\u52a1\u5207\u6362\u6240\u9700\u8981\u7684\u65f6\u95f4\u3002\u62a2\u5360\u5ef6\u8fdf\u5305\u62ec\u68c0\u6d4b\u5ef6\u8fdf\u3001\u51b3\u7b56\u5ef6\u8fdf\u3001\u8c03\u5ea6\u5ef6\u8fdf\u3001\u5207\u6362\u5ef6\u8fdf\u3002</li> </ul> <p>\u9664\u4e86\u8f6f\u4ef6\u65b9\u9762\u7684\u5ef6\u8fdf\uff0c\u786c\u4ef6\u4e5f\u4f1a\u5bf9\u7cfb\u7edf\u5b9e\u65f6\u6027\u4ea7\u751f\u5f71\u54cd\u3002\u6bd4\u5982\u73b0\u4ee3 CPU \u5f80\u5f80\u91c7\u7528\u591a\u7ea7 cache \u6280\u672f\uff0c\u6307\u4ee4\u6216\u6570\u636e\u5728 cache \u4e2d\u548c\u4e0d\u5728 cache \u4e2d\u7684\u6267\u884c\u65f6\u95f4\u5dee\u8ddd\u662f\u975e\u5e38\u5927\u7684\u3002\u53c8\u6bd4\u5982\u865a\u62df\u5185\u5b58\u7ba1\u7406\u673a\u5236\uff0c\u7f3a\u9875\u5f02\u5e38\u673a\u5236\u4e5f\u4f1a\u4e25\u91cd\u5f71\u54cd\u4efb\u52a1\u6267\u884c\u65f6\u95f4\u7684\u53ef\u9884\u6d4b\u6027\u548c\u786e\u5b9a\u6027\u3002</p>"},{"location":"linux/kernel/rt_patch/#linux","title":"\u6807\u51c6Linux\u5185\u6838\u7684\u5236\u7ea6","text":"<p>\u6807\u51c6 Linux \u5185\u6838\u7684\u8bbe\u8ba1\u5e76\u6ca1\u6709\u8003\u8651\u5b9e\u65f6\u6027\uff0c\u5b9e\u65f6\u6027\u4e3b\u8981\u53d7\u5230\u4e0b\u9762\u51e0\u4e2a\u673a\u5236\u7684\u5f71\u54cd\uff1a</p> <ol> <li> <p>\u5185\u6838\u4e0d\u53ef\u62a2\u5360\uff1a</p> <p>\u5728\u6bd4\u8f83\u65e7\u7684\u5185\u6838\u7248\u672c\u4e2d\uff0c\u5185\u6838\u662f\u4e0d\u53ef\u62a2\u5360\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u5f53\u524d\u4efb\u52a1\u8fd0\u884c\u5728\u5185\u6838\uff0c\u5373\u4f7f\u6709\u66f4\u7d27\u8feb\u7684\u4efb\u52a1\u9700\u8981\u6267\u884c\uff0c\u4e5f\u5fc5\u987b\u5f97\u7b49\u5185\u6838\u8def\u5f84\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e\uff0c\u624d\u80fd\u8fd0\u884c\u65b0\u7684\u4efb\u52a1\u3002\u5728 2.6 \u5185\u6838\u4e2d\uff0c\u5185\u6838\u5df2\u7ecf\u652f\u6301\u62a2\u5360\uff0c\u5b9e\u65f6\u6027\u5f97\u5230\u4e86\u52a0\u5f3a\u3002\u4f46\u662f\u5185\u6838\u8def\u5f84\u4e2d\u4ecd\u7136\u6709\u5927\u91cf\u4e0d\u53ef\u62a2\u5360\u7684\u64cd\u4f5c\uff0c\u6bd4\u5982\u81ea\u65cb\u9501\u4fdd\u62a4\u7684\u4e34\u754c\u533a\uff0c\u4ee5\u53ca\u4e00\u4e9b\u663e\u793a\u8c03\u7528<code>preempt_disable()</code>\u51fd\u6570\u7684\u533a\u57df\u3002</p> </li> <li> <p>\u5173\u95ed\u4e2d\u65ad\uff1a</p> <p>Linux \u5728\u4e00\u4e9b\u540c\u6b65\u64cd\u4f5c\u4e2d\u4f7f\u7528\u4e86\u4e2d\u65ad\u5173\u95ed\u6307\u4ee4\uff0c\u4e2d\u65ad\u5173\u95ed\u5c06\u589e\u5927\u4e2d\u65ad\u5ef6\u8fdf\uff0c\u964d\u4f4e\u7cfb\u7edf\u7684\u5b9e\u65f6\u6027\u3002</p> </li> <li> <p>\u81ea\u65cb\u9501</p> <p>\u5728\u6709\u5171\u4eab\u8d44\u6e90\u4fdd\u62a4\u7684\u4e34\u754c\u533a\uff0c\u4f7f\u7528\u81ea\u65cb\u9501\u4f7f\u5f97\u5176\u4ed6\u4efb\u52a1\u53ea\u80fd\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u76f4\u5230\u5f53\u524d\u4efb\u52a1\u91ca\u653e\u9501\uff0c\u8fd9\u65e0\u7591\u4f1a\u964d\u4f4e\u7cfb\u7edf\u7684\u5b9e\u65f6\u6027\u3002</p> </li> <li> <p>\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f</p> <p>\u5728 Linux \u7cfb\u7edf\u4e2d\uff0c\u4e2d\u65ad\u662f\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\uff0c\u5728\u4efb\u4f55\u65f6\u523b\u53d1\u751f\u4e2d\u65ad\u5185\u6838\u90fd\u4f1a\u7acb\u5373\u54cd\u6267\u884c\u54cd\u5e94\u7684\u4e2d\u65ad\u5904\u7406\u51fd\u6570\u4ee5\u53ca\u8f6f\u4e2d\u65ad\uff0c\u76f4\u5230\u5904\u7406\u5b8c\u6bd5\u624d\u6267\u884c\u6b63\u5e38\u7684\u4efb\u52a1\u3002\u5047\u5982\u4e00\u4e2a\u7cfb\u7edf\u5904\u4e8e\u7e41\u91cd\u7684\u7f51\u7edc\u8d1f\u8f7d\u548c I/O \u8d1f\u8f7d\uff0c\u90a3\u4e48\u7cfb\u7edf\u53ef\u80fd\u4e00\u76f4\u5904\u5728\u4e2d\u65ad\u5904\u7406\u72b6\u6001\u800c\u6ca1\u6709\u4efb\u4f55\u673a\u4f1a\u6267\u884c\u5b9e\u65f6\u4efb\u52a1\u3002</p> </li> <li> <p>\u8c03\u5ea6\u7b97\u6cd5</p> <p>Linux \u5185\u6838\u5e76\u4e0d\u662f\u5728\u4efb\u4f55\u573a\u666f\u4e0b\u90fd\u53ef\u4ee5\u8c03\u5ea6\uff0c\u6bd4\u5982\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\uff0c\u5373\u4f7f\u5524\u9192\u4e86\u4e00\u4e2a\u9ad8\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\uff0c\u4e5f\u4e0d\u80fd\u7acb\u5373\u8fd0\u884c\u3002\u56e0\u4e3a\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e0d\u80fd\u53d1\u751f\u8c03\u5ea6\uff0c\u8be5\u8fdb\u7a0b\u5fc5\u987b\u5f97\u7b49\u5230\u4e2d\u65ad\u5904\u7406\u5b8c\u6bd5\u4e4b\u540e\u624d\u80fd\u8fd0\u884c\u3002\u5982\u679c\u4e2d\u65ad\u4e0b\u534a\u90e8\u4f7f\u7528\u4e86\u81ea\u65cb\u9501\u4fdd\u62a4\u4e34\u754c\u533a\uff0c\u90a3\u4e48\u8be5\u8fdb\u7a0b\u8fd8\u8981\u7b49\u5f85\u4e34\u754c\u533a\u91ca\u653e\u540e\u624d\u80fd\u8fd0\u884c\u3002</p> </li> </ol>"},{"location":"linux/kernel/rt_patch/#preempt_rt","title":"PREEMPT_RT \u8865\u4e01","text":"<p>PREEMPT_RT \u8865\u4e01\u7684\u76ee\u6807\u662f\u4e3a\u4e86\u89e3\u51b3\u6807\u51c6 Linux \u5185\u6838\u7684\u5b9e\u65f6\u6027\u95ee\u9898\uff0c\u5b83\u901a\u8fc7\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\u6765\u63d0\u5347\u7cfb\u7edf\u7684\u5b9e\u65f6\u6027\uff1a</p> <ol> <li> <p>\u9501\u5206\u89e3\uff1a\u5373\u5c06\u4e00\u628a\u5927\u9501\u6539\u4e3a\u5c0f\u9501\uff0c\u5c06\u4e34\u754c\u533a\u5206\u89e3\u4e3a\u591a\u4e2a\u5c0f\u9501\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u9501\u7684\u7c92\u5ea6\uff0c\u63d0\u5347\u7cfb\u7edf\u7684\u5e76\u53d1\u6027\u3002</p> </li> <li> <p>\u589e\u52a0\u62a2\u5360\u70b9\uff1a\u5728\u4ee3\u7801\u8def\u5f84\u4e2d\u589e\u52a0\u62a2\u5360\u70b9\uff0c\u964d\u4f4e\u7cfb\u7edf\u7684\u62a2\u5360\u5ef6\u8fdf\u3002</p> </li> <li> <p>\u4e2d\u65ad\u7ebf\u7a0b\u5316\uff1a\u5c06\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u653e\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u7ebf\u7a0b\u4e2d\uff0c\u8fd9\u6837\u5b9e\u65f6\u4efb\u52a1\u5c31\u53ef\u4ee5\u6709\u6bd4\u4e2d\u65ad\u66f4\u9ad8\u7684\u4f18\u5148\u7ea7\u3002</p> </li> <li> <p>\u5c06\u81ea\u65cb\u9501\u6539\u4e3a\u4e92\u65a5\u9501\uff1a\u81ea\u65cb\u9501\u5faa\u73af\u7b49\u5f85\u7684\u673a\u5236\u767d\u767d\u6d6a\u8d39\u4e86 CPU \u8d44\u6e90\uff0c\u5982\u679c\u6539\u4e3a\u4e92\u65a5\u9501\uff0c\u8fdb\u7a0b\u5728\u83b7\u53d6\u4e0d\u5230\u5171\u4eab\u8d44\u6e90\u7684\u60c5\u51b5\u4f1a\u653e\u5f03 CPU\uff0c\u8c03\u5ea6\u5176\u4ed6\u8fdb\u7a0b\u6765\u8fd0\u884c\u3002</p> </li> </ol>"},{"location":"linux/kernel/sched/","title":"\u8fdb\u7a0b\u8c03\u5ea6","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u7684\u91cd\u8981\u804c\u8d23\u5c31\u662f\u5bf9\u5404\u7c7b\u8fdb\u7a0b\u8fdb\u884c\u5408\u7406\u7684\u8c03\u5ea6\uff0c\u5728\u5404\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u5c3d\u53ef\u80fd\u516c\u5e73\u5730\u5171\u4eab CPU \u65f6\u95f4\uff0c\u800c\u540c\u65f6\u53c8\u8981\u8003\u8651\u4e0d\u540c\u7684\u4efb\u52a1\u4f18\u5148\u7ea7\u3002\u8c03\u5ea6\u7684\u4e24\u4e2a\u6838\u5fc3\u95ee\u9898\u662f\uff1a</p> <ol> <li>\u5982\u4f55\u51b3\u5b9a\u4e0b\u4e00\u4e2a\u8fd0\u884c\u7684\u8fdb\u7a0b\uff1f</li> <li>\u5141\u8bb8\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u591a\u4e45\uff1f</li> </ol> <p>\u800c\u8c03\u5ea6\u7b97\u6cd5\u5fc5\u987b\u5728\u4ee5\u4e0b\u51e0\u4e2a\u76ee\u6807\u4e4b\u95f4\u5b9e\u73b0\u5e73\u8861\uff1a</p> <ul> <li>\u8fdb\u7a0b\u54cd\u5e94\u65f6\u95f4\u5c3d\u53ef\u80fd\u5feb</li> <li>\u540e\u53f0\u4efb\u52a1\u7684\u541e\u5410\u91cf\u5c3d\u53ef\u80fd\u9ad8</li> <li>\u5c3d\u53ef\u80fd\u907f\u514d\u8fdb\u7a0b\u7684\u9965\u997f\u73b0\u8c61</li> <li>\u4f4e\u4f18\u5148\u7ea7\u8fdb\u7a0b\u548c\u9ad8\u4f18\u5148\u7ea7\u8fdb\u7a0b\u7684\u9700\u6c42\u5c3d\u53ef\u80fd\u8c03\u548c</li> </ul> <p>\u4f20\u7edf\u7684\u8c03\u5ea6\u7b97\u6cd5\u57fa\u4e8e\u5206\u65f6(time sharing)\u6280\u672f\uff1a\u5c06 CPU \u7684\u65f6\u95f4\u5207\u5206\u6210\u7247(slice)\uff0c\u7ed9\u6bcf\u4e2a\u53ef\u8fd0\u884c\u7684\u8fdb\u7a0b\u5206\u914d\u4e00\u5757 CPU \u65f6\u95f4\u7247\uff0c\u5355\u5904\u7406\u5668\u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u8fd0\u884c\u5355\u4e2a\u8fdb\u7a0b\u3002\u5982\u679c\u65f6\u95f4\u7247\u8017\u5c3d\uff0c\u5373\u4f7f\u8fdb\u7a0b\u6ca1\u6709\u8fd0\u884c\u5b8c\uff0c\u4e5f\u4f1a\u53d1\u751f\u8fdb\u7a0b\u5207\u6362\u3002\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u5219\u4f53\u73b0\u5728\u5bf9\u4e8e\u65f6\u95f4\u7247\u7684\u5360\u7528\u91cf\u4e0a\u3002</p>"},{"location":"linux/kernel/sched/#_2","title":"\u8fdb\u7a0b\u7684\u5206\u7c7b","text":"<p>\u4e00\u79cd\u5206\u7c7b\u65b9\u6cd5\u5c06\u8fdb\u7a0b\u5206\u4e3a\u4e09\u7c7b\uff1a</p> <ul> <li>\u4ea4\u4e92\u5f0f\u8fdb\u7a0b\uff1a\u6b64\u7c7b\u8fdb\u7a0b\u7ecf\u5e38\u4e0e\u7528\u6237\u4ea4\u4e92\uff0c\u7b49\u5f85\u6765\u81ea\u7528\u6237\u7684\u9f20\u6807\u6216\u8005\u952e\u76d8\u64cd\u4f5c\uff0c\u5f53\u63a5\u53d7\u8f93\u5165\u540e\uff0c\u5fc5\u987b\u7acb\u5373\u54cd\u5e94\uff0c\u5426\u5219\u7528\u6237\u4f1a\u611f\u89c9\u7cfb\u7edf\u53cd\u5e94\u8fdf\u949d</li> <li>\u6279\u5904\u7406\u8fdb\u7a0b\uff1a\u6b64\u7c7b\u8fdb\u7a0b\u4e0d\u4e0e\u7528\u6237\u4ea4\u4e92\uff0c\u53ea\u5728\u540e\u53f0\u8fd0\u884c</li> <li>\u5b9e\u65f6\u8fdb\u7a0b\uff1a\u6b64\u7c7b\u8fdb\u7a0b\u6709\u5f88\u5f3a\u7684\u8c03\u5ea6\u9700\u8981\uff0c\u4e0d\u4f1a\u88ab\u4f4e\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u963b\u585e</li> </ul> <p>Linux \u5185\u6838\u53ef\u4ee5\u660e\u786e\u5730\u533a\u5206\u5b9e\u65f6\u8fdb\u7a0b\u7684\u8eab\u4efd\uff0c\u5e76\u5b9e\u73b0\u4e86\u57fa\u4e8e\u8fdb\u7a0b\u8fc7\u53bb\u884c\u4e3a\u7684\u542f\u53d1\u7b97\u6cd5\uff0c\u4ee5\u533a\u5206\u4ea4\u4e92\u5f0f\u8fdb\u7a0b\u548c\u6279\u5904\u7406\u8fdb\u7a0b\u3002\u4e3a\u4e86\u63d0\u9ad8\u7cfb\u7edf\u7684\u54cd\u5e94\u901f\u5ea6\uff0c\u8c03\u5ea6\u7b97\u6cd5\u4f1a\u503e\u5411\u4e8e\u4f18\u5148\u8c03\u5ea6\u4ea4\u4e92\u5f0f\u8fdb\u7a0b\u3002</p>"},{"location":"linux/kernel/sched/#_3","title":"\u8c03\u5ea6\u5668\u8bbe\u8ba1","text":"<p>Linux \u8bbe\u8ba1\u4e866\u79cd\u8c03\u5ea6\u7b56\u7565\uff0c5\u4e2a\u8c03\u5ea6\u5668\u7c7b\u548c3\u4e2a\u8c03\u5ea6\u5b9e\u4f53\uff1a</p> \u8c03\u5ea6\u5668\u7c7b \u8c03\u5ea6\u7b56\u7565 \u8c03\u5ea6\u7b97\u6cd5 \u8c03\u5ea6\u5b9e\u4f53 \u8c03\u5ea6\u5b9e\u4f53\u5bf9\u5e94\u7684\u8c03\u5ea6\u5bf9\u8c61 stop_sched_class \u65e0 \u65e0 \u65e0 \u7d27\u6025\u7684\u3001\u9700\u8981\u7acb\u5373\u6267\u884c\u7684CPU\u4efb\u52a1 dl_sched_class SCHED_DEADLINE \u6700\u65e9\u622a\u6b62\u65f6\u95f4\u7b97\u6cd5 sched_dl_entity \u6709\u622a\u6b62\u65f6\u95f4\u7684\u5b9e\u65f6\u8fdb\u7a0b rt_sched_class SCHED_RR, SCHED_FIFO \u65f6\u95f4\u7247\u8f6e\u8f6c\u7b97\u6cd5\uff0c\u5148\u8fdb\u5148\u51fa\u7b97\u6cd5 sched_rt_entity \u5b9e\u65f6\u8fdb\u7a0b fair_sched_class SCHED_OTHER \u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u7b97\u6cd5 sched_entity \u666e\u901a\u975e\u5b9e\u65f6\u8fdb\u7a0b idle_sched_class SCHED_IDLE \u65e0 \u65e0 \u7279\u6b8a\u8fdb\u7a0bidle <p>\u4e3a\u4e86\u8ba9\u6bcf\u4e2a CPU \u6838\u5fc3\u90fd\u80fd\u53c2\u4e0e\u8fdb\u7a0b\u4efb\u52a1\u5904\u7406\uff0c\u4e0d\u9700\u8981\u8003\u8651\u548c\u5176\u4ed6\u5904\u7406\u5668\u7ade\u4e89\u7684\u95ee\u9898\uff0c\u4e5f\u80fd\u5145\u5206\u5229\u7528\u672c\u5730\u786c\u4ef6 cache \u6765\u5bf9\u8bbf\u95ee\u52a0\u901f\uff0cLinux \u5185\u6838\u4e3a\u6bcf\u4e2a CPU \u6838\u5fc3\u90fd\u5206\u914d\u4e86\u4e00\u4e2a\u8fd0\u884c\u961f\u5217\uff0c\u8fd9\u5c31\u662f<code>struct rq</code>\u7ed3\u6784\u4f53\uff1a</p> kernel/sched/core.c<pre><code>DEFINE_PER_CPU_SHARED_ALIGNED(struct rq, runqueues)\n</code></pre> <p>\u4e3a\u4e86\u6ee1\u8db3\u4e0d\u540c\u7684\u8c03\u5ea6\u7b56\u7565\uff0c<code>strcut rq</code>\u4e2d\u5b9e\u73b0\u4e86\u4e0d\u540c\u7684\u8c03\u5ea6\u7c7b(Scheduling Class)\uff0c\u5c06\u4e0d\u540c\u8c03\u5ea6\u9700\u6c42\u7684\u8fdb\u7a0b\u653e\u5728\u4e0d\u540c\u7684\u8c03\u5ea6\u7c7b\u4e2d\uff1a</p> kernel/sched/sched.h<pre><code>struct rq{\n    struct rt_rq rt;\n    struct cfs_rq cfs;\n    struct dl_rq dl;\n};\n</code></pre> <p><code>task_struct-&gt;sched_class</code>\u6807\u8bc6\u4e86\u5f53\u524d\u8fdb\u7a0b\u7684\u8c03\u5ea6\u5668\u7c7b\uff0c<code>task_struct-&gt;policy</code>\u6807\u8bc6\u4e86\u5f53\u524d\u8fdb\u7a0b\u7684\u8c03\u5ea6\u7b56\u7565\u3002\u6574\u4e2a\u8c03\u5ea6\u5668\u8fd0\u884c\u7684\u573a\u666f\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"linux/kernel/sched/#_4","title":"\u8fdb\u7a0b\u4f18\u5148\u7ea7","text":"<p>Linux \u5b9a\u4e49\u4e86 0~139 \u4e4b\u95f4\u7684\u4f18\u5148\u7ea7\uff0c\u6570\u503c\u8d8a\u4f4e\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002\u5176\u4e2d 0~99 \u7684 100 \u4e2a\u4f18\u5148\u7ea7\u7ed9\u5b9e\u65f6\u8fdb\u7a0b\u4f7f\u7528\uff0c100~139 \u7684 40 \u4e2a\u4f18\u5148\u7ea7\u7ed9\u666e\u901a\u8fdb\u7a0b\u4f7f\u7528\u3002\u5728\u8c03\u5ea6\u4f18\u5148\u7ea7\u4e0a\uff0c\u5b9e\u65f6\u8fdb\u7a0b\u4f7f\u7528\u7684\u662f\u9759\u6001\u4f18\u5148\u7ea7\uff0c\u4f18\u5148\u7ea7\u9ad8\u7684\u8fdb\u7a0b\u62e5\u6709\u7edd\u5bf9\u7684\u4f18\u5148\u6267\u884c\u6743\u3002\u4f46\u662f\u666e\u901a\u8fdb\u7a0b\u4f7f\u7528\u7684\u662f\u52a8\u6001\u4f18\u5148\u7ea7\uff0c\u4f1a\u968f\u7740\u8fdb\u7a0b\u7684\u8fd0\u884c\u52a8\u6001\u53d8\u5316\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6bcf\u4e2a\u666e\u901a\u8fdb\u7a0b\u90fd\u88ab\u8c03\u5ea6\u5230\uff0c\u4e0d\u81f3\u4e8e\u88ab\u997f\u6b7b\u3002</p> <p>\u53e6\u5916\uff0c\u5bf9\u4e8e\u666e\u901a\u8fdb\u7a0b\u8fd8\u5f15\u5165\u4e86 nice \u503c\uff0c-20~19 \u5bf9\u5e94 100~139\u3002</p> <p></p>"},{"location":"linux/kernel/sched/#_5","title":"\u5b9e\u65f6\u8c03\u5ea6\u7b97\u6cd5","text":"<p>\u5b9e\u65f6\u8fdb\u7a0b\u7684\u8c03\u5ea6\u4e2d\uff0c\u4f18\u5148\u7ea7\u662f\u6700\u91cd\u8981\u7684\u8003\u8651\u56e0\u7d20\uff0cLinux \u5185\u6838\u63d0\u4f9b\u4e86\u4e24\u79cd\u5b9e\u65f6\u8c03\u5ea6\u7b56\u7565\uff1a</p> <ul> <li>SCHED_FIFO\uff1a\u5148\u6765\u5148\u670d\u52a1</li> <li>SCHED_RR\uff1a\u65f6\u95f4\u7247\u8f6e\u8f6c</li> </ul> <p>\u4e0d\u7ba1\u662f\u54ea\u79cd\u7b56\u7565\uff0c\u4f18\u5148\u7ea7\u9ad8\u7684\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u62a2\u5360\u4f18\u5148\u7ea7\u4f4e\u7684\u8fdb\u7a0b\u3002</p> <p>\u8fd9\u79cd\u8c03\u5ea6\u65b9\u5f0f\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e9b\u4f18\u5148\u7ea7\uff0c\u7136\u540e\u4e3a\u6bcf\u4e2a\u4f18\u5148\u7ea7\u5206\u914d\u4e00\u4e2a\u94fe\u8868\u5f53\u4f5c\u961f\u5217\u5373\u53ef\uff0c\u4e5f\u53eb\u591a\u4f18\u5148\u7ea7\u961f\u5217\uff1a</p> <pre><code>#define MAX_RT_PRIO 100\n\nstruct rt_prio_array{\n    ...\n    struct list_head queue[MAX_RT_PRIO];\n};\n</code></pre> <p>\u5b9e\u65f6\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u6c38\u8fdc\u5927\u4e8e\u666e\u901a\u8fdb\u7a0b\uff0c\u4f46\u662f Linux \u9884\u7559\u4e86 5% \u7684\u4f59\u91cf\u7ed9\u666e\u901a\u8fdb\u7a0b\u4f7f\u7528\uff1a</p> <pre><code>$ sysctl -a | grep sched_rt_\nkernel.sched_rt_period_us = 1000000\nkernel.sched_rt_runtime_us = 950000\n</code></pre>"},{"location":"linux/kernel/sched/#_6","title":"\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u7b97\u6cd5","text":"<p>\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6\u7b97\u6cd5\u9488\u5bf9\u666e\u901a\u8fdb\u7a0b\u7684\u8c03\u5ea6\u8fdb\u884c\u4e86\u6539\u8fdb\uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\"\u5bf9\u4e8e N \u4e2a\u8fdb\u7a0b\u7684\u7cfb\u7edf\uff0c\u5728\u65f6\u95f4\u5468\u671f T \u5185\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u8fd0\u884c T/N \u7684\u65f6\u95f4\"\u3002CFS \u6452\u5f03\u4e86\u56fa\u5b9a\u65f6\u95f4\u7247\u7684\u601d\u8def\uff0c\u4ece\u56fa\u5b9a\u5206\u914d\u65f6\u95f4\u7247\u53d8\u6210\u4e86\u6309\u6bd4\u4f8b\u5206\u914d\u3002\u8be5\u7b97\u6cd5\u5373\u4fdd\u8bc1\u4e86\u516c\u5e73\u6027\uff0c\u53c8\u517c\u987e\u4e86\u6574\u4f53\u7684\u8c03\u5ea6\u5ef6\u8fdf\u3002</p>"},{"location":"linux/kernel/sched/#vruntime","title":"vruntime","text":"<p>CFS \u5f15\u5165\u4e86\u865a\u62df\u8fd0\u884c\u65f6\u95f4 vruntime \u7684\u6982\u5ff5\uff0c\u8c03\u5ea6\u5668\u53ea\u9700\u8981\u4fdd\u8bc1\u6240\u6709\u8fdb\u7a0b\u7684 vruntime \u662f\u57fa\u672c\u5e73\u8861\u7684\u5373\u53ef\u3002CFS \u5728\u9009\u62e9\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u65f6\uff0c\u9009\u62e9\u662f\u4efb\u52a1\u961f\u5217\u7684 vruntime \u6700\u5c0f\u7684\u90a3\u4e2a\u8fdb\u7a0b\u3002vruntime \u662f\u6839\u636e\u9759\u6001\u4f18\u5148\u7ea7\u548c\u65f6\u95f4\u7247\u7efc\u5408\u8ba1\u7b97\u5f97\u51fa\u7684\u3002\u4e00\u65e6\u8fdb\u7a0b\u8fd0\u884c\uff0c\u5176\u503c\u5c31\u4f1a\u589e\u52a0\u3002\u7b80\u5355\u7684\u6765\u8bf4\uff0c\u8c01\u7684 vruntime \u5c0f\u4e86\uff0c\u5c31\u8981\u591a\u8fd0\u884c\uff1b\u8c01\u5927\u4e86\u5c31\u8981\u5c11\u8fd0\u884c\u3002\u56e0\u6b64 CFS \u8c03\u5ea6\u7684\u6838\u5fc3\u5c31\u662f\u5982\u4f55\u627e\u5230\u90a3\u4e2a vruntime \u503c\u6700\u5c0f\u7684\u8fdb\u7a0b\u3002</p> <p>\u5185\u6838\u9009\u62e9\u4f7f\u7528\u7ea2\u9ed1\u6811\u6765\u7ba1\u7406\u8fdb\u7a0b\uff0c\u5176\u4e2d\u8282\u70b9\u7684 key \u5c31\u662f vruntime \u7684\u503c\u3002\u6240\u6709\u8fdb\u7a0b\u4e2d vruntime \u503c\u6700\u5c0f\u7684\u90a3\u4e2a\uff0c\u5c31\u662f\u7ea2\u9ed1\u6811\u4e2d\u6700\u5de6\u4fa7\u7684\u53f6\u5b50\u8282\u70b9\u3002\u4e8e\u662f CFS \u7684\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5\u53ef\u7b80\u5355\u603b\u7ed3\u4e3a\u201c\u8fd0\u884c rbtree \u4e2d\u6700\u5de6\u8fb9\u53f6\u5b50\u8282\u70b9\u6240\u4ee3\u8868\u7684\u90a3\u4e2a\u8fdb\u7a0b\u201d\u3002</p> <p>CFS \u4f9d\u8d56 vruntime \u6765\u7ef4\u6301\u516c\u5e73\u8c03\u5ea6\uff0cvruntime \u7684\u503c\u4e0e nice \u503c\u6709\u5173\u3002Linux \u5efa\u7acb\u4e86 nice \u503c\u4e0e\u65f6\u95f4\u7247\u5206\u914d\u6bd4\u4f8b\u7684\u5173\u7cfb\u8868\uff1a</p> <pre><code>const int sched_prio_to_weight[40] = {\n/* -20 */     88761,     71755,     56483,     46273,     36291,\n/* -15 */     29154,     23254,     18705,     14949,     11916,\n/* -10 */      9548,      7620,      6100,      4904,      3906,\n/*  -5 */      3121,      2501,      1991,      1586,      1277,\n/*   0 */      1024,       820,       655,       526,       423,\n/*   5 */       335,       272,       215,       172,       137,\n/*  10 */       110,        87,        70,        56,        45,\n/*  15 */        36,        29,        23,        18,        15,\n};\n</code></pre> <p>\u666e\u901a\u8fdb\u7a0b\u7684 nice \u503c\u4e00\u822c\u4e3a0\uff0c\u5bf9\u5e94\u7684\u6743\u91cd\u4e3a 1024\u3002</p> <p>\u6ce8\u610f\uff1anice \u503c\u5e76\u4e0d\u662f\u4f18\u5148\u7ea7\uff0c\u53ea\u662f\u4e00\u4e2a\u65f6\u95f4\u7247\u5206\u914d\u7684\u6bd4\u4f8b\u3002nice \u503c\u8d8a\u9ad8\uff0c\u4ee3\u8868\u8fd9\u4e2a\u8fdb\u7a0b\u8d8a\u8c26\u8ba9\uff0c\u5360\u7528\u7684\u65f6\u95f4\u7247\u8d8a\u5c11\u3002</p>"},{"location":"linux/kernel/sched/#_7","title":"\u8c03\u5ea6\u8282\u62cd","text":"<p>Linxu \u6bcf\u9694\u56fa\u5b9a\u65f6\u95f4\u5c31\u4f1a\u53d1\u51fa timer interrupt\uff0c\u5bf9\u4e8e\u8c03\u5ea6\u5668\u6765\u8bf4\uff0c\u7531\u5b9a\u65f6\u5668\u9a71\u52a8\u7684\u8c03\u5ea6\u8282\u62cd\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u8c03\u5ea6\u65f6\u673a\u3002\u8c03\u5ea6\u8282\u62cd\u7684\u6838\u5fc3\u5165\u53e3\u662f<code>scheduler_tick()</code>\u51fd\u6570\uff1a</p> <pre><code>void scheduler_tick(void){\n    int cpu = smp_processor_id();\n    struct rq *rq = cpu_rq(cpu);\n    struct task_struct *curr = rq-&gt;curr;\n\n    //1.\u5c06\u6bcf\u4e2a\u8fdb\u7a0b\u6267\u884c\u8fc7\u7684\u65f6\u95f4\u7d2f\u8ba1\u8d77\u6765\n    //2.\u5224\u65ad\u662f\u5426\u9700\u8981\u8c03\u5ea6\u4e0b\u4e00\u4e2a\u4efb\u52a1\n    curr-&gt;sched_class-&gt;task_tick(rq, curr, 0);\n\n    //3.\u89e6\u53d1\u8d1f\u8f7d\u5747\u8861\n    rq-&gt;idle_balance = idle_cpu(cpu);\n    trigger_load_balance(rq);\n}\n</code></pre> <p><code>scheduler_tick()</code>\u4e2d\u6267\u884c\u7684<code>task_tick()</code>\uff0c\u5bf9\u5e94\u5230 CFS \u4e2d\u5c31\u662f<code>task_tick_fair()</code>\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4f1a\u5c06\u8fdb\u7a0b\u7684\u6267\u884c\u65f6\u95f4\u7d2f\u8ba1\u5230<code>vruntime</code>\u4e2d\uff0c\u5e76\u5224\u65ad\u662f\u5426\u9700\u8981\u8fdb\u884c\u8c03\u5ea6\uff1a</p> <pre><code>static void entity_tick(struct cfs_rq *cfs_rq, struct sched_entity *curr, int queued)\n{\n    update_curr(cfs_rq);\n    ......\n    if(cfs_rq-&gt;nr_running &gt; 1){\n        check_preempt_tick(cfs_rq, curr);\n    }\n}\n</code></pre> <p><code>check_preempt_tick()</code>\u51fd\u6570\u4f1a\u5224\u65ad\u5f53\u524d\u8fdb\u7a0b\u662f\u5426\u9700\u8981\u62a2\u5360\uff0c\u5982\u679c\u9700\u8981\uff0c\u5219\u4f1a\u8c03\u7528<code>resched_curr()</code>\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4f1a\u5c06\u8bbe\u7f6e<code>TIF_NEED_RESCHED</code>\u6807\u5fd7\uff0c\u7136\u540e\u8c03\u7528<code>schedule()</code>\u51fd\u6570\u8fdb\u884c\u8c03\u5ea6\u3002</p>"},{"location":"linux/kernel/sched/#_8","title":"\u8c03\u5ea6\u5668\u5165\u53e3","text":"<p>\u9009\u62e9\u5e76\u8fd0\u884c\u4efb\u52a1\u961f\u5217\u4e2d\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6838\u5fc3\u5165\u53e3\u662f<code>schedule()</code>\u51fd\u6570\uff1a</p> <pre><code>static void __sched notrace __schedule(unsigned int sched_mode)\n{\n    ......\n    cpu = smp_processor_id();\n    rq = cpu_rq(cpu);\n\n    //1.\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5f85\u6267\u884c\u7684\u4efb\u52a1\n    next = pick_next_task(rq);\n\n    //2.\u6267\u884c\u4e0a\u4e0b\u6587\u5207\u6362\n    context_swtich(rq, prev, next);\n}\n</code></pre> <p>\u7531\u4e8e\u5927\u90e8\u5206\u8fdb\u7a0b\u90fd\u662f\u666e\u901a\u8fdb\u7a0b\uff0c\u56e0\u6b64<code>pick_next_task()</code>\u4f1a\u6267\u884c<code>pick_next_task_fair()</code>\u51fd\u6570\uff0c\u4ece\u5f53\u524d\u4efb\u52a1\u961f\u5217\u7684\u7ea2\u9ed1\u6811\u8282\u70b9\u4e2d\uff0c\u9009\u62e9\u4e00\u4e2a vruntime \u503c\u6700\u5c0f\u7684\u8282\u70b9\uff1a</p> <pre><code>static inline struct task_struct *\n__pick_next_task(struct rq *rq, struct task_struct *prev, struct rq_flags *rf)\n{\n    const struct sched_class *class;\n    struct task_struct *p;\n\n    if (likely(prev-&gt;sched_class &lt;= &amp;fair_sched_class &amp;&amp;\n           rq-&gt;nr_running == rq-&gt;cfs.h_nr_running)) {\n\n        p = pick_next_task_fair(rq, prev, rf);\n        return p;\n    }\n    ......\n}\n</code></pre>"},{"location":"linux/kernel/sched/#_9","title":"\u8d1f\u8f7d\u5747\u8861","text":"<p>\u73b0\u4ee3\u8ba1\u7b97\u673a\u901a\u5e38\u7531\u51e0\u5341\u4e2a CPU \u6838\u5fc3\uff0c\u6bcf\u4e2a\u6838\u5fc3\u90fd\u6709\u81ea\u5df1\u7684\u8fd0\u884c\u961f\u5217\u3002\u56e0\u6b64\u5f88\u6709\u53ef\u80fd\u51fa\u73b0\u67d0\u4e2a CPU \u4e0a\u7684\u4efb\u52a1\u5df2\u7ecf\u591a\u5230\u5904\u7406\u4e0d\u8fc7\u6765\u4e86\uff0c\u800c\u6709\u7684 CPU \u5374\u5f88\u95f2\u7684\u60c5\u51b5\u3002\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u800c\u5b58\u5728\u7684\u3002</p> <p>\u5728\u8ba8\u8bba\u8d1f\u8f7d\u5747\u8861\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u660e\u786e\u4e0b\u8c03\u5ea6\u57df\u7684\u6982\u5ff5\u3002\u73b0\u4ee3\u8ba1\u7b97\u673a\u901a\u5e38\u628a CPU \u5212\u5206\u4e3a\u4e0d\u540c\u7684\u57df\uff0c\u57df\u4e4b\u95f4\u4e0d\u5171\u4eab\u7f13\u5b58\uff0c\u56e0\u6b64\u8fc1\u79fb\u5e26\u6765\u7684\u6027\u80fd\u6d88\u8017\u6bd4\u8f83\u9ad8\u3002\u5185\u6838\u5b9a\u4e49\u4e86<code>struct sched_domain</code>\u7ed3\u6784\u4f53\u6765\u5bf9\u5e94\u8fd9\u79cd\u903b\u8f91\u5173\u7cfb\uff1a</p> <pre><code>struct sched_domain{\n    struct sched_domain __rcu *parent;\n    struct sched_domain *child;\n    struct struct sched_group *groups;\n};\n\nstruct sched_group{\n    ......\n    unsigned long cpumask[0];\n};\n</code></pre> <p>\u8c03\u5ea6\u57df\u662f\u5206\u7ea7\u7684\uff0c\u8d8a\u662f\u4e0b\u5c42\u7684\u8c03\u5ea6\u57df\u4e2d\u7684\u6838\u5fc3\uff0c\u5176\u5171\u4eab\u7f13\u5b58\u7684\u7279\u6027\u8d8a\u597d\u3002\u8d1f\u8f7d\u5747\u8861\u7684\u76ee\u7684\u5c31\u662f\u5c3d\u91cf\u5728\u4e0b\u5c42\u7684\u8c03\u5ea6\u57df\u4e2d\u8fdb\u884c\u8c03\u5ea6\u3002CFS \u901a\u8fc7\u5728\u8c03\u5ea6\u8282\u62cd\u4e2d\u89e6\u53d1\u4e00\u4e2a\u9884\u5148\u6ce8\u518c\u597d\u7684\u8f6f\u4e2d\u65ad\u51fd\u6570<code>rebalance_domains()</code>\u6765\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u3002</p>"},{"location":"linux/kernel/sched/#_10","title":"\u8fdb\u7a0b\u8c03\u5ea6\u65f6\u673a","text":"<p>\u5185\u6838\u53ea\u8c03\u5ea6\u5904\u4e8e<code>TASK_RUNNING</code>\u72b6\u6001\u7684\u8fdb\u7a0b\uff0c\u5176\u4ed6\u8fdb\u7a0b\u90fd\u4e0d\u4f1a\u8fdb\u5165\u8c03\u5ea6\u5668\u53c2\u4e0e\u8c03\u5ea6\u3002\u7cfb\u7edf\u53d1\u751f\u8c03\u5ea6\u7684\u65f6\u673a\u5982\u4e0b\uff1a</p> <ul> <li>\u4e3b\u52a8\u8c03\u7528<code>schedule()</code>\u51fd\u6570\uff0c\u4e3b\u52a8\u653e\u5f03 CPU</li> <li>\u88ab\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u62a2\u5360\uff0c\u88ab\u52a8\u653e\u5f03 CPU</li> <li>\u4ece\u7cfb\u7edf\u8c03\u7528\u6216\u4e2d\u65ad\u4e0a\u4e0b\u6587\u8fd4\u56de\u7528\u6237\u7a7a\u95f4</li> <li>\u4ece\u7cfb\u7edf\u8c03\u7528\u6216\u4e2d\u65ad\u4e0a\u4e0b\u6587\u8fd4\u56de\u5185\u6838\u7a7a\u95f4(\u5f00\u542f\u5185\u6838\u62a2\u5360\u9009\u9879)</li> </ul>"},{"location":"linux/kernel/sched/#tif_need_resched","title":"TIF_NEED_RESCHED","text":"<p>\u5185\u6838\u5728<code>need_resched()</code>\u51fd\u6570\u4e2d\u4f1a\u68c0\u67e5\u62a2\u5360\u6807\u5fd7\u4f4d<code>TIF_NEED_RESCHED</code>\u6765\u5224\u65ad\u662f\u5426\u9700\u8981\u8fdb\u884c\u4e00\u6b21\u8c03\u5ea6\u3002\u5982\u679c\u8be5\u6807\u5fd7\u4f4d\u88ab\u8bbe\u7f6e\uff0c\u5219\u4f1a\u5728\u5408\u9002\u7684\u65f6\u673a\u8c03\u7528<code>schedule()</code>\u51fd\u6570\u89e6\u53d1\u8c03\u5ea6\u3002</p>"},{"location":"linux/kernel/sched/#_11","title":"\u4e0a\u4e0b\u6587\u5207\u6362","text":"<p>\u6240\u8c13\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5c31\u662f\u4ece\u4e00\u4e2a\u53ef\u6267\u884c\u8fdb\u7a0b\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u53ef\u6267\u884c\u8fdb\u7a0b\u7684\u8fc7\u7a0b\uff0c\u7531<code>context_switch()</code>\u51fd\u6570\u8d1f\u8d23\u6267\u884c\uff0c\u8be5\u51fd\u6570\u4e0e\u4f53\u7cfb\u7ed3\u6784\u76f8\u5173\uff0c\u5b83\u4e3b\u8981\u5b8c\u6210\u4e24\u4ef6\u4e8b\uff1a</p> <ul> <li>\u8c03\u7528<code>switch_mm()</code>\u51fd\u6570\u5207\u6362\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4</li> <li>\u8c03\u7528<code>switch_to()</code>\u51fd\u6570\u5207\u6362\u8fdb\u7a0b\u7684\u6808\u548c\u5bc4\u5b58\u5668</li> </ul>"},{"location":"linux/kernel/sched/#_12","title":"\u7528\u6237\u62a2\u5360","text":"<p>\u5f53\u5185\u6838\u5373\u5c06\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u65f6\uff0c\u5982\u679c<code>TIF_NEED_RESCHED</code>\u88ab\u8bbe\u7f6e\uff0c\u5c31\u4f1a\u5bfc\u81f4<code>schedule()</code>\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u6b64\u65f6\u5c31\u4f1a\u53d1\u751f\u7528\u6237\u62a2\u5360\u3002\u4ece\u5185\u6838\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u662f\u5b89\u5168\u7684\uff0c\u65e2\u7136\u5b83\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u5f53\u524d\u8fdb\u7a0b\uff0c\u5b83\u5f53\u7136\u4e5f\u53ef\u4ee5\u53bb\u8c03\u5ea6\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\u8fd0\u884c\u3002\u4e0d\u8bba\u662f\u4ece\u5185\u6838\u6001\u8fd4\u56de\u8fd8\u662f\u4ece\u4e2d\u65ad\u8fd4\u56de\uff0c<code>TIF_NEED_RESCHED</code>\u6807\u5fd7\u90fd\u4f1a\u88ab\u68c0\u67e5\u3002</p>"},{"location":"linux/kernel/sched/#_13","title":"\u5185\u6838\u62a2\u5360","text":"<p>\u5bf9\u4e8e\u4e0d\u652f\u6301\u5185\u6838\u62a2\u5360\u7684\u64cd\u4f5c\u7cfb\u7edf\u800c\u8a00\uff0c\u5185\u6838\u4ee3\u7801\u53ef\u4ee5\u4e00\u76f4\u6267\u884c\u76f4\u5230\u5b83\u5b8c\u6210\u4e3a\u6b62\u3002\u800c Linux \u652f\u6301\u5185\u6838\u62a2\u5360\u2014\u2014\u53ea\u8981\u91cd\u65b0\u8c03\u5ea6\u662f\u5b89\u5168\u7684\u3002\u76f8\u5bf9\u4e8e\u7528\u6237\u62a2\u5360\uff0c\u5185\u6838\u62a2\u5360\u663e\u7136\u9996\u5148\u9700\u8981\u4fdd\u8bc1\u5b89\u5168\u6027\uff0c\u4e3a\u6b64 Linux \u5f15\u5165\u4e86<code>preempt_count</code>\u8ba1\u6570\u5668\uff0c\u521d\u59cb\u503c\u4e3a0\u3002\u6bcf\u5f53\u4f7f\u7528\u9501\u7684\u65f6\u5019\u6570\u503c\u52a01\uff0c\u91ca\u653e\u9501\u7684\u65f6\u5019\u6570\u503c\u51cf1\u3002\u4ece\u4e2d\u65ad\u8fd4\u56de\u5185\u6838\u7a7a\u95f4\u7684\u65f6\u5019\uff0c\u5185\u6838\u4f1a\u540c\u65f6\u68c0\u67e5<code>TIF_NEED_RESCHED</code>\u548c<code>preempt_count</code>\u6807\u5fd7\uff1a\u5982\u679c<code>need_resched</code>\u88ab\u8bbe\u7f6e\uff0c\u5e76\u4e14<code>preempt_count</code>\u4e3a0\uff0c\u624d\u4f1a\u8c03\u7528<code>schedule()</code>\u51fd\u6570\u3002</p>"},{"location":"linux/kernel/sched/#_14","title":"\u8c03\u5ea6\u76f8\u5173\u7684\u7528\u6237\u63a5\u53e3","text":"<p><code>chrt</code>\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u548c\u4fee\u6539\u8fdb\u7a0b\u7684\u8c03\u5ea6\u7b56\u7565\uff0c<code>taskset</code>\u547d\u4ee4\u53ef\u4ee5\u4e3a\u8fdb\u7a0b\u8bbe\u7f6e\u4eb2\u548c\u6027\u3002</p> \u7cfb\u7edf\u8c03\u7528 \u63cf\u8ff0 nice \u8bbe\u7f6e\u8fdb\u7a0b\u7684<code>nice</code>\u503c getpriority \u83b7\u53d6\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7 setpriority \u8bbe\u7f6e\u8fdb\u7a0b sched_setscheduler \u8bbe\u7f6e\u8fdb\u7a0b\u7684\u8c03\u5ea6\u7b56\u7565 sched_getscheduler \u83b7\u53d6\u8fdb\u7a0b\u7684\u8c03\u5ea6\u7b56\u7565 sched_setparam \u8bbe\u7f6e\u8fdb\u7a0b\u7684\u5b9e\u65f6\u4f18\u5148\u7ea7 sched_getparam \u83b7\u53d6\u8fdb\u7a0b\u7684\u5b9e\u65f6\u4f18\u5148\u7ea7 sched_get_priority_max \u83b7\u53d6\u8fdb\u7a0b\u7684\u8c03\u5ea6\u7b56\u7565\u7684\u6700\u5927\u4f18\u5148\u7ea7 sched_get_priority_min \u83b7\u53d6\u8fdb\u7a0b\u7684\u8c03\u5ea6\u7b56\u7565\u7684\u6700\u5c0f\u4f18\u5148\u7ea7 sched_rr_get_interval \u83b7\u53d6\u8fdb\u7a0b\u7684\u65f6\u95f4\u7247\u957f\u5ea6 sched_setaffinity \u8bbe\u7f6e\u8fdb\u7a0b\u7684\u5904\u7406\u5668\u4eb2\u548c\u6027 sched_getaffinity \u83b7\u53d6\u8fdb\u7a0b\u7684\u5904\u7406\u5668\u4eb2\u548c\u6027 sched_yield \u4e3b\u52a8\u8ba9\u51fa\u5904\u7406\u5668 <p>Linux\u8c03\u5ea6\u7a0b\u5e8f\u63d0\u4f9b\u5f3a\u5236\u7684\u5904\u7406\u5668\u7ed1\u5b9a\u673a\u5236\uff0c\u53ef\u4ee5\u8ba9\u8fdb\u7a0b\u5f3a\u5236\u8fd0\u884c\u5728\u67d0\u4e2a\u5904\u7406\u5668\u4e0a\u3002\u8fd9\u79cd\u5f3a\u5236\u7684\u4eb2\u548c\u6027\u4fdd\u5b58\u5728<code>task_struct</code>\u7684<code>cpus_allowed</code>\u8fd9\u4e2a\u4f4d\u63a9\u7801\u6807\u5fd7\u4e2d\u3002\u6bcf\u4e00\u4f4d\u90fd\u5bf9\u5e94\u4e00\u4e2a\u7cfb\u7edf\u53ef\u7528\u7684\u5904\u7406\u5668\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u4f4d\u90fd\u88ab\u8bbe\u7f6e\u4ee5\u5141\u8bb8\u8fdb\u7a0b\u5728\u7cfb\u7edf\u7684\u6240\u6709\u5904\u7406\u5668\u4e0a\u6267\u884c\u3002</p> <p>Linux\u63d0\u4f9b\u4e86\u4e24\u4e2a\u6700\u5168\u7684\u63a5\u53e3\u51fd\u6570\uff0c\u53ef\u4ee5\u5b8c\u6210\u4e0a\u8ff0\u63a5\u53e3\u7684\u6240\u6709\u529f\u80fd\uff1a</p> <pre><code>int sched_setattr(pid_t pid, const struct sched_attr *attr, unsigned int flags);\nint sched_getattr(pid_t pid, const struct sched_attr *attr, unsigned int size, unsigned int flags); \n</code></pre> <p><code>struct sched_attr</code>\u7ed3\u6784\u4f53\u56ca\u62ec\u4e86\u5173\u4e8e\u8c03\u5ea6\u7684\u4e00\u5207\u63a7\u5236\u53c2\u6570\uff1apolicy\uff0cnice\uff0cvalue\uff0crt_priority\uff0cperiod\uff0cdeadline\u7b49\u3002</p>"},{"location":"linux/kernel/shell/","title":"shell\u811a\u672c","text":""},{"location":"linux/kernel/shell/#_1","title":"\u7279\u6b8a\u5b57\u7b26","text":"<ul> <li>#\uff1a\u6ce8\u91ca</li> <li>;\uff1a\u547d\u4ee4\u5206\u9694\u7b26</li> <li>;;\uff1acase\u8bed\u53e5\u7ed3\u675f\u7b26</li> <li>'\uff1a\u5355\u5f15\u53f7\uff0c\u539f\u6837\u8f93\u51fa</li> <li>\"\uff1a\u53cc\u5f15\u53f7\uff0c\u53ef\u4ee5\u8f93\u51fa\u53d8\u91cf\u540d</li> <li>`\uff1a\u547d\u4ee4\u66ff\u6362</li> </ul>"},{"location":"linux/kernel/shell/#_2","title":"\u5b57\u7b26\u4e32","text":""},{"location":"linux/kernel/shell/#_3","title":"\u6570\u7ec4","text":"<p>\u521b\u5efa\u6570\u7ec4\uff1a</p> <pre><code># \u76f4\u63a5\u8d4b\u503c\narray=(value1 value2 value3 ...)\n\n# \u4f7f\u7528\u7d22\u5f15\u8d4b\u503c\narray[0]=value1\narray[1]=value2\n</code></pre> <p>\u8bbf\u95ee\u6570\u7ec4\u5143\u7d20\uff1a</p> <pre><code># \u8bbf\u95ee\u7279\u5b9a\u5143\u7d20\necho ${array[2]}\n\n# \u8bbf\u95ee\u6240\u6709\u5143\u7d20\necho ${array[*]}\n\n# \u8bbf\u95ee\u6570\u7ec4\u957f\u5ea6\necho ${#array[*]}\n</code></pre> <p>\u904d\u5386\u6570\u7ec4\uff1a</p> <pre><code>for item in ${array[*]}; do\n    echo $item\ndone\n</code></pre>"},{"location":"linux/kernel/shell/#_4","title":"\u5b57\u5178","text":"<p>\u521b\u5efa\u5b57\u5178\uff1a</p> <pre><code># \u58f0\u660e\u5173\u8054\u6570\u7ec4\ndeclare -A dictionary\n\n# \u8d4b\u503c\ndictionary[key1]=value1\ndictionary[key2]=value2\n</code></pre> <p>\u8bbf\u95ee\u5b57\u5178\uff1a</p> <pre><code># \u8bbf\u95ee\u7279\u5b9a\u952e\u7684\u503c\necho ${dictionary[key1]}\n\n# \u8bbf\u95ee\u6240\u6709\u952e\necho ${!dictionary[*]}\n\n# \u8bbf\u95ee\u6240\u6709\u503c\necho ${dictionary[*]}\n\n# \u8bbf\u95ee\u5b57\u5178\u957f\u5ea6\necho ${#dictionary[*]}\n</code></pre> <p>\u904d\u5386\u5b57\u5178\uff1a</p> <pre><code>for key in ${!dictionary[*]}; do\n    echo ${dictionary[$key]}\ndone\n</code></pre>"},{"location":"linux/kernel/shell/#_5","title":"\u7279\u6b8a\u53c2\u6570","text":"\u53c2\u6570\u540d \u542b\u4e49 $0 \u811a\u672c\u540d\u79f0 $1-$9 \u4f4d\u7f6e\u53c2\u6570 $# \u53c2\u6570\u4e2a\u6570 $@ \u6240\u6709\u53c2\u6570 $? \u4e0a\u4e00\u6761\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001 $$ \u5f53\u524dshell\u7684pid $_ \u4e0a\u4e00\u6761\u547d\u4ee4\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570"},{"location":"linux/kernel/shell/#_6","title":"\u6d41\u7a0b\u63a7\u5236","text":"<p>if else\uff1a</p> <pre><code>if condition1\nthen\n    command1\nelif condition2\n    command2\nelse\n    commandN\nfi\n</code></pre> <p>for while\uff1a</p> <pre><code>for var in item1 item2 ... itemN\ndo\n    command1\n    command2\n    ...\n    commandN\ndone\n</code></pre> <p>while\uff1a</p> <pre><code>while condition\ndo\n    command1\n    command2\n    ...\n    commandN\ndone\n</code></pre> <p>case\uff1a</p> <pre><code>case \"${opt}\" in\n    \"Install-Puppet-Server\" )\n        install_master $1\n        exit\n    ;;\n\n    \"Install-Puppet-Client\" )\n        install_client $1\n        exit\n    ;;\n\n    \"Exit\" )\n        exit\n    ;;\n\n    * ) echo \"Bad option, please choose again\"\nesac\n</code></pre>"},{"location":"linux/kernel/shell/#_7","title":"\u6761\u4ef6\u5224\u65ad","text":"<p>\u6574\u6570\u6761\u4ef6\uff1a</p> <ul> <li>-eq\uff1a\u7b49\u4e8e</li> <li>-ne\uff1a\u4e0d\u7b49\u4e8e</li> <li>-gt\uff1a\u5927\u4e8e</li> <li>-ge\uff1a\u5927\u4e8e\u7b49\u4e8e</li> <li>-lt\uff1a\u5c0f\u4e8e</li> <li>-le\uff1a\u5c0f\u4e8e\u7b49\u4e8e</li> </ul> <p>\u5b57\u7b26\u4e32\u6761\u4ef6\uff1a</p> <ul> <li>-z\uff1a\u7a7a\u5b57\u7b26\u4e32</li> <li>-n\uff1a\u975e\u7a7a</li> <li>==\uff1a\u7b49\u4e8e</li> <li>!=\uff1a\u4e0d\u7b49\u4e8e</li> </ul> <p>\u6587\u4ef6\u6761\u4ef6\uff1a</p> <ul> <li>-e\uff1a\u5b58\u5728</li> <li>-d\uff1a\u76ee\u5f55</li> <li>-f\uff1a\u666e\u901a\u6587\u4ef6</li> <li>-h\uff1a\u7b26\u53f7\u94fe\u63a5</li> <li>-r\uff1a\u53ef\u8bfb</li> <li>-w\uff1a\u53ef\u5199</li> <li>-x\uff1a\u53ef\u6267\u884c</li> </ul>"},{"location":"linux/kernel/shell/#_8","title":"\u5904\u7406\u8f93\u5165","text":""},{"location":"linux/kernel/shell/#getopt","title":"getopt","text":"<p><code>getopt</code>\u547d\u4ee4\u5728\u5904\u7406\u547d\u4ee4\u884c\u9009\u9879\u548c\u53c2\u6570\u65f6\u975e\u5e38\u65b9\u4fbf\u3002\u5b83\u53ef\u4ee5\u63a5\u53d7\u4e00\u7cfb\u5217\u4efb\u610f\u5f62\u5f0f\u7684\u547d\u4ee4\u884c\u9009\u9879\u548c\u53c2\u6570\uff0c\u5e76\u81ea\u52a8\u5c06\u5176\u8f6c\u6362\u6210\u9002\u5f53\u7684\u683c\u5f0f\u3002\u5b83\u7684\u57fa\u672c\u683c\u5f0f\u4e3a\uff1a<code>getopt [options] [parameters]</code>\u3002\u4f60\u9700\u8981\u5728[options]\u4e2d\u5217\u51fa\u811a\u672c\u4e2d\u6240\u6709\u8981\u7528\u5230\u7684\u9009\u9879\uff0c\u5982\u679c\u9700\u8981\u6709\u53c2\u6570\u503c\u5c31\u8ddf\u4e00\u4e2a\u5192\u53f7\u3002</p>"},{"location":"linux/kernel/shell/#getopts","title":"getopts","text":"<p><code>getopts</code>\u547d\u4ee4\u4e0e<code>getopt</code>\u547d\u4ee4\u7c7b\u4f3c\uff0c\u4f46\u5b83\u53ea\u80fd\u5904\u7406\u77ed\u9009\u9879\uff0c\u5e76\u4e14\u53ea\u80fd\u5904\u7406\u4e00\u7ec4\u9009\u9879\u3002\u4e0b\u9762\u4e3e\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a</p> <pre><code>#!/bin/bash\n\nwhile getopts \"a:b:c\" opt\ndo\n    case $opt in\n        a)\n            echo \"option a with value $OPTARG\"\n            ;;\n        b)\n            echo \"option b with value $OPTARG\"\n            ;;\n        c)\n            echo \"option c with no value\"\n            ;;\n        \\?)\n            echo \"unknown option: -$OPTARG\"\n            exit 1\n            ;;\n    esac\ndone\n</code></pre>"},{"location":"linux/kernel/shell/#_9","title":"\u51fd\u6570","text":"<pre><code>function function_name {\n    command...\n}\n</code></pre> <p>\u4f7f\u7528\u51fd\u6570\u65f6\u9700\u8981\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9\uff1a</p> <ol> <li>\u51fd\u6570\u5c40\u90e8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u88ab\u8c03\u7528\u4e4b\u540e\uff0c\u5916\u90e8\u53ef\u89c1\u3002</li> <li>\u8c03\u7528\u51fd\u6570\u65f6\u53ef\u4ee5\u4f20\u53c2\uff0c\u51fd\u6570\u4f53\u5185\u90e8\u901a\u8fc7<code>$n</code>\u7684\u5f62\u5f0f\u6765\u83b7\u53d6\u53c2\u6570</li> <li>\u7528return\u8868\u793a\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u5728\u51fd\u6570\u8c03\u7528\u540e\u901a\u8fc7<code>$?</code>\u6765\u83b7\u53d6\u8fd4\u56de\u503c</li> </ol>"},{"location":"linux/kernel/shell/#grep","title":"grep","text":"<p>grep\u662f\u6587\u672c\u641c\u7d22\u5de5\u5177\uff0c\u7528\u4e8e\u5728\u6587\u4ef6\u4e2d\u641c\u7d22\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5185\u5bb9\uff0c\u5e76\u6253\u5370\u51fa\u6765\u3002</p> <p>\u57fa\u672c\u683c\u5f0f\uff1a<code>grep [options] pattern [file...]</code></p> <ol> <li>pattern\uff1a\u8fc7\u6ee4\u6761\u4ef6</li> <li>file\uff1a\u8981\u641c\u7d22\u7684\u6587\u4ef6(\u4e00\u4e2a\u6216\u591a\u4e2a)</li> </ol> <p>\u5e38\u7528\u9009\u9879\u53c2\u6570\uff1a</p> \u53c2\u6570 \u8bf4\u660e -i \u5ffd\u7565\u5927\u5c0f\u5199 -n \u663e\u793a\u5339\u914d\u884c\u53f7 -r \u9012\u5f52\u641c\u7d22\u76ee\u5f55 -l \u53ea\u663e\u793a\u6587\u4ef6\u540d -c \u53ea\u663e\u793a\u5339\u914d\u884c\u6570 -o \u53ea\u663e\u793a\u5339\u914d\u7684\u5185\u5bb9 -w \u53ea\u5339\u914d\u8fc7\u6ee4\u5230\u7684\u5355\u8bcd -v \u53cd\u5411\u9009\u62e9\uff0c\u53ea\u663e\u793a\u4e0d\u5339\u914d\u7684\u884c -A num \u663e\u793a\u5339\u914d\u884c\u53ca\u4e4b\u540e\u7684num\u884c -B num \u663e\u793a\u5339\u914d\u884c\u53ca\u4e4b\u524d\u7684num\u884c -C num \u663e\u793a\u5339\u914d\u884c\u53ca\u4e0a\u4e0b\u5404num\u884c -E \u4f7f\u7528\u6269\u5c55\u6b63\u5219(\u7b49\u540c\u4e8eegrep) -F \u4f7f\u7528\u89c4\u5b9a\u5b57\u7b26\u4e32\u6a21\u5f0f(\u7b49\u540c\u4e8efgrep) -P \u4f7f\u7528perl\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"linux/kernel/shell/#sed","title":"sed","text":"<p>sed\u662f\u4e00\u4e2a\u6d41\u7f16\u8f91\u5668\uff0c\u4e3b\u8981\u7528\u4e8e\u5bf9\u6587\u672c\u8fdb\u884c\u975e\u4ea4\u4e92\u5f0f\u7f16\u8f91\u3002\u5b83\u53ef\u4ee5\u8fdb\u884c\u63d2\u5165\u3001\u5220\u9664\u3001\u66ff\u6362\u3001\u63d0\u53d6\u7b49\u64cd\u4f5c\uff0c\u662f\u6587\u672c\u5904\u7406\u548c\u8f6c\u6362\u7684\u5229\u5668\u3002</p> <p>\u57fa\u672c\u683c\u5f0f\uff1a<code>sed [options] 'script' file</code></p> <ul> <li>script\uff1ased\u5185\u7f6e\u7684\u547d\u4ee4\u811a\u672c\uff0c\u4e3b\u8981\u7528\u4e8e\u5bf9\u6587\u4ef6\u8fdb\u884c\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c<ul> <li>a\uff1a\u8ffd\u52a0</li> <li>d\uff1a\u5220\u9664\u5339\u914d\u884c</li> <li>i\uff1a\u63d2\u5165\u6587\u672c</li> <li>p\uff1a\u6253\u5370\u5339\u914d\u884c</li> <li>s/\u6b63\u5219/\u66ff\u6362\u5185\u5bb9/g\uff1a\u5339\u914d\u6b63\u5219\uff0c\u7136\u540e\u66ff\u6362\uff0cg\u8868\u793a\u5168\u5c40\u66ff\u6362</li> </ul> </li> </ul>"},{"location":"linux/kernel/shell/#awk","title":"awk","text":"<p>awk\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u6587\u672c\u5904\u7406\u5de5\u5177\uff0c\u4e3b\u8981\u7528\u4e8e\u5bf9\u7ed3\u6784\u5316\u6570\u636e\u8fdb\u884c\u6a21\u5f0f\u626b\u63cf\u548c\u5904\u7406\uff0c\u6709\u7740\u5f3a\u5927\u7684\u6587\u672c\u683c\u5f0f\u5316\u80fd\u529b\u3002\u5b83\u652f\u6301\u590d\u6742\u7684\u64cd\u4f5c\u548c\u811a\u672c\u7f16\u5199\uff0c\u80fd\u591f\u8fdb\u884c\u6a21\u5f0f\u5339\u914d\u3001\u6587\u672c\u5904\u7406\u3001\u6570\u636e\u62a5\u544a\u751f\u6210\u7b49\u3002</p> <p>\u57fa\u672c\u683c\u5f0f\uff1a<code>awk [options] 'pattern {action}' file</code></p>"},{"location":"linux/kernel/shell/#_10","title":"\u989c\u8272","text":"<pre><code>echo -e \"\\033[32m\u7eff\u8272\u6587\u672c\\033[0m\"\n</code></pre> <p>\u4e0a\u9762\u8fd9\u6bb5\u4ee3\u7801\u5c06\u8f93\u51fa\u7eff\u8272\u6587\u672c\u3002\u6ce8\u610f\uff0c\u5728\u8bbe\u7f6e\u6587\u672c\u8f93\u51fa\u540e\uff0c\u4e00\u5b9a\u8981\u4f7f\u7528<code>\\033[0m</code>\u6765\u6062\u590d\u9ed8\u8ba4\u989c\u8272\u3002</p> <p>\u4e00\u4e9b\u5e38\u7528\u7684\u989c\u8272\u4ee3\u7801\u6709\uff1a</p> \u989c\u8272 \u524d\u666f\u8272 \u80cc\u666f\u8272 \u9ed1\u8272 30 40 \u7ea2\u8272 31 41 \u7eff\u8272 32 42 \u9ec4\u8272 33 43 \u84dd\u8272 34 44 \u7d2b\u8272 35 45 \u9752\u8272 36 46 \u767d\u8272 37 47"},{"location":"linux/kernel/synch/","title":"\u540c\u6b65\u8bed\u4e49","text":"<p>\u53ea\u8981\u6709\u5171\u4eab\u8d44\u6e90\u7684\u5730\u65b9\uff0c\u7f16\u5199\u4ee3\u7801\u65f6\u5c31\u9700\u8981\u7279\u522b\u6ce8\u610f\uff0c\u9632\u6b62\u5e76\u53d1\u8bbf\u95ee\u65f6\u9020\u6210\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\u591a\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u8bbf\u95ee\u5171\u4eab\u6570\u636e\u662f\u9020\u6210\u7cfb\u7edf\u4e0d\u7a33\u5b9a\u7684\u4e00\u7c7b\u9690\u60a3\uff0c\u800c\u8fd9\u7c7b\u9690\u60a3\u5f80\u5f80\u96be\u4ee5\u8ddf\u8e2a\u548c\u8c03\u8bd5\u3002</p> <p>\u5185\u6838\u4e2d\u5e76\u53d1\u6267\u884c\u7684\u539f\u56e0\u6709\uff1a</p> <ul> <li>\u4e2d\u65ad\uff1a\u4e2d\u65ad\u662f\u5f02\u6b65\u7684\uff0c\u51e0\u4e4e\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u523b\u53d1\u751f\uff0c\u6253\u65ad\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4ee3\u7801\u3002</li> <li>\u62a2\u5360\uff1a\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u53ef\u80fd\u4f1a\u88ab\u5176\u4ed6\u4efb\u52a1\u62a2\u5360\u3002</li> <li>\u7761\u7720\uff1a\u8fdb\u7a0b\u5728\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u7761\u7720\uff0c\u8fd9\u4f1a\u5524\u9192\u5185\u6838\u7684\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u8ba9\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u6295\u5165\u8fd0\u884c\u3002</li> <li>SMP\uff1a\u591a\u6838\u5904\u7406\u5668\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u540c\u4e00\u6bb5\u4ee3\u7801\u3002</li> </ul>"},{"location":"linux/kernel/synch/#_2","title":"\u540c\u6b65\u6982\u5ff5","text":""},{"location":"linux/kernel/synch/#_3","title":"\u4e34\u754c\u533a","text":"<p>\u6240\u8c13\u4e34\u754c\u533a\u5c31\u662f\u8bbf\u95ee\u548c\u64cd\u4f5c\u5171\u4eab\u8d44\u6e90\u7684\u4ee3\u7801\u3002\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u4e34\u754c\u533a\u662f\u4e0d\u5b89\u5168\u7684\uff0c\u56e0\u6b64\u4e34\u754c\u533a\u5fc5\u987b\u52a0\u4ee5\u4fdd\u62a4\u3002\u8003\u8651\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u60c5\u51b5\u3002\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5168\u5c40\u53d8\u91cfi\uff0c\u64cd\u4f5c\u4ec5\u4ec5\u662f\u5bf9\u5176\u52a01\u3002</p> <pre><code>i++;\n</code></pre> <p>\u4e00\u6761\u7b80\u5355\u7684\u81ea\u589e\u64cd\u4f5c\u5728CPU\u6267\u884c\u7684\u65f6\u5019\u5374\u9700\u8981\u4e09\u6761\u6c47\u7f16\u6307\u4ee4\uff1a</p> <ol> <li>\u4ece\u5185\u5b58\u4e2d\u8bfb\u51fa\u53d8\u91cfi\u7684\u503c\u5e76\u653e\u5728\u4e00\u4e2a\u5bc4\u5b58\u5668\u5185\u3002</li> <li>\u5c06\u5bc4\u5b58\u5668\u4e2d\u7684\u503c+1\u3002</li> <li>\u628ai\u7684\u503c\u5199\u56de\u5230\u5185\u5b58\u3002</li> </ol> <p>\u5b9e\u9645\u4e0a\uff0c\u5728\u591a\u7ebf\u7a0b\u5e76\u53d1\u7684\u60c5\u51b5\u4e0b\uff0c\u5176\u4ed6\u7ebf\u7a0b\u6709\u53ef\u80fd\u5728\u8fd9\u4e09\u6761\u6307\u4ee4\u95f4\u9699\u7684\u4efb\u610f\u65f6\u523b\u201c\u63d2\u961f\u201d\u3002\u8fd9\u79cd\u6982\u7387\u867d\u7136\u5f88\u5c0f\uff0c\u4f46\u662f\u8ba1\u7b97\u673a\u6bcf\u79d2\u8fd0\u884c\u4e0a\u767e\u4e07\u6761\u6307\u4ee4\uff0c\u201c\u63d2\u961f\u201d\u53ef\u80fd\u6bcf\u8fc7\u51e0\u79d2\u5c31\u53d1\u751f\u4e00\u6b21\u3002\u5047\u8bbe\u6709\u4e24\u4e2a\u7ebf\u7a0b\u6309\u7167\u6211\u4eec\u671f\u671b\u7684\u90a3\u6837\uff0c\u4f9d\u6b21\u64cd\u4f5c\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u82e5i\u7684\u521d\u59cb\u503c\u4e3a1\uff0c\u90a3\u4e48\u6700\u7ec8\u7ed3\u679c\u5e94\u8be5\u662f3\u3002\u4f46\u662f\u5047\u5982\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u5728\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u5230\u6700\u540e\u4e00\u6b65\u4e4b\u524d\u2014\u2014\u4e5f\u5c31\u662fi\u7684\u503c\u8fd8\u6ca1\u6709\u56de\u5199\uff0c\u5c31\u53bb\u5185\u5b58\u4e2d\u8bfb\u53d6\u4e86i\u7684\u503c\uff08\u6b64\u65f6i\u7684\u503c\u4ecd\u7136\u4e3a1\uff09\uff0c\u6211\u4eec\u6700\u540e\u5f97\u5230\u7684i\u7684\u503c\u5c31\u662f2\u800c\u4e0d\u662f3\uff0c\u8fd9\u4e0e\u6211\u4eec\u9884\u671f\u7684\u7ed3\u679c\u4e0d\u7b26\u3002</p> <p>\u591a\u7ebf\u7a0b\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90</p> <pre><code>#include &lt;stdio.h&gt;\n#include &lt;pthread.h&gt;\n\nint i = 0;\n\nvoid *thread_func(void *arg)\n{\n    for(int j = 0 ;j &lt; 1000000; j++)\n    {\n        i++;\n    }\n\n}\n\nint main(int argc, char *argv[])\n{\n\n    pthread_t tid1, tid2;\n    pthread_create(&amp;tid1, NULL, thread_func, NULL);\n    pthread_create(&amp;tid2, NULL, thread_func, NULL);\n\n    pthread_join(tid1, NULL);\n    pthread_join(tid2, NULL);\n\n    printf(\"i = %d\\n\", i);\n    return 0;\n}\n</code></pre> <p>\u4ee5\u4e0a\u662f\u4e00\u6bb5\u793a\u4f8b\u4ee3\u7801\uff0c\u5728\u7f16\u8bd1\u65f6\u8bf7\u52a0\u4e0a-lpthread\uff0c\u4ee5\u94fe\u63a5\u6b63\u786e\u7684\u5e93\u3002\u591a\u6b21\u6267\u884c\u8be5\u7a0b\u5e8f\u540e\u4f60\u4f1a\u53d1\u73b0\u6700\u7ec8\u7684\u7ed3\u679c\u662f\u4e0d\u786e\u5b9a\u7684\u3002</p> <p>\u8fd9\u662f\u6700\u7b80\u5355\u7684\u4e34\u754c\u533a\u4f8b\u5b50\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u7b80\u5355\u7684\u7ade\u4e89\u6761\u4ef6\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u7528\u5230\u590d\u6742\u7684\u9501\u673a\u5236\uff0c\u56e0\u4e3a\u9501\u5bf9\u4e8eCPU\u7684\u6027\u80fd\u6709\u5f88\u5927\u7684\u5f71\u54cd\u3002\u591a\u6570\u5904\u7406\u5668\u90fd\u63d0\u4f9b\u4e86\u6307\u4ee4\u6765\u539f\u5b50\u5730\u8bfb\u3001\u5199\u53d8\u91cf\u3002\u6211\u4eec\u79f0\u4e4b\u4e3a\u539f\u5b50\u6307\u4ee4\u3002\u4f7f\u7528\u539f\u5b50\u6307\u4ee4\u53ef\u4ee5\u89e3\u51b3\u4e00\u4e9b\u7b80\u5355\u7684\u5e76\u53d1\u95ee\u9898\u3002\u4e24\u6761\u539f\u5b50\u6307\u4ee4\u4e0d\u53ef\u80fd\u4ea4\u9519\u6267\u884c\uff0c\u56e0\u4e3a\u5904\u7406\u5668\u4f1a\u4ece\u786c\u4ef6\u4e0a\u7981\u6b62\u8fd9\u79cd\u53ef\u80fd\u6027\u3002</p>"},{"location":"linux/kernel/synch/#_4","title":"\u52a0\u9501","text":"<p>\u5f53\u5171\u4eab\u8d44\u6e90\u662f\u4e00\u4e2a\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\u6bd4\u5982\u7ed3\u6784\u4f53\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u7684\u6574\u578b\u6570\u636e\u65f6\uff0c\u539f\u5b50\u6307\u4ee4\u5c31\u65e0\u80fd\u4e3a\u529b\u4e86\u3002\u6b64\u65f6\u6211\u4eec\u5fc5\u987b\u5f15\u5165\u9501\u6765\u4fdd\u62a4\u5171\u4eab\u8d44\u6e90\u3002\u9501\u6709\u591a\u79cd\u5f62\u5f0f\uff0c\u9501\u7684\u7c92\u5ea6\u4e5f\u5404\u4e0d\u76f8\u540c\u3002Linux\u5185\u6838\u63d0\u4f9b\u4e86\u591a\u79cd\u4e0d\u540c\u7684\u9501\u673a\u5236\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff1a\u5f53\u9501\u88ab\u5360\u7528\u65f6\u5176\u4ed6\u7b49\u5f85\u9501\u7684\u7ebf\u7a0b\u7684\u8868\u73b0\u5f62\u5f0f\u2014\u2014\u6709\u4e00\u4e9b\u9501\u4f1a\u5728\u539f\u5730\u7b49\u5f85\uff0c\u800c\u6709\u4e00\u4e9b\u9501\u4f1a\u76f4\u63a5\u7761\u7720\u3002\u9501\u6ca1\u6709\u4f18\u52a3\u4e4b\u5206\uff0c\u5728\u4e0d\u540c\u573a\u666f\u4e0b\u9700\u8981\u7528\u4e0d\u540c\u7684\u9501\u3002</p> <p>\u5f53\u4e00\u4e2a\u9501\u88ab\u5360\u7528\u65f6\uff0c\u82e5\u6709\u5176\u4ed6\u7ebf\u7a0b\u8bd5\u56fe\u83b7\u5f97\u8be5\u9501\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u9501\u7684\u4e89\u7528\u3002\u7531\u4e8e\u9501\u662f\u8ba9\u7a0b\u5e8f\u4ee5\u4e32\u884c\u7684\u65b9\u5f0f\u5bf9\u8d44\u6e90\u8fdb\u884c\u8bbf\u95ee\uff0c\u88ab\u957f\u65f6\u95f4\u6301\u6709\u7684\u9501\u65e0\u7591\u4f1a\u964d\u4f4e\u7cfb\u7edf\u7684\u6027\u80fd\u3002\u4e8e\u662f\u9501\u7684\u7c92\u5ea6\u5c31\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\u3002</p> <p>Info</p> <p>\u9501\u7684\u7c92\u5ea6\u662f\u6307\u52a0\u9501\u7684\u8303\u56f4\u3002\u9501\u7684\u7c92\u5ea6\u8d8a\u5c0f\uff0c\u5e76\u53d1\u6027\u80fd\u8d8a\u597d\uff0c\u4f46\u662f\u52a0\u9501\u7684\u6b21\u6570\u4e5f\u8d8a\u591a\u3002\u9501\u7684\u7c92\u5ea6\u8d8a\u5927\uff0c\u52a0\u9501\u7684\u6b21\u6570\u8d8a\u5c11\uff0c\u4f46\u662f\u5e76\u53d1\u6027\u80fd\u8d8a\u5dee\u3002</p>"},{"location":"linux/kernel/synch/#_5","title":"\u6b7b\u9501","text":"<p>\u6b7b\u9501\u662f\u7f16\u5199\u540c\u6b65\u4ee3\u7801\u65f6\u7ecf\u5e38\u4f1a\u9047\u5230\u7684\u95ee\u9898\uff0c\u8868\u73b0\u5728\u591a\u4e2a\u7ebf\u7a0b\u56e0\u4e3a\u4e89\u593a\u8d44\u6e90\u800c\u5361\u6b7b\u3002\u5982\u679c\u6ca1\u6709\u5916\u90e8\u56e0\u7d20\u4ecb\u5165\uff0c\u8fd9\u4e9b\u7ebf\u7a0b\u5c06\u6c38\u8fdc\u5904\u4e8e\u7b49\u5f85\u72b6\u6001\u3002</p> <p>\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u5c31\u662f\u81ea\u6b7b\u9501\uff1a\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u8bd5\u56fe\u53bb\u83b7\u5f97\u4e00\u4e2a\u81ea\u5df1\u5df2\u7ecf\u6301\u6709\u7684\u9501\uff0c\u90a3\u4e48\u5b83\u5c06\u6c38\u8fdc\u7b49\u5f85\u4e0b\u53bb\u3002</p> <p>\u53e6\u4e00\u4e2a\u5e38\u89c1\u7684\u4f8b\u5b50\u53ebABBA\u6b7b\u9501\uff1a\u7ebf\u7a0b1\u6301\u6709\u9501A\uff0c\u7ebf\u7a0b2\u6301\u6709\u9501B\uff0c\u7ebf\u7a0b1\u8bd5\u56fe\u53bb\u83b7\u5f97\u9501B\uff0c\u800c\u7ebf\u7a0b2\u8bd5\u56fe\u53bb\u83b7\u5f97\u9501A\u3002\u7531\u4e8e\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u5728\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u91ca\u653e\u9501\uff0c\u4f46\u662f\u8c01\u90fd\u4e0d\u60f3\u91ca\u653e\u81ea\u5df1\u7684\u9501\uff0c\u4e8e\u662f\u5c31\u9020\u6210\u4e86\u6b7b\u9501\u3002\u9884\u9632\u6b7b\u9501\u7684\u53d1\u751f\u975e\u5e38\u91cd\u8981\uff0c\u867d\u7136\u4f60\u4e0d\u77e5\u9053\u81ea\u5df1\u7684\u4ee3\u7801\u4f1a\u4e0d\u4f1a\u53d1\u751f\u6b7b\u9501\uff0c\u4f46\u662f\u9075\u5faa\u4e00\u4e9b\u7b80\u5355\u7684\u89c4\u5219\u5bf9\u4e8e\u907f\u514d\u6b7b\u9501\u5927\u6709\u5e2e\u52a9\uff1a</p> <ul> <li>\u6309\u987a\u5e8f\u52a0\u9501\u3002\u4f7f\u7528\u591a\u4e2a\u9501\u65f6\u5fc5\u987b\u4fdd\u8bc1\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u83b7\u53d6\u9501\uff0c\u5426\u5219\u5c31\u6709\u53ef\u80fd\u9020\u6210 ABBA \u6b7b\u9501\u3002</li> <li>\u9632\u6b62\u9965\u997f\u3002</li> <li>\u4e0d\u8981\u91cd\u590d\u8bf7\u6c42\u540c\u4e00\u4e2a\u9501\u3002</li> <li>\u4ee3\u7801\u8bbe\u8ba1\u8d8a\u7b80\u6d01\u8d8a\u597d\u3002</li> </ul>"},{"location":"linux/kernel/synch/#_6","title":"\u539f\u5b50\u64cd\u4f5c","text":"<p>\u539f\u5b50\u64cd\u4f5c\u4ece\u786c\u4ef6\u4e0a(\u7531\u4f53\u7cfb\u7ed3\u6784\u5b9e\u73b0)\u4fdd\u8bc1\u6307\u4ee4\u4ee5\u4e0d\u53ef\u5206\u5272\u7684\u5f62\u5f0f\u6267\u884c\u2014\u2014\u6267\u884c\u8fc7\u7a0b\u4e0d\u53ef\u88ab\u6253\u65ad\u3002\u5185\u6838\u63d0\u4f9b\u4e86\u4e24\u7ec4\u539f\u5b50\u64cd\u4f5c\u63a5\u53e3\u2014\u2014\u4e00\u7ec4\u9488\u5bf9\u6574\u6570\uff0c\u4e00\u7ec4\u9488\u5bf9\u4f4d\u3002\u5728Linux\u652f\u6301\u7684\u6240\u6709\u4f53\u7cfb\u7ed3\u6784\u4e0a\u90fd\u5b9e\u73b0\u4e86\u8fd9\u4e24\u7ec4\u63a5\u53e3\u3002ARM\u4f7f\u7528 LDREX \u548c STREX \u6307\u4ee4\u3002</p> <p>\u6709\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u8981\u6c42\u67d0\u4e9b\u6307\u4ee4\u6309\u7167\u7279\u5b9a\u7684\u987a\u5e8f\u6267\u884c\uff0c\u8fd9\u88ab\u79f0\u4e3a\u987a\u5e8f\u6027\uff0c\u4ee5\u5c4f\u969c\uff08barrier\uff09\u6307\u4ee4\u6765\u5b9e\u73b0\u3002</p>"},{"location":"linux/kernel/synch/#_7","title":"\u539f\u5b50\u6574\u6570\u64cd\u4f5c","text":"<p>\u9488\u5bf9\u6574\u6570\u7684\u539f\u5b50\u64cd\u4f5c\u4f7f\u7528\u4e00\u4e2a\u7279\u6b8a\u7684<code>atomic_t</code>\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5b9a\u4e49\u5728&lt;linux/types.h&gt;\u4e2d\uff1a</p> <pre><code>typedef struct{\n    int counter;\n}atomic_t;\n</code></pre> <p>\u4f7f\u7528\u539f\u5b50\u6574\u6570\u64cd\u4f5c\u7684\u58f0\u660e\u5728&lt;asm/atomic.h&gt;\u4e2d\u5b9a\u4e49\uff1a</p> <ul> <li>\u8bbe\u7f6e\u539f\u5b50\u53d8\u91cf\u7684\u503c\uff1a</li> </ul> <pre><code>void atomic_set(atomic *v, int i);\natomic_t v = ATOMIC_INIT(0);\n</code></pre> <ul> <li>\u83b7\u53d6\u539f\u5b50\u53d8\u91cf\u7684\u503c</li> </ul> <pre><code>atomic_read(atomic_t *v);\n</code></pre> <ul> <li>\u539f\u5b50\u52a0\u51cf</li> </ul> <pre><code>void atomic_add(int i, atomic_t *v);\nvoid atomic_sub(int i, atomic_t *v);\n</code></pre> <ul> <li>\u539f\u5b50\u81ea\u589e/\u81ea\u51cf</li> </ul> <pre><code>void atomic_inc(atomic_t *v);\nvoid atomic_dec(atomic_t *v);\n</code></pre> <ul> <li>\u64cd\u4f5c\u5e76\u6d4b\u8bd5</li> </ul> <pre><code>int atomic_inc_and_test(atomic_t *v);\nint atomic_dec_and_test(atomic_t *v);\nint atomic_sub_and_test(int i, atomic_t *v);\n</code></pre> <ul> <li>\u64cd\u4f5c\u5e76\u8fd4\u56de</li> </ul> <pre><code>int atomic_add_return(int i, atomic_t *v);\nint atomic_sub_return(int i, atomic_t *v);\nint atomic_inc_return(atomic_t *v);\nint atomic_dec_return(atomic_t *v);\n</code></pre> <p>\u539f\u5b50\u64cd\u4f5c\u901a\u5e38\u662f\u5185\u8054\u51fd\u6570\uff0c\u4e14\u662f\u7528\u5185\u5d4c\u6c47\u7f16\u6307\u4ee4\u6765\u5b9e\u73b0\u7684\u3002gcc\u5185\u5d4c\u6c47\u7f16\u4ee3\u7801\u8bf7\u53c2\u8003\uff1aARM GCC Inline Assembler\u3002</p> <p><code>atomic64_t</code>\u7c7b\u578b\u662f64\u4f4d\u7684\u539f\u5b50\u53d8\u91cf\uff0c\u5176\u529f\u80fd\u548c32\u4f4d\u4e00\u81f4\uff0c\u533a\u522b\u662f\u63a5\u53e3\u4ee5<code>atomic64</code>\u524d\u7f00\u547d\u540d\u3002</p> <pre><code>typedef struct {\n    volatile long counter;\n}atomic64_t;\n</code></pre>"},{"location":"linux/kernel/synch/#_8","title":"\u539f\u5b50\u4f4d\u64cd\u4f5c","text":"<p><code>atomic_t</code>\u7c7b\u578b\u5bf9\u6574\u6570\u7b97\u672f\u6765\u8bb2\u6bd4\u8f83\u6709\u7528\u3002\u4f46\u662f\u5f53\u9700\u8981\u4ee5\u539f\u5b50\u5f62\u5f0f\u6765\u64cd\u4f5c\u5355\u4e2a\u7684\u4f4d\u65f6\uff0c\u8fd9\u79cd\u7c7b\u578b\u5c31\u65e0\u6cd5\u6d3e\u4e0a\u7528\u573a\u4e86\u3002Linux\u5185\u6838\u63d0\u4f9b\u4e86\u5bf9\u4f4d\u7684\u539f\u5b50\u64cd\u4f5c\u3002</p> <p>\u539f\u5b50\u4f4d\u7684\u64cd\u4f5c\u975e\u5e38\u5feb\uff0c\u53ea\u8981\u786c\u4ef6\u5e95\u5c42\u786c\u4ef6\u652f\u6301\uff0c\u8fd9\u79cd\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528\u5355\u4e2a\u673a\u5668\u6307\u4ee4\u6765\u6267\u884c\u3002\u8fd9\u4e9b\u51fd\u6570\u4e0e\u4f53\u7cfb\u7ed3\u6784\u76f8\u5173\uff0c\u5b9a\u4e49\u5728&lt;asm/bitops.h&gt;\u4e2d\u3002\u5373\u4f7f\u662f\u5728 SMP \u8ba1\u7b97\u673a\u4e0a\uff0c\u8fd9\u4e9b\u51fd\u6570\u4f9d\u65e7\u53ef\u4ee5\u786e\u4fdd\u662f\u539f\u5b50\u7684\u3002\u539f\u5b50\u4f4d\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u4f4d\u53f7+\u6307\u9488\u3002</p> <ul> <li>\u8bbe\u7f6e\u4f4d</li> </ul> <pre><code>void set_bit(int nr, void *addr);\n</code></pre> <ul> <li>\u6e05\u9664\u4f4d</li> </ul> <pre><code>void clear_bit(int nr, void *addr);\n</code></pre> <p>Note</p> <p>\u6240\u8c13\u8bbe\u7f6e\u4f4d\uff0c\u5c31\u662f\u5c06addr\u6307\u5411\u7684\u5185\u5b58\u5730\u5740\u4e2d\u7684\u7b2cnr\u4f4d\u8bbe\u7f6e\u4e3a1\u3002</p> <p>\u6240\u8c13\u6e05\u9664\u4f4d\uff0c\u5c31\u662f\u5c06addr\u6307\u5411\u7684\u5185\u5b58\u5730\u5740\u4e2d\u7684\u7b2cnr\u4f4d\u8bbe\u7f6e\u4e3a0\u3002</p> <ul> <li>\u5207\u6362\u4f4d</li> </ul> <pre><code>void change_bit(int nr, void *addr);\n</code></pre> <ul> <li>\u6d4b\u8bd5\u4f4d\uff1a</li> </ul> <pre><code>test_bit(int nr, void *addr);\n</code></pre> <ul> <li>\u6d4b\u8bd5\u5e76\u64cd\u4f5c\u4f4d\uff1a</li> </ul> <pre><code>int test_and_set_bit(int nr, void *addr);\nint test_and_clear_bit(int nr, void *addr);\nint test_and_change_bit(int nr, void *addr);\n</code></pre> <p>\u4e0a\u8ff0\u64cd\u4f5c\u7b49\u540c\u4e8e\u6267\u884c<code>test_bit()</code>\u540e\u518d\u6267\u884c<code>xxx_bit()</code>\u3002</p>"},{"location":"linux/kernel/synch/#_9","title":"\u81ea\u65cb\u9501","text":"<p>\u539f\u5b50\u64cd\u4f5c\u53ea\u80fd\u9488\u5bf9\u4e00\u4e9b\u7b80\u5355\u7684\u573a\u666f\uff0c\u590d\u6742\u7684\u573a\u666f\u5fc5\u987b\u5f97\u7528\u9501\u3002</p> <p>Linux\u5185\u6838\u4e2d\u6700\u5e38\u89c1\u7684\u9501\u662f\u81ea\u65cb\u9501\uff08spinlock\uff09\u3002\u81ea\u65cb\u9501\u53ea\u80fd\u540c\u65f6\u88ab\u4e00\u4e2a\u7ebf\u7a0b\u6301\u6709\uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8bd5\u56fe\u83b7\u5f97\u4e00\u4e2a\u5df2\u7ecf\u88ab\u5360\u7528\u7684\u81ea\u65cb\u9501\uff0c\u90a3\u4e48\u8be5\u7ebf\u7a0b\u5c06\u4f1a\u8fdb\u5165\u5fd9\u7b49\u5f85\uff0c\u76f4\u5230\u9501\u53ef\u7528\u3002\u5982\u679c\u4e34\u754c\u533a\u4ee3\u7801\u6267\u884c\u5f97\u6bd4\u8f83\u5feb\uff0c\u90a3\u4e48\u5c31\u9002\u5408\u7528\u81ea\u65cb\u9501\u3002</p> <p>\u603b\u7ed3\u81ea\u65cb\u9501\u7684\u7279\u70b9\u662f\uff1a</p> <ol> <li>\u5f53\u53d1\u751f\u8d44\u6e90\u51b2\u7a81\u65f6\uff0c\u539f\u5730\u6b7b\u7b49\u76f4\u5230\u83b7\u53d6\u9501\u3002</li> <li>\u540c\u4e00\u65f6\u95f4\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u3002</li> <li>\u6267\u884c\u65f6\u95f4\u77ed\u3002</li> <li>\u7531\u4e8e\u4e0d\u4f1a\u7761\u7720\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u3002</li> </ol>"},{"location":"linux/kernel/synch/#_10","title":"\u573a\u666f\u5206\u6790","text":"<p>\u81ea\u65cb\u9501\u4fdd\u62a4\u7684\u8d44\u6e90\u53ef\u80fd\u6765\u81ea\u591a\u4e2aCPU\u7684\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4ee5\u53ca\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u7684\u8bbf\u95ee\u3002\u5176\u4e2d\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5305\u62ec\uff1a\u7528\u6237\u6001\u8fdb\u7a0b\uff0c\u5185\u6838\u6001\u7ebf\u7a0b\uff0c\u5de5\u4f5c\u961f\u5217\u4e2d\u7684work function\u3002\u4e2d\u65ad\u4e0a\u4e0b\u6587\u5305\u62ec\uff1a\u4e2d\u65adhandler\uff0c\u8f6f\u4e2d\u65ad\uff0ctasklet\uff0c\u5b9a\u65f6\u5668\u7684callback\u3002</p> <p>\u5148\u6765\u770b\u6700\u7b80\u5355\u7684\u672a\u5f00\u542f\u5185\u6838\u62a2\u5360\u9009\u9879\u7684\u5355CPU\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u3002\u8be5\u573a\u666f\u4e0b\uff0c\u6240\u6709\u7684\u7cfb\u7edf\u8c03\u7528\u6309\u7167\u987a\u5e8f\u6267\u884c\uff0c\u5728\u5185\u6838\u6001\u4e5f\u4e0d\u4f1a\u53d1\u751f\u8fdb\u7a0b\u8c03\u5ea6\u3002\u56e0\u6b64\uff0c\u5171\u4eab\u8d44\u6e90\u6839\u672c\u5c31\u4e0d\u9700\u8981\u4fdd\u62a4\uff0c\u56e0\u4e3a\u6ca1\u6709\u5e76\u53d1\u573a\u666f\u3002</p> <p>\u5f53\u6253\u5f00\u4e86\u5185\u6838\u62a2\u5360\u9009\u9879\u4e4b\u540e\uff0c\u4e8b\u4ef6\u53d8\u5f97\u7565\u5fae\u590d\u6742\uff1a</p> <ul> <li>\u8fdb\u7a0bA\u9700\u8981\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90R</li> <li>\u8fdb\u7a0bB\u9700\u8981\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90R</li> </ul> <p>\u5047\u8bbe\u8fdb\u7a0bA\u5728\u8bbf\u95ee\u8fc7\u7a0b\u4e2d\u53d1\u751f\u4e86\u4e2d\u65ad\uff0c\u5524\u9192\u4e86\u4f18\u5148\u7ea7\u66f4\u9ad8\u7684\u8fdb\u7a0bB\u3002\u5728\u4e2d\u65ad\u8fd4\u56de\u73b0\u573a\u65f6\uff0c\u8fdb\u7a0b\u4eceA\u5207\u6362\u81f3B\u8fd0\u884c\uff0cB\u5f00\u59cb\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90R\u3002\u5982\u679c\u6ca1\u6709\u9501\u7684\u4fdd\u62a4\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e24\u4e2a\u8fdb\u7a0b\u540c\u65f6\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u7684\u60c5\u51b5\u3002\u4f46\u662f\u5982\u679c\u6211\u4eec\u52a0\u4e0a\u4e86\u81ea\u65cb\u9501\uff0c\u5f53A\u8bbf\u95ee\u65f6\u83b7\u53d6\u4e86\u81ea\u65cb\u9501\uff0cB\u4ecd\u8bd5\u56fe\u83b7\u53d6\u81ea\u65cb\u9501\uff0c\u7531\u4e8e\u8fdb\u7a0bA\u7684\u6301\u6709\u5bfc\u81f4\u4e86\u6b7b\u9501\u3002\u5185\u6838\u5728\u8fd9\u79cd\u573a\u666f\u4e0b\u7684\u5904\u7406\u5f88\u7b80\u5355\uff1a\u76f4\u63a5\u7981\u6b62\u672c\u5730CPU\u4e0a\u7684\u62a2\u5360\u3002\u5982\u679c\u662f\u5728\u591a\u6838\u573a\u666f\u4e0b\uff0cA\u548cB\u8fd0\u884c\u5728\u4e0d\u540c\u7684CPU\u4e0a\uff0c\u867d\u7136A\u6301\u6709\u4e86\u81ea\u65cb\u9501\u5bfc\u81f4B\u8fdb\u5165\u4e86\u7b49\u5f85\u72b6\u6001\uff0c\u4f46\u662f\u7531\u4e8e\u8fd0\u884c\u5728\u4e0d\u540cCPU\u4e0a\uff0c\u5f88\u5febA\u5c31\u4f1a\u91ca\u653e\u9501\u4ece\u800c\u8ba9B\u8fd0\u884c\u3002</p> <p>\u5982\u679c\u6211\u4eec\u52a0\u4e0a\u4e86\u4e2d\u65ad\u4e0a\u4e0b\u6587\u7684\u8bbf\u95ee\uff0c\u4e8b\u60c5\u5c06\u4f1a\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff1a</p> <ul> <li>\u8fd0\u884c\u5728CPU0\u4e0a\u7684\u8fdb\u7a0bA\u9700\u8981\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90R</li> <li>\u8fd0\u884c\u5728CPU1\u4e0a\u7684\u8fdb\u7a0bB\u9700\u8981\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90R</li> <li>\u5916\u8bbeP\u7684\u4e2d\u65adhandler\u4e5f\u9700\u8981\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90R</li> </ul> <p>\u5728\u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u5047\u8bbeCPU0\u4e0a\u7684\u8fdb\u7a0bA\u6301\u6709\u81ea\u65cb\u9501\u8fdb\u5165\u4e86\u4e34\u754c\u533a\u3002\u8fd9\u65f6\u5019\u5916\u8bbeP\u53d1\u751f\u4e86\u4e2d\u65ad\uff0c\u5e76\u4e14\u8c03\u5ea6\u5230\u4e86CPU1\u4e0a\u6267\u884c\uff0c\u7531\u4e8eCPU0\u4e0a\u7684\u8fdb\u7a0bA\u6301\u6709\u9501\uff0c\u5b83\u4f1a\u7a0d\u7b49\u4e00\u4f1a\u76f4\u5230\u8fdb\u7a0bA\u91ca\u653e\u3002\u4f46\u662f\u5982\u679c\u662f\u8c03\u5ea6\u5230CPU0\u4e0a\u6267\u884c\uff0c\u5c31\u4f1a\u53d1\u751f\u6b7b\u9501\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u6837\u7684\u95ee\u9898\uff0c\u5728\u6d89\u53ca\u5230\u4e2d\u65ad\u4e0a\u4e0b\u6587\u7684\u8bbf\u95ee\u65f6\uff0c\u4f7f\u7528\u81ea\u65cb\u9501\u7684\u540c\u65f6\u9700\u8981\u7981\u6b62\u672c\u5730CPU\u4e0a\u7684\u4e2d\u65ad\u3002</p> <p>\u5f53\u7136\uff0c\u5982\u679c\u5916\u8bbeP\u5ef6\u540e\u5230\u4e86\u4e2d\u65ad\u4e0b\u534a\u90e8\u4e4b\u540e\u53bb\u6267\u884c\uff0c\u76f4\u63a5\u7981\u6b62\u672c\u5730\u4e2d\u65ad\u5c31\u663e\u5f97\u4e0d\u5fc5\u8981\u4e86\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6709\u5176\u4ed6\u7684\u4e2d\u65ad\u5230\u6765\uff0c\u7c97\u66b4\u5730\u7981\u6b62\u4f1a\u5f71\u54cd\u7cfb\u7edf\u7684\u6027\u80fd\u3002\u8fd9\u65f6\u6211\u4eec\u53ea\u9700\u8981\u7981\u6b62\u4e2d\u65ad\u4e0b\u534a\u90e8\u5373\u53ef\u3002</p> <p>\u5185\u6838\u4e2d\u7684<code>spinlock_t</code>\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>typedef struct spinlock{\n    struct raw_spinlock rlock;\n}spinlock_t;\n\ntypedef struct raw_spinlock{\n    arch_spinlock_t raw_lock;\n}raw_spinlock_t;\n</code></pre> <p>\u4e3a\u4ec0\u4e48\u4f1a\u6709\u4e24\u4e2a\uff1f\u8fd9\u662f\u56e0\u4e3a\u5185\u6838\u5b9e\u65f6\u8865\u4e01PREEMPT_RT\u3002\u8be5\u8865\u4e01\u8bd5\u56fe\u4e3alinux\u5185\u6838\u589e\u52a0\u786c\u5b9e\u65f6\u529f\u80fd\uff0c\u6bd4\u5982\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\u5c31\u662f\u5e94\u7528\u4e4b\u4e00\u3002\u5b9e\u65f6\u5185\u6838\u5e0c\u671b\u5c06spinlock\u5206\u6210\u53ef\u4ee5\u7761\u7720\u548c\u4e0d\u53ef\u4ee5\u7761\u7720\u4e24\u79cd\u3002\u4e8e\u662f\uff0c\u6700\u7ec8\u7684\u547d\u540d\u89c4\u5219\u662f\uff1a</p> <ol> <li>spinlock\uff0c\u5728\u914d\u7f6e\u4e86PREEMPT_RT\u65f6\uff0c\u8868\u793a\u53ef\u4ee5\u7761\u7720\u3002</li> <li>raw_spinlock\uff0c\u5373\u4fbf\u662f\u914d\u7f6e\u4e86PREEMPT_RT\u65f6\uff0c\u4e5f\u4e0d\u53ef\u4ee5\u7761\u7720\u3002</li> <li>arch_spinlock\uff0c\u4e0e\u67b6\u6784\u76f8\u5173\u3002</li> </ol> <p>\u5bf9\u4e8eUP\u5e73\u53f0\uff0c\u6240\u6709\u7684<code>arch_spinlock_t</code>\u7684\u5b9a\u4e49\u90fd\u662f\u4e00\u6837\u7684\uff1a <pre><code>typedef struct {}arch_spinlock_t;\n</code></pre></p>"},{"location":"linux/kernel/synch/#_11","title":"\u51fd\u6570\u63a5\u53e3","text":"\u63a5\u53e3API\u63cf\u8ff0 spinlock raw_spinlock \u5b9a\u4e49\u5e76\u521d\u59cb\u5316 DEFINE_SPINLOCK DEFINE_RAW_SPINLOCK \u52a8\u6001\u521d\u59cb\u5316 spin_lock_init raw_spin_lock_init \u83b7\u53d6\u9501 spin_lock raw_spin_lock \u5c1d\u8bd5\u83b7\u53d6\u9501 spin_trylock raw_spin_trylock \u83b7\u53d6\u9501\u5e76\u7981\u6b62\u672c\u5730CPU\u4e2d\u65ad spin_lock_irq raw_spin_lock_irq \u83b7\u53d6\u9501\u5e76\u4fdd\u5b58\u5f53\u524dirq\u72b6\u6001\uff0c\u540c\u65f6\u7981\u6b62\u672c\u5730CPU\u4e2d\u65ad spin_lock_irqsave raw_spin_lock_irqsave \u83b7\u53d6\u9501\u5e76\u7981\u6b62\u672c\u5730CPU\u4e0b\u534a\u90e8 spin_lock_bh raw_spin_lock_bh \u91ca\u653e\u9501 spin_unlock raw_spin_unlock \u91ca\u653e\u9501\u5e76\u6fc0\u6d3b\u672c\u5730CPU\u4e2d\u65ad spin_unlock_irq raw_spin_unlock_irq \u91ca\u653e\u9501\u5e76\u6062\u590d\u5f53\u524dirq\u72b6\u6001 spin_unlock_irqrestore raw_spin_unlock_irqrestore \u91ca\u653e\u9501\u5e76\u6fc0\u6d3b\u672c\u5730CPU\u4e0b\u534a\u90e8 spin_unlock_bh raw_spin_unlock_bh \u5224\u65ad\u9501\u662f\u5426\u88ab\u5360\u7528 spin_is_locked raw_spin_is_locked <p>Info</p> <p>\u4f7f\u7528\u81ea\u65cb\u9501\u7684\u4ee3\u7801\u5728\u8fdb\u5165\u4e34\u754c\u533a\u7684\u65f6\u5019\uff0c\u8fd8\u4f1a\u53d7\u5230\u4e2d\u65ad\u548c\u4e0b\u534a\u90e8\u7684\u5e72\u6270\u3002\u6240\u4ee5\u5c31\u6709\u4e86\u81ea\u65cb\u9501\u7684\u4e2d\u65ad\u884d\u751f\u7248\u672c\u3002\u5728\u591a\u6838\u7f16\u7a0b\u4e2d\uff0c\u5982\u679c\u8fdb\u7a0b\u548c\u4e2d\u65ad\u9700\u8981\u8bbf\u95ee\u540c\u4e00\u8d44\u6e90\uff0c\u6211\u4eec\u4e00\u822c\u9700\u8981\u5728\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528<code>spin_lock_irqsave()</code>\uff0c\u5728\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u8c03\u7528<code>spin_lock()</code>\u3002</p>"},{"location":"linux/kernel/synch/#_12","title":"\u8bfb/\u5199\u81ea\u65cb\u9501","text":"<p>\u6709\u65f6\uff0c\u5bf9\u5171\u4eab\u8d44\u6e90\u7684\u8bbf\u95ee\u53ef\u4ee5\u660e\u786e\u5730\u5206\u4e3a\u8bfb\u548c\u5199\u4e24\u4e2a\u573a\u666f\uff0c\u5c24\u5176\u662f\u90a3\u4e9b\u9700\u8981\u5927\u91cf\u8bfb\u64cd\u4f5c\uff0c\u800c\u5199\u64cd\u4f5c\u5f88\u5c11\u7684\u60c5\u51b5\u65f6\uff0c\u5f15\u5165\u8bfb\u5199\u9501\u53ef\u4ee5\u5f88\u5927\u5730\u6539\u5584\u7cfb\u7edf\u7684\u6027\u80fd\u3002\u8bfb\u5199\u9501\u7684\u57fa\u672c\u903b\u8f91\u662f\uff1a\u8bfb\u6a21\u5f0f\u662f\u5171\u4eab\u7684\uff0c\u5199\u6a21\u5f0f\u662f\u72ec\u5360\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u5f53\u8fdb\u884c\u5199\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53ea\u80fd\u7531\u5355\u4e2a\u4efb\u52a1\u8fdb\u884c\u3002\u800c\u8fdb\u884c\u8bfb\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u591a\u4e2a\u4efb\u52a1\u3002</p> <p>\u8bfb\u5199\u9501\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u88ab\u5927\u91cf\u5e94\u7528\uff0c\u56e0\u4e3a\u8bb8\u591a\u64cd\u4f5c\u53ea\u662f\u7b80\u5355\u5730\u8bfb\u53d6\u6587\u4ef6\u6570\u636e\uff0c\u800c\u4e0d\u4f1a\u6d89\u53ca\u5230\u66f4\u65b0\u3002</p> <p>\u51e1\u4e8b\u7686\u6709\u5229\u5f0a\uff0c\u8bfb\u5199\u9501\u867d\u7136\u5728\u6709\u5927\u91cf\u8bfb\u64cd\u4f5c\u7684\u573a\u666f\u4e0b\u4f1a\u5e26\u6765\u663e\u8457\u7684\u6027\u80fd\u63d0\u5347\uff0c\u4f46\u662f\u5176\u9501\u7684\u903b\u8f91\u590d\u6742\u5ea6\u4e5f\u4f1a\u589e\u52a0\uff0c\u5e76\u4e14\u4f1a\u9020\u6210\u5199\u8005\u9965\u997f\u73b0\u8c61\u3002</p>"},{"location":"linux/kernel/synch/#_13","title":"\u573a\u666f\u5206\u6790","text":"<p>\u52a0\u9501\u903b\u8f91\uff1a</p> <ul> <li>\u4e34\u754c\u533a\u6ca1\u6709\u4efb\u4f55\u7ebf\u7a0b\uff0c\u6b64\u65f6\u8bfb\u8005\u6216\u8005\u5199\u8005\u90fd\u5141\u8bb8\u8fdb\u5165\uff0c\u4f46\u4e0d\u80fd\u540c\u65f6\u8fdb\u5165\u3002</li> <li>\u4e34\u754c\u533a\u6709\u4e00\u4e2a\u8bfb\u8005\uff0c\u6b64\u65f6\u65b0\u6765\u7684\u8bfb\u8005\u53ef\u4ee5\u4efb\u610f\u8fdb\u5165\uff0c\u4f46\u662f\u4e0d\u5141\u8bb8\u5199\u8005\u8fdb\u5165\u3002</li> <li>\u4e34\u754c\u533a\u6709\u4e00\u4e2a\u5199\u8005\uff0c\u6b64\u65f6\u4efb\u4f55\u8bfb\u8005\u6216\u8005\u5199\u8005\u90fd\u4e0d\u5141\u8bb8\u8fdb\u5165\u3002</li> <li>\u4e34\u754c\u533a\u6709\u591a\u4e2a\u8bfb\u8005\uff0c\u6b64\u65f6\u540e\u7eed\u7684\u8bfb\u8005\u53ef\u4ee5\u4efb\u610f\u8fdb\u5165\uff0c\u4f46\u662f\u5199\u8005\u4e0d\u80fd\u8fdb\u5165\uff0c\u8fd9\u5c31\u662f\u5199\u8005\u9965\u997f\u73b0\u8c61\u3002</li> </ul> <p>\u89e3\u9501\u903b\u8f91\uff1a</p> <ul> <li>\u4e00\u4e2a\u5199\u8005\u79bb\u5f00\u4e34\u754c\u533a\uff0c\u6b64\u65f6\u6240\u6709\u8bfb\u8005\u548c\u5199\u8005\u90fd\u53ef\u4ee5\u7ade\u4e89\u8fdb\u5165\u4e34\u754c\u533a\u3002</li> <li>\u4e00\u4e2a\u8bfb\u8005\u79bb\u5f00\u4e34\u754c\u533a\uff0c\u5982\u679c\u4e34\u754c\u533a\u4ecd\u7136\u6709\u8bfb\u8005\uff0c\u90a3\u4e48\u5199\u8005\u8fd8\u662f\u9700\u8981\u7b49\u5f85\uff0c\u76f4\u5230\u6240\u6709\u7684\u8bfb\u8005\u79bb\u5f00\u4e34\u754c\u533a\u3002</li> </ul>"},{"location":"linux/kernel/synch/#_14","title":"\u51fd\u6570\u63a5\u53e3","text":"\u63a5\u53e3API\u63cf\u8ff0 rw_spinlock \u5b9a\u4e49\u5e76\u521d\u59cb\u5316 DEFINE_RW_SPINLOCK \u52a8\u6001\u521d\u59cb\u5316 rwlock_init \u83b7\u53d6\u9501 read_lock <p> write_lock </p> \u83b7\u53d6\u9501\u5e76\u7981\u6b62\u672c\u5730CPU\u4e2d\u65ad read_lock_irq <p> write_lock_irq </p> \u83b7\u53d6\u9501\u5e76\u4fdd\u5b58\u5f53\u524dirq\u72b6\u6001\uff0c\u540c\u65f6\u7981\u6b62\u672c\u5730CPU\u4e2d\u65ad read_lock_irqsave <p> write_lock_irqsave </p> \u83b7\u53d6\u9501\u5e76\u7981\u6b62\u672c\u5730CPU\u4e0b\u534a\u90e8 read_lock_bh <p> write_lock_bh </p> \u91ca\u653e\u9501 read_unlock <p> write_unlock </p> \u91ca\u653e\u9501\u5e76\u6062\u590d\u5f53\u524dirq\u72b6\u6001 read_unlock_irq <p> write_unlock_irq </p> \u91ca\u653e\u9501\u5e76\u6062\u590d\u672c\u5730CPU\u72b6\u6001 read_unlock_irqrestore <p> write_unlock_irqrestore </p> \u91ca\u653e\u9501\u5e76\u6fc0\u6d3b\u672c\u5730CPU\u4e0b\u534a\u90e8 read_unlock_bh <p> write_unlock_bh </p> \u5c1d\u8bd5\u83b7\u53d6\u9501 read_trylock <p> write_trylock </p>"},{"location":"linux/kernel/synch/#_15","title":"\u987a\u5e8f\u9501","text":"<p>\u8bfb/\u5199\u81ea\u65cb\u9501\u7ed9\u8bfb\u8005\u8d4b\u4e88\u4e86\u66f4\u9ad8\u7684\u6743\u9650\uff0c\u5bb9\u6613\u9020\u6210\u5199\u8005\u9965\u997f\u7684\u73b0\u8c61\u3002\u800c\u987a\u5e8f\u9501\u5bf9\u8bfb\u5199\u7684\u4f18\u5148\u7ea7\u8fdb\u884c\u4e86\u8c03\u6574\uff0c\u8ba9\u5199\u8005\u7684\u4f18\u5148\u7ea7\u59cb\u7ec8\u9ad8\u4e8e\u8bfb\u8005\u3002</p> <p>\u987a\u5e8f\u9501\u7684\u7279\u70b9\uff1a</p> <ul> <li>\u8bfb\u8005\u5e76\u53d1\u6267\u884c\uff0c\u5199\u8005\u4e92\u65a5</li> <li>\u4e34\u754c\u533a\u53ea\u6709\u8bfb\u8005\u65f6\uff0c\u5199\u8005\u53ef\u4ee5\u8fdb\u5165</li> <li>\u4e34\u754c\u533a\u6709\u5199\u8005\u65f6\uff0c\u8bfb\u8005\u4e0d\u80fd\u8fdb\u5165</li> </ul>"},{"location":"linux/kernel/synch/#_16","title":"\u573a\u666f\u5206\u6790","text":"<p>\u8bfb\u8005\u52a0\u9501\uff1a</p> <ol> <li>\u4e34\u754c\u533a\u6ca1\u6709\u8bfb\u8005\u65f6\uff0c\u83b7\u53d6\u9501</li> <li>sequence counter++</li> </ol> <p>\u8bfb\u8005\u89e3\u9501\uff1a</p> <ol> <li>\u91ca\u653e\u9501</li> <li>sequence counter++</li> </ol> <p>\u7531\u4e0a\u9762\u7684\u64cd\u4f5c\u53ef\u77e5\uff0c\u5f53\u4e34\u754c\u533a\u6ca1\u6709\u8bfb\u8005\u65f6\uff0csequence counter\u4e3a\u5076\u6570\uff0c\u5426\u5219\u4e3a\u5947\u6570\u3002</p> <p>\u5199\u8005\u64cd\u4f5c\uff1a</p> <ol> <li>\u83b7\u53d6sequence counter\u7684\u503c\uff0c\u5982\u679c\u662f\u5076\u6570\u5219\u53ef\u4ee5\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u5426\u5219\u7b49\u5f85</li> <li>\u8fdb\u5165\u4e34\u754c\u533a\u540e\uff0c\u8bfb\u53d6\u6570\u636e</li> <li>\u83b7\u53d6sequence counter\u7684\u503c\uff0c\u5982\u679c\u7b49\u4e8e\u539f\u6765\u7684\u503c\uff0c\u8bf4\u660e\u6ca1\u6709\u5199\u8005\u8fdb\u5165\uff0c\u5219\u8868\u793aOK\uff0c\u5426\u5219\u8fd4\u56de\u81f3\u7b2c\u4e00\u6b65</li> </ol>"},{"location":"linux/kernel/synch/#_17","title":"\u51fd\u6570\u63a5\u53e3","text":"<p>\u987a\u5e8f\u9501\u7684\u5199\u64cd\u4f5c\u4f7f\u7528\u4e0e\u81ea\u65cb\u9501\u76f8\u540c\uff0c\u8bfb\u64cd\u4f5c\u6a21\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>do {\n    seq = read_seqbegin(&amp;seqlock);\n    ...\n}while(read_seqretry(&amp;seqlock, seq);\n</code></pre>"},{"location":"linux/kernel/synch/#_18","title":"\u4fe1\u53f7\u91cf","text":"<p>\u4fe1\u53f7\u91cf\u662f\u4e00\u79cd\u7761\u7720\u9501\u3002\u76f8\u6bd4\u4e8e\u81ea\u65cb\u9501\uff0c\u5b83\u5185\u90e8\u7ef4\u62a4\u4e86\u4e00\u4e2a<code>count</code>\u503c\uff0c\u8be5<code>count</code>\u503c\u7b49\u540c\u4e8e\u540c\u4e00\u65f6\u95f4\u80fd\u591f\u6301\u6709\u4fe1\u53f7\u91cf\u7684\u8fdb\u7a0b\u6570\u91cf\u3002\u5982\u679c\u8fd9\u4e2a\u503c\u662f1\uff0c\u90a3\u4e48\u4fe1\u53f7\u91cf\u53c8\u88ab\u79f0\u4e3a\u4e92\u65a5\u4fe1\u53f7\u91cf\u3002\u4fe1\u53f7\u91cf\u652f\u6301\u4e24\u4e2a\u64cd\u4f5c\uff1a</p> <ol> <li> <p><code>down()</code>:</p> <ul> <li>\u5982\u679c\u4fe1\u53f7\u91cf\u7684\u503c\u5927\u4e8e1\uff0c\u5219\u51cf\u53bb1</li> <li>\u5982\u679c\u503c\u7b49\u4e8e0\uff0c\u8fdb\u7a0b\u8fdb\u5165\u7b49\u5f85\u961f\u5217\u7761\u7720\uff0c\u7136\u540eCPU\u8c03\u5ea6\u5176\u4ed6\u8fdb\u7a0b\u8fd0\u884c</li> </ul> </li> <li> <p><code>up()</code>\uff1a</p> <ul> <li>\u5982\u679c\u7b49\u5f85\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u52a01</li> <li>\u5982\u679c\u7b49\u5f85\u961f\u5217\u4e0d\u4e3a\u7a7a\uff0c\u4ece\u961f\u5217\u4e2d\u5524\u9192\u4e00\u4e2a\u8fdb\u7a0b</li> </ul> </li> </ol> <p>\u7531\u4e8e\u4fe1\u53f7\u91cf\u4f1a\u7761\u7720\uff0c\u56e0\u6b64\u6709\u4ee5\u4e0b\u7ed3\u8bba\uff1a</p> <ul> <li>\u4fe1\u53f7\u91cf\u9002\u7528\u4e8e\u9501\u4f1a\u88ab\u957f\u65f6\u95f4\u5360\u6709\u7684\u573a\u666f\u3002</li> <li>\u4fe1\u53f7\u91cf\u53ea\u80fd\u5728\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\uff0c\u56e0\u4e3a\u4e2d\u65ad\u4e0a\u4e0b\u6587\u7981\u6b62\u7761\u7720\u3002</li> <li>\u591a\u4e2a\u8fdb\u7a0b\u8bd5\u56fe\u83b7\u5f97\u4fe1\u53f7\u91cf\u4e0d\u4f1a\u6b7b\u9501\u3002</li> <li>\u5982\u679c\u5df2\u7ecf\u5360\u7528\u4e86\u4fe1\u53f7\u91cf\uff0c\u4e0d\u80fd\u518d\u4f7f\u7528\u81ea\u65cb\u9501\uff0c\u56e0\u4e3a\u81ea\u65cb\u9501\u7981\u6b62\u7761\u7720\u3002</li> </ul> <p>\u4fe1\u53f7\u91cf\u662f\u4e0e\u4f53\u7cfb\u7ed3\u6784\u76f8\u5173\u7684\uff0c\u5b9a\u4e49\u5728&lt;asm/semaphore.h&gt;\u4e2d\u3002</p>"},{"location":"linux/kernel/synch/#_19","title":"\u51fd\u6570\u63a5\u53e3","text":"\u63a5\u53e3API\u63cf\u8ff0 semaphore \u521d\u59cb\u5316 sema_init \u83b7\u53d6\u4fe1\u53f7\u91cf down <p> down_interruptible </p> \u5c1d\u8bd5\u83b7\u53d6\u4fe1\u53f7\u91cf down_trylock \u91ca\u653e\u4fe1\u53f7\u91cf up <p>\u5bf9\u4e8e\u5173\u5fc3\u5177\u4f53\u6570\u503c\u7684\u751f\u4ea7\u8005/\u6d88\u8d39\u8005\u95ee\u9898\uff0c\u4f7f\u7528\u4fe1\u53f7\u91cf\u6bd4\u8f83\u5408\u9002\u3002</p>"},{"location":"linux/kernel/synch/#_20","title":"\u4e92\u65a5\u9501","text":"<p>\u5728\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4fe1\u53f7\u91cf\u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a\u8ba1\u6570\u4e3a1\u7684\u5141\u8bb8\u7761\u7720\u7684\u81ea\u65cb\u9501\u5b58\u5728\u3002\u4e3a\u4e86\u627e\u5230\u4e00\u4e2a\u66f4\u7b80\u5355\u4e14\u53ef\u4ee5\u7761\u7720\u7684\u9501\uff0c\u5f00\u53d1\u8005\u4eec\u5f15\u5165\u4e86\u4e92\u65a5\u9501\uff08mutex\uff09\u3002\u5176\u884c\u4e3a\u548c\u8ba1\u6570\u4e3a1\u7684\u4fe1\u53f7\u91cf\u7c7b\u4f3c\uff0c\u4f46\u662f\u64cd\u4f5c\u7684\u63a5\u53e3\u66f4\u7b80\u5355\uff0c\u5b9e\u73b0\u4e5f\u66f4\u9ad8\u6548\u3002\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a</p> \u63a5\u53e3API\u63cf\u8ff0 mutex \u9759\u6001\u521d\u59cb\u5316\u4e92\u65a5\u9501 DEFINE_MUTEX \u52a8\u6001\u521d\u59cb\u5316\u4e92\u65a5\u9501 mutex_init \u7533\u8bf7\u4e92\u65a5\u9501 mutex_lock \u7533\u8bf7\u4e92\u65a5\u9501\uff0c\u5982\u679c\u8be5\u9501\u88ab\u5360\u6709\u5219\u8fdb\u5165\u8f7b\u5ea6\u7761\u7720 mutex_lock_interruptible \u7533\u8bf7\u4e92\u65a5\u9501\uff0c\u5982\u679c\u8be5\u9501\u88ab\u5360\u6709\u5219\u8fdb\u5165\u4e2d\u5ea6\u7761\u7720 mutex_lock_killable \u7533\u8bf7\u4e92\u65a5\u9501\uff0c\u5982\u679c\u8be5\u9501\u88ab\u5360\u6709\uff0c\u5219\u4e0d\u7b49\u5f85\uff0c\u8fdb\u7a0b\u8fd4\u56de mutex_trylock \u91ca\u653e\u4e92\u65a5\u9501 mutex_unlock <p>mutex\u7684\u7b80\u6d01\u4e0e\u9ad8\u6548\u6e90\u4e8e\u76f8\u6bd4\u4f7f\u7528\u4fe1\u53f7\u91cf\u66f4\u591a\u7684\u53d7\u9650\u6027\uff1a</p> <ul> <li>\u4efb\u4f55\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u4efb\u52a1\u6301\u6709mutex\u3002</li> <li>\u5fc5\u987b\u7531\u4e0a\u9501\u8005\u89e3\u9501\u2014\u2014\u8fd9\u610f\u5473\u7740\u4f60\u4e0d\u80fd\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e0a\u9501\uff0c\u800c\u5728\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u89e3\u9501\u3002</li> <li>\u9012\u5f52\u5730\u4e0a\u9501\u548c\u89e3\u9501\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002</li> <li>\u5f53\u6301\u6709\u4e00\u4e2amutex\u65f6\uff0c\u8fdb\u7a0b\u4e0d\u80fd\u9000\u51fa\u3002</li> <li>mutex\u4e0d\u80fd\u5728\u4e2d\u65ad\u6216\u8005\u4e0b\u534a\u90e8\u4e2d\u4f7f\u7528\u3002</li> </ul> <p>\u9501\u7684\u4f7f\u7528\u603b\u7ed3</p> \u9700\u6c42 \u5efa\u8bae\u7684\u52a0\u9501\u65b9\u5f0f \u4f4e\u5f00\u9500\u52a0\u9501 \u4f18\u5148\u4f7f\u7528\u81ea\u65cb\u9501 \u77ed\u671f\u52a0\u9501 \u4f18\u5148\u4f7f\u7528\u81ea\u65cb\u9501 \u957f\u671f\u52a0\u9501 \u4f18\u5148\u4f7f\u7528\u4e92\u65a5\u9501 \u4e2d\u65ad\u4e0a\u4e0b\u6587\u52a0\u9501 \u4f7f\u7528\u81ea\u65cb\u9501 \u6301\u6709\u9501\u9700\u8981\u7761\u7720 \u4f7f\u7528\u4e92\u65a5\u9501"},{"location":"linux/kernel/synch/#_21","title":"\u5b8c\u6210\u53d8\u91cf","text":"<p>\u5982\u679c\u5728\u5185\u6838\u4e2d\u4e00\u4e2a\u4efb\u52a1\u9700\u8981\u53d1\u9001\u4fe1\u53f7\u901a\u77e5\u53e6\u4e00\u4e2a\u4efb\u52a1\u53d1\u751f\u4e86\u67d0\u79cd\u7279\u5b9a\u4e8b\u4ef6\uff0c\u6b64\u65f6\u53ef\u4ee5\u7528\u5b8c\u6210\u53d8\u91cf\uff08completion variable\uff09\u3002\u5f53\u67d0\u4e2a\u4efb\u52a1\u5b8c\u6210\u5de5\u4f5c\u540e\uff0c\u4f1a\u4f7f\u7528\u5b8c\u6210\u53d8\u91cf\u53bb\u5524\u9192\u6b63\u5728\u7b49\u5f85\u7684\u4efb\u52a1\u3002</p> <p>\u5b8c\u6210\u53d8\u91cf\u7531\u7ed3\u6784\u4f53completion\u8868\u793a\uff0c\u5b9a\u4e49\u5728&lt;linux/completion.h&gt;\u4e2d\u3002\u5176\u521b\u5efa\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>DECLARE_COMPLETION(comp);\n</code></pre> <p>\u6216\u8005\u4f7f\u7528<code>init_completion()</code>\u52a8\u6001\u521b\u5efa\u3002\u9700\u8981\u7b49\u5f85\u7684\u4efb\u52a1\u8c03\u7528<code>wait_for_completion()</code>\u6765\u7b49\u5f85\u7279\u5b9a\u4e8b\u4ef6\u3002\u5f53\u4e8b\u4ef6\u53d1\u751f\u540e\uff0c\u4ea7\u751f\u4e8b\u4ef6\u7684\u4efb\u52a1\u8c03\u7528<code>complete()</code>\u6765\u53d1\u9001\u4fe1\u53f7\u5524\u9192\u6b63\u5728\u7b49\u5f85\u7684\u4efb\u52a1\u3002</p>"},{"location":"linux/kernel/synch/#rcu","title":"RCU\u673a\u5236","text":"<p>\u8bfb\u53d6-\u590d\u5236-\u66f4\u65b0\uff08read-copy-update\uff09\u662f\u4e00\u79cd\u9ad8\u7ea7\u7684\u4fdd\u62a4\u5171\u4eab\u6570\u636e\u7ed3\u6784\u7684\u673a\u5236\uff0c\u7279\u522b\u662f\u7528\u5728\u591a\u6838\u5904\u7406\u5668\u7cfb\u7edf\u4e2d\u3002\u5b83\u5141\u8bb8\u4e00\u4e2aCPU\u5b89\u5168\u5730\u8bfb\u53d6\u6570\u636e\uff0c\u800c\u53e6\u4e00\u4e2aCPU\u540c\u65f6\u66f4\u65b0\u8fd9\u4e9b\u6570\u636e\u3002\u7531\u4e8e\u5728\u66f4\u65b0\u6570\u636e\u65f6\u4e0d\u9700\u8981\u7528\u5230\u9501\uff0c\u56e0\u6b64\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u6027\u80fd\u3002</p> <p>RCU\u7684\u4e3b\u8981\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u5728\u9700\u8981\u4fee\u6539\u6570\u636e\u65f6\uff0c\u5199\u8005\u9996\u5148\u590d\u5236\u4e00\u4efd\u526f\u672c\uff0c\u5728\u526f\u672c\u4e0a\u4fee\u6539\uff0c\u6700\u540e\u4e00\u6b21\u6027\u66ff\u6362\u6570\u636e\u3002\u5199\u8005\u5b8c\u6210\u4e86\u6570\u636e\u7684\u4fee\u6539\u4e4b\u540e\uff0c\u901a\u8fc7\u7279\u5b9a\u7684API\u5c06\u66f4\u65b0\u540e\u7684\u6570\u636e\u6307\u9488\u8d4b\u503c\u56de\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u201c\u66f4\u65b0\u5b8c\u6210\u201d\u3002\u5982\u679c\u5b58\u5728\u591a\u4e2a\u5199\u8005\uff0c\u5728\u5199\u8005\u628a\u66f4\u65b0\u540e\u7684\u201c\u526f\u672c\u201d\u8986\u76d6\u5230\u539f\u6570\u636e\u65f6\uff0c\u5199\u8005\u4e4b\u95f4\u9700\u8981\u5229\u7528\u5176\u4ed6\u540c\u6b65\u673a\u5236\u4fdd\u8bc1\u540c\u6b65\u3002</p> </li> <li> <p>\u591a\u4e2a\u8bfb\u8005\u53ef\u4ee5\u540c\u65f6\u968f\u610f\u5730\u8bfb\u5199\u6570\u636e\uff0c\u4f46\u8bfb\u53d6\u7684\u662f\u539f\u59cb\u5730\u5740\u3002\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\u7528\u4e8e\u4fdd\u8bc1\u53ea\u6709\u5728\u6570\u636e\u7ed3\u6784\u88ab\u4fee\u6539\u4e4b\u540e\uff0c\u5df2\u66f4\u65b0\u7684\u6307\u9488\u624d\u5bf9\u5176\u4ed6CPU\u53ef\u89c1\u3002\u8bfb\u53d6\u7aef\u7684\u4ee3\u7801\u5fc5\u987b\u653e\u7f6e\u4e8e<code>rcu_read_lock()</code>\u548c<code>rcu_read_unlock()</code>\u4e4b\u95f4\u3002</p> </li> </ul> <p>\u5728RCU\u7684\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4e3b\u8981\u89e3\u51b3\u4ee5\u4e0b\u95ee\u9898\uff1a</p> <ol> <li> <p>\u5728\u8bfb\u53d6\u8fc7\u7a0b\u4e2d\uff0c\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u5220\u9664\u4e86\u4e00\u4e2a\u8282\u70b9\u3002\u5220\u9664\u7ebf\u7a0b\u53ef\u4ee5\u628a\u8fd9\u4e2a\u8282\u70b9\u4ece\u94fe\u8868\u4e2d\u79fb\u9664\uff0c\u4f46\u5b83\u4e0d\u80fd\u76f4\u63a5\u9500\u6bc1\u8fd9\u4e2a\u8282\u70b9\uff0c\u5fc5\u987b\u7b49\u5230\u6240\u6709\u7684\u8bfb\u53d6\u7ebf\u7a0b\u8bfb\u53d6\u5b8c\u6210\u4ee5\u540e\uff0c\u624d\u8fdb\u884c\u9500\u6bc1\u64cd\u4f5c\u3002RCU\u4e2d\u628a\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u5bbd\u9650\u671f\uff08Grace period\uff09\u3002</p> </li> <li> <p>\u5728\u8bfb\u53d6\u8fc7\u7a0b\u4e2d\uff0c\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u63d2\u5165\u4e86\u4e00\u4e2a\u65b0\u8282\u70b9\uff0c\u800c\u8bfb\u8005\u8bfb\u5230\u4e86\u8fd9\u4e2a\u8282\u70b9\uff0c\u90a3\u4e48\u9700\u8981\u4fdd\u8bc1\u8bfb\u5230\u7684\u8fd9\u4e2a\u8282\u70b9\u662f\u5b8c\u6574\u7684\u3002\u8fd9\u91cc\u6d89\u53ca\u5230\u4e86\u53d1\u5e03-\u8ba2\u9605\u673a\u5236\uff08Publish-Subscribe Mechanism\uff09\u3002</p> </li> <li> <p>\u4fdd\u8bc1\u8bfb\u53d6\u94fe\u8868\u7684\u5b8c\u6574\u6027\u3002\u65b0\u589e\u6216\u8005\u5220\u9664\u4e00\u4e2a\u8282\u70b9\uff0c\u4e0d\u81f3\u4e8e\u5bfc\u81f4\u904d\u5386\u4e00\u4e2a\u94fe\u8868\u4ece\u4e2d\u95f4\u65ad\u5f00\u3002\u4f46\u662fRCU\u5e76\u4e0d\u4fdd\u8bc1\u4e00\u5b9a\u80fd\u8bfb\u5230\u65b0\u589e\u7684\u8282\u70b9\u6216\u8005\u4e0d\u8bfb\u5230\u8981\u88ab\u5220\u9664\u7684\u8282\u70b9\u3002</p> </li> </ol> <p>\u5bf9\u4e8e\u88abRCU\u4fdd\u62a4\u7684\u5171\u4eab\u6570\u636e\u7ed3\u6784\uff0c\u8bfb\u8005\u4e0d\u9700\u8981\u83b7\u5f97\u4efb\u4f55\u9501\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5b83\uff0c\u4f46\u5199\u8005\u5728\u8bbf\u95ee\u5b83\u65f6\u9996\u5148\u62f7\u8d1d\u4e00\u4e2a\u526f\u672c\uff0c\u7136\u540e\u5bf9\u526f\u672c\u8fdb\u884c\u4fee\u6539\uff0c\u6700\u540e\u4f7f\u7528\u4e00\u4e2a\u56de\u8c03\uff08callback\uff09\u673a\u5236\u5728\u9002\u5f53\u7684\u65f6\u673a\u628a\u6307\u5411\u539f\u6765\u6570\u636e\u7684\u6307\u9488\u91cd\u65b0\u6307\u5411\u65b0\u7684\u88ab\u4fee\u6539\u7684\u6570\u636e\u3002\u90a3\u4e48\u8fd9\u4e2a\u201c\u9002\u5f53\u7684\u65f6\u673a\u201d\u662f\u600e\u4e48\u786e\u5b9a\u7684\u5462\uff1f\u8fd9\u662f\u7531\u5185\u6838\u786e\u5b9a\u7684\u3002</p> <p>\u4f7f\u7528RCU\u6280\u672f\u7684\u96be\u70b9\u5728\u4e8e\uff1a\u5199\u5165\u7aef\u4fee\u6539\u6307\u9488\u65f6\u4e0d\u80fd\u7acb\u523b\u91ca\u653e\u6570\u636e\u7ed3\u6784\u7684\u65e7\u6307\u9488\uff0c\u56e0\u4e3a\u8fd8\u6709\u5176\u4ed6\u7684\u8bfb\u53d6\u7aef\u5728\u4f7f\u7528\u3002\u53ea\u6709\u5f53\u6240\u6709\u7684\u8bfb\u53d6\u7aef\u6267\u884c\u5b8c\u5b8f<code>rcu_read_unlcok()</code>\u4e4b\u540e\uff0c\u624d\u53ef\u4ee5\u91ca\u653e\u65e7\u6307\u9488\u3002\u5199\u5165\u7aef\u8c03\u7528\u51fd\u6570<code>call_rcu()</code>\u6765\u91ca\u653e\u65e7\u6307\u9488\u3002</p>"},{"location":"linux/kernel/synch/#_22","title":"\u7981\u6b62\u62a2\u5360","text":"<p>Linux\u662f\u62a2\u5360\u5f0f\u5185\u6838\uff0c\u5176\u4e3b\u8981\u7279\u70b9\u662f\uff1a\u4e00\u4e2a\u5728\u5185\u6838\u6001\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0c\u53ef\u80fd\u5728\u6267\u884c\u5185\u6838\u6001\u51fd\u6570\u671f\u95f4\u88ab\u53e6\u5916\u4e00\u4e2a\u8fdb\u7a0b\u62a2\u5360\u3002\u5728\u8fdb\u7a0bA\u6267\u884c\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u65f6\uff08\u6b64\u65f6\u4f4d\u4e8e\u5185\u6838\u6001\uff09\uff0c\u4e00\u4e2a\u66f4\u6709\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0bB\u53d8\u4e3a\u53ef\u6267\u884c\u72b6\u6001\u3002\u5982\u679c\u5185\u6838\u662f\u53ef\u62a2\u5360\u7684\uff0c\u5c31\u4f1a\u53d1\u751f\u5f3a\u5236\u6027\u4efb\u52a1\u5207\u6362\uff0c\u8ba9B\u53d6\u4ee3A\u3002\u518d\u6bd4\u5982\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u5df2\u7ecf\u7528\u5b8c\u4e86\u5b83\u7684\u65f6\u95f4\u7247\u914d\u989d\uff0c\u62a2\u5360\u5f0f\u5185\u6838\u4f1a\u7acb\u523b\u8ba9\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u53d6\u4ee3\u5b83\u3002</p> <p>\u5185\u6838\u4f7f\u7528<code>thread_info</code>\u4e2d\u7684<code>preempt_count</code>\u5b57\u6bb5\u8868\u793a\u62a2\u5360\u8ba1\u6570\u3002\u5f53\u8fd9\u4e2a\u503c\u5927\u4e8e0\u65f6\uff0c\u5c31\u7981\u6b62\u5185\u6838\u62a2\u5360\u3002\u5b83\u5728\u4ee5\u4e0b\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u53d6\u503c\u90fd\u5927\u4e8e0\uff1a</p> <ol> <li> <p>\u5185\u6838\u6b63\u5728\u6267\u884c\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f\u3002</p> </li> <li> <p>\u53ef\u5ef6\u8fdf\u51fd\u6570\u88ab\u7981\u6b62\uff08\u5f53\u5185\u6838\u6b63\u5728\u6267\u884c\u8f6f\u4e2d\u65ad\u6216tasklet\uff09\u3002</p> </li> <li> <p>\u663e\u793a\u8bbe\u7f6e\u62a2\u5360\u8ba1\u6570\u5668\u4e3a\u6b63\u6570\u3002</p> </li> </ol> \u5b8f \u8bf4\u660e preempt_count() \u8fd4\u56de\u62a2\u5360\u8ba1\u6570\u503c preempt_disable() \u4f7f\u62a2\u5360\u8ba1\u6570+1 preempt_enable() \u4f7f\u62a2\u5360\u8ba1\u6570-1\uff0c\u5e76\u68c0\u67e5TIF_NEED_RESCHED\u6807\u5fd7 preempt_enable_no_resched() \u4f7f\u62a2\u5360\u8ba1\u6570-1 <p>Note</p> <p><code>preempt_enable()</code>\u5b8f\u9996\u5148\u9012\u51cf\u62a2\u5360\u8ba1\u6570\u5668\uff0c\u5e76\u4e14\u68c0\u67e5TIF_NEED_RESCHED\u6807\u5fd7\u662f\u5426\u88ab\u8bbe\u7f6e\u3002\u5f53\u8fd9\u4e2a\u6807\u5fd7\u4e3a1\u65f6\u8868\u793a\u9700\u8981\u6267\u884c\u8c03\u5ea6\u7a0b\u5e8f\u3002\u4e8e\u662f\u6211\u4eec\u8fd8\u4f1a\u8c03\u7528<code>preempt_schedule()</code>\u6765\u8c03\u7528<code>schedule()</code>\u9009\u62e9\u53e6\u5916\u4e00\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u3002</p>"},{"location":"linux/kernel/synch/#_23","title":"\u5185\u5b58\u5c4f\u969c","text":"<p>\u4e3a\u4ec0\u4e48\u9700\u8981\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\uff1f</p> <ul> <li> <p>\u9632\u6b62\u7f16\u8bd1\u5668\u4f18\u5316\u5bfc\u81f4\u7684\u91cd\u6392\uff1a\u73b0\u4ee3\u7f16\u8bd1\u5668\u4f1a\u8fdb\u884c\u5404\u79cd\u4f18\u5316\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\uff0c\u5305\u62ec\u6307\u4ee4\u91cd\u6392\u3002\u5728\u4e0d\u8003\u8651\u5185\u5b58\u64cd\u4f5c\u987a\u5e8f\u7684\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u6539\u53d8\u6307\u4ee4\u7684\u6267\u884c\u987a\u5e8f\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u7684\u884c\u4e3a\u4e0e\u9884\u671f\u4e0d\u7b26\u3002\u901a\u8fc7\u4f7f\u7528\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\uff0c\u53ef\u4ee5\u9650\u5236\u7f16\u8bd1\u5668\u5bf9\u67d0\u4e9b\u5173\u952e\u4ee3\u7801\u6bb5\u7684\u4f18\u5316\u3002</p> </li> <li> <p>\u4fdd\u8bc1\u5e76\u53d1\u64cd\u4f5c\u7684\u4e00\u81f4\u6027\uff1a\u5728\u591a\u6838\u5904\u7406\u5668\u548c\u591a\u7ebf\u7a0b\u7f16\u7a0b\u4e2d\uff0c\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7684\u8c03\u5ea6\u5668\u53ef\u80fd\u4f1a\u5728\u4e0d\u540c\u7684\u5904\u7406\u5668\u6838\u5fc3\u4e0a\u5e76\u884c\u6267\u884c\u591a\u4e2a\u7ebf\u7a0b\u3002\u4e3a\u4e86\u4fdd\u6301\u4e00\u81f4\u6027\uff0c\u9700\u8981\u786e\u4fdd\u6240\u6709\u6838\u5fc3\u4e0a\u7684\u5185\u5b58\u64cd\u4f5c\u90fd\u6309\u7167\u7a0b\u5e8f\u6307\u5b9a\u7684\u987a\u5e8f\u6267\u884c\u3002</p> </li> <li> <p>\u89e3\u51b3CPU\u7f13\u5b58\u4e00\u81f4\u6027\u95ee\u9898\uff1aCPU\u7f13\u5b58\u662f\u5904\u7406\u5668\u901f\u5ea6\u7684\u5173\u952e\u90e8\u5206\uff0c\u4f46\u5b83\u7684\u5b58\u5728\u4e5f\u5e26\u6765\u4e86\u7f13\u5b58\u4e00\u81f4\u6027\u7684\u95ee\u9898\u3002\u5f53\u4e00\u4e2aCPU\u6838\u5fc3\u5199\u5165\u6570\u636e\uff0c\u800c\u8fd9\u4e2a\u6570\u636e\u53c8\u88ab\u53e6\u4e00\u4e2a\u6838\u5fc3\u7684\u7f13\u5b58\u6240\u7f13\u5b58\u65f6\uff0c\u6ca1\u6709\u5c4f\u969c\u6307\u4ee4\u7684\u8bdd\uff0c\u53e6\u4e00\u4e2a\u6838\u5fc3\u53ef\u80fd\u4f1a\u8bfb\u53d6\u5230\u65e7\u7684\u6570\u636e\u7248\u672c\u3002\u5185\u5b58\u5c4f\u969c\u80fd\u591f\u786e\u4fdd\u6240\u6709\u6838\u5fc3\u770b\u5230\u5185\u5b58\u64cd\u4f5c\u7684\u6700\u7ec8\u4e00\u81f4\u6027\u3002</p> </li> </ul> <p>Linux\u4e2d\u7684\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\uff1a</p> \u5b8f \u8bf4\u660e barrier() \u4f18\u5316\u5c4f\u969c mb() \u9002\u7528\u4e8eSMP\u548cUP\u7684\u5185\u5b58\u5c4f\u969c rmb() \u9002\u7528\u4e8eSMP\u548cUP\u7684\u8bfb\u5185\u5b58\u5c4f\u969c wmb() \u9002\u7528\u4e8eSMP\u548cUP\u7684\u5199\u5185\u5b58\u5c4f\u969c smp_mb() \u4ec5\u9002\u7528\u4e8eSMP\u7684\u5185\u5b58\u5c4f\u969c smp_rmb() \u4ec5\u9002\u7528\u4e8eSMP\u7684\u8bfb\u5185\u5b58\u5c4f\u969c smp_wmb() \u4ec5\u9002\u7528\u4e8eSMP\u7684\u5199\u5185\u5b58\u5c4f\u969c <p>\u6b64\u7c7b\u6307\u4ee4\u4e0e\u4f53\u7cfb\u7ed3\u6784\u5bc6\u5207\u76f8\u5173\uff0c\u8bf7\u53c2\u8003ARM\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\u3002</p>"},{"location":"linux/kernel/synch/#per-cpu","title":"Per-CPU\u53d8\u91cf","text":"<p>Per-CPU\u662f\u57fa\u4e8e\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u65b9\u6cd5\uff0c\u8ba9\u6bcf\u4e2aCPU\u90fd\u6709\u81ea\u5df1\u7684\u79c1\u6709\u6570\u636e\u6bb5(\u653e\u5728L1\u4e2d)\uff0c\u5e76\u5c06\u4e00\u4e9b\u53d8\u91cf\u79c1\u6709\u5316\u5230 \u6bcf\u4e2aCPU\u7684\u79c1\u6709\u6570\u636e\u6bb5\u4e2d\u3002\u5355\u4e2aCPU\u5728\u8bbf\u95ee\u81ea\u5df1\u7684\u79c1\u6709\u6570\u636e\u6bb5\u65f6\uff0c\u4e0d\u9700\u8981\u8003\u8651\u5176\u4ed6CPU\u4e4b\u95f4\u7684\u7ade\u4e89\u95ee\u9898\uff0c\u4e5f\u4e0d\u5b58\u5728\u540c\u6b65\u7684\u95ee\u9898\u3002</p>"},{"location":"linux/kernel/task/","title":"\u8fdb\u7a0b\u7ba1\u7406","text":"<p>\u4e00\u822c\u800c\u8a00\uff0c\u8fdb\u7a0b\u5c31\u662f\u4e00\u4e2a\u6b63\u5728\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u662f\u7531\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\u7684\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u901a\u8fc7\u7279\u6b8a\u7684\u8f7d\u5165\u65b9\u6cd5\u800c\u8fd0\u884c\u8d77\u6765\u6210\u4e3a\u8fdb\u7a0b\u3002\u5f53\u7a0b\u5e8f\u6210\u4e3a\u8fdb\u7a0b\u7684\u65f6\u5019\uff0c\u5b83\u9700\u8981\u82e5\u5e72\u6570\u636e\u7ed3\u6784\u6765\u63cf\u8ff0\u7a0b\u5e8f\u7684\u6267\u884c\u72b6\u6001\uff08\u786c\u4ef6\u4e0a\u4e0b\u6587\u548c\u8f6f\u4ef6\u4e0a\u4e0b\u6587\uff09\u4ee5\u53ca\u62e5\u6709\u7684\u8d44\u6e90\uff08\u5982\u5730\u5740\u7a7a\u95f4\u3001\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7b49\uff09\u3002\u4ece\u5185\u6838\u7684\u89d2\u5ea6\u770b\uff0c\u8fdb\u7a0b\u662f\u4e00\u4e2a\u548c\u7cfb\u7edf\u8d44\u6e90\uff08CPU\u3001\u5185\u5b58\u7b49\uff09\u5206\u914d\u76f8\u5173\u7684\u5b9e\u4f53\u3002</p>"},{"location":"linux/kernel/task/#_2","title":"\u8fdb\u7a0b\u63cf\u8ff0\u7b26","text":"<p>\u4e3a\u4e86\u7ba1\u7406\u8fdb\u7a0b\uff0c\u5185\u6838\u5fc5\u987b\u6e05\u6670\u5730\u63cf\u8ff0\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u3002\u5728Linux\u7cfb\u7edf\u4e0b\uff0c\u4e0d\u7ba1\u662f\u8fdb\u7a0b\u8fd8\u662f\u7ebf\u7a0b\uff0c\u5185\u6838\u7edf\u4e00\u7528<code>task_struct</code>\u7ed3\u6784\u4f53\u7ba1\u7406\u3002</p>"},{"location":"linux/kernel/task/#_3","title":"\u8fdb\u7a0b\u6807\u8bc6","text":"<p>pid\u7528\u6765\u6807\u8bc6\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5b83\u88ab\u987a\u5e8f\u7f16\u53f7\uff0c\u65b0\u521b\u5efa\u7684\u8fdb\u7a0b\u7684pid\u901a\u5e38\u662f\u524d\u4e00\u4e2a\u8fdb\u7a0b+1\u3002\u5728Linux\u7cfb\u7edf\u4e2d\uff0c<code>getpid()</code>\u51fd\u6570\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>asmlinkage long sys_getpid(void)\n{\n    return current-&gt;tgid;\n}\n</code></pre> <p>tgid\u2014\u2014thread group id\uff0c\u8868\u793a\u7684\u662f\u7ebf\u7a0b\u7ec4\u7684ID\u3002\u5728linux\u5185\u6838\u4e2d\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u6709\u591a\u4e2a\u7ebf\u7a0b\u7ec4\u6210\uff0c\u4e14\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u90fd\u662f<code>task_struct</code>\u7ed3\u6784\u4f53\uff0c\u8fd9\u5c31\u7ed9\u7ba1\u7406\u5e26\u6765\u4e86\u9ebb\u70e6\u3002</p> <p>\u6bd4\u5982\u6211\u4eec\u5e0c\u671b\u540c\u5c5e\u4e8e\u4e00\u4e2a\u8fdb\u7a0b\u7ec4\u7684\u7ebf\u7a0b\u62e5\u6709\u5171\u540c\u7684pid\u3002\u5f53\u6211\u4eec\u53d1\u9001\u7ec8\u6b62\u4fe1\u53f7\u7ed9\u6307\u5b9apid\u65f6\uff0c\u6211\u4eec\u5f53\u7136\u5e0c\u671b\u8be5\u8fdb\u7a0b\u4ee5\u53ca\u4e0b\u9762\u7684\u6240\u6709\u7ebf\u7a0b\u90fd\u6536\u5230\u8be5\u4fe1\u53f7\u4ece\u800c\u7ec8\u6b62\u8fd0\u884c\u3002\u4e8b\u5b9e\u4e0a\uff0cPOSIX\u6807\u51c6\u4e2d\u4e5f\u89c4\u5b9a\u4e00\u4e2a\u591a\u7ebf\u7a0b\u5e94\u7528\u7a0b\u5e8f\u7684\u6240\u6709\u7ebf\u7a0b\u5fc5\u987b\u4eab\u6709\u5171\u540c\u7684pid\u3002</p> <p>\u9075\u7167\u8fd9\u4e2a\u6807\u51c6\uff0cLinux\u5f15\u5165\u4e86\u7ebf\u7a0b\u7ec4\u7684\u6982\u5ff5\uff1a\u4e3b\u8fdb\u7a0b\u548c\u521b\u5efa\u7684\u6240\u6709\u7ebf\u7a0b\u540c\u5c5e\u4e8e\u4e00\u4e2a\u7ebf\u7a0b\u7ec4\uff0c\u5b83\u4eec\u5171\u4eabtgid\u3002</p> <p>\u5f53\u6211\u4eec\u4f7f\u7528<code>getpid()</code>\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de\u5f53\u524d\u8fdb\u7a0b\u7684\"pid\"\u65f6\uff0cLinux\u5176\u5b9e\u800d\u4e86\u4e00\u4e2a\u969c\u773c\u6cd5\u2014\u2014\u5b83\u8fd4\u56de\u7684\u662ftgid\u7684\u503c\u3002\u53ea\u6709\u5f53\u8c03\u7528<code>gettid()</code>\u65f6\uff0c\u8fd4\u56de\u7684\u624d\u662f\u771f\u5b9e\u7684pid\u503c\u3002\u4efb\u4f55\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5982\u679c\u53ea\u6709\u4e3b\u8fdb\u7a0b\uff0c\u90a3\u4e48pid = tgid\uff0c group_leader\u6307\u5411\u7684\u5c31\u662f\u81ea\u5df1\u3002\u5982\u679c\u4e3b\u8fdb\u7a0b\u521b\u5efa\u4e86\u5176\u4ed6\u7ebf\u7a0b\uff0c\u90a3\u4e48\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u81ea\u5df1\u7684pid\uff0c\u4f46\u662ftgid\u662f\u5171\u6709\u7684\u3002</p>"},{"location":"linux/kernel/task/#_4","title":"\u8fdb\u7a0b\u72b6\u6001","text":"<p>\u5728<code>task_struct</code>\u4e2d\uff0c\u6d89\u53ca\u5230\u8fdb\u7a0b\u72b6\u6001\u7684\u662f\u8fd9\u51e0\u4e2a\u6210\u5458\uff1a</p> <pre><code>volatile long state;   \nint exit_state;\nunsigned int flags;\n</code></pre> <p>state\u53ef\u4ee5\u53d6\u7684\u503c\u6709\uff1a</p> <pre><code>/* Used in tsk-&gt;state: */\n#define TASK_RUNNING                    0\n#define TASK_INTERRUPTIBLE              1\n#define TASK_UNINTERRUPTIBLE            2\n#define __TASK_STOPPED                  4\n#define __TASK_TRACED                   8\n/* Used in tsk-&gt;exit_state: */\n#define EXIT_DEAD                       16\n#define EXIT_ZOMBIE                     32\n#define EXIT_TRACE                      (EXIT_ZOMBIE | EXIT_DEAD)\n/* Used in tsk-&gt;state again: */\n#define TASK_DEAD                       64\n#define TASK_WAKEKILL                   128\n#define TASK_WAKING                     256\n#define TASK_PARKED                     512\n#define TASK_NOLOAD                     1024\n#define TASK_NEW                        2048\n#define TASK_STATE_MAX                  4096\n</code></pre> <p>TASK_RUNNING\u8868\u793a\u8fdb\u7a0b\u6b63\u5728\u6267\u884c\u6216\u8005\u51c6\u5907\u6267\u884c\u3002</p> <p>Note</p> <p>\u5728Linux\u4e2d\uff0cTASK_RUNNING\u53ea\u662f\u8868\u793a\u8be5\u8fdb\u7a0b\u5df2\u7ecf\u51c6\u5907\u597d\u6295\u5165\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u6b63\u5728\u8fd0\u884c\u3002\u5185\u6838\u8c03\u5ea6\u7684\u65f6\u5019\u603b\u662f\u9009\u62e9\u5df2\u5904\u4e8eTASK_RUNNING\u72b6\u6001\u7684\u8fdb\u7a0b\u53bb\u8fd0\u884c\u3002</p> <p>\u8fdb\u7a0b\u7684\u7761\u7720\u72b6\u6001\u6709\u4e24\u79cd\uff1a</p> <ul> <li> <p>TASK_INTERRUPTIBLE\uff1a\u6d45\u7761\u7720\u72b6\u6001\uff0c\u8fdb\u7a0b\u53ef\u4ee5\u54cd\u5e94\u4fe1\u53f7\u3002\u4e5f\u5c31\u662f\u5f53\u4e00\u4e2a\u4fe1\u53f7\u6765\u4e34\u65f6\uff0c\u5524\u9192\u8be5\u8fdb\u7a0b\uff0c\u7136\u540e\u6267\u884c\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u3002</p> </li> <li> <p>TASK_UNINTERRUPTIBLE\uff1a\u6df1\u7761\u7720\u72b6\u6001\uff0c\u8fdb\u7a0b\u4e0d\u53ef\u4ee5\u54cd\u5e94\u4fe1\u53f7\u3002\u5982\u679c\u7b49\u5f85\u4e8b\u4ef6\u56e0\u4e3a\u67d0\u79cd\u539f\u56e0\u65e0\u6cd5\u5b8c\u6210\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8fdb\u7a0b\u5c06\u6c38\u8fdc\u7761\u7720\u4e0b\u53bb\uff0c\u6bd4\u5982\u7b49\u5f85I/O\u4e8b\u4ef6\u3002</p> </li> </ul> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6709\u4e86\u4e00\u79cd\u65b0\u7684\u72b6\u6001\uff1aTASK_KILLABLE\uff0c\u53ef\u4ee5\u7ec8\u6b62\u7684\u6df1\u7761\u7720\u72b6\u6001\u3002\u5b83\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a<code>#define TASK_KILLABLE (TASK_WAKEKILL | TASK_UNITERRUPTIBLE)</code>\u3002</p> <p>\u5176\u4e2dTASK_WAKEKILL\u8868\u793a\u5728\u63a5\u6536\u5230\u81f4\u547d\u4fe1\u53f7\u65f6\uff0c\u5524\u9192\u8fdb\u7a0b\u3002</p> <p>TASK_STOPPED\u8868\u793a\u8fdb\u7a0b\u88ab\u6682\u505c\uff0c\u5f53\u63a5\u6536\u5230SIGSTOP\u3001SIGTSTP\u3001SIGTTIN\u6216SIGTTOU\u4fe1\u53f7\u540e\uff0c\u8fdb\u5165\u8be5\u72b6\u6001\u3002</p> <p>TASK_TRACED\u8868\u793a\u8fdb\u7a0b\u88ab\u8ddf\u8e2a\u3002\u8fd9\u5f80\u5f80\u662f\u8c03\u8bd5\u7a0b\u5e8f\u6682\u65f6\u7ec8\u6b62\u4e86\u8fdb\u7a0b\u7684\u8fd0\u884c\u3002</p> <p>exit_state\u7684\u53d6\u503c\u6709\u4e24\u79cd\uff1a</p> <ul> <li> <p>EXIT_ZOMBIE\uff1a\u50f5\u5c38\u72b6\u6001\u3002\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u88ab\u7ec8\u6b62\uff0c\u4f46\u662f\u5176\u7236\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u8c03\u7528<code>wait4()</code>\u6216\u8005<code>waitpid()</code>\u7cfb\u7edf\u8c03\u7528\u6765\u56de\u6536\u8d44\u6e90\u65f6\uff0c\u8fdb\u5165\u8be5\u72b6\u6001\u3002</p> </li> <li> <p>EXIT_DEAD\uff1a\u8fdb\u7a0b\u9000\u51fa\u7684\u6700\u7ec8\u72b6\u6001\u3002\u7236\u8fdb\u7a0b\u56de\u6536\u5b50\u8fdb\u7a0b\u8d44\u6e90\u4e4b\u540e\uff0c\u8fdb\u7a0b\u7531\u7cfb\u7edf\u5220\u9664\u3002</p> </li> </ul> <p>\u8fdb\u7a0b\u7684\u4e00\u4e9b\u5176\u4ed6\u72b6\u6001\u4fe1\u606f\u7531<code>flags</code>\u63a7\u5236\uff0c\u4f7f\u7528\u4f4d\u63a9\u7801\u6765\u8868\u793a\u4e0d\u540c\u7684\u6807\u8bb0\u3002\u4e00\u4e9b\u5e38\u89c1\u7684\u6807\u8bb0\u5305\u62ec\uff1a</p> <ul> <li>\u4efb\u52a1\u72b6\u6001\uff1a\u4f8b\u5982\u662f\u5426\u6b63\u5728\u8fd0\u884c\u3001\u505c\u6b62\u7b49</li> <li>\u8c03\u5ea6\u5668\u76f8\u5173\uff1a\u4f8b\u5982\u8c03\u5ea6\u7b56\u7565\u3001\u4f18\u5148\u7ea7\u7b49</li> <li>\u4fe1\u53f7\u5904\u7406\uff1a\u4f8b\u5982\u6302\u8d77\u4fe1\u53f7\u96c6</li> <li>\u8fdb\u7a0b\u7279\u6027\uff1a\u662f\u5426\u4e3a\u5b88\u62a4\u8fdb\u7a0b\u3001\u662f\u5426\u5141\u8bb8\u88ab\u8ffd\u8e2a\u7b49</li> </ul> <p>flags\u6210\u5458\u7684\u4e00\u4e9b\u53d6\u503c\u4e3e\u4f8b\u5982\u4e0b\uff0c\u8fd9\u4e9b\u5b8f\u4ee5PF\u5f00\u5934\uff1a</p> <pre><code>#define PF_EXITING 0x00000004    //getting shut down\n#define PF_WQ_WORKER 0x00000020  //I'm a workqueue worker\n#define PF_KTHREAD 0x00200000    //I'm a kernel thread\n</code></pre>"},{"location":"linux/kernel/task/#_5","title":"\u8fdb\u7a0b\u95f4\u5173\u7cfb","text":"<p>Linux\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u8fdb\u7a0b\u90fd\u662fPID\u4e3a1\u7684init\u8fdb\u7a0b\u7684\u540e\u4ee3\uff0c\u5185\u6838\u5728\u7cfb\u7edf\u542f\u52a8\u7684\u6700\u540e\u9636\u6bb5\u542f\u52a8init\u8fdb\u7a0b\u3002\u8be5\u8fdb\u7a0b\u8bfb\u53d6\u7cfb\u7edf\u7684\u521d\u59cb\u5316\u811a\u672c\u5e76\u6267\u884c\u5176\u4ed6\u7684\u76f8\u5173\u7a0b\u5e8f\uff0c\u6700\u540e\u5b8c\u6210\u6574\u4e2a\u7cfb\u7edf\u7684\u542f\u52a8\u3002</p> <p>\u6bcf\u4e2a\u8fdb\u7a0b\u5fc5\u6709\u4e00\u4e2a\u7236\u8fdb\u7a0b\uff0c\u5982\u679c\u4e00\u4e2a\u8fdb\u7a0b\u521b\u5efa\u4e86\u591a\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u90a3\u4e48\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u8fd8\u6709\u5144\u5f1f\u5173\u7cfb\u3002\u5728<code>task_struct</code>\u4e2d\uff0c\u4f7f\u7528\u4ee5\u4e0b\u5b57\u6bb5\u6765\u8868\u793a\u4eb2\u7f18\u5173\u7cfb\uff1a</p> <pre><code>struct task_struct __rcu *real_parent; /* real parent process */\nstruct task_struct __rcu *parent; /* recipient of SIGCHLD, wait4() reports */\nstruct list_head children;      /* list of my children */\nstruct list_head sibling;       /* linkage in my parent's children list */\n</code></pre> <p>\u8fd9\u4e9b\u5b57\u6bb5\u6839\u636e\u540d\u5b57\u5c31\u80fd\u731c\u5230\u662f\u4ec0\u4e48\u610f\u601d\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u901a\u5e38\u60c5\u51b5\u4e0breal_parent\u548cparent\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5f53\u6211\u4eec\u542f\u52a8GDB\u76d1\u89c6\u67d0\u4e2a\u8fdb\u7a0b\u65f6\uff0c\u8be5\u8fdb\u7a0b\u7684real_parent\u4e0d\u53d8\uff0c\u4f46\u662fparent\u53d8\u6210\u4e86GDB\u3002</p> <p>\u8fdb\u7a0b\u4e4b\u95f4\u8fd8\u6709\u5176\u4ed6\u5173\u7cfb\uff0c\u8fd9\u91cc\u4e0d\u8be6\u7ec6\u5c55\u5f00\u3002</p>"},{"location":"linux/kernel/task/#_6","title":"\u8fd0\u884c\u7edf\u8ba1","text":"<pre><code>u64        utime;//\u7528\u6237\u6001\u6d88\u8017\u7684CPU\u65f6\u95f4\nu64        stime;//\u5185\u6838\u6001\u6d88\u8017\u7684CPU\u65f6\u95f4\nunsigned long      nvcsw;//\u81ea\u613f(voluntary)\u4e0a\u4e0b\u6587\u5207\u6362\u8ba1\u6570\nunsigned long      nivcsw;//\u975e\u81ea\u613f(involuntary)\u4e0a\u4e0b\u6587\u5207\u6362\u8ba1\u6570\nu64        start_time;//\u8fdb\u7a0b\u542f\u52a8\u65f6\u95f4\uff0c\u4e0d\u5305\u542b\u7761\u7720\u65f6\u95f4\nu64        real_start_time;//\u8fdb\u7a0b\u542f\u52a8\u65f6\u95f4\uff0c\u5305\u542b\u7761\u7720\u65f6\u95f4\n</code></pre> <p>\u8fd9\u4e9b\u7edf\u8ba1\u4fe1\u606f\u7528\u4e8e\u6027\u80fd\u5206\u6790\uff0c\u8bf7\u67e5\u770b\u6027\u80fd\u8c03\u4f18\u4e00\u8282\u3002</p>"},{"location":"linux/kernel/task/#_7","title":"\u5185\u5b58\u7ba1\u7406","text":"<pre><code>struct mm_struct *mm;        \nstruct mm_struct *active_mm;            \n</code></pre> <p>\u8fd9\u4e9b\u5b57\u6bb5\u7684\u8be6\u7ec6\u5185\u5bb9\u89c1\u865a\u62df\u5185\u5b58\u7ba1\u7406\u3002</p>"},{"location":"linux/kernel/task/#_8","title":"\u6587\u4ef6\u4e0e\u6587\u4ef6\u7cfb\u7edf","text":"<pre><code>/* Filesystem information: */\nstruct fs_struct *fs;\n/* Open file information: */\nstruct files_struct *files;\n</code></pre> <p>\u8fdb\u7a0b\u7684\u6587\u4ef6\u4f4d\u7f6e\u7b49\u4fe1\u606f\u662f\u7531<code>fs_strcut</code>\u6765\u63cf\u8ff0\u7684\uff1a</p> <pre><code>struct fs_strcut {\n    .......\n    struct path root, pwd;\n};\n\nstruct path {\n    struct vfsmount *mnt;\n    struct dentry *dentry;\n};\n</code></pre> <p><code>struct dentry</code>\u7ed3\u6784\u4f53\u662f\u5bf9\u4e00\u4e2a\u76ee\u5f55\u9879\u7684\u63cf\u8ff0\uff0c<code>fs_struct</code>\u4e2d\u5305\u542b\u4e86\u8fdb\u7a0b\u7684\u6839\u76ee\u5f55\u548c\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002</p> <p>\u6bcf\u4e2a\u8fdb\u7a0b\u7528<code>struct files_struct</code>\u6765\u8bb0\u5f55\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff1a</p> <pre><code>struct files_struct {\n    ......\n    struct fdtable __rcu *fdt;\n\n    int next_fd;\n};\n</code></pre> <p><code>fdtable</code>\u6570\u7ec4\u7684\u4e0b\u6807\u5c31\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5176\u4e2d 0\u30011\u30012 \u603b\u662f\u5206\u914d\u7ed9\u6807\u51c6\u8f93\u5165\u3001\u6807\u51c6\u8f93\u51fa\u3001\u6807\u51c6\u9519\u8bef\u3002</p>"},{"location":"linux/kernel/task/#_9","title":"\u547d\u540d\u7a7a\u95f4","text":"<p>\u547d\u540d\u7a7a\u95f4\u662f\u7528\u6765\u9694\u79bb\u8fdb\u7a0b\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u8fdb\u7a0b\u53ea\u80fd\u770b\u5230\u4e0e\u81ea\u5df1\u76f8\u5173\u7684\u4e00\u90e8\u5206\u8d44\u6e90\u3002</p> <pre><code>struct nsproxy {\n    atomic_t count;\n    struct uts_namespace *uts_ns;\n    struct ipc_namespace *ipc_ns;\n    struct mnt_namespace *mnt_ns;\n    struct pid_namespace *pid_ns;\n    struct user_namespace *user_ns;\n    struct net *net_ns;\n    ......\n};\n</code></pre> <p>Linux \u5b9e\u73b0\u4e86\u591a\u79cd\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\uff1a</p> <ul> <li>UTS \u547d\u540d\u7a7a\u95f4\uff1a\u7528\u6765\u9694\u79bb\u4e3b\u673a\u540d\u548c\u57df\u540d</li> <li>IPC \u547d\u540d\u7a7a\u95f4\uff1a\u7528\u6765\u9694\u79bb\u8fdb\u7a0b\u95f4\u901a\u4fe1</li> <li>MNT \u547d\u540d\u7a7a\u95f4\uff1a\u7528\u6765\u9694\u79bb\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u70b9</li> <li>PID \u547d\u540d\u7a7a\u95f4\uff1a\u7528\u6765\u9694\u79bb\u8fdb\u7a0bID</li> <li>USER \u547d\u540d\u7a7a\u95f4\uff1a\u7528\u6765\u9694\u79bb\u7528\u6237ID\u548c\u7ec4ID</li> <li>NET \u547d\u540d\u7a7a\u95f4\uff1a\u7528\u6765\u9694\u79bb\u7f51\u7edc\u8d44\u6e90</li> </ul>"},{"location":"linux/kernel/task/#_10","title":"\u5185\u6838\u6808","text":"<pre><code>void *stack;\n</code></pre> <p>\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u4e13\u7528\u7684\u5185\u6838\u6808\uff0c\u7528\u4e8e\u4fdd\u5b58\u8fdb\u7a0b\u5728\u5185\u6838\u6001\u6267\u884c\u65f6\u7684\u4e34\u65f6\u6570\u636e\u548c\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\u5f53\u521b\u5efa\u65b0\u8fdb\u7a0b\u65f6\uff0c\u5185\u6838\u4f1a\u4e3a\u5176\u5206\u914d\u4e00\u4e2a\u5408\u9002\u5927\u5c0f\u7684\u5185\u6838\u6808\u7a7a\u95f4\uff0c\u5e76\u5c06\u5176\u5730\u5740\u8d4b\u7ed9<code>task_struct</code>\u4e2d\u7684stack\u6210\u5458\u3002</p>"},{"location":"linux/kernel/task/#_11","title":"\u7ebf\u7a0b\u63cf\u8ff0\u7b26","text":"<p>\u7ebf\u7a0b\u63cf\u8ff0\u7b26<code>struct thread_info</code>\u662f\u4e00\u4e2a\u7528\u4e8e\u5b58\u653e\u7ebf\u7a0b\u76f8\u5173\u4fe1\u606f\u3001\u4e0e\u4f53\u7cfb\u7ed3\u6784\u76f8\u5173\u7684\u7ed3\u6784\u4f53\uff0c\u5728ARM\u4e2d\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>struct thread_info {\n    unsigned long       flags;      /* low level flags */\n    int         preempt_count;  /* 0 =&gt; preemptable, &lt;0 =&gt; bug */\n    struct task_struct  *task;      /* main task structure */\n    __u32           cpu;        /* cpu */\n    __u32           cpu_domain; /* cpu domain */\n#ifdef CONFIG_STACKPROTECTOR_PER_TASK\n    unsigned long       stack_canary;\n#endif\n    struct cpu_context_save cpu_context;    /* cpu context */\n    __u32           abi_syscall;    /* ABI type and syscall nr */\n    __u8            used_cp[16];    /* thread used copro */\n    unsigned long       tp_value[2];    /* TLS registers */\n    union fp_state      fpstate __attribute__((aligned(8)));\n    union vfp_state     vfpstate;\n#ifdef CONFIG_ARM_THUMBEE\n    unsigned long       thumbee_state;  /* ThumbEE Handler Base register */\n#endif\n};\n</code></pre> <p>\u5b83\u5305\u542b\u4e86\u5f88\u591a\u4e0e\u7ebf\u7a0b\u76f8\u5173\u7684\u5b57\u6bb5\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u662f<code>task</code>\uff0c\u5b83\u6307\u5411\u5f53\u524d\u7ebf\u7a0b\u6240\u5c5e\u7684\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u3002\u5185\u6838\u63d0\u4f9b\u4e86<code>current</code>\u5b8f\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5f53\u524dCPU\u4e0a\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u63cf\u8ff0\u7b26\uff0c\u8be5\u5b8f\u672c\u8d28\u4e0a\u7b49\u4e8e\uff1a</p> <pre><code>current_thread_info()-&gt;task\n</code></pre>"},{"location":"linux/kernel/task/#_12","title":"\u8fdb\u7a0b\u751f\u547d\u5468\u671f","text":""},{"location":"linux/kernel/task/#fork","title":"fork\u7cfb\u7edf\u8c03\u7528","text":"<p><code>fork()</code>\u51fd\u6570\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fdb\u7a0b\uff0cLinux 6.1 \u7248\u672c\u5bf9\u5176\u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u4e4b\u524d\u7684\u7248\u672c\u7528<code>do_fork()</code>\u51fd\u6570\u6765\u5b9e\u73b0\uff1a</p> linux-5.15:kernel/fork.c<pre><code>SYSCALL_DEFINE0(fork)\n{\n    return do_fork(SIGCHILD, 0, 0, NULL, NULL);\n}\n</code></pre> linux-6.1:kernel/fork.c<pre><code>SYSCALL_DEFINE0(fork)\n{\n    struct kernel_clone_args args = {\n        .exit_signal = SIGCHLD,\n    };\n\n    return kernel_clone(&amp;args);\n}\n</code></pre> <p>\u65e0\u8bba\u662f\u54ea\u79cd\u5b9e\u73b0\uff0c\u90fd\u9700\u8981\u4f20\u9012\u4e00\u4e2a flag \u53c2\u6570\uff0c\u53ef\u4ee5\u5728&lt;include/uapi/linux/sched.h&gt;\u4e2d\u627e\u5230\u5177\u4f53\u5b9a\u4e49\uff1a</p> <ul> <li>CLONE_VM\uff1a\u8868\u793a\u5171\u4eab\u5730\u5740\u7a7a\u95f4\u3002</li> <li>CLONE_FILES\uff1a\u8868\u793a\u5171\u4eab\u6587\u4ef6\u63cf\u8ff0\u7b26</li> <li>CLONE_FS\uff1a\u8868\u793a\u5171\u4eab\u6587\u4ef6\u7cfb\u7edf\u4fe1\u606f</li> </ul> <p>\u4e24\u79cd\u7248\u672c\u90fd\u4f1a\u8c03\u7528<code>copy_process()</code>\u51fd\u6570\u6765\u521b\u5efa\u65b0\u7684\u8fdb\u7a0b\uff0c\u7136\u540e\u8c03\u7528<code>wake_up_new_task()</code>\u51fd\u6570\u5c06\u65b0\u7684\u8fdb\u7a0b\u6dfb\u52a0\u5230\u8fd0\u884c\u961f\u5217\u4e2d\uff1a</p> <pre><code>static struct task_struct *copy_process(...)\n{\n    const u64 clone_flags = args-&gt;flags;\n    struct nsproxy *nsp = current-&gt;nsproxy;\n    ......\n\n    //1.\u590d\u5236task_struct\n    struct task_struct *p;\n    p = dup_task_struct(current);\n    ......\n\n    //2.\u590d\u5236files_struct\n    retval = copy_files(clone_flags, p);\n\n    //3.\u590d\u5236fs_struct\n    retval = copy_fs(clone_flags, p);\n\n    //4.\u590d\u5236mm_struct\n    retval = copy_mm(clone_flags, p);\n\n    //5.\u590d\u5236namespaces\n    retval = copy_namespaces(clone_flags, p);\n\n    //6.\u7533\u8bf7PID\u53f7\n    pid = alloc_pid(p-&gt;nsproxy-&gt;pid_ns_for_children, ...);\n    p-&gt;pid = pid_nr(pid);\n    if(clone_flags &amp; CLONE_THREAD){\n        p-&gt;tgid = current-&gt;tgid;\n    }else{\n        p-&gt;tgid = p-&gt;pid;\n    }\n    ......\n}\n</code></pre> <p>\u5bf9\u4e8e\u7ebf\u7a0b\u6765\u8bf4\uff0c\u4e0e\u8fdb\u7a0b\u6700\u91cd\u8981\u7684\u533a\u522b\u5c31\u662f\u4f1a\u4e0d\u4f1a\u62f7\u8d1d\u7236\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u3002\u8fd9\u662f Linux \u7cfb\u7edf\u4e2d\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u6839\u672c\u533a\u522b\u3002</p>"},{"location":"linux/kernel/time/","title":"\u65f6\u95f4\u5b50\u7cfb\u7edf","text":"<p>Linux\u91c7\u7528\u4e861970\u5e741\u67081\u65e50\u70b90\u52060\u79d2\u4f5c\u4e3a\u57fa\u51c6\u70b9(epoch)\u3002</p>"},{"location":"linux/kernel/time/#_2","title":"\u4e0d\u540c\u7cbe\u5ea6\u7684\u65f6\u95f4","text":"<p>\u57fa\u4e8e\u79d2\u7684\u65f6\u95f4\u5b9a\u4e49\uff1a<code>typedef long time_t</code>\u3002</p> <p>\u57fa\u4e8e\u5fae\u79d2\u7684\u65f6\u95f4\u5b9a\u4e49\uff1a</p> <pre><code>struct timeval {\n    time_t tv_sec;\n    suseconds_t tv_usec;\n};\n</code></pre> <p>\u57fa\u4e8e\u7eb3\u79d2\u7684\u65f6\u95f4\u5b9a\u4e49\uff1a</p> <pre><code>struct timespec {\n    time_t tv_sec;\n    long tv_nsec;\n};\n</code></pre>"},{"location":"linux/kernel/time/#_3","title":"\u8f6f\u4ef6\u67b6\u6784","text":"<p>\u5982\u56fe\u6240\u793a\uff0ctimer\u7684\u529f\u80fd\u88ab\u5206\u6210\u4e86\u4e24\u5757\uff1a</p> <ul> <li>Global Counter\uff1a\u5168\u5c40\u8ba1\u6570\u5668\uff0c\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u4e00\u4e2aCPU</li> <li>CPU Local Timer\uff1aCPU\u672c\u5730\u8ba1\u6570\u5668</li> </ul>"},{"location":"linux/kernel/time/#_4","title":"\u6587\u4ef6\u5217\u8868","text":"\u6587\u4ef6\u540d \u63cf\u8ff0 time.c \u7528\u6237\u7a7a\u95f4\u7684\u63a5\u53e3 timer.c \u4f4e\u7cbe\u5ea6timer\u6a21\u5757 hrtimer.c \u9ad8\u7cbe\u5ea6timer\u6a21\u5757 itimer.c \u5468\u671f\u6027timer\u6a21\u5757 posix-timer.c POSIX timer\u6a21\u5757 posix-clock.c POSIX clock\u6a21\u5757 alarmtimer.c alarm timer\u6a21\u5757"},{"location":"linux/kernel/time/#_5","title":"\u7528\u6237\u7a7a\u95f4\u63a5\u53e3","text":"<p>\u4ece\u5e94\u7528\u7a0b\u5e8f\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5bf9\u4e8e\u65f6\u95f4\u76f8\u5173\u7684\u670d\u52a1\u8981\u6c42\u4e3b\u8981\u6709\u4e09\u79cd\uff1a</p> <ol> <li>\u83b7\u53d6\u7cfb\u7edf\u65f6\u95f4</li> <li>\u8fdb\u7a0b\u7761\u7720\u64cd\u4f5c</li> <li>\u8bbe\u7f6e\u5b9a\u65f6\u5668\u4e8b\u4ef6</li> </ol>"},{"location":"linux/kernel/time/#_6","title":"\u7cfb\u7edf\u65f6\u95f4","text":"<p>1.\u79d2\u7ea7\u522b\u7684\u65f6\u95f4\u51fd\u6570</p> <pre><code>#include &lt;time.h&gt;\n\ntime_t time(time_t *t);\n\nint stime(time_t *t);\n</code></pre> <p><code>time()</code>\u51fd\u6570\u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u70b9\u5230epoch\u7684\u79d2\u6570\uff0c<code>stime()</code>\u8bbe\u5b9a\u5f53\u524d\u65f6\u95f4\u70b9\u5230epoch\u7684\u79d2\u6570\u3002</p> <p>2.\u5fae\u5999\u7ea7\u522b\u7684\u65f6\u95f4\u51fd\u6570</p> <pre><code>#include &lt;sys/time.h&gt;\n\nint gettimeofday(struct timeval *tv, struct timezone *tz);\n\nint settimeofday(const struct timeval *tv, const struct timezone *tz);\n</code></pre> <p>\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e0e\u4e0a\u9762\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u7cbe\u5ea6\u53ef\u4ee5\u8fbe\u5230\u5fae\u5999\u7ea7\u522b\u3002</p> <p>3.\u7eb3\u79d2\u7ea7\u522b\u7684\u65f6\u95f4\u51fd\u6570</p> <pre><code>#include &lt;time.h&gt;\n\nint clock_getres(clockid_t clk_id, struct timespec *res);\n\nint clock_gettime(clockid_t clk_id, struct timespec *tp);\n\nint clock_settime(clockid_t clk_id, const struct timespec *tp);\n</code></pre> <p>clock ID\u4e3a\u7cfb\u7edf\u65f6\u949f\u7684\u53c2\u6570\uff0c\u5b83\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\u7c7b\u578b\uff1a</p> <ul> <li>CLOCK_REALTIME\uff1a\u5899\u4e0a\u65f6\u95f4(WALL TIME)\uff0c\u7528\u6237\u53ef\u4ee5\u5bf9\u5176\u8bbe\u5b9a\u3002\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u8bfb\u53d6RTC\u7684\u65f6\u95f4\u4f5c\u4e3aREALTIME\u65f6\u95f4</li> <li>CLOCK_MONOTONIC\uff1a\u7cfb\u7edf\u542f\u52a8\u5230\u5f53\u524d\u6240\u7ecf\u5386\u7684\u975e\u4f11\u7720\u65f6\u95f4\uff0c\u53ef\u4ee5\u7531NTP\u8c03\u6574</li> <li>CLOCK_MONOTONIC_RAW\uff1a\u540c\u4e0a\uff0c\u4f46\u662f\u4e0d\u53d7NTP\u5f71\u54cd</li> <li>CLOCK_BOOTTIME\uff1a\u7cfb\u7edf\u542f\u52a8\u5230\u5f53\u524d\u7684\u65f6\u95f4\uff0c\u4f1a\u7edf\u8ba1\u4f11\u7720\u65f6\u95f4</li> </ul>"},{"location":"linux/kernel/time/#_7","title":"\u8fdb\u7a0b\u7761\u7720","text":"<p>1.\u79d2\u7ea7\u522b\u7684\u7761\u7720\u51fd\u6570</p> <pre><code>#include &lt;unistd.h&gt;\n\nunsigned int sleep(unsigned int seconds);\n</code></pre> <p>\u8be5\u51fd\u6570\u8fd4\u56de\u6ca1\u6709\u7761\u7720\u7684\u65f6\u95f4\u3002</p> <p>2.\u5fae\u79d2\u7ea7\u522b\u7684\u7761\u7720\u51fd\u6570</p> <pre><code>#include &lt;unistd.h&gt;\n\nint usleep(useconds_t usec);\n</code></pre> <p>\u8be5\u51fd\u6570\u5df2\u88ab\u5e9f\u5f03\u3002</p> <p>3.\u7eb3\u79d2\u7ea7\u522b\u7684\u7761\u7720\u51fd\u6570</p> <pre><code>#include &lt;time.h&gt;\n\nint nanosleep(const struct timespec *req, struct timespec *rem);\n</code></pre> <p><code>nanosleep()</code>\u53d6\u4ee3\u4e86<code>usleep()</code>\uff0c\u5728req\u4e2d\u8bbe\u5b9a\u4f60\u8981\u7761\u7720\u7684\u79d2\u6570\u548c\u7eb3\u79d2\u6570\u3002rem\u8868\u793a\u8fd8\u6709\u591a\u5c11\u65f6\u95f4\u6ca1\u6709\u7761\u5b8c\u3002</p> <p>4.\u66f4\u9ad8\u7ea7\u7684\u7761\u7720\u51fd\u6570</p> <pre><code>#include &lt;time.h&gt;\nint clock_nanosleep(clockid_t clk_id, int flags, const struct timespec *request, struct timespec *remain);\n</code></pre> <p>clk_id\uff1a\u6307\u660e\u662f\u79cd\u7c7b\u578b</p> <p>flag\uff1a0\u6216\u80051\uff0c\u8868\u793a\u76f8\u5bf9\u65f6\u95f4\u6216\u7edd\u5bf9\u65f6\u95f4</p>"},{"location":"linux/kernel/time/#_8","title":"\u5b9a\u65f6\u5668","text":"<p>1.alarm\u51fd\u6570</p> <pre><code>#include &lt;unistd.h&gt;\n\nunsigned int alarm(unsigned int seconds);\n</code></pre> <p>\u8be5\u51fd\u6570\u5728\u5236\u5b9a\u79d2\u6570(\u57fa\u4e8eCLOCK_REALTIME)\u8fc7\u53bb\u540e\uff0c\u5411\u8be5\u8fdb\u7a0b\u53d1\u9001SIGALRM\u4fe1\u53f7\u3002</p> <p>2.POSIX timer</p> <p>\u521b\u5efatimer\uff1a</p> <pre><code>#include &lt;signal.h&gt;\n#include &lt;time.h&gt;\n\nint timer_create(clockid_t clockid, struct sigevent *sevp, timer_t *timerid)\n</code></pre> <p><code>struct sigevent</code>\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>union sigval\n{\n  int sival_int;\n  void *sival_ptr;\n};\n\ntypedef struct sigevent\n  {\n    __sigval_t sigev_value;\n    int sigev_signo;\n    int sigev_notify;\n\n    union\n      {\n    int _pad[__SIGEV_PAD_SIZE];\n\n    /* When SIGEV_SIGNAL and SIGEV_THREAD_ID set, LWP ID of the\n       thread to receive the signal.  */\n    __pid_t _tid;\n\n    struct\n      {\n        void (*_function) (__sigval_t); /* Function to start.  */\n        pthread_attr_t *_attribute;     /* Thread attributes.  */\n      } _sigev_thread;\n      } _sigev_un;\n  } sigevent_t;\n</code></pre> <p>\u6210\u5458sigev_notify\u5b9a\u4e49\u4e86\u5f53\u5b9a\u65f6\u5668\u8d85\u65f6\u540e\uff0c\u5982\u4f55\u901a\u77e5\u8be5\u8fdb\u7a0b\uff1a</p> <ul> <li>SIGEV_NONE\uff1a\u4e0d\u9700\u8981\u5f02\u6b65\u901a\u77e5\uff0c\u7a0b\u5e8f\u81ea\u5df1\u8c03\u7528<code>timer_gettime()</code>\u6765\u8f6e\u8be2\u5b9a\u65f6\u5668\u72b6\u6001</li> <li>SIGEV_SIGNAL\uff1a\u4f7f\u7528signal\u5f02\u6b65\u901a\u77e5\uff0c\u4fe1\u53f7\u7531\u6210\u5458sigev_signo\u5b9a\u4e49</li> <li>SIGEV_THREAD\uff1a\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b9a\u65f6\u5668\u8d85\u65f6\u56de\u8c03\u51fd\u6570</li> <li>SIGEV_THREAD_ID\uff1a\u884c\u4e3a\u548cSIGEV_SIGNAL\u7c7b\u4f3c\uff0c\u4f46\u662f\u4fe1\u53f7\u88ab\u9001\u81f3\u8fdb\u7a0b\u7684\u4e00\u4e2a\u6307\u5b9a\u7ebf\u7a0b\u4e2d</li> </ul> <p>\u8bbe\u5b9a\u5b9a\u65f6\u5668\uff1a</p> <pre><code>#include &lt;time.h&gt;\n\nint timer_settime(timer_t timerid, int flags, const struct itimerspec *value, struct itimerspec *ovalue);\n\nint timer_gettime(timer_t timerid, struct itimerspec *curr_value);\n</code></pre> <p><code>struct itimerspec</code>\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>struct itimerspec\n  {\n    struct timespec it_interval;    /* Interval for periodic timer */\n    struct timespec it_value;   /* Time until next expiration */\n  };\n</code></pre> <p>it_value\u7528\u6765\u8bbe\u7f6e\u7b2c\u4e00\u6b21\u8d85\u65f6\u65f6\u95f4\uff0cit_interval\u7528\u6765\u8bbe\u7f6e\u5468\u671f\u8d85\u65f6\u65f6\u95f4\u3002</p> <p>\u5220\u9664\u5b9a\u65f6\u5668\uff1a</p> <pre><code>#include &lt;time.h&gt;\n\nint timer_delete(timer_t timerid);\n</code></pre>"},{"location":"linux/kernel/timer/","title":"\u5b9a\u65f6\u5668","text":"<p>\u5b9a\u65f6\u5668\u57fa\u4e8e tick\uff0c\u662f\u6839\u636e\u7cfb\u7edf jiffies \u6765\u89e6\u53d1\u7684\uff0c\u7cbe\u5ea6\u76f8\u5bf9\u6bd4\u8f83\u4f4e\u3002\u5229\u7528\u5b9a\u65f6\u5668\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u5b9a\u5728\u672a\u6765\u7684\u67d0\u4e2a\u65f6\u523b\uff0c\u89e6\u53d1\u4e00\u4e2a\u7279\u5b9a\u7684\u4e8b\u4ef6\u3002</p>"},{"location":"linux/kernel/timer/#jiffies","title":"\u8282\u62cd\u7387\u548cjiffies\u53d8\u91cf","text":"<p>\u7cfb\u7edf\u5b9a\u65f6\u5668\u7684\u9891\u7387\u88ab\u79f0\u4e3a\u8282\u62cd\u7387\uff08tick rate\uff09\uff0c\u4ea7\u751f\u7684\u4e24\u6b21\u65f6\u949f\u4e2d\u65ad\u7684\u95f4\u9694\u5c31\u88ab\u79f0\u4e3a\u8282\u62cd\uff08tick\uff09\uff0c\u5b83\u7b49\u4e8e\u8282\u62cd\u7387\u5206\u4e4b\u4e00\u79d2\u3002\u5185\u6838\u901a\u8fc7\u65f6\u949f\u4e2d\u65ad\u95f4\u9694\u6765\u8ba1\u7b97\u7cfb\u7edf\u8fd0\u884c\u65f6\u95f4\u3002</p> <p>\u5b9a\u65f6\u5668\u9891\u7387\u662f\u901a\u8fc7\u9759\u6001\u9884\u5904\u7406\u5b9a\u4e49\u7684\uff0c\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\u88ab\u8bbe\u7f6e\uff0c\u8be5\u503c\u4e0e\u4f53\u7cfb\u7ed3\u6784\u76f8\u5173\u3002\u5982\u679c\u8bbe\u7f6e\u4e3a 1000\uff0c\u90a3\u4e48\u6bcf\u79d2\u5c31\u4ea7\u751f 1000 \u6b21\u4e2d\u65ad\uff08\u6bcf 1ms \u4ea7\u751f\u4e00\u6b21\uff09\u3002</p> <p>\u5b9a\u65f6\u5668\u9891\u7387\u5e94\u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u7406\u60f3\u7684\u503c\uff0c\u9ad8 HZ \u53ef\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u7684\u6027\u80fd\uff0c\u4f7f\u5f97\u7531\u65f6\u95f4\u9a71\u52a8\u7684\u4e8b\u4ef6\u66f4\u4e3a\u7cbe\u786e\u3002\u4f46\u540c\u65f6\u4e5f\u5e26\u6765\u4e86\u989d\u5916\u7684\u7cfb\u7edf\u8d1f\u62c5\uff0c\u56e0\u4e3a\u5904\u7406\u5668\u4f1a\u88ab\u66f4\u9891\u7e41\u5730\u6253\u65ad\u53bb\u6267\u884c\u65f6\u949f\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002</p> <p>\u5168\u5c40\u53d8\u91cf<code>jiffies</code>\u7528\u6765\u8bb0\u5f55\u7cfb\u7edf\u542f\u52a8\u4ee5\u6765\u4ea7\u751f\u7684\u8282\u62cd\u603b\u6570\u3002\u5185\u6838\u5728\u542f\u52a8\u65f6\u5c06\u8be5\u53d8\u91cf\u521d\u59cb\u5316\u4e3a0\uff0c\u6b64\u540e\u6bcf\u4ea7\u751f\u4e00\u6b21\u65f6\u949f\u4e2d\u65ad\u8be5\u503c\u5c31+1\u3002\u56e0\u4e3a\u4e00\u79d2\u5185\u65f6\u949f\u4e2d\u65ad\u7684\u6b21\u6570\u7b49\u4e8e HZ\uff0c\u6240\u4ee5<code>jiffies</code>\u4e00\u79d2\u5185\u589e\u52a0\u7684\u503c\u4e5f\u5c31\u4e3a HZ\u3002\u7cfb\u7edf\u8fd0\u884c\u65f6\u95f4\u4ee5\u79d2\u4e3a\u8ba1\uff0c\u5176\u503c\u7b49\u4e8e jiffies/HZ\u3002</p> <p><code>jiffies</code>\u53d8\u91cf\u88ab\u5b9a\u4e49\u4e3a<code>unsigned long</code>\u7c7b\u578b\u3002\u572832\u4f4d\u4f53\u7cfb\u7ed3\u6784\u4e0a\u662f32\u4f4d\u3002\u5982\u679c\u65f6\u949f\u9891\u7387\u4e3a 100HZ\uff0c\u90a3\u4e48 497 \u5929\u540e\u4f1a\u6ea2\u51fa\u3002\u5982\u679c\u662f64\u4f4d\u4f53\u7cfb\u7ed3\u6784\uff0c\u53ef\u4ee5\u653e\u5fc3\u5730\u8ba4\u4e3a\u5b83\u4e0d\u4f1a\u6ea2\u51fa\u3002</p> <p>\u5f53<code>jiffies</code>\u53d8\u91cf\u7684\u503c\u6ea2\u51fa\u540e\u518d\u7ee7\u7eed\u589e\u52a0\u7684\u8bdd\uff0c\u5b83\u4f1a\u56de\u7ed5\u81f30\u3002\u5185\u6838\u4f7f\u7528<code>time_after</code>\u3001<code>time_after_eq</code>\u3001<code>time_before</code>\u548c<code>time_before_eq</code>\u5b8f\u6765\u5224\u65ad\u4e24\u4e2a\u65f6\u95f4\u503c\u7684\u5173\u7cfb\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3<code>jiffies</code>\u53d8\u91cf\u7684\u6ea2\u51fa\u95ee\u9898\uff0c\u5185\u6838\u5f15\u5165\u4e86<code>jiffies_64</code>\u53d8\u91cf\uff0c\u8fd9\u662f\u4e00\u4e2a64\u4f4d\u7684\u65e0\u7b26\u53f7\u6574\u6570\u3002\u572864\u4f4d\u67b6\u6784\u4e0a\uff0c\u8fd9\u4e24\u4e2a\u53d8\u91cf\u662f\u4e00\u4e2a\u503c\uff1b\u4f46\u572832\u4f4d\u67b6\u6784\u4e0a\uff0c\u5bf964\u4f4d\u503c\u7684\u8bbf\u95ee\u4e0d\u662f\u539f\u5b50\u7684\u3002\u8fd9\u610f\u5473\u7740\u8bfb\u53d664\u4f4d\u503c\u7684\u9ad832\u4f4d\u548c\u4f4e32\u4f4d\u65f6\uff0c\u53d8\u91cf\u7684\u503c\u53ef\u80fd\u4f1a\u53d1\u751f\u66f4\u65b0\u800c\u5bfc\u81f4\u83b7\u53d6\u9519\u8bef\u7684\u503c\u3002\u56e0\u6b64\u572832\u4f4d\u67b6\u6784\u4e0a\u4e0d\u80fd\u5bf964\u4f4d\u7684\u503c\u76f4\u63a5\u8bfb\u53d6\uff0c\u5fc5\u987b\u4f7f\u7528\u4e00\u4e2a\u7279\u6b8a\u7684\u8f85\u52a9\u51fd\u6570<code>get_jiffies_64</code>\u3002</p>"},{"location":"linux/kernel/timer/#_2","title":"\u5b9a\u65f6\u5668\u7684\u4f7f\u7528","text":"<p>\u4e00\u4e2a\u5b9a\u65f6\u5668\u662f\u7528<code>struct timer_list</code>\u7ed3\u6784\u4f53\u6765\u8868\u793a\u7684\uff1a <pre><code>struct timer_list {\n    struct hlist_node   entry;\n    unsigned long       expires;\n    void            (*function)(struct timer_list *);\n    u32         flags;\n    ......\n};\n</code></pre></p> <p>entry\uff1a\u6240\u6709\u7684\u5b9a\u65f6\u5668\u4f1a\u6839\u636e\u5230\u671f\u7684\u65f6\u95f4\u88ab\u5206\u914d\u5230\u4e00\u7ec4\u94fe\u8868\u4e2d\u7684\u4e00\u4e2a</p> <p>expires\uff1a\u5b9a\u65f6\u5668\u7684\u5230\u671f\u65f6\u95f4\uff0c\u4ee5jiffies\u4e3a\u5355\u4f4d</p> <p>function\uff1a\u5b9a\u65f6\u5668\u5230\u671f\u65f6\u8981\u6267\u884c\u7684\u6bc1\u6389\u51fd\u6570</p> <p>flags\uff1a\u6807\u5fd7\u4f4d</p> \u51fd\u6570 \u63cf\u8ff0 DEFINE_TIMER \u5b9a\u4e49\u4e00\u4e2atimer timer_setup \u521d\u59cb\u5316timer add_timer \u6dfb\u52a0\u4e00\u4e2atimer add_timer_on \u5c06timer\u6dfb\u52a0\u5230\u6307\u5b9aCPU\u4e0a mod_timer \u4fee\u6539\u5230\u671f\u65f6\u95f4 del_timer \u505c\u6b62timer del_timer_syn \u7b49\u5f85timer\u6267\u884c\u5b8c\u6bd5\u518d\u505c\u6b62"},{"location":"linux/kernel/timer/#_3","title":"\u5ef6\u8fdf\u6267\u884c","text":"<p>\u5185\u6838\u4ee3\u7801\u5f80\u5f80\u9700\u8981\u63a8\u8fdf\u67d0\u4e9b\u4efb\u52a1\u7684\u6267\u884c\uff0c\u8fd9\u79cd\u63a8\u8fdf\u901a\u5e38\u53d1\u751f\u5728\u7b49\u5f85\u786c\u4ef6\u5b8c\u6210\u67d0\u4e9b\u5de5\u4f5c\uff0c\u800c\u4e14\u7b49\u5f85\u65f6\u95f4\u5f80\u5f80\u975e\u5e38\u77ed\u3002\u5185\u6838\u63d0\u4f9b\u4e86\u591a\u79cd\u5ef6\u8fdf\u65b9\u6cd5\u6765\u5904\u7406\u5ef6\u8fdf\u8bf7\u6c42\u3002</p>"},{"location":"linux/kernel/timer/#_4","title":"\u5fd9\u7b49\u5f85","text":"<p>\u6700\u7b80\u5355\u7684\u5ef6\u8fdf\u65b9\u6cd5\u5c31\u662f\u5fd9\u7b49\u5f85\u3002\u8be5\u65b9\u6cd5\u4ec5\u4ec5\u5728\u60f3\u8981\u5ef6\u8fdf\u7684\u65f6\u95f4\u662f\u8282\u62cd\u7684\u6574\u6570\u500d\uff0c\u6216\u8005\u7cbe\u786e\u7387\u8981\u6c42\u4e0d\u9ad8\u7684\u60c5\u51b5\u4e0b\u624d\u53ef\u4ee5\u4f7f\u7528\u3002\u5fd9\u7b49\u5f85\u7684\u5b9e\u73b0\u975e\u5e38\u7b80\u5355\u2014\u2014\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u4e0d\u65ad\u7b49\u5f85\u76f4\u5230\u5e0c\u671b\u7684\u65f6\u949f\u8282\u62cd\u6570\u8017\u5c3d\uff0c\u6bd4\u5982\uff1a</p> <pre><code>unsigned long timeout = jiffies + 10;    //\u7b49\u5f8510\u4e2a\u8282\u62cd\nwhile(time_before(jiffies, timeout)){\n    //relax\n}\n</code></pre> <p>\u8be5\u5faa\u73af\u5c06\u4e0d\u65ad\u6267\u884c\uff0c\u76f4\u5230<code>jiffies</code>\u5927\u4e8edelay\u4e3a\u6b62\u3002\u8fd9\u662f\u4e00\u79cd\u4f4e\u6548\u7684\u529e\u6cd5\uff0c \u56e0\u4e3a\u5904\u7406\u5668\u9664\u4e86\u7b49\u5f85\u4e0d\u4f1a\u505a\u4efb\u4f55\u4e8b\u60c5\u3002</p>"},{"location":"linux/kernel/timer/#_5","title":"\u8ba9\u51fa\u5904\u7406\u5668","text":"<p>\u5fd9\u7b49\u5f85\u5927\u5927\u6d6a\u8d39\u4e86\u7cfb\u7edf\u7684\u6027\u80fd\uff0c\u4e00\u79cd\u89e3\u51b3\u529e\u6cd5\u662f\u5728\u4e0d\u9700\u8981CPU\u7684\u60c5\u51b5\u4e0b\u4e3b\u52a8\u91ca\u653e\uff1a</p> <pre><code>while(time_before(jiffies, timeout)){\n    schedule();\n}\n</code></pre>"},{"location":"linux/kernel/timer/#_6","title":"\u8d85\u65f6\u6267\u884c","text":"<p>\u5982\u679c\u9a71\u52a8\u7a0b\u5e8f\u4f7f\u7528\u7b49\u5f85\u961f\u5217\u6765\u7b49\u5f85\u5176\u4ed6\u4e00\u4e9b\u4e8b\u4ef6\uff0c\u800c\u6211\u4eec\u540c\u65f6\u5e0c\u671b\u5728\u7279\u5b9a\u65f6\u95f4\u6bb5\u4e2d\u8fd0\u884c\uff0c\u53ef\u4ee5\u4f7f\u7528<code>wait_event_timeout()</code>\u6216\u8005<code>wait_event_interruptible_timeout()</code>\u51fd\u6570\u3002\u8c03\u7528\u4e0a\u8ff0\u51fd\u6570\u4f1a\u4f7f\u8fdb\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\uff0c\u76f4\u5230\u67d0\u4e2a\u6761\u4ef6\u4e3a\u771f\uff1a</p> <pre><code>long wait_event_timeout(wait_queue_head_t q, int condition, long timeout);\nlong wait_event_interruptible_timeout(wait_queue_head_t q, int condition, long timeout);\n</code></pre> <p>\u8fd9\u4e24\u4e2a\u51fd\u6570\u7684\u533a\u522b\u662f\uff0c\u7b2c\u4e00\u4e2a\u51fd\u6570\u4e0d\u53ef\u4e2d\u65ad\uff0c\u800c\u7b2c\u4e8c\u4e2a\u51fd\u6570\u53ef\u4ee5\u54cd\u5e94\u4fe1\u53f7\u3002\u4e24\u4e2a\u51fd\u6570\u90fd\u4f1a\u5728\u7ed9\u5b9a\u7684\u7b49\u5f85\u961f\u5217\u4e0a\u4f11\u7720\uff0c\u5728\u8d85\u65f6\u5230\u671f\u65f6\u8fd4\u56de\u3002\u5982\u679c\u6709\u5176\u4ed6\u8fdb\u7a0b\u5728\u7b49\u5f85\u961f\u5217\u4e0a\u8c03\u7528\u4e86<code>wake_up()</code>\u51fd\u6570\uff0c\u4e5f\u4f1a\u4f7f\u5f97\u8fdb\u7a0b\u4ece\u7b49\u5f85\u961f\u5217\u4e2d\u88ab\u5524\u9192\u3002</p> <p>\u5bf9\u4e8e\u65e0\u9700\u7b49\u5f85\u7279\u5b9a\u4e8b\u4ef6\u800c\u5ef6\u8fdf\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528<code>schedule_timeout()</code>\u51fd\u6570\uff1a</p> <pre><code>signed long schedule_timeout(signed long timeout);\n</code></pre> <p>timeout\u662f\u7528<code>jiffies</code>\u8868\u793a\u7684\u5ef6\u8fdf\u65f6\u95f4\u3002<code>schedule_timeout()</code>\u51fd\u6570\u8981\u6c42\u9884\u5148\u8bbe\u7f6e\u8fdb\u7a0b\u72b6\u6001\uff1a<code>set_current_state(TASK_INTERRUPTIBLE)</code>\u3002</p> <p>\u6ce8\u610f\uff0c\u7531\u4e8e<code>schedule_timeout()</code>\u51fd\u6570\u9700\u8981\u8c03\u7528\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u6240\u4ee5\u8c03\u7528\u5b83\u7684\u4ee3\u7801\u5fc5\u987b\u4fdd\u8bc1\u80fd\u591f\u7761\u7720\u3002\u4e5f\u5c31\u662f\u8c03\u7528\u51fd\u6570\u5fc5\u987b\u4f4d\u4e8e\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4e14\u4e0d\u80fd\u6301\u6709\u9501\u3002</p> <p>\u5f53\u4efb\u52a1\u88ab\u91cd\u65b0\u8c03\u5ea6\u65f6\uff0c\u5c06\u8fd4\u56de\u4ee3\u7801\u8fdb\u5165\u7761\u7720\u524d\u7684\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u3002\u5982\u679c\u4efb\u52a1\u63d0\u524d\u88ab\u5524\u9192\uff0c\u90a3\u4e48\u5b9a\u65f6\u5668\u88ab\u64a4\u9500\u3002</p>"},{"location":"linux/kernel/timer/#_7","title":"\u77ed\u5ef6\u8fdf","text":"<p>https://www.kernel.org/doc/html/v6.6/timers/timers-howto.html</p> <p>\u4f7f\u7528\u77ed\u5ef6\u8fdf\u65f6\u9700\u8981\u6ce8\u610f\u81ea\u5df1\u7684\u4ee3\u7801\u662f\u5426\u4f4d\u4e8e\u539f\u5b50\u4e0a\u4e0b\u6587\u4e2d\u3002</p> <p>\u539f\u5b50\u4e0a\u4e0b\u6587\uff1a</p> <p>\u5fc5\u987b\u4f7f\u7528*delay\u51fd\u6570\u65cf\uff0c\u8fd9\u4e9b\u51fd\u6570\u5fd9\u7b49\u5f85\u8db3\u591f\u7684\u5faa\u73af\u5468\u671f\u4ee5\u5b9e\u73b0\u6240\u9700\u7684\u5ef6\u8fdf\uff1a</p> <ul> <li><code>ndelay(unsigned long nsecs)</code></li> <li><code>udelay(unsigned long usecs)</code></li> <li><code>mdelay(unsigned long msecs)</code></li> </ul> <p>\u9996\u9009udelay\uff0c\u975ePC\u8bbe\u5907\u53ef\u80fd\u65e0\u6cd5\u6ee1\u8db3ns\u7684\u7cbe\u5ea6\u3002mdelay\u4e5f\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002</p> <p>\u975e\u539f\u5b50\u4e0a\u4e0b\u6587\uff1a</p> <p>\u5e94\u8be5\u4f7f\u7528*sleep\u51fd\u6570\u65cf\uff0c\u8fd9\u4e9b\u51fd\u6570\u5e95\u5c42\u673a\u5236\u90fd\u4e0d\u540c\uff1a</p> <ul> <li>\u7531\u5fd9\u7b49\u5f85\u652f\u6301\uff1a<code>udelay(unsigned long usecs)</code></li> <li>\u7531\u9ad8\u7cbe\u5ea6\u5b9a\u65f6\u5668\u652f\u6301\uff1a<code>usleep_range(unsigned long min, unsigned long max)</code></li> <li>\u7531jiffies\u652f\u6301\uff1a<code>msleep(unsigned long msecs)</code></li> </ul> <p>\u4f11\u7720\"\u51e0\"\u5fae\u79d2(&lt; 10us)\uff1a\u4f7f\u7528udelay</p> <p>\u4f11\u7720~\u5fae\u79d2\u6216\u5c0f\u6beb\u79d2(10us ~ 20ms)\uff1a\u4f7f\u7528usleep_range</p> <p>\u4f11\u7720\u66f4\u957f\u6beb\u79d2(10ms+)\uff1a\u4f7f\u7528msleep</p> <p>\u7075\u6d3b\u7684\u4f11\u7720(\u4efb\u610f\u5ef6\u8fdf\uff0c\u4e0d\u53ef\u4e2d\u65ad)\uff1a\u4f7f\u7528fsleep</p>"},{"location":"linux/kernel/vfs/","title":"\u865a\u62df\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff08VFS\uff09\u662fLinux\u5185\u6838\u7684\u4e00\u4e2a\u91cd\u8981\u5b50\u7cfb\u7edf\uff0c\u5b83\u4e3a\u7528\u6237\u7a7a\u95f4\u7a0b\u5e8f\u63d0\u4f9b\u4e86\u4e00\u5957\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u4ee5\u5b9e\u73b0\u5bf9\u4e0d\u540c\u6587\u4ef6\u7cfb\u7edf\u7684\u8bbf\u95ee\u548c\u64cd\u4f5c\u3002\u901a\u8fc7\u8fd9\u4e9b\u63a5\u53e3\uff0c\u7528\u6237\u7a7a\u95f4\u7a0b\u5e8f\u53ef\u4ee5\u91c7\u7528\u6807\u51c6\u7684\u7cfb\u7edf\u8c03\u7528\u6765\u6267\u884c\u6587\u4ef6\u64cd\u4f5c\uff0c\u800c\u65e0\u9700\u5173\u5fc3\u8fd9\u4e9b\u64cd\u4f5c\u5b9e\u9645\u662f\u5728\u54ea\u79cd\u6587\u4ef6\u7cfb\u7edf\u4e0a\u6267\u884c\u7684\u3002VFS\u4f7f\u5f97\u5185\u6838\u80fd\u591f\u652f\u6301\u591a\u79cd\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b\uff0c\u5982ext4\u3001ReiserFS\u3001XFS\u7b49\u3002\u5bf9\u4e8e\u7528\u6237\u7a7a\u95f4\u7a0b\u5e8f\u6765\u8bf4\uff0c\u8fd9\u4e9b\u6587\u4ef6\u7cfb\u7edf\u770b\u8d77\u6765\u90fd\u662f\u4e00\u6837\u7684\uff0c\u56e0\u4e3aVFS\u9690\u85cf\u4e86\u5e95\u5c42\u6587\u4ef6\u7cfb\u7edf\u7684\u5dee\u5f02\u3002VFS\u7684\u8bbe\u8ba1\u4f7f\u5f97Linux\u5185\u6838\u80fd\u591f\u7075\u6d3b\u5730\u652f\u6301\u591a\u79cd\u6587\u4ef6\u7cfb\u7edf\uff0c\u540c\u65f6\u4fdd\u6301\u7528\u6237\u7a7a\u95f4\u7a0b\u5e8f\u7684\u7a33\u5b9a\u6027\u548c\u53ef\u79fb\u690d\u6027\u3002\u8fd9\u5bf9\u4e8eLinux\u7cfb\u7edf\u7684\u53ef\u6269\u5c55\u6027\u548c\u7075\u6d3b\u6027\u81f3\u5173\u91cd\u8981\u3002</p> <p>\u4e3a\u4e86\u652f\u6301\u591a\u6587\u4ef6\u7cfb\u7edf\uff0cVFS\u63d0\u4f9b\u4e86\u4e00\u4e2a\u901a\u7528\u6587\u4ef6\u7cfb\u7edf\u6a21\u578b\u7684\u62bd\u8c61\u5c42\uff0c\u8be5\u6a21\u578b\u56ca\u62ec\u4e86\u4efb\u4f55\u6587\u4ef6\u7cfb\u7edf\u5e38\u7528\u7684\u529f\u80fd\u548c\u884c\u4e3a\u3002\u7528\u6237\u7a7a\u95f4\u7a0b\u5e8f\u53ea\u9700\u8981\u4f7f\u7528VFS\u66b4\u9732\u7684\u63a5\u53e3\uff0c\u800c\u65e0\u987b\u5173\u5fc3\u5e95\u5c42\u6587\u4ef6\u7cfb\u7edf\u7684\u5b9e\u73b0\u7ec6\u8282\u3002\u6bd4\u5982\u8c03\u7528\u4e00\u4e2a\u7b80\u5355\u7684<code>write()</code>\u51fd\u6570\uff0c\u9996\u5148\u7531VFS\u8f6c\u6362\u4e3a<code>sys_write()</code>\uff0c\u518d\u6839\u636efd\u6587\u4ef6\u63cf\u8ff0\u7b26\u6240\u5728\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u627e\u5230\u5177\u4f53\u7684\u5b9e\u73b0\u65b9\u6cd5\uff0c\u6700\u540e\u518d\u6267\u884c\u8be5\u64cd\u4f5c\u3002</p> <p></p> <p>\u901a\u8fc7\u8fd9\u5f20\u56fe\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0cVFS\u652f\u6301\u591a\u79cd\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u6309\u7167\u5b58\u50a8\u4f4d\u7f6e\u7684\u4e0d\u540c\uff0c\u8fd9\u4e9b\u6587\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b\uff1a</p> <ul> <li> <p>\u57fa\u4e8e\u78c1\u76d8\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u4e5f\u5c31\u662f\u628a\u6570\u636e\u76f4\u63a5\u5b58\u50a8\u5728\u672c\u5730\u78c1\u76d8\u4e2d\u3002\u5e38\u89c1\u7684\u7531Ext4\u3001XFS\u3001OverlayFS\u7b49\u3002</p> </li> <li> <p>\u57fa\u4e8e\u5185\u5b58\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u4e0d\u9700\u8981\u78c1\u76d8\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u4f46\u4f1a\u5360\u7528\u989d\u5916\u7684\u5185\u5b58\u3002/proc\u6587\u4ef6\u7cfb\u7edf\u5c31\u5c5e\u4e8e\u8fd9\u4e00\u7c7b\u3002</p> </li> <li> <p>\u57fa\u4e8e\u7f51\u7edc\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u7528\u6765\u8bbf\u95ee\u5176\u4ed6\u8ba1\u7b97\u673a\u6570\u636e\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u6bd4\u5982NFS\u3002</p> </li> </ul> <p>\u4e0d\u7ba1\u662f\u54ea\u7c7b\u6587\u4ef6\u7cfb\u7edf\uff0c\u90fd\u9700\u8981\u6302\u8f7d\u5230VFS\u76ee\u5f55\u6811\u4e2d\u7684\u67d0\u4e2a\u5b50\u76ee\u5f55\uff0c\u624d\u80fd\u88ab\u7528\u6237\u7a7a\u95f4\u7a0b\u5e8f\u8bbf\u95ee\u5230\u3002\u62ff\u57fa\u4e8e\u78c1\u76d8\u7684\u6587\u4ef6\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u5728\u5b89\u88c5\u7cfb\u7edf\u65f6\uff0c\u5c31\u9700\u8981\u6307\u5b9a\u6302\u8f7d\u70b9\u2014\u2014\u6839\u76ee\u5f55\uff08 / \uff09\uff0c\u5728\u6839\u76ee\u5f55\u4e0b\u518d\u628a\u5176\u4ed6\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u8fdb\u6765\u3002</p> <p>Linux\u7cfb\u7edf\u603b\u5171\u91c7\u7528\u4e86\u56db\u79cd\u6838\u5fc3\u6982\u5ff5\u6765\u62bd\u8c61\u6587\u4ef6\u7cfb\u7edf\uff1a\u6587\u4ef6\u3001\u76ee\u5f55\u9879\u3001\u7d22\u5f15\u70b9\u548c\u6302\u8f7d\u70b9\u3002\u8fd9\u4e9b\u6982\u5ff5\u5171\u540c\u6784\u5efa\u4e86\u4e00\u4e2a\u5206\u5c42\u7684\u6570\u636e\u5b58\u50a8\u7ed3\u6784\uff0c\u7528\u4e8e\u7ba1\u7406\u6587\u4ef6\u548c\u76ee\u5f55\u53ca\u76f8\u5173\u7684\u63a7\u5236\u4fe1\u606f\u3002Linux\u6587\u4ef6\u7cfb\u7edf\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f\u7edf\u4e00\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u6240\u6709\u7684\u6587\u4ef6\u88ab\u6302\u8f7d\u5230\u4e00\u4e2a\u5168\u5c40\u7684\u5c42\u6b21\u7ed3\u6784\u4e2d\uff0c\u5f62\u6210\u4e00\u4e2a\u7c7b\u4f3c\u6839\u6587\u4ef6\u7cfb\u7edf\u7684\u7ed3\u6784\u3002\u8fd9\u4e0eWindows\u7cfb\u7edf\u5c06\u6587\u4ef6\u7cfb\u7edf\u5212\u5206\u4e0d\u540c\u7684\u5206\u533a\u4e0d\u540c\u3002</p> <p>Linux\u7cfb\u7edf\u533a\u5206\u6587\u4ef6\u672c\u8eab\u548c\u6587\u4ef6\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u8bbf\u95ee\u63a7\u5236\u6743\u9650\u3001\u5927\u5c0f\u3001\u6240\u6709\u8005\u3001\u521b\u5efa\u65f6\u95f4\u7b49\u3002\u8fd9\u4e9b\u76f8\u5173\u4fe1\u606f\uff0c\u6709\u65f6\u88ab\u79f0\u4f5c\u6587\u4ef6\u7684\u5143\u6570\u636e\uff0c\u88ab\u5b58\u50a8\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u636e\u7ed3\u6784\u4e2d\u2014\u2014\u7d22\u5f15\u8282\u70b9\uff08inode\uff09\u3002</p>"},{"location":"linux/kernel/vfs/#vfs","title":"VFS\u5bf9\u8c61","text":"<p>VFS\u4f7f\u7528\u4e00\u7ec4\u6570\u636e\u7ed3\u6784\u6765\u4ee3\u8868\u901a\u7528\u6587\u4ef6\u5bf9\u8c61\uff0c\u5b83\u4eec\u5206\u522b\u662f\uff1a</p> <ul> <li>\u8d85\u7ea7\u5757\u5bf9\u8c61\uff0c\u4ee3\u8868\u4e00\u4e2a\u5177\u4f53\u7684\u5df2\u5b89\u88c5\u7684\u6587\u4ef6\u7cfb\u7edf\u3002</li> <li>\u7d22\u5f15\u8282\u70b9\u5bf9\u8c61\uff0c\u4ee3\u8868\u4e00\u4e2a\u5177\u4f53\u6587\u4ef6\u3002</li> <li>\u76ee\u5f55\u9879\u5bf9\u8c61\uff0c\u4ee3\u8868\u4e00\u4e2a\u76ee\u5f55\u9879\uff0c\u662f\u4e00\u4e2a\u8def\u5f84\u7684\u7ec4\u6210\u90e8\u5206\u3002</li> <li>\u6587\u4ef6\u5bf9\u8c61\uff0c\u4ee3\u8868\u7531\u8fdb\u7a0b\u6253\u5f00\u7684\u6587\u4ef6\u3002</li> </ul> <p>\u6bcf\u4e2a\u901a\u7528\u5bf9\u8c61\u90fd\u5305\u542b\u4e00\u4e2a\u64cd\u4f5c\u5bf9\u8c61\uff0c\u63cf\u8ff0\u4e86\u5185\u6838\u5bf9\u901a\u7528\u5bf9\u8c61\u7684\u65b9\u6cd5\u2014\u2014super_operations\u3001inode_operations\u3001dentry_operations\u3001file_operations\u3002</p>"},{"location":"linux/kernel/vfs/#_2","title":"\u8d85\u7ea7\u5757\u5bf9\u8c61","text":"<p>\u8d85\u7ea7\u5757\u5bf9\u8c61\u662f\u7528\u6765\u63cf\u8ff0\u4e00\u4e2a\u5df2\u5b89\u88c5\u7684\u6587\u4ef6\u7cfb\u7edf\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5305\u542b\u4e86\u6587\u4ef6\u7cfb\u7edf\u7684\u5173\u952e\u5143\u6570\u636e\uff0c\u8fd9\u4e9b\u5143\u6570\u636e\u7528\u4e8e\u5185\u6838\u7ba1\u7406\u548c\u7ef4\u62a4\u6587\u4ef6\u7cfb\u7edf\u3002\u8d85\u7ea7\u5757\u5bf9\u8c61\u662f\u6587\u4ef6\u7cfb\u7edf\u5728\u5185\u6838\u4e2d\u8868\u793a\u81ea\u5df1\u7684\u65b9\u5f0f\uff0c\u5b83\u63d0\u4f9b\u4e86\u6587\u4ef6\u7cfb\u7edf\u7684\u603b\u4f53\u89c6\u56fe\u3002\u8d85\u7ea7\u5757\u5bf9\u8c61\u7531<code>struct super_block</code>\u7ed3\u6784\u4f53\u8868\u793a\uff0c\u901a\u8fc7<code>alloc_super()</code>\u51fd\u6570\u521b\u5efa\u5e76\u521d\u59cb\u5316\u3002\u5728\u6587\u4ef6\u7cfb\u7edf\u5b89\u88c5\u65f6\uff0c\u4f1a\u8c03\u7528\u8be5\u51fd\u6570\u4ee5\u4fbf\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u6587\u4ef6\u7cfb\u7edf\u8d85\u7ea7\u5757\u3002</p> <p>\u8d85\u7ea7\u5757\u64cd\u4f5c\u7531<code>struct super_operations</code>\u7ed3\u6784\u4f53\u8868\u793a\uff0c\u8be5\u7ed3\u6784\u4f53\u4e2d\u7684\u6bcf\u4e00\u9879\u90fd\u662f\u4e00\u4e2a\u6307\u5411\u8d85\u7ea7\u5757\u64cd\u4f5c\u51fd\u6570\u7684\u6307\u9488\u3002</p>"},{"location":"linux/kernel/vfs/#_3","title":"\u7d22\u5f15\u8282\u70b9\u5bf9\u8c61","text":"inode\u7ed3\u6784\u4f53<pre><code>struct inode {\n    umode_t         i_mode;                 /*inode\u7684\u6743\u9650*/\n    unsigned short      i_opflags;          /*\u64cd\u4f5c\u6807\u5fd7*/\n    kuid_t          i_uid;                  /*inode\u62e5\u6709\u8005ID*/\n    kgid_t          i_gid;                  /*inode\u6240\u5c5e\u7fa4\u7ec4ID*/\n    unsigned int        i_flags;            /*inode\u6807\u5fd7\u4f4d*/\n    dev_t i_rdev;                           /*\u8bb0\u5f55\u8bbe\u5907\u53f7*/\n    loff_t i_size;                          /*inode\u7684\u6587\u4ef6\u5927\u5c0f*/\n\n    struct timespec64   i_atime;            /*\u6700\u8fd1\u4e00\u6b21\u5b58\u53d6\u65f6\u95f4*/\n    struct timespec64   i_mtime;            /*\u6700\u8fd1\u4e00\u6b21\u4fee\u6539\u65f6\u95f4*\n    struct timespec64   i_ctime;            /*\u521b\u5efa\u65f6\u95f4*/\n\n    union {\n        struct pipe_inode_info  *i_pipe;    /*\u6307\u5411\u7ba1\u9053\u6587\u4ef6*/\n        struct cdev     *i_cdev;            *\u6307\u5411\u5b57\u7b26\u8bbe\u5907*/\n        char            *i_link;\n        unsigned        i_dir_seq;\n    };\n\n    ...\n} \n</code></pre> <p>\u7d22\u5f15\u8282\u70b9\u5bf9\u8c61\u4ee3\u8868\u4e00\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u903b\u8f91\u8868\u793a\uff0c\u5305\u542b\u4e86\u5173\u4e8e\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u5143\u6570\u636e\uff0c\u8fd9\u4e9b\u5143\u6570\u636e\u63cf\u8ff0\u4e86\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u5c5e\u6027\uff0c\u5982\u6743\u9650\u3001\u6240\u6709\u8005\u3001\u6587\u4ef6\u5927\u5c0f\u3001\u6700\u540e\u8bbf\u95ee\u548c\u4fee\u6539\u65f6\u95f4\u7b49\u3002\u7d22\u5f15\u8282\u70b9\u5bf9\u8c61\u7531<code>struct inode</code>\u7ed3\u6784\u4f53\u6765\u8868\u793a\u3002\u6bcf\u4e2a\u6587\u4ef6\u7cfb\u7edf\u90fd\u6709\u4e00\u4e2a\u7d22\u5f15\u8282\u70b9\u8868\uff0c\u8be5\u8868\u5305\u542b\u4e86\u6240\u6709\u7d22\u5f15\u8282\u70b9\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u5f53\u7528\u6237\u7a7a\u95f4\u7a0b\u5e8f\u901a\u8fc7\u6807\u51c6\u7684\u6587\u4ef6\u64cd\u4f5c\u7cfb\u7edf\u8c03\u7528\uff08\u5982 <code>open()</code>\u3001<code>read()</code>\u3001<code>write()</code>\u7b49\uff09\u4e0e\u6587\u4ef6\u7cfb\u7edf\u4ea4\u4e92\u65f6\uff0c\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u5728\u4e0e\u7d22\u5f15\u8282\u70b9\u5bf9\u8c61\u8fdb\u884c\u4ea4\u4e92\u3002</p> <p>\u4e0e\u8d85\u7ea7\u5757\u7c7b\u4f3c\uff0c\u7d22\u5f15\u8282\u70b9\u64cd\u4f5c\u7531<code>struct inode_operations</code>\u7ed3\u6784\u4f53\u8868\u793a\u3002</p>"},{"location":"linux/kernel/vfs/#_4","title":"\u76ee\u5f55\u9879\u5bf9\u8c61","text":"<p>\u5728VFS\u4e2d\uff0c\u76ee\u5f55\u88ab\u5f53\u4f5c\u6587\u4ef6\u6765\u5904\u7406\uff0c\u8fd9\u5141\u8bb8\u7528\u6237\u7a7a\u95f4\u7a0b\u5e8f\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5bf9\u6587\u4ef6\u548c\u76ee\u5f55\u8fdb\u884c\u64cd\u4f5c\u3002\u56e0\u6b64\uff0c\u5728\u8def\u5f84/bin/vi\u4e2d\uff0cbin\u548cvi\u90fd\u88ab\u89c6\u4e3a\u6587\u4ef6\u3002\u8fd9\u91cc\u7684bin\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u76ee\u5f55\u6587\u4ef6\uff0c\u5b83\u5305\u542b\u4e86\u6307\u5411\u7cfb\u7edf\u4e2d\u53ef\u6267\u884c\u6587\u4ef6\u7684\u94fe\u63a5\uff0c\u800cvi\u662f\u4e00\u4e2a\u666e\u901a\u6587\u4ef6\uff0c\u5305\u542b\u4e86\u6587\u672c\u7f16\u8f91\u5668\u7684\u6e90\u4ee3\u7801\u3002</p> <p>\u5728VFS\u4e2d\uff0c\u8def\u5f84\u4e2d\u7684\u6bcf\u4e2a\u7ec4\u6210\u90e8\u5206\uff08\u65e0\u8bba\u662f\u666e\u901a\u6587\u4ef6\u8fd8\u662f\u76ee\u5f55\uff09\u90fd\u662f\u7531\u4e00\u4e2a\u7d22\u5f15\u8282\u70b9\u5bf9\u8c61\u8868\u793a\u7684\u3002</p> <p>\u4e3a\u4e86\u7b80\u5316\u8def\u5f84\u540d\u67e5\u627e\u7b49\u76ee\u5f55\u76f8\u5173\u7684\u64cd\u4f5c\uff0cVFS\u5f15\u5165\u4e86\u76ee\u5f55\u9879\u7684\u6982\u5ff5\u3002\u76ee\u5f55\u9879\u5bf9\u8c61\u662f\u8def\u5f84\u4e2d\u7684\u4e00\u4e2a\u7279\u5b9a\u90e8\u5206\uff0c\u5b83\u5305\u542b\u4e86\u5bf9\u7d22\u5f15\u8282\u70b9\u5bf9\u8c61\u7684\u5f15\u7528\u4ee5\u53ca\u6587\u4ef6\u540d\u548c\u5176\u4ed6\u76f8\u5173\u4fe1\u606f\u3002\u8fd9\u6837\uff0cVFS\u5728\u8fdb\u884c\u8def\u5f84\u540d\u67e5\u627e\u65f6\uff0c\u5c31\u4e0d\u5fc5\u5bf9\u6574\u4e2a\u8def\u5f84\u8fdb\u884c\u9010\u5b57\u5b57\u7b26\u4e32\u6bd4\u8f83\uff0c\u800c\u662f\u53ef\u4ee5\u57fa\u4e8e\u76ee\u5f55\u9879\u5bf9\u8c61\u5feb\u901f\u5b9a\u4f4d\u5230\u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55\u3002</p> <p>\u76ee\u5f55\u9879\u5bf9\u8c61\u8fd8\u5305\u62ec\u4e86\u6302\u8f7d\u70b9\uff0c\u8fd9\u662f\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u65f6\u7684\u6839\u76ee\u5f55\u3002\u4f8b\u5982\uff0c\u5728\u8def\u5f84/mnt/cdrom/foo \u4e2d\uff0c/\u3001mnt\u3001cdrom \u548cfoo\u90fd\u662f\u76ee\u5f55\u9879\u5bf9\u8c61\u3002VFS\u5728\u6267\u884c\u76ee\u5f55\u64cd\u4f5c\u65f6\u4f1a\u73b0\u573a\u521b\u5efa\u76ee\u5f55\u9879\u5bf9\u8c61\u3002</p> <p>\u76ee\u5f55\u9879\u5bf9\u8c61\u7531<code>struct dentry</code>\u7ed3\u6784\u4f53\u8868\u793a\u3002</p> <p>\u7531\u4e8e\u6587\u4ef6\u7684\u8bbf\u95ee\u5448\u73b0\u7a7a\u95f4\u548c\u65f6\u95f4\u7684\u5c40\u90e8\u6027\uff0c\u4e3a\u4e86\u63d0\u9ad8\u7a0b\u5e8f\u8bbf\u95ee\u6587\u4ef6\u7684\u6027\u80fd\uff0cVFS\u5bf9\u4e8e\u76ee\u5f55\u9879\u548c\u7d22\u5f15\u8282\u70b9\u8fdb\u884c\u4e86\u7f13\u5b58\uff0c\u4ee5\u51cf\u5c11\u5bf9\u4e8e\u78c1\u76d8\u7684\u8bbf\u95ee\u64cd\u4f5c\u3002\u76ee\u5f55\u9879\u7f13\u5b58\u7684\u5de5\u4f5c\u539f\u7406\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u7f13\u5b58\u6570\u636e\uff1a\u5f53\u5185\u6838\u9700\u8981\u8bbf\u95ee\u4e00\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u65f6\uff0c\u5b83\u4f1a\u9996\u5148\u68c0\u67e5\u76ee\u5f55\u9879\u7f13\u5b58\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u8be5\u76ee\u5f55\u9879\u7684\u6570\u636e\u3002\u5982\u679c\u6570\u636e\u5728\u7f13\u5b58\u4e2d\uff0c\u5185\u6838\u5c06\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u4e2d\u7684\u6570\u636e\uff0c\u800c\u4e0d\u662f\u4ece\u78c1\u76d8\u8bfb\u53d6\u3002</p> </li> <li> <p>\u7f13\u5b58\u66f4\u65b0\uff1a\u5f53\u5185\u6838\u4fee\u6539\u4e86\u76ee\u5f55\u9879\u7684\u6570\u636e\uff08\u4f8b\u5982\uff0c\u521b\u5efa\u3001\u5220\u9664\u6216\u91cd\u547d\u540d\u6587\u4ef6\u6216\u76ee\u5f55\uff09\u65f6\uff0c\u5b83\u4f1a\u5c06\u4fee\u6539\u540e\u7684\u6570\u636e\u5199\u5165\u76ee\u5f55\u9879\u7f13\u5b58\u3002\u8fd9\u6837\uff0c\u4e0b\u4e00\u6b21\u8bbf\u95ee\u76f8\u540c\u7684\u6570\u636e\u65f6\uff0c\u5185\u6838\u53ef\u4ee5\u76f4\u63a5\u4ece\u7f13\u5b58\u4e2d\u83b7\u53d6\uff0c\u800c\u4e0d\u662f\u518d\u6b21\u8bbf\u95ee\u78c1\u76d8\u3002</p> </li> <li> <p>\u7f13\u5b58\u6e05\u7406\uff1a\u4e3a\u4e86\u4fdd\u6301\u7f13\u5b58\u7684\u6570\u636e\u662f\u6700\u65b0\u7684\uff0c\u5185\u6838\u4f1a\u5b9a\u671f\u6216\u6839\u636e\u9700\u8981\u6e05\u7406\u7f13\u5b58\uff0c\u79fb\u9664\u4e0d\u518d\u5f15\u7528\u7684\u76ee\u5f55\u9879\u6570\u636e\u3002</p> </li> <li> <p>\u7f13\u5b58\u4e00\u81f4\u6027\uff1a\u5728\u591a\u6838\u7cfb\u7edf\u4e2d\uff0c\u4e3a\u4e86\u4fdd\u6301\u7f13\u5b58\u7684\u4e00\u81f4\u6027\uff0c\u5185\u6838\u4f1a\u4f7f\u7528\u5404\u79cd\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff08\u5982MESI\u534f\u8bae\uff09\u6765\u540c\u6b65\u7f13\u5b58\u6570\u636e\u3002</p> </li> </ol> <p>\u76ee\u5f55\u9879\u64cd\u4f5c\u7531<code>struct dentry_operations</code>\u7ed3\u6784\u4f53\u8868\u793a\u3002</p>"},{"location":"linux/kernel/vfs/#_5","title":"\u6587\u4ef6\u5bf9\u8c61","text":"<p><code>struct file</code>\u7ed3\u6784\u4f53\u8868\u793a\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\uff0c\u5b83\u5305\u542b\u4e86\u4e0e\u6587\u4ef6\u76f8\u5173\u7684\u5404\u79cd\u4fe1\u606f\uff0c\u5982\u6587\u4ef6\u63cf\u8ff0\u7b26\u3001\u6587\u4ef6\u72b6\u6001\u3001\u6587\u4ef6\u504f\u79fb\u91cf\u3001\u6587\u4ef6\u64cd\u4f5c\u8868\u7b49\u3002\u5728\u6587\u4ef6\u7684\u6240\u6709\u5b9e\u4f8b\u90fd\u5173\u95ed\u540e\uff0c\u5185\u6838\u91ca\u653e\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u3002</p> <p>\u9a71\u52a8\u7a0b\u5e8f\u91cd\u70b9\u5173\u6ce8\u6587\u4ef6\u8bfb/\u5199\u6a21\u5f0ff_mode\u3001\u6807\u5fd7f_flags\uff0c\u79c1\u6709\u6570\u636e\u6307\u9488private_data\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u9a71\u52a8\u7a0b\u5e8f\u81ea\u5b9a\u4e49\u63cf\u8ff0\u8bbe\u5907\u7684\u7ed3\u6784\u4f53\u3002</p> <p>Note</p> <p>\u4e0d\u540c\u8fdb\u7a0b\u53ef\u4ee5\u64cd\u4f5c\u540c\u4e00\u6587\u4ef6\uff0c\u5728\u7ed3\u6784\u4f53\u4e2d\u7528f_count\u4f5c\u4e3a\u5f15\u7528\u8ba1\u6570\u3002</p> <p><code>struct files_operations</code>\u5b9a\u4e49\u4e86\u4e0e\u6587\u4ef6\u6709\u5173\u7684\u64cd\u4f5c\u51fd\u6570\u3002</p> <p>\u603b\u7684\u6765\u8bf4\uff0c\u5185\u6838\u4e3a\u6bcf\u4e2a\u6587\u4ef6\u90fd\u5206\u914d\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\u2014\u2014\u7d22\u5f15\u8282\u70b9\u548c\u76ee\u5f55\u9879\uff0c\u5206\u522b\u7528\u6765\u8bb0\u5f55\u6587\u4ef6\u7684\u5143\u6570\u636e\u548c\u76ee\u5f55\u7ed3\u6784\u3002\u7d22\u5f15\u8282\u70b9\u662f\u6587\u4ef6\u7684\u552f\u4e00\u6807\u5fd7\uff0c\u591a\u4e2a\u76ee\u5f55\u9879\u53ef\u4ee5\u6307\u5411\u540c\u4e00\u4e2a\u7d22\u5f15\u8282\u70b9\u3002\u6bd4\u5982\u901a\u8fc7\u786c\u94fe\u63a5\u4e3a\u6587\u4ef6\u521b\u5efa\u522b\u540d\uff0c\u867d\u7136\u76ee\u5f55\u4f4d\u7f6e\u4e0d\u540c\uff0c\u4f46\u662f\u94fe\u63a5\u7684\u662f\u540c\u4e00\u4e2a\u6587\u4ef6\uff0c\u56e0\u6b64\u7d22\u5f15\u8282\u70b9\u4e00\u81f4\u3002</p>"},{"location":"linux/kernel/vfs/#_6","title":"\u8fdb\u7a0b\u4e2d\u7684\u6587\u4ef6\u6570\u636e\u7ed3\u6784","text":"<p>\u5728\u8fdb\u7a0b\u7ba1\u7406\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u63d0\u5230\u4e86\u5728\u8fdb\u7a0b\u63cf\u8ff0\u7b26<code>tast_struct</code>\u4e2d\u6709\u4e24\u4e2a\u4e0e\u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u7684\u6210\u5458\u53d8\u91cf\uff1a</p> <pre><code>struct fs_struct *fs;\nstruct files_struct *files;\n</code></pre> <p><code>fs_struct</code>\u5305\u542b\u6587\u4ef6\u7cfb\u7edf\u548c\u8fdb\u7a0b\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u5b9a\u4e49\u5728\u6587\u4ef6&lt;linux/fs_struct.h&gt;\u4e2d\uff1a</p> <pre><code>struct fs_struct {\n    int users;\n    int umask;\n    int in_exec;\n    struct path root, pwd;\n};\n</code></pre> <p>user\uff1a\u5f53\u524d\u6253\u5f00\u8be5\u6587\u4ef6\u7684\u7528\u6237\u6570\u91cf\u3002</p> <p>umask\uff1a\u7528\u6237\u6a21\u5f0f\u63a9\u7801\uff0c\u51b3\u5b9a\u4e86\u7cfb\u7edf\u5728\u521b\u5efa\u6587\u4ef6\u548c\u76ee\u5f55\u65f6\u7684\u9ed8\u8ba4\u6743\u9650\u63a9\u7801\u3002</p> <p>in_exec\uff1a\u8868\u793a\u6587\u4ef6\u7cfb\u7edf\u662f\u5426\u5904\u4e8e\u6267\u884c\u6a21\u5f0f\u3002</p> <p>root\uff0cpwd\uff1a\u6839\u76ee\u5f55\u8def\u5f84\u548c\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u8def\u5f84\u3002</p> <p><code>files_struct</code>\u6807\u8bc6\u8fdb\u7a0b\u6253\u5f00\u7684\u6587\u4ef6\u4fe1\u606f\uff0c\u5b9a\u4e49\u5728\u6587\u4ef6&lt;linux/fdtable.h&gt;\u4e2d\uff1a</p> <pre><code>struct files_struct {\n    atomic_t count;\n\n    struct fdtable __rcu *fdt;\n    struct fdtable fdtab;\n\n    unsigned int next_fd;\n    unsigned long close_on_exec_init[1];\n    unsigned long open_fds_init[1];\n    unsigned long full_fds_bits_init[1];\n    struct file __rcu * fd_array[NR_OPEN_DEFAULT];\n};\n</code></pre> <p>count\uff1a\u8ddf\u8e2a\u5f53\u524d\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\u3002</p> <p>fd\uff1a\u7f13\u5b58\u4e0b\u4e00\u4e2a\u53ef\u7528\u7684fd\u3002</p> <p>fd_array\uff1a\u6307\u5411\u4e00\u4e2a<code>struct file</code>\u7ed3\u6784\u4f53\u7684\u6570\u7ec4\uff0c\u7528\u4e8e\u5b58\u50a8\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u572864\u4f4d\u4f53\u7cfb\u4e2d\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u9ed8\u8ba4\u53ef\u4ee5\u6253\u5f0064\u4e2a\u6587\u4ef6\u5bf9\u8c61\u3002</p> <p>\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u7ed3\u6784\u4f53\u662f<code>namespace</code>\uff0c\u5b9a\u4e49\u5728\u6587\u4ef6&lt;linux/mount.h&gt;\u4e2d\u3002\u5b83\u53ef\u4ee5\u4f7f\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u5728\u7cfb\u7edf\u4e2d\u90fd\u770b\u5230\u552f\u4e00\u7684\u6587\u4ef6\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784\uff0c\u662fLinux\u4e09\u5927\u9694\u79bb\u6280\u672f\u4e4b\u4e00\u3002\u5177\u4f53\u7684\u7ec6\u8282\u5c31\u4e0d\u5728\u8fd9\u91cc\u63a2\u8ba8\u4e86\uff0c\u5728\u5bb9\u5668\u6280\u672f\u4e00\u7ae0\u4f1a\u518d\u505a\u8be6\u7ec6\u4ecb\u7ecd\u3002</p> <p>\u4e0a\u8ff0\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u90fd\u662f\u901a\u8fc7\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u94fe\u8868\u8fde\u63a5\u8d77\u6765\u7684\u3002\u5bf9\u4e8e\u591a\u6570\u8fdb\u7a0b\uff0c\u5b83\u4eec\u7684\u63cf\u8ff0\u7b26\u90fd\u6307\u5411\u552f\u4e00\u7684<code>files_struct</code>\u548c<code>fs_struct</code>\u7ed3\u6784\u4f53\u3002\u4f46\u662f\u5bf9\u4e8e\u90a3\u4e9b\u5728\u8c03\u7528<code>clone()</code>\u51fd\u6570\u65f6\u6307\u5b9a\u4e86\u514b\u9686\u6807\u5fd7CLONE_FILES\u6216\u8005CLONE_FS\u7684\u8fdb\u7a0b\uff0c\u4f1a\u5171\u4eab\u8fd9\u4e24\u4e2a\u7ed3\u6784\u4f53\u3002</p> <p><code>namespace</code>\u7ed3\u6784\u4f53\u7684\u4f7f\u7528\u65b9\u6cd5\u6bd4\u8f83\u7279\u6b8a\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u8fdb\u7a0b\u90fd\u662f\u5171\u4eab\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\uff0c\u53ea\u6709\u5f53<code>clone()</code>\u51fd\u6570\u65f6\u6307\u5b9a\u4e86CLONE_NEWS\u6807\u5fd7\uff0c\u624d\u4f1a\u7ed9\u8fdb\u7a0b\u4e00\u4e2a\u552f\u4e00\u7684\u547d\u540d\u7a7a\u95f4\u7ed3\u6784\u4f53\u7684\u62f7\u8d1d\u3002</p>"},{"location":"linux/kernel/vfs/#proc","title":"proc\u6587\u4ef6\u7cfb\u7edf","text":"<p>proc\u6587\u4ef6\u7cfb\u7edf\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b83\u7684\u4fe1\u606f\u5e76\u4e0d\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\u800c\u662f\u5b9e\u65f6\u751f\u6210\u7684\u3002proc\u6587\u4ef6\u7cfb\u7edf\u63d0\u4f9b\u4e86\u5185\u6838\u5404\u4e2a\u5b50\u7cfb\u7edf\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u8fdb\u7a0b\u4fe1\u606f\u3001\u5185\u5b58\u4fe1\u606f\u3001\u7f51\u7edc\u4fe1\u606f\u7b49\uff0c\u4f7f\u5f97\u7528\u6237\u80fd\u591f\u4ee5\u6587\u4ef6\u7684\u65b9\u5f0f\u8bbf\u95ee\u7cfb\u7edf\u72b6\u6001\u3002</p> <p>\u4e0b\u9762\u5bf9proc\u76ee\u5f55\u4e0b\u51e0\u4e2a\u5e38\u7528\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u548c\u4f7f\u7528\u573a\u666f\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u8bf4\u660e\u3002</p>"},{"location":"linux/kernel/vfs/#procself","title":"/proc/self","text":"<p>\u6bcf\u4e2a\u8fdb\u7a0b\u5728proc\u76ee\u5f55\u4e0b\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u5b50\u76ee\u5f55\uff0c\u901a\u8fc7\u8be5\u8fdb\u7a0b\u7684PID\u6765\u547d\u540d\uff0c\u4e3a\u4e86\u7b80\u5316\u5bf9\u5f53\u524d\u8fdb\u7a0b\u7684\u63cf\u8ff0\uff0cLinux\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u76ee\u5f55\uff1a/proc/self\u3002\u5b83\u6307\u5411\u5f53\u524d\u8fdb\u7a0b\u7684proc\u76ee\u5f55\uff0c\u53ef\u4ee5\u7701\u53bb\u5199PID\u7684\u9ebb\u70e6\u3002</p>"},{"location":"linux/kernel/vfs/#proccpuinfo","title":"/proc/cpuinfo","text":"<p>\u8be5\u6587\u4ef6\u5305\u542b\u4e86\u5f53\u524d\u7cfb\u7edfCPU\u7684\u53c2\u6570\u4fe1\u606f\uff0c\u5305\u62ecCPU\u7684\u6838\u5fc3\u6570\u91cf\u3001\u6bcf\u4e2a\u6838\u5fc3\u7684\u5de5\u4f5c\u9891\u7387\u3001\u7f13\u5b58\u5927\u5c0f\u7b49\u3002</p> <p></p>"},{"location":"linux/kernel/vfs/#procmeminfo","title":"/proc/meminfo","text":"<p>\u3001 \u8be5\u6587\u4ef6\u663e\u793a\u7684\u662f\u7cfb\u7edf\u4e2d\u5f53\u524d\u5185\u5b58\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u6bd4\u5982\u7269\u7406\u5185\u5b58\u5bb9\u91cf\u3001\u5df2\u4f7f\u7528\u5185\u5b58\u3001\u7a7a\u95f2\u5185\u5b58\u3001\u5171\u4eab\u5185\u5b58\u3001\u4ea4\u6362\u5185\u5b58\u5927\u5c0f\u7b49\u3002\u65e5\u5e38\u5f00\u53d1\u8fc7\u7a0b\u4e2d<code>top</code>\u547d\u4ee4\u67e5\u770b\u7cfb\u7edf\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u65f6\uff0c\u5c31\u662f\u901a\u8fc7\u8bfb\u53d6\u8be5\u6587\u4ef6\u83b7\u53d6\u7684\u3002\u76f8\u6bd4\u4e8e<code>top</code>\u547d\u4ee4\uff0c\u8be5\u6587\u4ef6\u63d0\u4f9b\u4e86\u66f4\u4e3a\u8be6\u7ec6\u7684\u5185\u5b58\u72b6\u6001\u4fe1\u606f\uff0c\u6bd4\u5982slab\u5185\u5b58\u5360\u7528\u91cf\u3001\u53ef\u56de\u6536\u5185\u5b58\u91cf\u3001\u5185\u5b58\u6808\u7a7a\u95f4\u5927\u5c0f\u3001\u4f7f\u7528<code>malloc()</code>\u5206\u914d\u7684\u5806\u5185\u5b58\u91cf\u3001\u4f7f\u7528<code>mmap()</code>\u6620\u5c04\u7684\u5185\u5b58\u91cf\u7b49\u3002</p> <p></p>"},{"location":"linux/kernel/vfs/#prockallsyms","title":"/proc/kallsyms","text":"<p>\u8be5\u6587\u4ef6\u662f\u4e00\u4e2a\u7b26\u53f7\u8868\uff0c\u5305\u542b\u4e86\u5185\u6838\u6240\u6709\u7684\u5168\u5c40\u53d8\u91cf\u548c\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u7684\u5730\u5740\u3002</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5e2e\u52a9\u5185\u6838\u5f00\u53d1\u8005\u8c03\u8bd5\u5185\u6838\u800c\u52a0\u5165\u7684\u6587\u4ef6\uff0c\u5728Linux\u7cfb\u7edf\u5d29\u6e83\u4ea7\u751f\u7684\u4fe1\u606f\u4e2d\uff0c\u51fd\u6570\u8c03\u7528\u5806\u6808\u4e2d\u663e\u793a\u51fa\u6765\u7684\u51fd\u6570\u540d\uff0c\u5c31\u662f\u5728\u8fd9\u4e2a\u6587\u4ef6\u7684\u5e2e\u52a9\u4e0b\u4ea7\u751f\u7684\u3002</p>"},{"location":"linux/kernel/vfs/#procinterrupts","title":"/proc/interrupts","text":"<p>\u8be5\u6587\u4ef6\u8bb0\u5f55\u4e86\u7cfb\u7edf\u5728\u6bcf\u4e2aCPU\u4e0a\u5904\u7406\u7684\u5404\u7c7b\u4e2d\u65ad\u7684\u7edf\u8ba1\u4fe1\u606f\u3002</p> <p></p>"},{"location":"linux/kernel/vfs/#procloadavg","title":"/proc/loadavg","text":"<p>\u8be5\u6587\u4ef6\u663e\u793a\u7cfb\u7edf\u5728\u8fc7\u53bb\u4e00\u6bb5\u65f6\u95f4\u7684\u5e73\u5747\u8d1f\u8f7d\uff1a</p> <p></p> <p>\u4ece\u5de6\u5230\u53f3\u5206\u522b\u662f\uff1a</p> <ul> <li>\u8fc7\u53bb\u4e00\u5206\u949f\u7684\u7cfb\u7edf\u5e73\u5747\u8d1f\u8f7d</li> <li>\u8fc7\u53bb\u4e94\u5206\u949f\u7684\u7cfb\u7edf\u5e73\u5747\u8d1f\u8f7d</li> <li>\u8fc7\u53bb\u5341\u4e94\u5206\u949f\u7684\u7cfb\u7edf\u5e73\u5747\u8d1f\u8f7d</li> <li>\u91c7\u6837\u65f6\u523b\u8fd0\u884c\u961f\u5217\u7684\u4efb\u52a1\u6570/\u7cfb\u7edf\u4e2d\u6d3b\u8dc3\u7684\u603b\u4efb\u52a1\u6570</li> <li>\u91c7\u6837\u65f6\u523b\u5360\u7528\u6700\u5927\u7684\u7ebf\u7a0bID</li> </ul> <p>\u8f93\u51fa\u7684\u524d\u4e09\u4e2a\u503c\u7ecf\u5e38\u88ab\u7528\u6765\u89c2\u5bdf\u7cfb\u7edf\u8d1f\u8f7d\u7684\u53d1\u5c55\u8d8b\u52bf\uff0c\u5982\u679c\u524d\u9762\u7684\u503c\u6bd4\u540e\u9762\u7684\u503c\u5927\uff0c\u8bf4\u660e\u7cfb\u7edf\u7684\u8d1f\u8f7d\u5448\u73b0\u4e0a\u5347\u8d8b\u52bf\u3002</p>"},{"location":"linux/kernel/vfs/#procpid","title":"/proc/PID/","text":"<p>\u8fd9\u662f\u5305\u542b\u8fdb\u7a0b\u8fd0\u884c\u4fe1\u606f\u7684\u76ee\u5f55\uff0c\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u7ef4\u62a4\u4e00\u4e2a\u4ee5PID\u547d\u540d\u7684\u76ee\u5f55\uff0c\u5728\u8be5\u76ee\u5f55\u4e0b\u4fdd\u5b58\u8be5\u8fdb\u7a0b\u8fd0\u884c\u65f6\u7684\u5404\u79cd\u72b6\u6001\u6570\u636e\uff0c\u6bd4\u5982\u8fd0\u884c\u72b6\u6001\uff08status\uff09\u3001\u865a\u62df\u5185\u5b58\u6620\u5c04\u4fe1\u606f\uff08maps\uff09\u3001\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\uff08fd\uff09\u3001\u521b\u5efa\u7684\u7f51\u7edc\u5957\u63a5\u5b57\u7b49\u3002</p> <p>\u5176\u4e2d\u7528\u7684\u6bd4\u8f83\u591a\u7684\uff0c\u5e94\u8be5\u662f\u865a\u62df\u5185\u5b58\u6620\u5c04\u4fe1\u606f\uff08maps\uff09\uff1a</p> <p></p>"},{"location":"linux/kernel/vfs/#procnet","title":"/proc/net/","text":"<p>\u8be5\u76ee\u5f55\u4e0b\u4fdd\u5b58\u4e86\u7cfb\u7edf\u7f51\u7edc\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u7f51\u7edc\u63a5\u53e3\u3001\u7f51\u7edc\u534f\u8bae\u6808\u3001\u7f51\u7edc\u8fde\u63a5\u3001\u7f51\u7edc\u8def\u7531\u8868\u7b49\u3002\u6700\u5e38\u7528\u7684/proc/net/dev\u4fdd\u5b58\u4e86\u901a\u8fc7\u5404\u7f51\u7edc\u63a5\u53e3\u4f20\u8f93\u7684\u6570\u636e\u7684\u7edf\u8ba1\u91cf\uff0c\u7ecf\u5e38\u7528\u5b83\u6765\u67e5\u770b\u7f51\u7edc\u6d41\u91cf\u548c\u68c0\u67e5\u7f51\u7edc\u4f20\u8f93\u8d28\u91cf\u3002</p>"},{"location":"linux/kernel/vfs/#sys","title":"sys\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u89c1\u8bbe\u5907\u6a21\u578bsysfs\u4e00\u8282\u3002</p>"},{"location":"linux/kernel/vma/","title":"\u865a\u62df\u5185\u5b58\u7ba1\u7406","text":"<p>\u865a\u62df\u5185\u5b58\u7ba1\u7406\u6280\u672f\u5141\u8bb8\u8fdb\u7a0b\u4ee5\u865a\u62df\u5730\u5740\u7684\u65b9\u5f0f\u8bbf\u95ee\u7cfb\u7edf\u4e2d\u7684\u7269\u7406\u5185\u5b58\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u8d1f\u8d23\u5904\u7406\u6620\u5c04\u5173\u7cfb\u3002\u5728 32 \u4f4d\u7cfb\u7edf\u4e2d\uff0c\u4e00\u4e2a\u666e\u901a\u8fdb\u7a0b\u53ef\u4ee5\u8bbf\u95ee 4GB \u7684\u7ebf\u6027\u7a7a\u95f4\uff0c\u6309\u7167\u7ecf\u5178\u7684 3\uff1a1 \u5212\u5206\uff0c\u7528\u6237\u6001\u53ef\u4ee5\u8bbf\u95ee\u524d 3GB\uff0c\u5185\u6838\u6001\u53ef\u4ee5\u8bbf\u95ee\u540e 1GB\u2014\u2014 \u8d77\u59cb\u4e8e OxC00000000\uff0c\u7ec8\u6b62\u4e8e 0xFFFFFFFF\u3002</p>"},{"location":"linux/kernel/vma/#_2","title":"\u5185\u6838\u7ebf\u6027\u7a7a\u95f4\u5e03\u5c40","text":"<p>\u865a\u62df\u5185\u5b58\u7684\u8bbf\u95ee\u4e5f\u662f\u6709\u9650\u5236\u7684\u3002\u5185\u6838\u4f1a\u5728\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u4e00\u90e8\u5206\u7684\u5185\u5b58\u76f4\u63a5\u6620\u5c04\u5230\u7ebf\u6027\u7a7a\u95f4\uff0c\u8fd9\u90e8\u5206\u5185\u5b58\u5c31\u53eb low memory\uff0c\u5269\u4e0b\u7684\u90e8\u5206\u53eb high memory\u3002\u6240\u8c13\u76f4\u63a5\u6620\u5c04\uff0c\u6307\u7684\u662f\u6620\u5c04\u540e\u7684\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u6709\u76f4\u63a5\u7684\u5bf9\u5e94\u5173\u7cfb\uff1ava = pa + PAGE_OFFSET\u3002</p> <p>\u9664\u4e86\u76f4\u63a5\u6620\u5c04\u533a\uff0c\u5185\u6838\u8fd8\u5212\u5206\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u533a\uff1a</p> <ul> <li>\u52a8\u6001\u6620\u5c04\u533a</li> <li>\u6c38\u4e45\u6620\u5c04\u533a</li> <li>\u56fa\u5b9a\u6620\u5c04\u533a</li> </ul>"},{"location":"linux/kernel/vma/#_3","title":"\u5730\u5740\u7a7a\u95f4\u7684\u6982\u5ff5","text":"<p>\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u7531\u53ef\u5bfb\u5740\u7684\u865a\u62df\u5185\u5b58\u7ec4\u6210\uff0c\u572832\u4f4d\u4f53\u7cfb\u4e2d\uff08\u53ea\u8ba8\u8bba32\u4f4d\u67b6\u6784\uff0c64\u4f4d\u7c7b\u4f3c\uff09\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u53ef\u5bfb\u5740 4GB \u7684\u865a\u62df\u5185\u5b58\uff0c\u5176\u4e2d 1GB \u5206\u914d\u7ed9\u5185\u6838\u7a7a\u95f4\uff0c\u5269\u4e0b 3GB \u5206\u914d\u7ed9\u7528\u6237\u7a7a\u95f4\u3002\u4e00\u4e2a\u8fdb\u7a0b\u53ea\u80fd\u8bbf\u95ee\u6709\u6548\u5185\u5b58\u533a\u57df\u5185\u7684\u5185\u5b58\u5730\u5740\uff0c\u90e8\u5206\u5730\u5740\u662f\u975e\u6cd5\u7684\u3002\u4e00\u65e6\u8bbf\u95ee\uff0c\u5c31\u4f1a\u7acb\u523b\u89e6\u53d1\u6bb5\u9519\u8bef(segmentation fault)\uff0c\u7531\u5185\u6838\u7ec8\u6b62\u8be5\u8fdb\u7a0b\u3002\u6bcf\u4e2a\u5185\u5b58\u533a\u57df\u8fd8\u6709\u76f8\u5173\u7684\u6743\u9650\uff0c\u6bd4\u5982\u53ef\u8bfb\u53ef\u5199\u53ef\u6267\u884c\u7b49\u3002</p> <p>\u8fdb\u7a0b\u7684\u865a\u62df\u5185\u5b58\u7a7a\u95f4\u5206\u5e03\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u4ece\u4e0a\u56fe\u4e2d\u6211\u4eec\u770b\u5230\uff0c0x0000 0000 \u5230 0x0804 8000 \u8fd9\u6bb5\u7a7a\u95f4\u662f\u4e0d\u53ef\u8bbf\u95ee\u7684\u4fdd\u7559\u533a\uff0c\u5728\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u6570\u503c\u8f83\u5c0f\u7684\u5730\u5740\u662f\u4e0d\u5141\u8bb8\u8bbf\u95ee\u7684\u3002\u6bd4\u5982 NULL \u6307\u9488\u5c31\u4f1a\u6307\u5411\u8fd9\u7247\u533a\u57df\u3002</p> <p>0x0804 8000 \u81f3 0xC000 0000 \u662f\u7528\u6237\u6001\u7a7a\u95f4\u5730\u5740\uff0c\u5728\u5f80\u4e0a\u5c31\u662f\u6240\u8c13\u7684\u9ad8\u7aef\u5730\u5740\u2014\u2014\u4f9b\u5185\u6838\u4f7f\u7528\u3002\u5185\u6838\u6001\u4e0e\u7528\u6237\u6001\u7684\u5206\u754c\u7ebf\u7531\u6210\u5458\u53d8\u91cf<code>task_size</code>\u5b9a\u4e49\u3002</p> <p>\u4fdd\u7559\u533a\u4e0a\u65b9\u662f\u4ee3\u7801\u6bb5\u548c\u6570\u636e\u6bb5\uff0c\u5b83\u4eec\u662f\u4ece\u53ef\u6267\u884c\u6587\u4ef6\u76f4\u63a5\u52a0\u8f7d\u8fdb\u6765\u7684\u3002\u7f16\u8bd1\u540e\u7684\u4ee3\u7801\u653e\u5728\u4ee3\u7801\u6bb5\uff0c\u6570\u636e\u6bb5\u7528\u6765\u5b58\u653e\u5df2\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u3002</p> <p>BSS \u6bb5\u7528\u6765\u5b58\u653e\u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u4ee50\u586b\u5145\u3002</p> <p>BSS \u6bb5\u4e0a\u65b9\u662f\u5806\u7a7a\u95f4\uff0c\u5730\u5740\u7684\u589e\u957f\u65b9\u5411\u662f\u4ece\u4f4e\u5230\u9ad8\u3002\u5185\u6838\u4f7f\u7528<code>start_brk</code>\u6807\u8bc6\u5806\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c<code>brk</code>\u6807\u8bc6\u5806\u5f53\u524d\u7684\u7ed3\u675f\u4f4d\u7f6e\u3002\u5f53\u7528\u6237\u4f7f\u7528<code>malloc()</code>\u51fd\u6570\u7533\u8bf7\u4e00\u5757\u5f88\u5c0f\u7684\u5185\u5b58\uff08128K\u4ee5\u5185\uff09\u65f6\uff0c\u5c31\u4f1a\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58\u3002</p> <p>\u5806\u7a7a\u95f4\u4e0a\u65b9\u662f\u5f85\u5206\u914d\u533a\u57df\uff0c\u7528\u6765\u6269\u5c55\u5806\u7a7a\u95f4\u7684\u4f7f\u7528\u3002\u63a5\u4e0b\u6765\u662f\u5185\u5b58\u6620\u5c04\u533a\u57df\u3002\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u901a\u8fc7<code>mmap()</code>\u7cfb\u7edf\u8c03\u7528\u6620\u5c04\u81f3\u6b64\u533a\u57df\u3002\u5185\u5b58\u6620\u5c04\u533a\u53ef\u4ee5\u7528\u6765\u52a0\u8f7d\u52a8\u6001\u5e93\uff0c\u6bd4\u5982ld-linux.so\u5c31\u88ab\u52a0\u8f7d\u4e8e\u6b64\u3002</p> <p>\u6700\u540e\u4e00\u5757\u533a\u57df\u662f\u6808\u7a7a\u95f4\uff0c\u5728\u8fd9\u91cc\u4fdd\u5b58\u51fd\u6570\u8fd0\u884c\u8fc7\u7a0b\u9700\u8981\u7684\u5c40\u90e8\u53d8\u91cf\u4ee5\u53ca\u51fd\u6570\u53c2\u6570\u7b49\u4fe1\u606f\u3002\u6808\u7a7a\u95f4\u7684\u5730\u5740\u662f\u4ece\u9ad8\u5230\u4f4e\u589e\u957f\u7684\u3002\u5185\u6838\u4f7f\u7528<code>start_stack</code>\u6807\u8bc6\u6808\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002</p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528<code>cat /proc/[pid]/maps</code>\u67e5\u770b\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u5e03\u5c40\u3002</p>"},{"location":"linux/kernel/vma/#_4","title":"\u5185\u5b58\u63cf\u8ff0\u7b26","text":"<p><code>mm_struct</code>\u7528\u6765\u8868\u793a\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u7684\u4fe1\u606f\uff0c\u5b9a\u4e49\u5728\u6587\u4ef6&lt;linux/mm_types.h&gt;\u4e2d\uff1a</p> <pre><code>struct mm_struct {\n    atomic_t mm_users;\n    atomic_t mm_count;\n    struct vm_area_struct *mmap;\n    struct rb_root mm_rb;\n    struct list_head mmlist;\n\n    unsigned long start_code, end_code;    //\u4ee3\u7801\u6bb5\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u5730\u5740\n    unsigned long start_data, end_data;    //\u6570\u636e\u6bb5\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u5730\u5740\n    unsigned long start_brk, brk,          //\u5806\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u5730\u5740\n    unsigned long start_stack;             //\u6808\u7684\u8d77\u59cb\u5730\u5740\n    unsigned long arg_start, arg_end,      //\u547d\u4ee4\u884c\u53c2\u6570\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u5730\u5740\n    unsigned long env_start, env_end;      //\u73af\u5883\u53d8\u91cf\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u5730\u5740\n    unsigned long mmap_base;               //\u5185\u5b58\u6620\u5c04\u533a\u7684\u8d77\u59cb\u5730\u5740\n    unsigned long total_vm;                //\u603b\u5171\u6620\u5c04\u7684\u9875\u6570\u76ee\n    unsigned long locked_vm;               //\u88ab\u9501\u5b9a\u4e0d\u80fd\u6362\u51fa\u7684\u9875\u6570\u76ee\n    unsigned long pinned_vm;               //\u65e2\u4e0d\u80fd\u6362\u51fa\uff0c\u4e5f\u4e0d\u80fd\u79fb\u52a8\u7684\u9875\u6570\u76ee\n    unsigned long data_vm;                 //\u6570\u636e\u6bb5\u4e2d\u6620\u5c04\u7684\u9875\u6570\u76ee\n    unsigned long exec_vm;                 //\u4ee3\u7801\u6bb5\u4e2d\u53ef\u6267\u884c\u6587\u4ef6\u7684\u9875\u6570\u76ee\n    unsigned long stack_vm;                //\u6808\u4e2d\u6620\u5c04\u7684\u9875\u6570\u76ee\n};\n</code></pre> <p>mm_users\uff1a\u6b63\u5728\u4f7f\u7528\u8be5\u5730\u5740\u7684\u8fdb\u7a0b\u6570\u3002</p> <p>mm_count\uff1amm_struct\u7ed3\u6784\u4f53\u7684\u4e3b\u5f15\u7528\u8ba1\u6570\uff0c\u8be5\u503c\u4e3a0\u65f6\uff0c\u91ca\u653e\u7ed3\u6784\u4f53\u3002</p> <p>mmap\uff1a\u6307\u5411\u4e00\u4e2a<code>vm_area_struct</code>\u7ed3\u6784\u4f53\u7684\u94fe\u8868\u5934\u3002</p> <p>mm_rb\uff1a\u6307\u5411\u4e00\u4e2a<code>vm_area_struct</code>\u7ed3\u6784\u4f53\u7684\u7ea2\u9ed1\u6811\u6839\u8282\u70b9\u3002</p> <p>mmlist\uff1a\u6307\u5411\u4e00\u4e2a<code>mm_struct</code>\u7ed3\u6784\u4f53\u7684\u94fe\u8868\u5934\u3002</p> <p>\u5728\u8fdb\u7a0b\u7ba1\u7406\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86 mm \u5b57\u6bb5\uff0c\u7528\u6765\u5b58\u653e\u8be5\u8fdb\u7a0b\u4f7f\u7528\u7684\u5185\u5b58\u63cf\u8ff0\u7b26\u3002\u5982\u679c\u7236\u5b50\u8fdb\u7a0b\u5171\u4eab\u5730\u5740\u7a7a\u95f4\uff0c\u5219\u5728\u8c03\u7528<code>clone()</code>\u51fd\u6570\u65f6\uff0c\u4f1a\u8bbe\u7f6eCLONE_VM\u6807\u5fd7\uff0c\u8fd9\u6837\u7684\u8fdb\u7a0b\u5c31\u662f\u7ebf\u7a0b\u3002\u4e00\u65e6\u6307\u5b9a\u4e86 CLONE_VM\uff0c\u7ebf\u7a0b\u5c31\u4e0d\u9700\u8981\u53e6\u5916\u5206\u914d\u5730\u5740\u7a7a\u95f4\u4e86\uff0c\u800c\u662f\u5c06 mm \u5b57\u6bb5\u76f4\u63a5\u6307\u5411\u7236\u8fdb\u7a0b\u7684\u5185\u5b58\u63cf\u8ff0\u7b26\u5373\u53ef\u3002</p> <p>\u5185\u6838\u7ebf\u7a0b\u6ca1\u6709\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\uff0c\u4e5f\u6ca1\u6709\u76f8\u5173\u7684\u5185\u5b58\u63cf\u8ff0\u7b26\uff0c\u5176 mm \u5b57\u6bb5\u4e3a NULL\u3002\u5f53\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\u88ab\u8c03\u5ea6\u65f6\uff0c\u5b83\u4f1a\u76f4\u63a5\u4f7f\u7528\u524d\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\u63cf\u8ff0\u7b26\u3002</p>"},{"location":"linux/kernel/vma/#_5","title":"\u865a\u62df\u5185\u5b58\u533a\u57df","text":"<p>\u865a\u62df\u5185\u5b58\u533a\u57df\uff08Virtual Memory Area\uff09\u5728\u5185\u6838\u4e2d\u7528<code>vm_area_struct</code>\u7ed3\u6784\u4f53\u63cf\u8ff0\u3002\u6bcf\u4e2a<code>vm_area_struct</code>\u7ed3\u6784\u90fd\u5bf9\u5e94\u4e8e\u6307\u5b9a\u5730\u5740\u7a7a\u95f4\u4e0a\u67d0\u5757[vm_start, vm_end)\u7684\u865a\u62df\u5730\u5740\u533a\u57df\u3002<code>vm_start</code>\u6307\u5411\u4e86\u8fd9\u5757\u865a\u62df\u5185\u5b58\u533a\u57df\u7684\u8d77\u59cb\u5730\u5740\uff0c<code>vm_end</code>\u5219\u6307\u5411\u4e86\u8fd9\u5757\u865a\u62df\u5185\u5b58\u533a\u57df\u7684\u7ed3\u675f\u5730\u5740\u3002</p> <p>\u5185\u6838\u5c06\u6bcf\u5757\u5185\u5b58\u533a\u57df\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u5bf9\u8c61\u7ba1\u7406\uff0c\u6bcf\u4e2a\u533a\u57df\u90fd\u6709\u4e00\u81f4\u7684\u5c5e\u6027\u548c\u64cd\u4f5c\u3002\u8fdb\u7a0b\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4f1a\u4e0d\u65ad\u5206\u914d\u548c\u91ca\u653e<code>vm_are_struct</code>\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u5408\u9002\u7684\u6570\u636e\u7ed3\u6784\u5bf9\u5176\u8fdb\u884c\u7ba1\u7406\u3002\u5728 Linux 6.1\u7248\u672c\u4e4b\u524d\uff0c\u4e00\u76f4\u4f7f\u7528\u7684\u662f\u7ea2\u9ed1\u6811\u548c\u53cc\u5411\u94fe\u8868\u6765\u7ba1\u7406<code>vm_area_struct</code>\u5bf9\u8c61\uff1a</p> linux-5.15.10:include/linux/mm_types.h<pre><code>struct vm_area_struct {\n    ......\n    //\u53cc\u5411\u94fe\u8868\n    struct vm_area_struct *mmap;\n    //\u7ea2\u9ed1\u6811\n    struct rb_root mm_rb;\n    struct rw_semaphore mmap_sem;\n};\n</code></pre> <p>\u6574\u4e2a\u573a\u666f\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>\u7ea2\u9ed1\u6811+\u53cc\u5411\u94fe\u8868\u7684\u642d\u914d\u63d0\u4f9b\u4e86\u4e0d\u9519\u7684\u6027\u80fd\uff0c\u4e00\u76f4\u6cbf\u7528\u4e86\u5f88\u957f\u65f6\u95f4\uff0c\u4f46\u4e5f\u5b58\u5728\u7f3a\u9677\u3002\u6700\u660e\u663e\u7684\u662f\u968f\u7740 CPU \u6838\u5fc3\u6570\u7684\u589e\u591a\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u7ebf\u7a0b\u4e5f\u8d8a\u6765\u8d8a\u591a\uff0c\u591a\u7ebf\u7a0b\u4e0b\u9501\u4e89\u62a2\u7684\u95ee\u9898\u5f00\u59cb\u6d6e\u73b0\u51fa\u6765\u3002\u9700\u8981\u52a0\u9501\u7684\u539f\u56e0\u662f\u7ea2\u9ed1\u6811\u7684\u5e73\u8861\u64cd\u4f5c\u5fc5\u987b\u662f\u539f\u5b50\u7684\uff0c\u540c\u65f6\u8fd8\u8981\u5c06\u4fee\u6539\u540c\u6b65\u81f3\u53cc\u5411\u94fe\u8868\u3002\u4e8e\u662f\u5728 Linux 6.1\u7248\u672c\u4e2d\u5f15\u5165\u4e86<code>mapple tree</code>\u6570\u636e\u7ed3\u6784\uff0c\u4f7f\u7528 RCU \u65e0\u9501\u7f16\u7a0b\u5b9e\u73b0\u3002</p>"},{"location":"linux/kernel/vma/#_6","title":"\u5806\u5185\u5b58\u7ba1\u7406","text":"<p>\u5806\u5185\u5b58\u7ba1\u7406\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6700\u4e3a\u590d\u6742\u7684\u90e8\u5206\u4e4b\u4e00\u3002\u7531\u4e8e\u7a0b\u5e8f\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4f1a\u6d89\u53ca\u5927\u91cf\u6570\u636e\u5bf9\u8c61\u7684\u7533\u8bf7\u548c\u91ca\u653e\uff0c\u5982\u679c\u4ec5\u4f7f\u7528\u5185\u6838\u63d0\u4f9b\u7684<code>mmap()</code>\u548c<code>brk()</code>\u51fd\u6570\uff0c\u4f1a\u4ea7\u751f\u5927\u91cf\u7684\u5185\u5b58\u788e\u7247\u3002\u56e0\u6b64\u5728\u5e94\u7528\u5f00\u53d1\u8005\u548c\u5185\u6838\u4e4b\u95f4\u8fd8\u9700\u8981\u4e00\u4e2a\u5185\u5b58\u5206\u914d\u5668\u3002<code>malloc()</code>\u51fd\u6570\u5176\u5b9e\u5c31\u662f glibc \u63d0\u4f9b\u7684\u5185\u5b58\u5206\u914d\u5668\u63a5\u53e3\u3002\u4e1a\u754c\u6709\u8bb8\u591a\u4f18\u79c0\u7684\u5185\u5b58\u5206\u914d\u5668\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd glibc \u5185\u7f6e\u7684 ptmalloc \u5185\u5b58\u5206\u914d\u5668\u7684\u5927\u81f4\u5de5\u4f5c\u539f\u7406\u3002</p>"},{"location":"linux/kernel/vma/#ptmalloc","title":"ptmalloc\u6982\u5ff5","text":"<p>\u5728 ptmalloc \u4e2d\uff0c\u662f\u901a\u8fc7\u5206\u914d\u533a\u3001\u7a7a\u95f2\u94fe\u8868\u3001\u5185\u5b58\u5757\u7b49\u51e0\u4e2a\u6570\u636e\u7ed3\u6784\u6765\u7ba1\u7406\u5185\u5b58\u7684\u3002</p>"},{"location":"linux/kernel/vma/#_7","title":"\u5206\u914d\u533a","text":"<p>\u591a\u7ebf\u7a0b\u5728\u64cd\u4f5c\u5206\u914d\u533a\u7684\u65f6\u5019\u9700\u8981\u52a0\u9501\uff0c\u4e3a\u4e86\u63d0\u5347\u6027\u80fd\uff0cptmalloc \u652f\u6301\u591a\u4e2a\u5206\u914d\u533a\uff1a</p> <pre><code>struct malloc_state {\n    mutex_t mutex;\n    struct malloc_state *next;\n};\n</code></pre> <p>\u6240\u6709\u7684\u5206\u914d\u533a\u4ee5\u4e00\u4e2a\u94fe\u8868\u7684\u5f62\u5f0f\u7ec4\u7ec7\u8d77\u6765\u3002</p>"},{"location":"linux/kernel/vma/#_8","title":"\u5185\u5b58\u5757","text":"<p>\u6700\u57fa\u672c\u7684\u5185\u5b58\u5206\u914d\u7684\u5355\u4f4d\u662f<code>malloc chunk</code>\uff0c\u7b80\u79f0 chunk\u3002\u5b83\u5305\u542b header \u548c body \u4e24\u90e8\u5206\uff1a</p> <pre><code>struct malloc_chunk{\n    INTERNAL_SIZE_T prev_size;  //\u524d\u4e00\u4e2achunk\u7684\u5927\u5c0f\n    INTERNAL_SIZE_T size;       //\u5f53\u524dchunk\u7684\u5927\u5c0f\n\n    struct malloc_chunk* fd;    //\u6307\u5411\u4e0a\u4e00\u4e2a\u7a7a\u95f2\u7684chunk\n    struct malloc_chunk* bk;    //\u6307\u5411\u4e0b\u4e00\u4e2a\u7a7a\u95f2\u7684chunk\n\n    struct malloc_chunk* fd_nextsize;\n    struct malloc_chunk* bk_nextsize;\n};\n</code></pre> <p>\u6bcf\u6b21\u8c03\u7528<code>malloc()</code>\u51fd\u6570\u7533\u8bf7\u5185\u5b58\u65f6\uff0c\u5206\u914d\u5668\u90fd\u4f1a\u5206\u914d\u4e00\u4e2a\u5927\u5c0f\u5408\u9002\u7684 chunk\uff0c\u7136\u540e\u5c06 body \u90e8\u5206\u7684 user data \u7684\u5730\u5740\u8fd4\u56de\u3002\u5728\u8c03\u7528<code>free()</code>\u91ca\u653e\u5185\u5b58\u540e\uff0cchunk \u5e76\u4e0d\u4f1a\u5f52\u8fd8\u7ed9\u5185\u6838\uff0c\u800c\u662f\u7531 glibc \u7ba1\u7406\u8d77\u6765\u3002</p>"},{"location":"linux/kernel/vma/#_9","title":"\u7a7a\u95f2\u94fe\u8868","text":"<p>\u76f8\u4f3c\u5927\u5c0f\u7684 chunk \u4e32\u8054\u6210\u4e00\u4e2a\u7a7a\u95f2\u94fe\u8868\uff0c\u4e0b\u6b21\u5206\u914d\u7684\u65f6\u5019\u76f4\u63a5\u4ece\u94fe\u8868\u4e2d\u53d6\u4e00\u4e2a chunk \u5373\u53ef\u3002\u8fd9\u6837\u7684\u4e00\u4e2a\u94fe\u8868\u79f0\u4e3a bin\u3002ptmalloc \u4e2d\u6839\u636e\u5185\u5b58\u5757\u7684\u5927\u5c0f\uff0c\u603b\u5171\u6709 fastbins\u3001smallbins\u3001largebins \u548c unsortedbins \u56db\u79cd bin\u3002</p> <p>\u53e6\u5916\u8fd8\u6709\u4e00\u4e2a\u7279\u6b8a\u7684 bin \u79f0\u4e3a top chunk\uff0c\u5f53\u6ca1\u6709\u7a7a\u95f2\u7684 chunk \u53ef\u7528\u65f6\uff0c\u6216\u8005\u9700\u8981\u5206\u914d\u7684 chunk \u5927\u5c0f\u8d85\u8fc7\u4e86\u6700\u5927\u7684 bin \u65f6\uff0c\u5c31\u4f1a\u4ece top chunk \u5904\u5206\u914d\u3002</p>"},{"location":"linux/kernel/vma/#malloc","title":"malloc","text":"<p><code>malloc()</code>\u51fd\u6570\u4f1a\u6839\u636e\u8981\u7533\u8bf7\u5185\u5b58\u7684\u5927\u5c0f\uff0c\u4ece\u4e0d\u540c\u7684 bin \u4e2d\u67e5\u627e\u5408\u9002\u7684 chunk\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u5c31\u5411\u64cd\u4f5c\u7cfb\u7edf\u53d1\u8d77\u5185\u5b58\u7533\u8bf7\u3002</p> <p><code>malloc()</code>\u51fd\u6570\u5728 glibc \u4e2d\u7684\u5b9e\u73b0\u540d\u4e3a<code>public_mALLOc()</code>:</p> <pre><code>Void_t *public_mALLOc(size_t bytes) {\n    //\u9009\u62e9\u5206\u914d\u533a\uff0c\u5e76\u52a0\u9501\n    arena_lookup(ar_ptr);\n    arena_lock(ar_ptr, bytes);\n\n    //\u4ece\u5206\u914d\u533a\u7533\u8bf7\u5185\u5b58\n    victim = _int_malloc(ar_ptr, bytes);\n\n    //\u5982\u679c\u5206\u914d\u5931\u8d25\uff0c\u6362\u4e00\u4e2a\u5206\u914d\u7403\n    ......\n\n    //\u91ca\u653e\u9501\u5e76\u8fd4\u56de\n    mutex_unlock(&amp;ar_ptr-&gt;mutex);\n    return victim;\n}\n</code></pre> <p>\u771f\u6b63\u7684\u7533\u8bf7\u903b\u8f91\u5728<code>_int_malloc()</code>\u51fd\u6570\u4e2d\uff0c\u8fd9\u91cc\u53ea\u5217\u51fa\u5176\u9aa8\u5e72\u903b\u8f91\uff1a</p> <pre><code>static Void_t *_int_malloc(mstate av, size_t bytes){\n    //\u5bf9\u9f50\u5b57\u8282\u6570\n    INTERNAL_SIZE_T nb;\n    checked_request2size(bytes, nb);\n\n    //1.\u4ecefastbins\u4e2d\u5206\u914d\n    if((unsigned long)(nb) &lt;= (unsigned long)(get_max_fast())&gt;){\n        .......\n    }\n\n    //2.\u4ecesmallbins\u4e2d\u5206\u914d\n    if(in_smallbin_range(nb)){\n        .......\n    }\n\n    for(;;){\n        //3.\u904d\u5386\u641c\u7d22unsortedbins\n        while((victim = unsorted_chunks(av)-&gt;bk) != unsorted_chunks(av)){\n            //\u5224\u65ad\u662f\u5426\u5bf9chunk\u8fdb\u884c\u5207\u5272\n            .......\n\n            //\u5224\u65ad\u662f\u5426\u7cbe\u51c6\u5339\u914d\n            .......\n\n            //\u82e5\u4e0d\u7cbe\u51c6\u5339\u914d\uff0c\u5c06\u5bf9\u5e94chunk\u653e\u5230bins\u4e2d\n            .......\n\n            //\u907f\u514d\u904d\u5386unsortedbins\u592a\u591a\u65f6\u95f4\n            if(++iters &gt;= MAX_ITERS){\n                break;\n            }\n        }\n    //4.\u4ecelargebins\u4e2d\u5206\u914d\n    .......\n\n    //5.\u5c1d\u8bd5\u4ecetop chunk\u4e2d\u5206\u914d\nuse_top:\n    victim = av-&gt;top;\n    size = chunksize(victim);\n    .......\n\n    //\u5206\u914d\u533a\u4e2d\u7533\u8bf7\u5931\u8d25\uff0c\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\n    void *p = sYSMALLOc(nb, av);\n    }\n}\n</code></pre> <p>\u5728<code>sYSMALLOc()</code>\u51fd\u6570\u4e2d\uff0c\u8c03\u7528<code>mmap()</code>\u51fd\u6570\u5411\u64cd\u4f5c\u7cfb\u7edf\u7533\u8bf7\u5185\u5b58\uff1a</p> <pre><code>static Void_t *sYSMALLOc(size_t bytes, mstate av){\n    ......\n    mm = (char *)(MMAP(0, size, PROT_READ|PROT_WRITE, MAP_PRIVATE));\n    ......\n}\n</code></pre>"},{"location":"linux/kernel/wait/","title":"\u7b49\u5f85\u961f\u5217","text":"<p>\u7b49\u5f85\u961f\u5217\u662f\u5185\u6838\u4e2d\u7684\u4e00\u79cd\u4f11\u7720\u673a\u5236\uff0c\u8fd0\u884c\u4e2d\u7684\u8fdb\u7a0b\u5982\u679c\u9700\u8981\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u4e3b\u52a8\u52a0\u5165\u7b49\u5f85\u961f\u5217\uff0c\u7136\u540e\u8fdb\u5165\u4f11\u7720\u72b6\u6001\u3002\u5f53\u4e8b\u4ef6\u53d1\u751f\u540e\uff0c\u7b49\u5f85\u961f\u5217\u4e0a\u7684\u5143\u7d20\u88ab\u5524\u9192\u3002</p> <p>\u7b49\u5f85\u961f\u5217\u4ee5\u5faa\u73af\u94fe\u8868\u4e3a\u57fa\u7840\u7ed3\u6784\uff0c\u94fe\u8868\u5934\u548c\u94fe\u8868\u9879\u5206\u522b\u4e3a\u7b49\u5f85\u961f\u5217\u5934\u548c\u7b49\u5f85\u961f\u5217\u5143\u7d20\uff0c\u7528\u7ed3\u6784\u4f53<code>struct wait_queue_head_t</code>\u548c<code>struct wait_queue_entry_t</code>\u63cf\u8ff0\uff1a</p> include/linux/wait.h<pre><code>/* wait_queue_entry::flags */\n#define WQ_FLAG_EXCLUSIVE   0x01\n#define WQ_FLAG_WOKEN       0x02\n#define WQ_FLAG_BOOKMARK    0x04\n#define WQ_FLAG_CUSTOM      0x08\n#define WQ_FLAG_DONE        0x10\n#define WQ_FLAG_PRIORITY    0x20\n\n/*\n * A single wait-queue entry structure:\n */\nstruct wait_queue_entry {\n    unsigned int        flags;\n    void            *private;   //\u6307\u5411task_struct\n    wait_queue_func_t   func;   //\u5524\u9192\u65f6\u8c03\u7528\u7684\u51fd\u6570\n    struct list_head    entry;\n};\n\nstruct wait_queue_head {\n    spinlock_t      lock;\n    struct list_head    head;\n};\n\ntypedef struct wait_queue_head wait_queue_head_t;\n\ntypedef struct wait_queue_entry wait_queue_entry_t;\n\ntypedef int (*wait_queue_func_t)(struct wait_queue_entry *wq_entry, unsigned mode, int flags, void *key);\nint default_wake_function(struct wait_queue_entry *wq_entry, unsigned mode, int flags, void *key);\n</code></pre> <p>\u4ee5\u8fdb\u7a0b\u7684\u963b\u585e\u4e0e\u5524\u9192\u4e3a\u4f8b\uff0c\u7b49\u5f85\u961f\u5217\u7684\u4f7f\u7528\u573a\u666f\u4e3a\uff1a\u8fdb\u7a0b A \u56e0\u7b49\u5f85\u67d0\u4e9b\u8d44\u6e90\u800c\u8fdb\u5165\u5230\u963b\u585e\u72b6\u6001\uff0c\u4fbf\u5c06\u5f53\u524d\u8fdb\u7a0b\u52a0\u5165\u5230\u7b49\u5f85\u961f\u5217 Q \u4e2d\u3002\u8fdb\u7a0b B \u5728\u4e00\u7cfb\u5217\u64cd\u4f5c\u540e\uff0c\u53ef\u901a\u77e5\u8fdb\u7a0b A \u6240\u9700\u8d44\u6e90\u5df2\u5230\u4f4d\uff0c\u4fbf\u8c03\u7528<code>wake up()</code>\u51fd\u6570\u6765\u5524\u9192\u7b49\u5f85\u961f\u5217\u4e0a Q \u7684\u8fdb\u7a0b\uff0c\u6ce8\u610f\u6b64\u65f6\u6240\u6709\u7b49\u5f85\u5728\u961f\u5217 Q \u4e0a\u7684\u8fdb\u7a0b\u5747\u88ab\u7f6e\u4e3a\u53ef\u8fd0\u884c\u72b6\u6001\u3002</p> <p>\u6ce8\u610f\uff1a\u7531\u4e8e\u7b49\u5f85\u961f\u5217 Q \u4e0a\u6240\u6709\u7684\u8fdb\u7a0b\u90fd\u4f1a\u88ab\u5524\u9192\uff0c\u5047\u5982\u8fd9\u4e9b\u8fdb\u7a0b\u90fd\u5728\u7b49\u5f85\u67d0\u4e2a\u5171\u4eab\u8d44\u6e90\uff0c\u90a3\u4e48\u5728\u5524\u9192\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u4ea7\u751f\u6fc0\u70c8\u7684\u7ade\u4e89\uff0c\u6700\u540e\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u83b7\u5f97\u8d44\u6e90\uff0c\u800c\u5176\u4ed6\u8fdb\u7a0b\u4e0d\u5f97\u4e0d\u518d\u6b21\u8fdb\u5165\u7761\u7720\u3002\u8fd9\u5728\u591a\u7ebf\u7a0b\u5e76\u53d1\u7684\u573a\u666f\u4e0b\u4f1a\u51fa\u73b0\u4e25\u91cd\u7684\u6027\u80fd\u95ee\u9898\u3002\u5185\u6838\u4e3a\u4e86\u89e3\u51b3\u8be5\u95ee\u9898\uff0c\u589e\u52a0\u4e86\"\u72ec\u5360\u7b49\u5f85\"(WQ_FLAG_EXCLUSIVE)\u6807\u5fd7\uff0c\u5e26\u6709\u6b64\u6807\u5fd7\u7684\u7b49\u5f85\u4efb\u52a1\u4f1a\u88ab\u6dfb\u52a0\u5230\u961f\u5217\u5c3e\u90e8\uff0c\u5e76\u4e14\u53ea\u4f1a\u88ab\u5524\u9192\u7b2c\u4e00\u4e2a\u4efb\u52a1\u3002\u5176\u4ed6\u4e00\u4e9b\u91cd\u8981\u6807\u5fd7\u6bd4\u5982 WQ_FLAG_WOKEN \u8868\u793a\u8fdb\u7a0b\u5df2\u7ecf\u88ab\u5524\u9192\uff0c WA_FLAG_PRIORITY \u8868\u793a\u8be5\u8fdb\u7a0b\u5177\u6709\u9ad8\u4f18\u5148\u7ea7\u3002</p>"},{"location":"linux/kernel/wait/#_2","title":"\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"linux/kernel/wait/#_3","title":"\u521d\u59cb\u5316","text":"<p>\u7b49\u5f85\u961f\u5217\u5934\u7684\u5b9a\u4e49\u548c\u521d\u59cb\u5316\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a<code>init_waitqueue_head(&amp;wq_head)</code>\u548c<code>DECLARE_WAIT_QUEUE_HEAD(name)</code>\uff1a</p> <pre><code>#define init_waitqueue_head(wq_head)                        \\\n    do {                                    \\\n        static struct lock_class_key __key;             \\\n                                        \\\n        __init_waitqueue_head((wq_head), #wq_head, &amp;__key);     \\\n    } while (0)\n\nvoid __init_waitqueue_head(struct wait_queue_head *wq_head, const char *name, struct lock_class_key *key)\n{\n    spin_lock_init(&amp;wq_head-&gt;lock);\n    lockdep_set_class_and_name(&amp;wq_head-&gt;lock, key, name);\n    INIT_LIST_HEAD(&amp;wq_head-&gt;head);\n}\n\n#define DECLARE_WAIT_QUEUE_HEAD(name) \\\n    struct wait_queue_head name = __WAIT_QUEUE_HEAD_INITIALIZER(name)\n\n#define __WAIT_QUEUE_HEAD_INITIALIZER(name) {                   \\\n    .lock       = __SPIN_LOCK_UNLOCKED(name.lock),          \\\n    .head       = LIST_HEAD_INIT(name.head) }\n</code></pre> <p>\u7b49\u5f85\u961f\u5217\u5143\u7d20\u7684\u521b\u5efa\u53ef\u4ee5\u4f7f\u7528<code>DECLARE_WAITQUEUE(name, tsk)</code>\uff0c\u8fd9\u5c06\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a name \u7684\u7b49\u5f85\u961f\u5217\u5143\u7d20\uff0c\u5e76\u5c06 private \u6307\u9488\u6307\u5411 tsk\uff0c\u5524\u9192\u51fd\u6570\u4e3a<code>default_wake_function()</code>\uff1a</p> <pre><code>#define DECLARE_WAITQUEUE(name, tsk)                        \\\n    struct wait_queue_entry name = __WAITQUEUE_INITIALIZER(name, tsk)\n\n#define __WAITQUEUE_INITIALIZER(name, tsk) {                    \\\n    .private    = tsk,                          \\\n    .func       = default_wake_function,                \\\n    .entry      = { NULL, NULL } }\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>DEFINE_WAIT(name)</code>\u548c<code>init_wait(&amp;wait)</code>\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u7684\u9ed8\u8ba4\u5524\u9192\u51fd\u6570\u4e3a<code>autoremove_wake_function()</code>\uff1a</p> <pre><code>#define DEFINE_WAIT(name) DEFINE_WAIT_FUNC(name, autoremove_wake_function)\n\n#define DEFINE_WAIT_FUNC(name, function)                    \\\n    struct wait_queue_entry name = {                    \\\n        .private    = current,                  \\\n        .func       = function,                 \\\n        .entry      = LIST_HEAD_INIT((name).entry),         \\\n    }\n\n#define init_wait(wait)                             \\\n    do {                                    \\\n        (wait)-&gt;private = current;                  \\\n        (wait)-&gt;func = autoremove_wake_function;            \\\n        INIT_LIST_HEAD(&amp;(wait)-&gt;entry);                 \\\n        (wait)-&gt;flags = 0;                      \\\n    } while (0)\n</code></pre>"},{"location":"linux/kernel/wait/#_4","title":"\u6dfb\u52a0\u548c\u79fb\u9664\u5143\u7d20","text":"<p>\u5185\u6838\u63d0\u4f9b\u4e86\u4e24\u4e2a\u51fd\u6570\uff0c\u7528\u4e8e\u5c06\u7b49\u5f85\u961f\u5217\u5143\u7d20\u6dfb\u52a0\u5230\u7b49\u5f85\u961f\u5217\u5934\u4e2d\uff1a<code>add_wait_queue()</code>\u548c<code>add_wait_queue_exclusive()</code>\u3002\u524d\u8005\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u5934\uff0c\u540e\u8005\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u5c3e\u90e8\uff0c\u5e76\u4e14\u8bbe\u7f6e WQ_FLAG_EXCLUSIVE \u6807\u5fd7\uff1a</p> <pre><code>void add_wait_queue(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry)\n{\n    unsigned long flags;\n\n    // \u6e05\u9664WQ_FLAG_EXCLUSIVE\u6807\u5fd7\n    wq_entry-&gt;flags &amp;= ~WQ_FLAG_EXCLUSIVE;\n    spin_lock_irqsave(&amp;wq_head-&gt;lock, flags);\n    __add_wait_queue(wq_head, wq_entry);\n    spin_unlock_irqrestore(&amp;wq_head-&gt;lock, flags);\n}   \n\nstatic inline void __add_wait_queue(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry)\n{\n    list_add(&amp;wq_entry-&gt;entry, &amp;wq_head-&gt;head);\n}\n\nvoid add_wait_queue_exclusive(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry)\n{\n    unsigned long flags;\n\n    // \u8bbe\u7f6eWQ_FLAG_EXCLUSIVE\u6807\u5fd7\n    wq_entry-&gt;flags |= WQ_FLAG_EXCLUSIVE;\n    spin_lock_irqsave(&amp;wq_head-&gt;lock, flags);\n    __add_wait_queue_entry_tail(wq_head, wq_entry);\n    spin_unlock_irqrestore(&amp;wq_head-&gt;lock, flags);\n}\n\nstatic inline void __add_wait_queue_entry_tail(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry)\n{\n    list_add_tail(&amp;wq_entry-&gt;entry, &amp;wq_head-&gt;head);\n}\n</code></pre> <p><code>remove_wait_queue()</code>\u51fd\u6570\u7528\u4e8e\u4ece\u7b49\u5f85\u961f\u5217\u4e2d\u79fb\u9664\u5143\u7d20\uff1a</p> <pre><code>void remove_wait_queue(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry)\n{\n    unsigned long flags;\n\n    spin_lock_irqsave(&amp;wq_head-&gt;lock, flags);\n    __remove_wait_queue(wq_head, wq_entry);\n    spin_unlock_irqrestore(&amp;wq_head-&gt;lock, flags);\n}\n\nstatic inline void\n__remove_wait_queue(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry)\n{\n    list_del(&amp;wq_entry-&gt;entry);\n}\n</code></pre> <p></p>"},{"location":"linux/kernel/wait/#_5","title":"\u7b49\u5f85\u4e8b\u4ef6","text":"<p>\u7b49\u5f85\u4e8b\u4ef6\u53ef\u4ee5\u7528\u4e8e\u5b9e\u73b0\u7b80\u5355\u7684\u8fdb\u7a0b\u4f11\u7720\u2014\u2014\u8fdb\u7a0b\u5c06\u4e00\u76f4\u4f11\u7720\u7b49\u5f85\u76f4\u5230\u67d0\u4e2a\u6761\u4ef6\u6210\u7acb\u3002\u5185\u6838\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u51fd\u6570\uff1a</p> <pre><code>wait_event(wq_head, condition);\nwait_event_interruptible(wq_head, condition);\nwait_event_timeout(wq_head, condition, timeout);\nwait_event_interruptible_timeout(wq_head, condition, timeout);\nio_wait_event(wq_head, condition);\n</code></pre> <ul> <li>condition == 0\uff1a\u4f11\u7720</li> <li>condition == 1\uff1a\u5524\u9192</li> </ul> <p>\u5b83\u4eec\u90fd\u7528\u4e8e\u5c06\u8fdb\u7a0b\u52a0\u5165\u5230\u7b49\u5f85\u961f\u5217\uff0c\u76f4\u5230\u67d0\u4e2a\u4e8b\u4ef6\u53d1\u751f\u3002\"interruptible\"\u8868\u793a\u53ef\u4ee5\u88ab\u4fe1\u53f7\u5524\u9192\uff0c\"timeout\"\u8868\u793a\u7b49\u5f85\u8d85\u65f6\u65f6\u95f4\u3002</p> <p></p> <p>\u603b\u7ed3\u4f7f\u7528\u7b49\u5f85\u961f\u5217\u8ba9\u8fdb\u7a0b\u4f11\u7720\u7684\u8fc7\u7a0b\uff1a</p> <ul> <li>\u5c06\u5f53\u524d\u8fdb\u7a0b\u5173\u8054\u7684\u7b49\u5f85\u961f\u5217\u5143\u7d20\u52a0\u5165\u5230\u7b49\u5f85\u961f\u5217\u4e2d</li> <li>\u8bbe\u7f6e\u5f53\u524d\u8fdb\u7a0b\u72b6\u6001</li> <li>\u5224\u65ad\u8d44\u6e90\u662f\u5426\u5f97\u5230\uff0c\u6216\u8005\u662f\u5426\u6355\u83b7\u4fe1\u53f7</li> <li>\u8fdb\u7a0b\u4e3b\u52a8\u8ba9\u51faCPU\uff0c\u8fdb\u5165\u4f11\u7720\u72b6\u6001</li> <li>\u8d44\u6e90\u6ee1\u8db3\u65f6\uff0c\u5524\u9192\u8fdb\u7a0b\uff0c\u5c06\u5176\u72b6\u6001\u8bbe\u7f6e\u4e3aTASK_RUNNING\uff0c\u5e76\u4ece\u7b49\u5f85\u961f\u5217\u4e2d\u79fb\u9664</li> </ul>"},{"location":"linux/kernel/wait/#_6","title":"\u5524\u9192","text":"<p><code>wake_up()</code>\u51fd\u6570\u7528\u4e8e\u5524\u9192\u7b49\u5f85\u961f\u5217\u4e0a\u7684\u8fdb\u7a0b\uff0c\u5b83\u6709\u8bb8\u591a\u53d8\u4f53\uff1a</p> <pre><code>#define wake_up(x)          __wake_up(x, TASK_NORMAL, 1, NULL)\n#define wake_up_nr(x, nr)       __wake_up(x, TASK_NORMAL, nr, NULL)\n#define wake_up_all(x)          __wake_up(x, TASK_NORMAL, 0, NULL)\n#define wake_up_locked(x)       __wake_up_locked((x), TASK_NORMAL, 1)\n#define wake_up_all_locked(x)       __wake_up_locked((x), TASK_NORMAL, 0)\n\n#define wake_up_interruptible(x)    __wake_up(x, TASK_INTERRUPTIBLE, 1, NULL)\n#define wake_up_interruptible_nr(x, nr) __wake_up(x, TASK_INTERRUPTIBLE, nr, NULL)\n#define wake_up_interruptible_all(x)    __wake_up(x, TASK_INTERRUPTIBLE, 0, NULL)\n#define wake_up_interruptible_sync(x)   __wake_up_sync((x), TASK_INTERRUPTIBLE)\n</code></pre> <p><code>wake_up()</code>\u51fd\u6570\u4f1a\u904d\u5386\u7b49\u5f85\u961f\u5217\u4e0a\u7684\u6240\u6709\u5143\u7d20\uff08\u5305\u62ec TASK_INTERRUPTIBLE \u548c TASK_UNINTERRUPTIBLE \uff09\uff0c\u6839\u636e nr_exclusive \u53c2\u6570\u7684\u8981\u6c42\u5524\u9192\u8fdb\u7a0b\uff0c\u540c\u65f6\u5b9e\u73b0\u4e86\u5206\u6279\u6b21\u5524\u9192\u5de5\u4f5c\u3002\u6700\u7ec8\u4f1a\u56de\u8c03\u7b49\u5f85\u961f\u5217\u5143\u7d20\u6240\u7ed1\u5b9a\u7684\u5524\u9192\u51fd\u6570\u3002</p> <p>\u5524\u9192\u7684\u4e24\u79cd\u56de\u8c03\u51fd\u6570<code>default_wake_function()</code>\u548c<code>autoremove_wake_function()</code>\u7684\u533a\u522b\u662f\uff0c\u540e\u8005\u4f1a\u5c06\u8fdb\u7a0b\u4ece\u7b49\u5f85\u961f\u5217\u4e2d\u79fb\u9664\uff0c\u800c\u524d\u8005\u4e0d\u4f1a\u3002</p>"},{"location":"linux/kernel/wait/#_7","title":"\u603b\u7ed3","text":"<p>\u4f11\u7720\u65b9\u5f0f1\uff1a</p> <pre><code>DECLARE_WAIT_QUEUE_HEAD(queue);\nDECLARE_WAITQUEUE(wait, current);\n\nfor (;;) {\n    add_wait_queue(&amp;queue, &amp;wait);\n    set_current_state(TASK_INTERRUPTIBLE);\n    if (condition)\n        break;\n    schedule();\n    remove_wait_queue(&amp;queue, &amp;wait);\n    if (signal_pending(current))\n        return -ERESTARTSYS;\n}\nset_current_state(TASK_RUNNING);\nremove_wait_queue(&amp;queue, &amp;wait);\n</code></pre> <p>\u4f11\u7720\u65b9\u5f0f2\uff1a</p> <pre><code>DELARE_WAIT_QUEUE_HEAD(queue);\nDEFINE_WAIT(wait);\n\nwhile (! condition) {\n    prepare_to_wait(&amp;queue, &amp;wait, TASK_INTERRUPTIBLE);\n    if (! condition)\n        schedule();\n    finish_wait(&amp;queue, &amp;wait);\n}\n</code></pre>"},{"location":"linux/monitor/","title":"\u6027\u80fd\u89c2\u6d4b\u6280\u672f","text":""},{"location":"linux/monitor/#_2","title":"\u57fa\u7840\u77e5\u8bc6","text":"<ul> <li>\u6027\u80fd\u89c2\u6d4b\u6280\u672f\u6982\u89c8</li> </ul>"},{"location":"linux/monitor/#_3","title":"\u5185\u6838\u8ddf\u8e2a\u6280\u672f","text":"<ul> <li>\u9759\u6001\u8ddf\u8e2a</li> <li>\u52a8\u6001\u8ddf\u8e2a</li> </ul>"},{"location":"linux/monitor/#ebpf","title":"ebpf","text":"<ul> <li>eBPF\u5165\u95e8</li> <li>BPF\u5de5\u5177</li> </ul>"},{"location":"linux/monitor/#_4","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>eBPF\u5f00\u53d1\u5b9e\u8df5\u6559\u7a0b</li> <li>\u6027\u80fd\u4e4b\u5dc5(\u7b2c2\u7248)</li> <li>Linux\u5185\u6838\u89c2\u6d4b\u6280\u672fBPF</li> </ul>"},{"location":"linux/monitor/bpftool/","title":"BPF\u5de5\u5177","text":""},{"location":"linux/monitor/bpftool/#bpftool","title":"bpftool","text":"<p>bpftool \u63d0\u4f9b\u5185\u6838\u4e2d\u4e0e BPF \u7a0b\u5e8f\u76f8\u5173\u7684\u4fe1\u606f\u3002</p> <pre><code>$ bpftool --help\nUsage: \n       OBJECT := { prog | map | link | cgroup | perf | net | feature | btf | gen | struct_ops | iter }\n       OPTIONS := { {-j|--json} [{-p|--pretty}] | {-d|--debug} |\n                    {-V|--version} }\n</code></pre> <p>\u68c0\u67e5\u7cfb\u7edf\u4e2d\u8fd0\u884c\u7a0b\u5e8f\u7684\u60c5\u51b5\uff1a</p> <pre><code>$ bpftool prog show\n</code></pre> <p>\u4ee5 JSON \u5f62\u5f0f\u8f93\u51fa\uff1a</p> <pre><code>$ bpftool prog show --json id 30 | jq\n</code></pre> <p>\u68c0\u67e5 BPF \u6620\u5c04\uff1a</p> <pre><code>$ bpftool map show\n</code></pre> <p>\u5217\u51fa\u7cfb\u7edf\u4e2d\u6240\u6709 cgroup\u4e0a \u7684\u9644\u52a0\u7a0b\u5e8f\uff1a</p> <pre><code>$ bpftool cgroup tree\n</code></pre>"},{"location":"linux/monitor/bpftool/#bpftrace","title":"bpftrace","text":"<p>bpftrace \u662f BPF \u9ad8\u7ea7\u8ddf\u8e2a\u8bed\u8a00\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b80\u660e\u7684\u8bed\u6cd5\u6765\u7f16\u5199\u7a0b\u5e8f\u3002\u5b83\u63d0\u4f9b\u4e86\u8bb8\u591a\u5185\u7f6e\u529f\u80fd\uff0c\u65e0\u987b\u81ea\u5df1\u5b9e\u73b0\u3002</p> <p>bpftrace \u7a0b\u5e8f\u7684\u8bed\u6cd5\u7b80\u6d01\uff0c\u4ec5\u5305\u542b\u5934\u90e8\u3001\u64cd\u4f5c\u5757\u548c\u5c3e\u90e8\u4e09\u4e2a\u90e8\u5206\u3002\u5934\u90e8\u548c\u5c3e\u90e8\u662f\u53ef\u9009\u7684\uff0c\u901a\u5e38\u7528\u6765\u6253\u5370\u4e00\u4e9b\u52a0\u8f7d\u524d\u540e\u7684\u4fe1\u606f\u3002\u64cd\u4f5c\u5757\u662f\u6211\u4eec\u8981\u6307\u5b9a\u8ddf\u8e2a\u7684\u63a2\u9488\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u57fa\u4e8e\u63a2\u9488\u89e6\u53d1\u4e8b\u4ef6\u540e\u6267\u884c\u7684\u64cd\u4f5c\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u7a0b\u5e8f\uff1a</p> <pre><code>BEGIN\n{\n       printf(\"starting bpftrace program\\n\")\n}\n\nkprobe:do_sys_open\n{\n       printf(\"opening file descriptor: %s\\n\", str(arg1))\n}\n\nEND\n{\n       printf(\"ending bpftrace program\\n\")\n}\n</code></pre> <p>\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u7a0b\u5e8f\u4fdd\u5b58\u4e3a example.bt\uff0c\u7136\u540e\u8fd0\u884c\uff1a<code>bpftrace example.bt</code>\u3002</p> <p>bpftrace \u8bed\u8a00\u662f\u4ee5\u811a\u672c\u601d\u60f3\u8bbe\u8ba1\u7684\u3002\u6709\u7684\u65f6\u5019\u53ef\u4ee5\u4e0d\u7528\u7f16\u5199\u7a0b\u5e8f\uff0c\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4e2d\u4f7f\u7528\u9009\u9879<code>-e</code>\u5373\u53ef\uff1a</p> <pre><code>$ bpftrace -e 'kprobe:do_sys_open { printf(\"opening file descriptor: %s\\n\", str(arg1)) }'\n</code></pre>"},{"location":"linux/monitor/ebpf/","title":"eBPF\u5165\u95e8","text":"<p>\u5bf9\u4e8eeBPF\u7684\u4ecb\u7ecd\u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0\uff1aeBPF\u7b80\u4ecb\u3002</p> <p>\u63a8\u8350Linux 4.9\u4ee5\u4e0a\u7248\u672c\u7684\u5185\u6838\u6765\u4f7f\u7528eBPF\uff0c\u90e8\u5206Linux Event\u548cBPF\u7248\u672c\u652f\u6301\u89c1\u4e0b\u56fe\uff1a</p> <p></p> <p>eBPF\u6280\u672f\u4e3b\u8981\u7528\u4e8e\u4ee5\u4e0b\u573a\u666f\uff1a</p> <ol> <li> <p>\u8ffd\u8e2a\u548c\u6027\u80fd\u5206\u6790(Tracing &amp; Profiling)</p> </li> <li> <p>\u89c2\u6d4b\u548c\u76d1\u63a7(Obervability &amp; Monitoring)</p> </li> <li> <p>\u7f51\u7edc(Network)</p> </li> <li> <p>\u5b89\u5168(Security)</p> </li> </ol> <p>eBPF\u7684\u6574\u4f53\u67b6\u6784\u5982\u56fe\u6240\u793a\uff1a</p> <p></p> <p>eBPF\u5206\u4e3a\u7528\u6237\u7a7a\u95f4\u548c\u5185\u6838\u7a7a\u95f4\u4e24\u90e8\u5206\uff1a</p> <ul> <li>\u7528\u6237\u7a7a\u95f4\u7684\u7a0b\u5e8f\u88ab\u7f16\u8bd1\u6210BPF\u5b57\u8282\u7801\u7136\u540e\u9001\u81f3\u5185\u6838\u7a7a\u95f4</li> <li>\u5185\u6838\u7a7a\u95f4\u7684verifier\u68c0\u6d4b\u5b57\u8282\u7801\u5b89\u5168\u6027\uff0c\u7136\u540e\u9001\u81f3BPF\u865a\u62df\u673a\u6267\u884c\uff0c\u5c06\u6267\u884c\u7684\u7ed3\u679c\u56de\u4f20\u7ed9\u7528\u6237\u7a7a\u95f4</li> </ul> <p>\u5176\u4e2d\uff0cBPF\u76f8\u5173\u7684\u7a0b\u5e8f\u7c7b\u578b\u53ef\u4ee5\u662fkprobes/uprobes/tracepoint/perf_events\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\uff1a</p> <ul> <li>kprobes\uff1a\u5185\u6838\u7ea7\u522b\u52a8\u6001\u8ddf\u8e2a\uff0c\u53ef\u4ee5\u8ddf\u8e2a\u5185\u6838\u4e2d\u7684\u51fd\u6570\u5165\u53e3\u6216\u8fd4\u56de\u70b9\uff0c\u4f46\u662fABI\u63a5\u53e3\u4e0d\u7a33\u5b9a</li> <li>uprobes\uff1a\u7528\u6237\u7ea7\u522b\u52a8\u6001\u8ddf\u8e2a\uff0c\u53ea\u8ddf\u8e2a\u7528\u6237\u6001\u51fd\u6570</li> <li>tracepoints\uff1a\u5185\u6838\u9759\u6001\u8ddf\u8e2a</li> <li>perf_events\uff1a\u5b9a\u65f6\u91c7\u6837</li> </ul> <p>\u5185\u6838\u4e2d\u8fd0\u884c\u7684BPF\u5b57\u8282\u7801\u53ef\u4ee5\u4f7f\u7528\u4e24\u79cd\u65b9\u5f0f\u5c06\u6d4b\u91cf\u6570\u636e\u56de\u4f20\u7ed9\u7528\u6237\u7a7a\u95f4\uff1a</p> <ul> <li>maps\uff1a\u5185\u6838\u4e2d\u5b9e\u73b0\u7684\u7edf\u8ba1\u6458\u8981\u4fe1\u606f\uff08\u6bd4\u5982\u6d4b\u91cf\u5ef6\u8fdf\u3001\u5806\u6808\u4fe1\u606f\uff09\u7b49\u3002</li> <li>perf-event\uff1a\u5185\u6838\u91c7\u96c6\u7684\u4e8b\u4ef6\u5b9e\u65f6\u53d1\u9001\u81f3\u7528\u6237\u7a7a\u95f4\uff0c\u7528\u6237\u7a7a\u95f4\u7a0b\u5e8f\u5b9e\u65f6\u8bfb\u53d6\u5206\u6790\u3002</li> </ul> <p>\u5728Linux\u89c2\u6d4b\u65b9\u9762\uff0ceBPF\u603b\u662f\u4f1a\u62ff\u6765\u4e0e\u5185\u6838\u6a21\u5757\u65b9\u5f0f\u8fdb\u884c\u5bf9\u6bd4\uff0ceBPF\u5728\u5b89\u5168\u6027\u3001\u5165\u95e8\u95e8\u69db\u4e0a\u6bd4\u5185\u6838\u6a21\u5757\u90fd\u6709\u4f18\u52bf\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u5bf9\u6bd4\u9879\uff1a</p> \u7ef4\u5ea6 \u5185\u6838\u6a21\u5757 eBPF kprobes/tracepoints \u652f\u6301 \u652f\u6301 \u5b89\u5168\u6027 \u53ef\u80fd\u5f15\u5165\u5b89\u5168\u6f0f\u6d1e\u6216\u5bfc\u81f4\u5185\u6838Panic \u901a\u8fc7\u9a8c\u8bc1\u5668\u8fdb\u884c\u68c0\u67e5\uff0c\u53ef\u4ee5\u4fdd\u969c\u5185\u6838\u5b89\u5168 \u5185\u6838\u51fd\u6570 \u53ef\u4ee5\u8c03\u7528\u5185\u6838\u51fd\u6570 \u53ea\u80fd\u901a\u8fc7BPF Helper\u51fd\u6570\u8c03\u7528 \u7f16\u8bd1\u6027 \u9700\u8981\u7f16\u8bd1\u5185\u6838 \u4e0d\u9700\u8981\u7f16\u8bd1\u5185\u6838\uff0c\u53ea\u9700\u8981\u5f15\u5165\u5934\u6587\u4ef6 \u8fd0\u884c \u5fc5\u987b\u662f\u76f8\u540c\u5185\u6838\u7248\u672c \u57fa\u4e8e\u7a33\u5b9aABI\u7684BPF\u7a0b\u5e8f\u53ef\u4ee5\u7f16\u8bd1\u4e00\u6b21\uff0c\u5404\u5904\u8fd0\u884c \u4e0e\u5e94\u7528\u7a0b\u5e8f\u4ea4\u4e92 \u6253\u5370\u65e5\u5fd7\u6216\u6587\u4ef6 \u901a\u8fc7perf_event\u6216maps\u7ed3\u6784 \u6570\u636e\u7ed3\u6784\u4e30\u5bcc\u6027 \u4e00\u822c \u4e30\u5bcc \u5165\u95e8\u95e8\u69db \u9ad8 \u4f4e \u5347\u7ea7 \u9700\u8981\u5378\u8f7d\u548c\u52a0\u8f7d\uff0c\u53ef\u80fd\u5bfc\u81f4\u5904\u7406\u6d41\u7a0b\u4e2d\u65ad \u539f\u5b50\u66ff\u6362\u5347\u7ea7\uff0c\u4e0d\u4f1a\u9020\u6210\u5904\u7406\u6d41\u7a0b\u4e2d\u65ad \u5185\u6838\u5185\u7f6e \u89c6\u60c5\u51b5\u800c\u5b9a \u5185\u6838\u5185\u7f6e\u652f\u6301 <p>\u8981\u7f16\u5199BPF\u7a0b\u5e8f\u53ef\u4ee5\u6709\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>BCC\uff1a\u5373BPF Compiler Collection\uff0c\u53ef\u4ee5\u8ba9\u7528\u6237\u91c7\u7528Python\u3001C\u548cLua\u7b49\u9ad8\u7ea7\u8bed\u8a00\u5feb\u901f\u5f00\u53d1BPF\u7a0b\u5e8f\u3002</li> <li>bpftrace\uff1a\u91c7\u7528\u7c7b\u4f3c\u4e8eawk\u8bed\u8a00\u5feb\u901f\u7f16\u5199eBPF\u7a0b\u5e8f\u3002</li> <li>libbpf\u5e93\uff1a\u9700\u8981\u4f7f\u7528LLVM clang\u7f16\u8bd1\u6210BPF\u5b57\u8282\u7801\uff0c\u95e8\u69db\u8f83\u9ad8\u3002</li> </ul>"},{"location":"linux/monitor/ebpf/#bcc","title":"BCC\u5de5\u5177","text":"<p>BCC\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5de5\u5177\u96c6\uff0c\u7528\u4e8e\u7b80\u5316eBPF\u7a0b\u5e8f\u7684\u7f16\u5199\u4e0e\u8c03\u8bd5\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u5de5\u5177\u548c\u5e93\uff0c\u5305\u62ecC\u5e93API\u548cPython\u524d\u7aef\uff0c\u9002\u7528\u4e8e\u8bb8\u591a\u573a\u666f\uff0c\u6bd4\u5982\u6027\u80fd\u5206\u6790\u548c\u7f51\u7edc\u6d41\u91cf\u63a7\u5236\u7b49\u3002</p> <p>\u5b89\u88c5BCC\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1aInstalling BCC</p> <p>\u5b89\u88c5\u5b8c\u4e4b\u540e\u8fd0\u884chello_world.py\uff0c\u540c\u65f6\u5728\u53e6\u4e00\u4e2a\u7a97\u53e3\u8fd0\u884c\u4e00\u4e9b\u547d\u4ee4(\u6bd4\u5982\"ls\")\uff0c\u4f60\u5e94\u8be5\u80fd\u770b\u5230\u7a97\u53e3\u4f1a\u6253\u5370\"Hello, World!\"\u3002\u5982\u679c\u6ca1\u6709\uff0c\u90a3\u8bf4\u660eBCC\u5b89\u88c5\u5931\u8d25\u3002</p>"},{"location":"linux/monitor/ebpf/#bpftrace","title":"bpftrace","text":""},{"location":"linux/monitor/intro/","title":"\u6027\u80fd\u89c2\u6d4b\u6280\u672f\u6982\u89c8","text":"<p>Linux \u6027\u80fd\u89c2\u6d4b\u6280\u672f\u4e3b\u8981\u5206\u4e3a\u6307\u6807\u89c2\u6d4b\u548c\u8ddf\u8e2a\u89c2\u6d4b\u3002</p> <p>\u6307\u6807\u89c2\u6d4b\u662f\u6307\u4ece\u7cfb\u7edf\u4e2d\u83b7\u53d6\u4e00\u4e2a\u6570\u5b57\u5316\u7684\u503c\uff0c\u7528\u6765\u5c55\u793a\u5f53\u524d\u7cfb\u7edf\u7684\u8fd0\u884c\u60c5\u51b5\uff0c\u6bd4\u5982 CPU \u5229\u7528\u7387\u3001\u8d1f\u8f7d\u8fd9\u4e9b\u90fd\u5c5e\u4e8e\u6307\u6807\u89c2\u6d4b\u3002\u6307\u6807\u89c2\u6d4b\u53ea\u80fd\u7528\u4e8e\u53d1\u73b0\u95ee\u9898\uff0c\u4f46\u662f\u65e0\u6cd5\u7cbe\u7ec6\u5730\u5b9a\u4f4d\u95ee\u9898\u3002\u8ddf\u8e2a\u89c2\u6d4b\u662f\u66f4\u9ad8\u7ea7\u7684\u89c2\u6d4b\u6280\u672f\uff0c\u53ef\u4ee5\u6536\u96c6\u7cfb\u7edf\u76f8\u5173\u6d3b\u52a8\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u5b9a\u4f4d\u51fa\u771f\u6b63\u7684\u6027\u80fd\u95ee\u9898\u3002\u6700\u8457\u540d\u7684\u706b\u7130\u56fe\u5c31\u662f\u901a\u8fc7\u91c7\u6837\u7684\u65b9\u5f0f\uff0c\u5bf9\u7528\u6237\u6216\u5185\u6838\u7684\u8c03\u7528\u6808\u8fdb\u884c\u5206\u6790\uff0c\u627e\u51fa\u54ea\u4e9b\u51fd\u6570\u6d88\u8017\u4e86\u66f4\u591a\u7684 CPU \u5468\u671f\u3002 \u7c7b\u4f3c\u7684\u8ddf\u8e2a\u5de5\u5177\u8fd8\u6709<code>ftrace</code>\u3001<code>trace-cmd</code>\uff0c\u6700\u8fd1\u6d41\u884c\u8d77\u6765\u7684<code>eBPF</code>\uff0c\u4ee5\u53ca\u5728\u5176\u57fa\u7840\u4e0a\u5c01\u88c5\u7684<code>BCC</code>\u3001<code>bpftrace</code>\u7b49\u5de5\u5177\u3002</p> <p>\u4e0d\u7ba1\u662f\u4f55\u79cd\u5de5\u5177\uff0c\u90fd\u4f9d\u8d56\u5e95\u5c42\u63d0\u4f9b\u7684\u4e8b\u4ef6\u6e90\u3002\u4e8b\u4ef6\u6e90\u53ef\u4ee5\u5206\u4e3a\u786c\u4ef6\u4e8b\u4ef6\u3001\u5185\u6838\u8f6f\u4ef6\u4e8b\u4ef6\u3001\u5185\u6838\u8ddf\u8e2a\u548c\u7528\u6237\u8ddf\u8e2a\u3002\u5176\u4e2d\uff0c\u5185\u6838\u8ddf\u8e2a\u53c8\u5206\u4e3a\u9759\u6001\u8ddf\u8e2a(tracepoint)\u3001\u52a8\u6001\u8ddf\u8e2a(kprobe)\uff0c\u7528\u6237\u8ddf\u8e2a\u5206\u4e3a\u9759\u6001\u8ddf\u8e2a(USDT probe)\u3001\u52a8\u6001\u8ddf\u8e2a(uprobe)\u3002</p>"},{"location":"linux/monitor/intro/#_2","title":"\u8f6f\u4ef6\u4e8b\u4ef6","text":"<p><code>perf</code>\u5de5\u5177\u53ef\u4ee5\u7528\u6765\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u652f\u6301\u7684\u8f6f\u4ef6\u4e8b\u4ef6\uff1a</p> <pre><code>$ perf list sw\nList of pre-defined software events(to be used in -e):\n  alignment-faults\n  context-switches OR cs\n  cpu-migrations OR migrations\n  emulation-faults\n  major-faults OR major_faults\n  major-faults\n  minor-faults\n  page-faults OR faults\n  task-clock\n</code></pre> <ul> <li><code>alignment-faults</code>\uff1a\u53d1\u751f\u5185\u5b58\u5bf9\u9f50\u9519\u8bef\u7684\u6b21\u6570\u3002</li> <li><code>context-switches</code>\uff1a\u53d1\u751f\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u6b21\u6570\u3002</li> <li><code>cpu-migrations</code>\uff1a\u53d1\u751f CPU \u8fc1\u79fb\u7684\u6b21\u6570\u3002</li> <li><code>emulation-faults</code>\uff1a\u53d1\u751f\u6a21\u62df\u9519\u8bef\u7684\u6b21\u6570\u3002</li> <li><code>page-faults</code>\uff1a\u53d1\u751f\u7f3a\u9875\u5f02\u5e38\u7684\u6b21\u6570\u3002</li> </ul>"},{"location":"linux/monitor/intro/#_3","title":"\u5185\u6838\u8ddf\u8e2a","text":"<p>\u9759\u6001\u8ddf\u8e2a\u662f\u5185\u6838\u5728\u6e90\u7801\u4e2d\u63d0\u524d\u63d2\u5165\u4e86\u6869\uff0c\u5f53\u6ca1\u6709\u8ddf\u8e2a\u9700\u6c42\u65f6\uff0c\u8fd9\u4e9b\u6869\u5904\u4e8e\u5173\u95ed\u72b6\u6001\u3002\u5f53\u67d0\u4e2a\u8ddf\u8e2a\u70b9\u88ab\u6253\u5f00\uff0c\u6869\u4ee3\u7801\u5f97\u4ee5\u8fd0\u884c\u3002\u6869\u662f\u9759\u6001\u7684\uff0c\u5b83\u7684\u4f18\u52bf\u662f\u6bd4\u8f83\u7a33\u5b9a\uff0c\u4f46\u662f\u5185\u6838\u4e0d\u53ef\u80fd\u5728\u6240\u6709\u51fd\u6570\u4e2d\u90fd\u63d2\u5165\u6869\u3002</p> <p>\u52a8\u6001\u8ddf\u8e2a\u662f\u5728\u5185\u6838\u8fd0\u884c\u65f6\u52a8\u6001\u63d2\u5165\u4ee3\u7801\uff0c\u5185\u6838\u5728\u6267\u884c\u51fd\u6570\u65f6\uff0c\u5148\u6267\u884c\u63d2\u5165\u7684\u4ee3\u7801\uff0c\u7136\u540e\u8fd4\u56de\u51fd\u6570\u7684\u4e2d\u65ad\u5904\u7ee7\u7eed\u6267\u884c\u5269\u4f59\u4ee3\u7801\u3002</p>"},{"location":"linux/monitor/probe/","title":"\u52a8\u6001\u8ddf\u8e2a","text":""},{"location":"linux/monitor/probe/#_2","title":"\u5185\u6838\u63a2\u9488","text":"<p>\u5185\u6838\u63a2\u9488\u5141\u8bb8\u5728\u51e0\u4e4e\u4efb\u4f55\u5185\u6838\u6307\u4ee4\u4e0a\u8bbe\u7f6e\u52a8\u6001\u6807\u5fd7\u6216\u4e2d\u65ad\uff0c\u5f53\u5185\u6838\u5230\u8fbe\u8fd9\u4e9b\u6807\u5fd7\u65f6\uff0c\u9644\u52a0\u5230\u63a2\u9488\u7684\u4ee3\u7801\u5c06\u88ab\u6267\u884c\uff0c\u7136\u540e\u5185\u6838\u6062\u590d\u6b63\u5e38\u6a21\u5f0f\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5185\u6838\u63a2\u9488\u6ca1\u6709\u7a33\u5b9a\u7684ABI\uff0c\u56e0\u6b64\u76f8\u540c\u7684\u4ee3\u7801\u5728\u4e0d\u540c\u7684\u5185\u6838\u7248\u672c\u4e0a\u53ef\u80fd\u65e0\u6cd5\u6210\u529f\u6267\u884c\u3002</p> <p>\u5185\u6838\u63a2\u9488\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ul> <li>kprobes\uff1a\u5728\u6267\u884c\u5185\u6838\u6307\u4ee4\u524d\u63d2\u5165BPF\u7a0b\u5e8f</li> <li>kretprobes\uff1a\u5728\u8fd4\u56de\u524d\u63d2\u5165BPF\u7a0b\u5e8f</li> </ul>"},{"location":"linux/monitor/probe/#_3","title":"\u7528\u6237\u7a7a\u95f4\u63a2\u9488","text":"<p>\u7528\u6237\u7a7a\u95f4\u63a2\u9488\u662f\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\u76d1\u6d4b\u7a0b\u5e8f\uff0c\u4e0e\u5185\u6838\u63a2\u9488\u7c7b\u4f3c\uff0c\u4e5f\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ul> <li>uprobes\uff1a\u5728\u6267\u884c\u7528\u6237\u7a7a\u95f4\u6307\u4ee4\u524d\u63d2\u5165BPF\u7a0b\u5e8f</li> <li>uretprobes\uff1a\u5728\u8fd4\u56de\u524d\u63d2\u5165BPF\u7a0b\u5e8f</li> </ul>"},{"location":"linux/monitor/probe/#_4","title":"\u7528\u6237\u9759\u6001\u8ddf\u8e2a\u70b9","text":"<p>\u7528\u6237\u9759\u6001\u8ddf\u8e2a\u70b9\u53ef\u4ee5\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\uff0c\u7528\u6765\u8ddf\u8e2a\u4efb\u4f55\u8bed\u8a00\u7f16\u5199\u7684\u5e94\u7528\u7a0b\u5e8f\u3002</p> <p>\u4f7f\u7528BCC\u7684<code>tplist</code>\u5de5\u5177\u53ef\u4ee5\u663e\u793a\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u8ddf\u8e2a\u70b9\u3002</p>"},{"location":"linux/monitor/trace/","title":"\u9759\u6001\u8ddf\u8e2a","text":"<p><code>ftrace</code>\u548c<code>perf</code>\u5de5\u5177\u90fd\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u9759\u6001\u8ddf\u8e2a\u3002</p>"},{"location":"linux/monitor/trace/#ftrace","title":"ftrace","text":"<p>\u9996\u5148\u8fdb\u5165\u5230 /sys/kernel/debug/tracing \u76ee\u5f55\uff0c\u67e5\u770b\u5f53\u524d\u652f\u6301\u7684\u8ddf\u8e2a\u5668\uff1a</p> <pre><code>$ cat available_tracers \ntimerlat osnoise hwlat blk mmiotrace function_graph wakeup_dl wakeup_rt wakeup function nop\n</code></pre> <p>\u5176\u4e2d\u5e38\u7528\u7684\u662f<code>function</code>\u548c<code>function_graph</code>\uff0c<code>function</code>\u53ea\u663e\u793a\u51fd\u6570\u540d\uff0c\u800c<code>function_graph</code>\u8fd8\u663e\u793a\u8be5\u51fd\u6570\u7684\u8c03\u7528\u5173\u7cfb\u3002</p> <p>/events/ \u76ee\u5f55\u5217\u51fa\u4e86\u53ef\u4ee5\u8ddf\u8e2a\u7684\u5404\u4e2a\u6a21\u5757\uff0c\u8fdb\u5165\u6a21\u5757\u76ee\u5f55\uff0cenable \u5199\u51651\u8868\u793a\u6253\u5f00\u9759\u6001\u8ddf\u8e2a\uff0c\u7136\u540e\u8bbf\u95ee /tracing/ \u76ee\u5f55\u7684<code>trace_pipe</code>\u5c31\u53ef\u4ee5\u770b\u5230\u5185\u6838\u6253\u5370\u7684\u65e5\u5fd7\u4e86\u3002</p>"},{"location":"linux/monitor/trace/#_2","title":"\u5e38\u7528\u914d\u7f6e","text":"\u540d\u79f0 \u8bf4\u660e available_tracers \u652f\u6301\u7684\u8ddf\u8e2a\u5668\uff0ccurrent_tracer\u5fc5\u987b\u662f\u8fd9\u91cc\u9762\u652f\u6301\u7684\u8ddf\u8e2a\u5668 available_events \u652f\u6301\u7684\u8ddf\u8e2a\u4e8b\u4ef6 available_filter_functions \u53ef\u8ddf\u8e2a\u7684\u51fd\u6570 current_tracer \u5f53\u524d\u4f7f\u7528\u7684\u8ddf\u8e2a\u5668\uff0c\u9ed8\u8ba4\u4e3anop trace \u8ddf\u8e2a\u7ed3\u679c\uff0c\u7528cat\u67e5\u770b tracing_on \u5f00\u542f\u6216\u6682\u505c max_graph_depth \u51fd\u6570\u5d4c\u5957\u7684\u6700\u5927\u6df1\u5ea6 set_ftrace_filter \u4ec5\u8ffd\u8e2a\u7279\u5b9a\u7684\u51fd\u6570 set_ftrace_notrace \u5ffd\u7565\u7279\u5b9a\u7684\u51fd\u6570 set_ftrace_pid \u8ffd\u8e2a\u7279\u5b9a\u7684PID"},{"location":"linux/monitor/trace/#_3","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<ol> <li> <p>\u5173\u95ed\u8ffd\u8e2a</p> <pre><code>$ echo 0 &gt; /sys/kernel/debug/tracing/tracing_on\n</code></pre> </li> <li> <p>\u8bbe\u7f6e\u8ffd\u8e2a\u5668</p> <pre><code>$ echo function &gt; /sys/kernel/debug/tracing/current_tracer\n</code></pre> </li> <li> <p>\u5f00\u542f\u8ffd\u8e2a</p> <pre><code>$ echo 1 &gt; /sys/kernel/debug/tracing/tracing_on\n</code></pre> </li> <li> <p>\u83b7\u53d6trace\u4fe1\u606f</p> <pre><code>$ cat /sys/kernel/debug/tracing/trace\n</code></pre> </li> <li> <p>\u5173\u95ed\u8ffd\u8e2a</p> <pre><code>$ echo 0 &gt; /sys/kernel/debug/tracing/tracing_on\n</code></pre> </li> </ol>"},{"location":"linux/monitor/trace/#trace-cmd","title":"trace-cmd","text":"<p>\u4f7f\u7528<code>ftrace</code>\u9700\u8981\u5bf9\u6587\u4ef6\u8fdb\u884c\u9891\u7e41\u7684\u5199\u5165\u548c\u8bfb\u51fa\uff0c\u64cd\u4f5c\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\u3002\u800c<code>trace-cmd</code>\u662f\u5bf9<code>ftrace</code>\u7684\u5c01\u88c5\uff0c\u4f7f\u7528\u8d77\u6765\u66f4\u52a0\u65b9\u4fbf\u3002</p> <pre><code>trace-cmd version 2.9.1 (d8edc93bf4a92a4575eb3fb1108fef8030ede48b)\n\nusage:\n  trace-cmd [COMMAND] ...\n\n  commands:\n     record - record a trace into a trace.dat file\n     set - set a ftrace configuration parameter\n     start - start tracing without recording into a file\n     extract - extract a trace from the kernel\n     stop - stop the kernel from recording trace data\n     restart - restart the kernel trace data recording\n     show - show the contents of the kernel tracing buffer\n     reset - disable all kernel tracing and clear the trace buffers\n     clear - clear the trace buffers\n     report - read out the trace stored in a trace.dat file\n     stream - Start tracing and read the output directly\n     profile - Start profiling and read the output directly\n     hist - show a histogram of the trace.dat information\n     stat - show the status of the running tracing (ftrace) system\n     split - parse a trace.dat file into smaller file(s)\n     options - list the plugin options available for trace-cmd report\n     listen - listen on a network socket for trace clients\n     agent - listen on a vsocket for trace clients\n     setup-guest - create FIFOs for tracing guest VMs\n     list - list the available events, plugins or options\n     restore - restore a crashed record\n     snapshot - take snapshot of running trace\n     stack - output, enable or disable kernel stack tracing\n     check-events - parse trace event formats\n     dump - read out the meta data from a trace file\n</code></pre>"},{"location":"linux/monitor/trace/#_4","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<p><code>trace-cmd</code>\u6709\u4e24\u79cd\u8ffd\u8e2a\u65b9\u5f0f\uff1a</p> <ul> <li><code>start</code>\u548c<code>stop</code>\uff1a\u8bb0\u5f55\u81f3ringbuffer\u4e2d</li> <li><code>record</code>\u548c<code>report</code>\uff1a\u8bb0\u5f55\u81f3\u6587\u4ef6trace.dat\uff0c\u7c7b\u4f3c\u4e8e<code>perf</code></li> </ul> <p>\u663e\u793a\u53ef\u88ab\u8ffd\u8e2a\u7684\u51fd\u6570\uff1a</p> <pre><code>$ trace-cmd list -f\n</code></pre> <p>\u542f\u7528\u8ffd\u8e2a\u5668\uff1a</p> <pre><code>$ trace-cmd start -p function\n</code></pre> <p>\u67e5\u770b\u8f93\u51fa\uff1a</p> <pre><code>$ trace-cmd show | head -20\n</code></pre> <p>\u5173\u95ed\u8ffd\u8e2a\u5668\uff1a</p> <pre><code>$ trace-cmd stop\n</code></pre> <p>\u6e05\u9664\u7f13\u51b2\u533a\uff1a</p> <pre><code>$ trace-cmd clear\n</code></pre>"},{"location":"linux/monitor/trace/#perf","title":"perf","text":"\u540d\u79f0 \u8bf4\u660e perf list \u5217\u51fa\u6240\u6709\u80fd\u591f\u89e6\u53d1perf\u91c7\u6837\u70b9\u7684\u4e8b\u4ef6 perf probe \u5b9a\u4e49\u65b0\u7684\u52a8\u6001tracepoint perf trace \u7c7b\u4f3cstrace\uff0c\u4e0d\u8fc7\u6027\u80fd\u66f4\u5f3a perf stat \u7edf\u8ba1\u7a0b\u5e8f\u8fd0\u884c\u65f6\u7684\u6027\u80fd\u4fe1\u606f pert top \u5b9e\u65f6\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u51fd\u6570\u5360\u7528\u7387\u60c5\u51b5 perf record \u91c7\u6837\u5e76\u4fdd\u5b58profile\u5230perf.data perf report \u5206\u6790perf.data\u6587\u4ef6 perf script \u8bfb\u53d6perf.data\u5e76\u663e\u793a\u8be6\u7ec6\u7684\u91c7\u6837\u6570\u636e <p>\u5b50\u547d\u4ee4\uff1a</p> <p><code>perf list</code>:</p> <p>\u67e5\u770b\u5f53\u524d\u73af\u5883\u652f\u6301\u7684\u4e8b\u4ef6\uff0c\u5305\u62ec\u786c\u4ef6\u4e8b\u4ef6\u3001\u8f6f\u4ef6\u4e8b\u4ef6\u3001\u9759\u6001\u8ddf\u8e2a\u70b9\u7b49\u3002</p> <p><code>perf stat</code>\uff1a</p> <ul> <li>-e\uff1a\u6307\u5b9a\u8981\u7edf\u8ba1\u7684\u4e8b\u4ef6</li> <li>-r\uff1a\u5236\u5b9a\u8fd0\u884c\u6b21\u6570</li> </ul> <p><code>perf record</code>\uff1a</p> <ul> <li>-g\uff1a\u8bb0\u5f55\u8c03\u7528\u6808\u4fe1\u606f</li> <li>-F\uff1a\u6307\u5b9a\u6bcf\u79d2\u91c7\u6837\u9891\u7387</li> <li>-p\uff1a\u6307\u5b9a\u8fdb\u7a0bID</li> <li>-o\uff1a\u6307\u5b9a\u8f93\u51fa\u6587\u4ef6</li> </ul> <p><code>perf report</code>\uff1a</p> <ul> <li>-i\uff1a\u6307\u5b9aperf.data\u6587\u4ef6</li> <li>-n\uff1a\u4e0d\u8fdb\u884c\u6392\u5e8f</li> <li>-v\uff1a\u663e\u793a\u8be6\u7ec6\u4fe1\u606f</li> </ul>"},{"location":"linux/monitor/trace/#_5","title":"\u751f\u6210\u706b\u7130\u56fe","text":"<ol> <li> <p>\u4f7f\u7528<code>perf</code>\u8bb0\u5f55\u4e8b\u4ef6</p> <pre><code>$ perf record -F 100 -a -g -- sleep 60\n$ perf script &gt; out.perf\n</code></pre> </li> <li> <p>\u6298\u53e0\u6808</p> <pre><code>$ FlameGraph/stackcollapse-perf.pl out.perf &gt; out.folded\n</code></pre> </li> <li> <p>\u751f\u6210\u706b\u7130\u56fe</p> <pre><code>$ FlameGraph/flamegraph.pl out.folded &gt; out.svg\n</code></pre> </li> <li> <p>\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00</p> </li> </ol>"},{"location":"linux/monitor/trace/#_6","title":"\u5206\u6790\u706b\u7130\u56fe","text":"<ul> <li>\u6bcf\u4e00\u5217\u4ee3\u8868\u4e00\u4e2a\u8c03\u7528\u6808\uff0c\u6bcf\u4e00\u4e2a\u683c\u5b50\u4ee3\u8868\u4e00\u4e2a\u51fd\u6570</li> <li>Y\u8f74\u8868\u793a\u8c03\u7528\u6808\u7684\u6df1\u5ea6</li> <li>X\u8f74\u8868\u793a\u51fd\u6570\u88ab\u62bd\u6837\u5230\u7684\u6b21\u6570\uff0c\u8d8a\u5bbd\u8868\u793a\u88ab\u62bd\u6837\u7684\u6b21\u6570\u8d8a\u591a</li> </ul>"},{"location":"linux/optimization/","title":"\u6027\u80fd\u8c03\u4f18","text":"<ul> <li>CPU\u6027\u80fd\u8c03\u4f18</li> <li>\u5185\u5b58\u6027\u80fd\u8c03\u4f18</li> <li>\u78c1\u76d8I/O\u6027\u80fd\u8c03\u4f18</li> <li>\u7f51\u7edc\u6027\u80fd\u8c03\u4f18</li> </ul>"},{"location":"linux/optimization/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>Linux\u6027\u80fd\u4f18\u5316\u5b9e\u6218</li> </ul>"},{"location":"linux/optimization/cpu/","title":"CPU\u6027\u80fd\u8c03\u4f18","text":""},{"location":"linux/optimization/cpu/#cpu_1","title":"CPU\u6027\u80fd\u6307\u6807","text":""},{"location":"linux/optimization/cpu/#cpu_2","title":"CPU\u4f7f\u7528\u7387","text":"<p>CPU\u4f7f\u7528\u7387\uff0c\u662f\u6307\u5355\u4f4d\u65f6\u95f4\u5185CPU\u4f7f\u7528\u60c5\u51b5\u7684\u7edf\u8ba1\uff0c\u4ee5\u767e\u5206\u6bd4\u7684\u65b9\u5f0f\u5c55\u793a\u3002</p> <p>\u4e0eCPU\u4f7f\u7528\u7387\u76f8\u5173\u7684\u6307\u6807\u6709\u8bb8\u591a\uff1a</p> <ul> <li>user\uff1a\u7528\u6237\u6001\u65f6\u95f4</li> <li>nice\uff1a\u4f4e\u4f18\u5148\u7ea7\u7528\u6237\u6001\u65f6\u95f4</li> <li>system\uff1a\u5185\u6838\u6001\u65f6\u95f4</li> <li>idle\uff1a\u7a7a\u95f2\u65f6\u95f4</li> <li>iowait\uff1a\u7b49\u5f85I/O\u5b8c\u6210\u7684\u65f6\u95f4</li> <li>irq\uff1a\u786c\u4e2d\u65ad\u65f6\u95f4</li> <li>softirq\uff1a\u8f6f\u4e2d\u65ad\u65f6\u95f4</li> <li>steal\uff1a\u7ba1\u7406\u7a0b\u5e8f\u65f6\u95f4</li> <li>guest\uff1a\u8fd0\u884c\u865a\u62df\u5904\u7406\u5668\u7684\u65f6\u95f4</li> <li>guest_nice\uff1a\u4f4e\u4f18\u5148\u7ea7\u8fd0\u884c\u865a\u62df\u5904\u7406\u5668\u7684\u65f6\u95f4</li> </ul> <p>\u4f7f\u7528<code>perf top</code>\u5b9e\u65f6\u663e\u793a\u5360\u7528CPU\u65f6\u949f\u6700\u591a\u7684\u51fd\u6570\u6216\u8005\u6307\u4ee4\uff1a</p> <pre><code>$ perf top\nSamples: 833  of event 'cpu-clock', Event count (approx.): 97742399\nOverhead  Shared Object       Symbol\n   7.28%  perf                [.] 0x00000000001f78a4\n   4.72%  [kernel]            [k] vsnprintf\n   4.32%  [kernel]            [k] module_get_kallsym\n   3.65%  [kernel]            [k] _raw_spin_unlock_irqrestore\n...\n</code></pre> <p>\u8f93\u51fa\u7ed3\u679c\u7684\u7b2c\u4e00\u884c\u5206\u522b\u4ee3\u8868\u91c7\u6837\u6570\uff08Samples\uff09\u3001\u4e8b\u4ef6\u7c7b\u578b\uff08event\uff09\u3001\u4e8b\u4ef6\u8ba1\u6570\uff08Event count\uff09\u3002</p> <p>\u4e0b\u65b9\u7684\u8868\u683c\u5404\u5217\u7684\u542b\u4e49\u662f\uff1a</p> <ul> <li>Overhead\uff1a\u5f53\u524d\u51fd\u6570\u6216\u8005\u6307\u4ee4\u5360\u7528\u7684CPU\u65f6\u949f\u767e\u5206\u6bd4</li> <li>Shared Object\uff1a\u51fd\u6570\u6216\u8005\u6307\u4ee4\u6240\u5728\u7684\u52a8\u6001\u94fe\u63a5\u5e93\u540d</li> <li>Symbol\uff1a\u51fd\u6570\u6216\u8005\u6307\u4ee4\u540d\uff0c16\u8fdb\u5236\u5730\u5740\u4ee3\u8868\u672a\u77e5\u7b26\u53f7</li> </ul> <p><code>perf top</code>\u4e0d\u4fdd\u5b58\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>perf record</code>\u548c<code>perf report</code>\u547d\u4ee4\u6765\u8bb0\u5f55\u548c\u5206\u6790\u6570\u636e\uff0c\u540c\u65f6\u52a0\u4e0a-g\u53c2\u6570\u4ee5\u663e\u793a\u8c03\u7528\u5173\u7cfb\u94fe\u3002</p>"},{"location":"linux/optimization/cpu/#_1","title":"\u5e73\u5747\u8d1f\u8f7d","text":"<p>\u6bcf\u5f53\u7cfb\u7edf\u53d8\u6162\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u6267\u884c<code>top</code>\u6216\u8005<code>uptime</code>\u547d\u4ee4\u6765\u4e86\u89e3\u4e0b\u7cfb\u7edf\u7684\u8d1f\u8f7d\u60c5\u51b5\uff0c\u6bd4\u5982\uff1a</p> <pre><code>$ uptime\n02:34:03 up 2 days, 20:14,  1 user,  load average: 0.63, 0.83, 0.88\n</code></pre> <p>\u5bf9\u5e94\u7684\u542b\u4e49\u662f\uff1a</p> <pre><code>02:34:03              //\u5f53\u524d\u65f6\u95f4\nup 2 days, 20:14      //\u7cfb\u7edf\u8fd0\u884c\u65f6\u95f4\n1 user                //\u6b63\u5728\u767b\u5f55\u7528\u6237\u6570\nload average: 0.63, 0.83, 0.88  //1\u5206\u949f\u30015\u5206\u949f\u300115\u5206\u949f\u7684\u5e73\u5747\u8d1f\u8f7d\n</code></pre> <p>\u4ec0\u4e48\u662f\u5e73\u5747\u8d1f\u8f7d\uff1f\u5e73\u5747\u8d1f\u8f7d\u662f\u6307\u5355\u4f4d\u65f6\u95f4\u5185\uff0c\u7cfb\u7edf\u5904\u4e8e\u53ef\u8fd0\u884c\u72b6\u6001\u548c\u4e0d\u53ef\u4e2d\u65ad\u72b6\u6001\u7684\u5e73\u5747\u8fdb\u7a0b\u6570\uff0c\u4e5f\u5c31\u662f\u5e73\u5747\u6d3b\u8dc3\u8fdb\u7a0b\u6570\uff0c\u5b83\u548cCPU\u4f7f\u7528\u7387\u5e76\u6ca1\u6709\u76f4\u63a5\u5173\u7cfb\u3002</p> <p>\u6240\u8c13\u53ef\u8fd0\u884c\u72b6\u6001\u7684\u8fdb\u7a0b\uff0c\u662f\u6307\u6b63\u5728\u4f7f\u7528CPU\u6216\u8005\u6b63\u5728\u7b49\u5f85CPU\u7684\u8fdb\u7a0b\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4f7f\u7528<code>ps</code>\u547d\u4ee4\u770b\u5230\u7684\uff0c\u5904\u4e8eR\u72b6\u6001\uff08Running\u6216Runnable\uff09\u7684\u8fdb\u7a0b\u3002</p> <p>\u4e0d\u53ef\u4e2d\u65ad\u72b6\u6001\u7684\u8fdb\u7a0b\u5219\u662f\u6b63\u5904\u4e8e\u5185\u6838\u6001\u5173\u952e\u6d41\u7a0b\u4e2d\u7684\u8fdb\u7a0b\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6d41\u7a0b\u4e0d\u80fd\u88ab\u6253\u65ad\u3002\u6bd4\u5982\u6700\u5e38\u89c1\u7684\u662f\u7b49\u5f85\u78c1\u76d8I/O\u7684\u8fdb\u7a0b\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u4f7f\u7528<code>ps</code>\u547d\u4ee4\u770b\u5230\u7684\uff0c\u5904\u4e8eD\u72b6\u6001\uff08Uninterruptible Sleep\uff0c\u4e5f\u88ab\u79f0\u4e3aDisk Sleep\uff09\u7684\u8fdb\u7a0b\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u5411\u78c1\u76d8\u8bfb\u5199\u6570\u636e\u65f6\uff0c\u5b83\u9700\u8981\u7b49\u5f85\u78c1\u76d8\u7684\u56de\u5e94\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u662f\u4e0d\u80fd\u88ab\u6253\u65ad\u7684\uff0c\u5426\u5219\u5c31\u4f1a\u51fa\u73b0\u78c1\u76d8\u548c\u5185\u5b58\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\u5e73\u5747\u8d1f\u8f7d\u53ef\u4ee5\u7b80\u5355\u5730\u7406\u89e3\u4e3a\u662f\u5e73\u5747\u6d3b\u8dc3\u8fdb\u7a0b\u6570\uff0c\u6700\u7406\u60f3\u7684\u60c5\u51b5\u662f\u6bcf\u4e2aCPU\u521a\u597d\u8fd0\u884c\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u8fd9\u65f6\u7684\u5e73\u5747\u8d1f\u8f7d\u5c31\u7b49\u4e8eCPU\u7684\u4e2a\u6570\u3002\u6bd4\u5982\u5728\u53ea\u67092\u4e2aCPU\u7684\u7cfb\u7edf\u4e0a\uff0c\u5982\u679c\u5e73\u5747\u8d1f\u8f7d\u662f2\uff0c\u90a3\u4e48\u610f\u5473\u7740\u6240\u6709\u7684CPU\u90fd\u521a\u597d\u88ab\u5b8c\u5168\u5360\u7528\uff1b\u5982\u679c\u5e73\u5747\u8d1f\u8f7d\u662f4\uff0c\u610f\u5473\u7740\u6709\u4e00\u534a\u7684\u8fdb\u7a0b\u7ade\u4e89\u4e0d\u5230CPU\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u67e5\u8be2/proc/cpuoinfo\u6765\u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u6709\u51e0\u4e2aCPU\u3002</p> <p>\u5e73\u5747\u8d1f\u8f7d\u6709\u4e09\u4e2a\u503c\uff0c\u6211\u4eec\u9700\u8981\u7efc\u5408\u67e5\u770b\uff0c\u5206\u6790\u7cfb\u7edf\u8d1f\u8f7d\u7684\u8d8b\u52bf\uff1a</p> <ul> <li>\u5982\u679c\u8fd9\u4e09\u4e2a\u503c\u76f8\u5dee\u4e0d\u5927\uff0c\u8bf4\u660e\u7cfb\u7edf\u8fd0\u884c\u5e73\u7a33\u3002</li> <li>\u5982\u679c1\u5206\u949f\u7684\u503c\u8fdc\u5c0f\u4e8e15\u5206\u949f\u7684\u503c\uff0c\u8bf4\u660e\u7cfb\u7edf\u6700\u8fd1\u7684\u8d1f\u8f7d\u5728\u51cf\u5c11\u3002</li> <li>\u800c\u53cd\u8fc7\u6765\uff0c\u5982\u679c1\u5206\u949f\u7684\u503c\u8fdc\u5927\u4e8e15\u5206\u949f\u7684\u503c\uff0c\u8bf4\u660e\u7cfb\u7edf\u6700\u8fd1\u7684\u8d1f\u8f7d\u5728\u589e\u52a0\u3002</li> </ul> <p>\u5e73\u5747\u8d1f\u8f7d\u548cCPU\u4f7f\u7528\u7387\u4e0d\u4e00\u5b9a\u5b8c\u5168\u5bf9\u5e94\uff0c\u6bd4\u5982\uff1a</p> <ul> <li>CPU\u5bc6\u96c6\u578b\u8fdb\u7a0b\uff0c\u4f7f\u7528\u5927\u91cfCPU\u4e5f\u4f1a\u5bfc\u81f4\u5e73\u5747\u8d1f\u8f7d\u5347\u9ad8\uff0c\u6b64\u65f6\u4e24\u8005\u5bf9\u5e94\u3002</li> <li>I/O\u5bc6\u96c6\u578b\u8fdb\u7a0b\uff0c\u7b49\u5f85I/O\u4f1a\u5bfc\u81f4\u5e73\u5747\u8d1f\u8f7d\u5347\u9ad8\uff0c\u4f46\u662fCPU\u4f7f\u7528\u7387\u4e0d\u4e00\u5b9a\u5f88\u9ad8\u3002</li> <li>\u5927\u91cf\u7b49\u5f85CPU\u7684\u8fdb\u7a0b\u8c03\u5ea6\u4f1a\u5bfc\u81f4\u5e73\u5747\u8d1f\u8f7d\u5347\u9ad8\uff0c\u6b64\u65f6\u7684CPU\u4f7f\u7528\u7387\u4e5f\u4f1a\u6bd4\u8f83\u9ad8\u3002</li> </ul>"},{"location":"linux/optimization/cpu/#_2","title":"\u4e0a\u4e0b\u6587\u5207\u6362","text":"<p>\u4f17\u6240\u5468\u77e5\uff0cLinux\u662f\u4e00\u4e2a\u591a\u4efb\u52a1\u64cd\u4f5c\u7cfb\u7edf\uff0c\u652f\u6301\u8fdc\u5927\u4e8e\u5176CPU\u6838\u5fc3\u6570\u7684\u8fdb\u7a0b\u8fd0\u884c\u3002\u8fd9\u4e9b\u8fdb\u7a0b\u5e76\u975e\u540c\u65f6\u8fd0\u884c\uff0c\u800c\u662f\u4f7f\u7528CPU\u7684\u8c03\u5ea6\u7b97\u6cd5\u8f6e\u6d41\u6267\u884c\u3002\u5728\u6bcf\u4e2a\u4efb\u52a1\u8fd0\u884c\u524d\uff0cCPU\u9700\u8981\u77e5\u9053\u4efb\u52a1\u4ece\u54ea\u91cc\u52a0\u8f7d\u3001\u8fd0\u884c\uff0c\u4e5f\u5c31\u662f\u8bf4\u7cfb\u7edf\u9700\u8981\u63d0\u524d\u8bbe\u7f6e\u5bc4\u5b58\u5668\u4ee5\u53ca\u7a0b\u5e8f\u8ba1\u6570\u5668\u7684\u5185\u5bb9\uff0c\u8fd9\u79cd\u73af\u5883\u88ab\u79f0\u4e3aCPU\u4e0a\u4e0b\u6587\u3002</p> <p>\u800cCPU\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u5c31\u662f\u628a\u4e0a\u4e00\u4e2a\u4efb\u52a1\u7684\u73af\u5883\u4fdd\u5b58\u8d77\u6765\uff0c\u7136\u540e\u52a0\u8f7d\u4e0b\u4e00\u4e2a\u4efb\u52a1\u7684\u73af\u5883\u3002\u6682\u65f6\u6302\u8d77\u7684\u4efb\u52a1\u4f1a\u5728\u672a\u6765\u7684\u67d0\u4e2a\u65f6\u95f4\u70b9\u4e0a\u7ee7\u7eed\u6267\u884c\u3002</p> <p>\u7531\u4e8e\u8fd0\u884c\u4efb\u52a1\u7684\u4e0d\u540c\uff0cCPU\u4e0a\u4e0b\u6587\u5207\u6362\u4e5f\u9700\u8981\u6839\u636e\u4e0d\u540c\u7684\u73af\u5883\u5206\u4e3a\u4e0d\u540c\u7684\u573a\u666f\uff1a</p> <ul> <li>\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\uff1a\u8fdb\u7a0b\u662fLinux\u7cfb\u7edf\u4e2d\u6700\u57fa\u672c\u7684\u6267\u884c\u5355\u5143\uff0c\u8fdb\u7a0b\u7684\u5207\u6362\u7531\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u6765\u5b8c\u6210\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u4fdd\u5b58\u548c\u6062\u590d\u8fdb\u7a0b\u7684\u5404\u79cd\u5bc4\u5b58\u5668\u72b6\u6001\u3001\u5185\u5b58\u9875\u7b49\u6570\u636e\uff0c\u56e0\u6b64\uff0c\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u5f00\u9500\u6bd4\u8f83\u5927\u3002</li> <li>\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\uff1a\u7ebf\u7a0b\u662f\u8f7b\u91cf\u7ea7\u7684\u8fdb\u7a0b\uff0c\u540c\u4e00\u8fdb\u7a0b\u7684\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u662f\u5171\u4eab\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u7684\uff0c\u56e0\u6b64\uff0c\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u6bd4\u8fdb\u7a0b\u7684\u4e0a\u4e0b\u6587\u5207\u6362\u8981\u5feb\u5f97\u591a\u3002</li> <li>\u4e2d\u65ad\u4e0a\u4e0b\u6587\u5207\u6362\uff1a\u4e3a\u4e86\u5feb\u901f\u54cd\u5e94\u786c\u4ef6\u7684\u4e8b\u60c5\uff0c\u4e00\u4e2a\u786c\u4ef6\u4e2d\u65ad\u4f1a\u968f\u65f6\u6253\u65ad\u8fdb\u7a0b\u7684\u6b63\u5e38\u6267\u884c\uff0c\u8f6c\u800c\u6267\u884c\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u3002\u5728\u6253\u65ad\u5176\u4ed6\u8fdb\u7a0b\u65f6\uff0c\u5c31\u9700\u8981\u5c06\u8fdb\u7a0b\u5f53\u524d\u7684\u72b6\u6001\u4fdd\u5b58\u4e0b\u6765\uff0c\u4ee5\u4fbf\u540e\u7eed\u6062\u590d\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u53eb\u505a\u4e2d\u65ad\u4e0a\u4e0b\u6587\u5207\u6362\u3002</li> </ul> <p>\u5bf9\u4e8e\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u8fd9\u91cc\u9700\u8981\u8bf4\u660e\u4e00\u4e0b\u3002\u4e00\u6b21\u7cfb\u7edf\u8c03\u7528\u6d89\u53ca\u5230\u4ece\u7528\u6237\u6001\u5230\u5185\u6838\u6001\uff0c\u518d\u4ece\u5185\u6838\u6001\u5230\u7528\u6237\u6001\uff0c\u4e00\u5171\u4e24\u6b21CPU\u4e0a\u4e0b\u6587\u5207\u6362\u3002</p> <p>\u5bf9\u4e8e\u4e00\u822c\u7684\u8fdb\u7a0b\u4e4b\u95f4\u7684\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u53ea\u6709\u5728\u8fdb\u7a0b\u8c03\u5ea6\u7684\u65f6\u5019\u624d\u4f1a\u7528\u5230\u3002Linux\u4e3a\u6bcf\u4e2aCPU\u90fd\u7ef4\u62a4\u4e86\u4e00\u4e2a\u5c31\u7eea\u961f\u5217\uff0c\u5c06\u6d3b\u8dc3\u8fdb\u7a0b\uff08\u6b63\u5728\u8fd0\u884c\u548c\u7b49\u5f85\u8fd0\u884c\u7684\u8fdb\u7a0b\uff09\u6309\u7167\u4f18\u5148\u7ea7\u548c\u7b49\u5f85\u65f6\u95f4\u6392\u5e8f\uff0c\u7136\u540e\u9009\u62e9\u6700\u9700\u8981CPU\u7684\u8fdb\u7a0b\uff0c\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\u8bf7\u770b\u8fdb\u7a0b\u8c03\u5ea6\u3002\u8fdb\u7a0b\u5728\u4ee5\u4e0b\u573a\u666f\u4e2d\uff0c\u4f1a\u89e6\u53d1\u8fdb\u7a0b\u8c03\u5ea6\uff1a</p> <ul> <li>\u5206\u914d\u4e2a\u8fdb\u7a0b\u7684\u65f6\u95f4\u7247\u8017\u5c3d\u3002</li> <li>\u8fdb\u7a0b\u5728\u7b49\u5f85\u67d0\u4e2a\u8d44\u6e90\u3002</li> <li>\u8fdb\u7a0b\u8c03\u7528<code>sleep()</code>\u7b49\u51fd\u6570\u4e3b\u52a8\u6302\u8d77\u3002</li> <li>\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b\u9700\u8981\u8fd0\u884c\u3002</li> <li>\u53d1\u751f\u786c\u4ef6\u4e2d\u65ad\u3002</li> </ul> <p>\u4e0a\u4e0b\u6587\u5207\u6362\u662f\u8861\u91cf\u6027\u80fd\u7684\u4e00\u4e2a\u91cd\u8981\u6307\u6807\uff0c\u5b83\u53ef\u4ee5\u662f\u81ea\u613f\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u975e\u81ea\u613f\u7684\uff1a</p> <ul> <li>\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\u53d8\u591a\u4e86\uff0c\u8bf4\u660e\u8fdb\u7a0b\u90fd\u5728\u7b49\u5f85\u8d44\u6e90\uff0c\u53ef\u80fd\u53d1\u751f\u4e86I/O\u95ee\u9898\u3002</li> <li>\u975e\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\u53d8\u591a\u4e86\uff0c\u8bf4\u660e\u8fdb\u7a0b\u90fd\u5728\u88ab\u5f3a\u5236\u8c03\u5ea6\uff0c\u53ef\u80fd\u53d1\u751f\u4e86CPU\u7ade\u4e89\u95ee\u9898\u3002</li> </ul>"},{"location":"linux/optimization/cpu/#cpu_3","title":"CPU\u7f13\u5b58\u547d\u4e2d\u7387","text":"<p>CPU\u5177\u6709L1\u3001L2\u3001L3\u4e09\u7ea7\u7f13\u5b58\uff0c\u5176\u4e2dL3\u662f\u5171\u4eab\u7684\u3002\u4eceL1\u5230L3\uff0c\u7f13\u5b58\u7684\u5927\u5c0f\u4f9d\u6b21\u589e\u52a0\uff0c\u4f46\u662f\u6027\u80fd\u4f9d\u6b21\u964d\u4f4e\u3002\u5b83\u4eec\u7684\u547d\u4e2d\u7387\uff0c\u8861\u91cf\u7684\u662fCPU\u7f13\u5b58\u7684\u590d\u7528\u60c5\u51b5\u3002</p>"},{"location":"linux/optimization/cpu/#cpu_4","title":"CPU\u6027\u80fd\u5206\u6790\u5de5\u5177","text":"<p>\u5176\u4e2d<code>top</code>\u3001<code>vmstat</code>\u3001<code>pidstat</code>\u51e0\u4e4e\u6db5\u76d6\u4e86\u6240\u6709\u91cd\u8981\u7684CPU\u6027\u80fd\u6307\u6807\u3002</p> <p>\u4f7f\u7528<code>top</code>\u547d\u4ee4\u52a8\u6001\u76d1\u6d4bCPU\uff1a</p> <pre><code>$ top\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n28961 root      20   0   43816   3148   4040 R   3.2  0.0   0:00.01 top\n  620 root      20   0   37280  33676    908 D   0.3  0.4   0:00.01 app\n    1 root      20   0  160072   9416   6752 S   0.0  0.1   0:37.64 systemd\n 1896 root      20   0       0      0      0 Z   0.0  0.0   0:00.00 devapp\n    2 root      20   0       0      0      0 S   0.0  0.0   0:00.10 kthreadd\n    4 root       0 -20       0      0      0 I   0.0  0.0   0:00.00 kworker/0:0H\n    6 root       0 -20       0      0      0 I   0.0  0.0   0:00.00 mm_percpu_wq\n    7 root      20   0       0      0      0 S   0.0  0.0   0:06.37 ksoftirqd/0\n...\n</code></pre> <ul> <li>\u4f7f\u7528<code>uptime</code>\u67e5\u770b\u7cfb\u7edf\u5e73\u5747\u8d1f\u8f7d\uff1a</li> </ul> <pre><code>$ uptime\n02:34:03 up 2 days, 20:14,  1 user,  load average: 0.63, 0.83, 0.88\n</code></pre> <ul> <li>\u4f7f\u7528<code>mpstat</code>\u67e5\u770bCPU\u4f7f\u7528\u7387\uff1a</li> </ul> <pre><code># -P ALL \u8868\u793a\u76d1\u63a7\u6240\u6709CPU\uff0c\u540e\u9762\u6570\u5b575\u8868\u793a\u95f4\u96945\u79d2\u540e\u8f93\u51fa\u4e00\u7ec4\u6570\u636e\n$ mpstat -P ALL 5\nLinux 4.15.0 (ubuntu) 09/22/18 _x86_64_ (2 CPU)\n13:30:06     CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle\n13:30:11     all   50.05    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00   49.95\n13:30:11       0    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00  100.00\n13:30:11       1  100.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00\n</code></pre> <ul> <li>\u4f7f\u7528<code>pidstat</code>\u67e5\u770b\u8fdb\u7a0b\u7684CPU\u4f7f\u7528\u7387\uff1a</li> </ul> <pre><code># \u95f4\u96945\u79d2\u540e\u8f93\u51fa\u4e00\u7ec4\u6570\u636e\n$ pidstat -u 5 1\n13:37:07      UID       PID    %usr %system  %guest   %wait    %CPU   CPU  Command\n13:37:12        0      2962  100.00    0.00    0.00    0.00  100.00     1  stress\n</code></pre> <ul> <li>\u4f7f\u7528<code>vmstat</code>\u67e5\u770b\u4e0a\u4e0b\u6587\u5207\u6362\u60c5\u51b5\uff1a</li> </ul> <pre><code># \u6bcf\u96945\u79d2\u8f93\u51fa1\u7ec4\u6570\u636e\n$ vmstat 5\nprocs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----\n r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st\n 0  0      0 7005360  91564 818900    0    0     0     0   25   33  0  0 100  0  0\n</code></pre> <p>cs\uff1a\u6bcf\u79d2\u4e0a\u4e0b\u6587\u5207\u6362\u6b21\u6570\u3002</p> <p>in\uff1a\u6bcf\u79d2\u4e2d\u65ad\u6b21\u6570\u3002</p> <p>r\uff1a\u5c31\u7eea\u961f\u5217\u957f\u5ea6\u3002</p> <p>b\uff1a\u7b49\u5f85\u8d44\u6e90\u7684\u8fdb\u7a0b\u6570\u3002</p> <ul> <li>\u4f7f\u7528<code>pidstat</code>\u67e5\u770b\u6bcf\u4e2a\u8fdb\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u60c5\u51b5\uff1a</li> </ul> <pre><code># \u6bcf\u96945\u79d2\u8f93\u51fa1\u7ec4\u6570\u636e\n$ pidstat -w 5\nLinux 4.15.0 (ubuntu)  09/23/18  _x86_64_  (2 CPU)\n\n08:18:26      UID       PID   cswch/s nvcswch/s  Command\n08:18:31        0         1      0.20      0.00  systemd\n08:18:31        0         8      5.40      0.00  rcu_sched\n...\n</code></pre> <p>cswch/s\uff1a\u6bcf\u79d2\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\u6b21\u6570\u3002</p> <p>nvcswch/s\uff1a\u6bcf\u79d2\u975e\u81ea\u613f\u4e0a\u4e0b\u6587\u5207\u6362\u6b21\u6570\u3002</p> <ul> <li>\u4f7f\u7528<code>watch</code>\u67e5\u770b\u8f6f\u4e2d\u65ad\u4f7f\u7528\u60c5\u51b5\uff1a</li> </ul> <pre><code>$ watch -d cat /proc/softirqs\n                    CPU0       CPU1\n          HI:          0          0\n       TIMER:    1083906    2368646\n      NET_TX:         53          9\n      NET_RX:    1550643    1916776\n       BLOCK:          0          0\n    IRQ_POLL:          0          0\n     TASKLET:     333637       3930\n       SCHED:     963675    2293171\n     HRTIMER:          0          0\n         RCU:    1542111    1590625\n</code></pre> <ul> <li>\u4f7f\u7528<code>dstat</code>\u67e5\u770bCPU\u548cI/O\u4f7f\u7528\u60c5\u51b5\uff1a</li> </ul> <pre><code># \u95f4\u96941\u79d2\u8f93\u51fa10\u7ec4\u6570\u636e\n$ dstat 1 10\nYou did not select any stats, using -cdngy by default.\n--total-cpu-usage-- -dsk/total- -net/total- ---paging-- ---system--\nusr sys idl wai stl| read  writ| recv  send|  in   out | int   csw\n  0   0  96   4   0|1219k  408k|   0     0 |   0     0 |  42   885\n  0   0   2  98   0|  34M    0 | 198B  790B|   0     0 |  42   138\n  0   0   0 100   0|  34M    0 |  66B  342B|   0     0 |  42   135\n  0   0  84  16   0|5633k    0 |  66B  342B|   0     0 |  52   177\n  0   3  39  58   0|  22M    0 |  66B  342B|   0     0 |  43   144\n  0   0   0 100   0|  34M    0 | 200B  450B|   0     0 |  46   147\n  0   0   2  98   0|  34M    0 |  66B  342B|   0     0 |  45   134\n  0   0   0 100   0|  34M    0 |  66B  342B|   0     0 |  39   131\n  0   0  83  17   0|5633k    0 |  66B  342B|   0     0 |  46   168\n  0   3  39  59   0|  22M    0 |  66B  342B|   0     0 |  37   134\n...\n</code></pre> <ul> <li>\u4f7f\u7528<code>sar</code>\u67e5\u770b\u7cfb\u7edf\u7684\u7f51\u7edc\u6536\u53d1\u60c5\u51b5\uff1a</li> </ul> <pre><code># -n DEV \u8868\u793a\u663e\u793a\u7f51\u7edc\u6536\u53d1\u7684\u62a5\u544a\uff0c\u95f4\u96941\u79d2\u8f93\u51fa\u4e00\u7ec4\u6570\u636e\n$ sar -n DEV 1\n15:03:46        IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s   %ifutil\n15:03:47         eth0  12607.00   6304.00    664.86    358.11      0.00      0.00      0.00      0.01\n15:03:47      docker0   6302.00  12604.00    270.79    664.66      0.00      0.00      0.00      0.00\n15:03:47           lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00\n15:03:47    veth9f6bbcd   6302.00  12604.00    356.95    664.66      0.00      0.00      0.00      0.05\n</code></pre> <p>IFACE\uff1a\u7f51\u5361</p> <p>rxpck/txpck\uff1a\u6bcf\u79d2\u63a5\u6536\u4e0e\u53d1\u9001\u7684\u6570\u636e\u5305</p> <p>rxkB/txkB\uff1a\u6bcf\u79d2\u63a5\u6536\u4e0e\u53d1\u9001\u7684\u5343\u5b57\u8282</p> <p>rxcmp/txcmp\uff1a\u6bcf\u79d2\u63a5\u6536\u4e0e\u53d1\u9001\u7684\u538b\u7f29\u6570\u636e\u5305</p> <p>rxmcst/txmcst\uff1a\u6bcf\u79d2\u63a5\u6536\u4e0e\u53d1\u9001\u7684\u591a\u64ad\u6570\u636e\u5305</p> <p>%ifutil\uff1a\u7f51\u7edc\u63a5\u53e3\u7684\u4f7f\u7528\u7387</p> <ul> <li>\u4f7f\u7528<code>tcpdump</code>\u6293\u53d6\u7f51\u7edc\u5305\uff1a</li> </ul> <pre><code># -i eth0 \u53ea\u6293\u53d6eth0\u7f51\u5361\uff0c-n\u4e0d\u89e3\u6790\u534f\u8bae\u540d\u548c\u4e3b\u673a\u540d\n# tcp port 80\u8868\u793a\u53ea\u6293\u53d6tcp\u534f\u8bae\u5e76\u4e14\u7aef\u53e3\u53f7\u4e3a80\u7684\u7f51\u7edc\u5e27\n$ tcpdump -i eth0 -n tcp port 80\n15:11:32.678966 IP 192.168.0.2.18238 &gt; 192.168.0.30.80: Flags [S], seq 458303614, win 512, length 0\n...\n</code></pre>"},{"location":"linux/optimization/disk/","title":"\u78c1\u76d8I/O\u6027\u80fd\u8c03\u4f18","text":""},{"location":"linux/optimization/disk/#_1","title":"\u78c1\u76d8\u6027\u80fd\u6307\u6807","text":"<ul> <li>\u4f7f\u7528\u7387\uff1a\u78c1\u76d8\u5904\u7406I/O\u7684\u65f6\u95f4\u767e\u5206\u6bd4\u3002</li> <li>\u9971\u548c\u5ea6\uff1a\u78c1\u76d8\u5904\u7406I/O\u7684\u7e41\u5fd9\u7a0b\u5ea6\u3002</li> <li>IOPS\uff1a\u6bcf\u79d2\u7684I/O\u8bf7\u6c42\u6570\u3002</li> <li>\u541e\u5410\u91cf\uff1a\u6bcf\u79d2\u7684I/O\u8bf7\u6c42\u6570\u636e\u91cf\u3002</li> <li>\u54cd\u5e94\u65f6\u95f4\uff1aI/O\u8bf7\u6c42\u4ece\u53d1\u51fa\u5230\u6536\u5230\u54cd\u5e94\u7684\u95f4\u9694\u65f6\u95f4\u3002</li> </ul>"},{"location":"linux/optimization/disk/#_2","title":"\u78c1\u76d8\u6027\u80fd\u5206\u6790\u5de5\u5177","text":"<ul> <li>\u4f7f\u7528<code>iostat</code>\u89c2\u5bdf\u78c1\u76d8I/O\u4f7f\u7528\u60c5\u51b5\uff1a</li> </ul> <pre><code># -d -x\u8868\u793a\u663e\u793a\u6240\u6709\u78c1\u76d8I/O\u7684\u6307\u6807\n$ iostat -d -x 1 \nDevice            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util \nloop0            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 \nloop1            0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 \nsda              0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 \nsdb              0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00 \n</code></pre> <ul> <li>\u4f7f\u7528<code>pidstat</code>\u89c2\u5bdf\u8fdb\u7a0bI/O\u4f7f\u7528\u60c5\u51b5\uff1a</li> </ul> <pre><code>$ pidstat -d 1 \n13:39:51      UID       PID   kB_rd/s   kB_wr/s kB_ccwr/s iodelay  Command \n13:39:52      102       916      0.00      4.00      0.00       0  rsyslogd\n</code></pre> <ul> <li>\u4f7f\u7528<code>iotop</code>\u5bf9\u8fdb\u7a0bI/O\u6392\u5e8f\uff1a</li> </ul> <pre><code>$ iotop\nTotal DISK READ :       0.00 B/s | Total DISK WRITE :       7.85 K/s \nActual DISK READ:       0.00 B/s | Actual DISK WRITE:       0.00 B/s \n  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO&gt;    COMMAND \n15055 be/3 root        0.00 B/s    7.85 K/s  0.00 %  0.00 % systemd-journald \n</code></pre> <ul> <li>\u4f7f\u7528<code>filetop</code>\u8ddf\u8e2a\u6587\u4ef6\u7684\u8bfb\u5199\u60c5\u51b5\uff1a</li> </ul> <pre><code># -C \u9009\u9879\u8868\u793a\u8f93\u51fa\u65b0\u5185\u5bb9\u65f6\u4e0d\u6e05\u7a7a\u5c4f\u5e55 \n$ ./filetop -C \n\nTID    COMM             READS  WRITES R_Kb    W_Kb    T FILE \n514    python           0      1      0       2832    R 669.txt \n514    python           0      1      0       2490    R 667.txt \n514    python           0      1      0       2685    R 671.txt \n514    python           0      1      0       2392    R 670.txt \n514    python           0      1      0       2050    R 672.txt \n\n...\n\nTID    COMM             READS  WRITES R_Kb    W_Kb    T FILE \n514    python           2      0      5957    0       R 651.txt \n514    python           2      0      5371    0       R 112.txt \n514    python           2      0      4785    0       R 861.txt \n514    python           2      0      4736    0       R 213.txt \n514    python           2      0      4443    0       R 45.txt \n</code></pre>"},{"location":"linux/optimization/memory/","title":"\u5185\u5b58\u6027\u80fd\u8c03\u4f18","text":""},{"location":"linux/optimization/memory/#_2","title":"\u5185\u5b58\u6027\u80fd\u6307\u6807","text":""},{"location":"linux/optimization/memory/#freeavailable","title":"Free/Available","text":"<p>\u7cfb\u7edf\u4ece\u4e0a\u7535\u5230\u5f15\u5bfc\u5b8c\u6210\uff0cfirmware/BIOS\u8981\u5360\u7528\u4e00\u90e8\u5206\u5185\u5b58\uff0c\u5185\u6838\u5360\u7528\u4e00\u90e8\u5206\u5185\u5b58\uff0c\u8fd8\u6709\u4e00\u4e9b\u4fdd\u7559\u7684\u5185\u5b58\uff0c\u5269\u4e0b\u7684\u5c31\u662fMemTotal\u3002</p> <p>MemFree\u8868\u793a\u7cfb\u7edf\u7a7a\u95f2\u7684\u5185\u5b58\u3002\u9664\u5f00\u7a7a\u95f2\u5185\u5b58\u5916\uff0c\u7cfb\u7edf\u4e2d\u8fd8\u6709\u4e00\u4e9b\u5185\u5b58\u7ecf\u8fc7\u56de\u6536\u4ee5\u540e\u4e5f\u53ef\u4ee5\u91ca\u653e\u51fa\u6765\uff0c\u8fd9\u4e24\u90e8\u5206\u52a0\u8d77\u6765\u5c31\u662fMemAvailable\u3002</p>"},{"location":"linux/optimization/memory/#buffercache","title":"Buffer/Cache","text":"<p>Buffer\u548cCache\u88ab\u8bbe\u8ba1\u7528\u6765\u63d0\u5347\u7cfb\u7edfI/O\u7684\u6027\u80fd\uff0c\u5b83\u4eec\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5145\u5f53\u8d77\u6162\u901f\u78c1\u76d8\u4e0e\u5feb\u901fCPU\u4e4b\u95f4\u7684\u6865\u6881\u3002</p> <ul> <li> <p>Buffer\u662f\u5bf9\u78c1\u76d8\u6570\u636e\u7684\u7f13\u5b58\uff0c\u901a\u5e38\u4e0d\u4f1a\u7279\u522b\u5927\u3002</p> </li> <li> <p>Cached\u662f\u5bf9\u6587\u4ef6\u6570\u636e\u7684\u7f13\u5b58\u3002</p> </li> </ul> <p>\u4e0d\u8bba\u662f\u8bfb\u8fd8\u662f\u5199\uff0c\u5e94\u7528\u7a0b\u5e8f\u90fd\u4f18\u5148\u4ece\u7f13\u5b58\u4e2d\u8bfb\u53d6\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u8bbf\u95ee\u4f4e\u901f\u7684\u78c1\u76d8\uff0c\u4ece\u800c\u63d0\u9ad8\u7cfb\u7edf\u7684I/O\u6027\u80fd\u3002</p>"},{"location":"linux/optimization/memory/#_3","title":"\u5185\u5b58\u6027\u80fd\u5206\u6790\u5de5\u5177","text":"<ul> <li>\u4f7f\u7528<code>free</code>\u67e5\u770b\u7cfb\u7edf\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff1a</li> </ul> <pre><code>$ free\n              total        used        free      shared  buff/cache   available\nMem:        8169348      263524     6875352         668     1030472     7611064\nSwap:             0           0           0\n</code></pre> <p>total\uff1a\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u7ba1\u7406\u7684\u603b\u5185\u5b58\u5927\u5c0f</p> <p>used\uff1a\u5df2\u7ecf\u4f7f\u7528\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u5305\u62ec\u5b9e\u9645\u4f7f\u7528\u7684\u5185\u5b58\u548cbuffer\u4ee5\u53cacache</p> <p>free\uff1a\u7a7a\u95f2\u7684\u5185\u5b58\u5927\u5c0f</p> <p>shared\uff1a\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7684\u5185\u5b58\u5927\u5c0f</p> <p>buff/cache\uff1a\u78c1\u76d8\u7f13\u5b58\u548c\u6587\u4ef6\u7f13\u5b58\u7684\u5927\u5c0f</p> <p>available\uff1a\u53ef\u7528\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u5373\u7cfb\u7edf\u6700\u5927\u53ef\u4ee5\u538b\u69a8\u7684\u5185\u5b58\u4f59\u91cf</p> <p>swap\uff1a\u4ea4\u6362\u5206\u533a\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5</p> <ul> <li>\u4f7f\u7528<code>top</code>\u67e5\u770b\u8fdb\u7a0b\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff1a</li> </ul> <pre><code>$ top\n...\nKiB Mem :  8169348 total,  6871440 free,   267096 used,  1030812 buff/cache\nKiB Swap:        0 total,        0 free,        0 used.  7607492 avail Mem\n\n\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n  430 root      19  -1  122360  35588  23748 S   0.0  0.4   0:32.17 systemd-journal\n 1075 root      20   0  771860  22744  11368 S   0.0  0.3   0:38.89 snapd\n 1048 root      20   0  170904  17292   9488 S   0.0  0.2   0:00.24 networkd-dispat\n    1 root      20   0   78020   9156   6644 S   0.0  0.1   0:22.92 systemd\n12376 azure     20   0   76632   7456   6420 S   0.0  0.1   0:00.01 systemd\n12374 root      20   0  107984   7312   6304 S   0.0  0.1   0:00.00 sshd\n...\n</code></pre> <p>VIRT\uff1a\u8fdb\u7a0b\u4f7f\u7528\u7684\u865a\u62df\u5185\u5b58\u5927\u5c0f\uff0c\u7533\u8bf7\u8fc7\u4f46\u5c1a\u672a\u5206\u914d\u7269\u7406\u5185\u5b58\u4e5f\u4f1a\u8ba1\u7b97\u5728\u5185\u3002</p> <p>RES\uff1a\u8fdb\u7a0b\u5b9e\u9645\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u5927\u5c0f\u3002</p> <p>SHR\uff1a\u8fdb\u7a0b\u4f7f\u7528\u7684\u5171\u4eab\u5185\u5b58\u5927\u5c0f\uff0c\u6bd4\u5982\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002</p> <p>%MEM\uff1a\u8fdb\u7a0b\u4f7f\u7528\u7684\u7269\u7406\u5185\u5b58\u5360\u7cfb\u7edf\u603b\u5185\u5b58\u7684\u767e\u5206\u6bd4\u3002</p> <ul> <li>\u4f7f\u7528<code>cachestat</code>\u548c<code>cachetop</code>\u67e5\u770b\u7f13\u5b58\u547d\u4e2d\u60c5\u51b5\uff1a</li> </ul> <p>\u8fd9\u4e24\u4e2a\u5de5\u5177\u662fbcc\u8f6f\u4ef6\u5305\u7684\u4e00\u90e8\u5206\uff0c\u57fa\u4e8eebpf\u6280\u672f\u3002</p> <pre><code>$ cachestat 1 3\n   TOTAL   MISSES     HITS  DIRTIES   BUFFERS_MB  CACHED_MB\n       2        0        2        1           17        279\n       2        0        2        1           17        279\n       2        0        2        1           17        279 \n</code></pre> <p>TOTAL\uff1a\u603b\u7f13\u5b58\u6b21\u6570\u3002</p> <p>MISSES\uff1a\u7f13\u5b58\u672a\u547d\u4e2d\u7684\u6b21\u6570\u3002</p> <p>HITS\uff1a\u7f13\u5b58\u547d\u4e2d\u7684\u6b21\u6570\u3002</p> <p>DIRTIES\uff1a\u7f13\u5b58\u4e2ddirty pages\u810f\u9875\uff09\u7684\u6b21\u6570\u3002</p> <p>BUFFERS_MB\uff1a\u7f13\u5b58Buffers\u7684\u5927\u5c0f\uff0c\u5355\u4f4d\u662fMB\u3002</p> <p>CACHED_MB\uff1a\u7f13\u5b58\u4e2dCache\u7684\u6570\u91cf\uff0c\u5355\u4f4d\u662fMB\u3002</p> <pre><code>$ cachetop\n11:58:50 Buffers MB: 258 / Cached MB: 347 / Sort: HITS / Order: ascending\nPID      UID      CMD              HITS     MISSES   DIRTIES  READ_HIT%  WRITE_HIT%\n   13029 root     python                  1        0        0     100.0%       0.0%\n</code></pre> <p>READ_HIT\uff1a\u8bfb\u7f13\u5b58\u547d\u4e2d\u7387\u3002</p> <p>WRITE_HIT\uff1a\u5199\u7f13\u5b58\u547d\u4e2d\u7387\u3002</p> <ul> <li>\u4f7f\u7528<code>smem</code>\u5c06\u8fdb\u7a0b\u6309\u7167swap\u4f7f\u7528\u91cf\u6392\u5e8f\uff1a</li> </ul> <pre><code>$ smem --sort swap\n  PID User     Command                         Swap      USS      PSS      RSS \n1168907 ubuntu   bash                               0      468     1091     3576 \n1169141 ubuntu   /bin/bash --init-file /home        0     1060     1693     4416 \n1207585 ubuntu   sleep 180                          0      120      268     1916 \n1208733 ubuntu   /usr/bin/python3 /usr/bin/s        0    10908    11197    13956 \n1784762 ubuntu   /bin/bash --init-file /home        0      976     1038     3104 \n2002992 ubuntu   /lib/systemd/systemd --user        0     2052     2620     6248 \n2003004 ubuntu   /usr/libexec/tracker-miner-        0    10288    10768    16148 \n2003010 ubuntu   /usr/bin/dbus-daemon --sess        0      776      903     3868\n...\n</code></pre> <ul> <li>\u4f7f\u7528<code>sar</code>\u67e5\u770b\u5185\u5b58\u5404\u6307\u6807\u53d8\u5316\u60c5\u51b5\uff1a</li> </ul> <pre><code># \u95f4\u96941\u79d2\u8f93\u51fa\u4e00\u7ec4\u6570\u636e\n# -r\u8868\u793a\u663e\u793a\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c-S\u8868\u793a\u663e\u793aSwap\u4f7f\u7528\u60c5\u51b5\n$ sar -r -S 1\n04:39:56    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty\n04:39:57      6249676   6839824   1919632     23.50    740512     67316   1691736     10.22    815156    841868         4\n\n04:39:56    kbswpfree kbswpused  %swpused  kbswpcad   %swpcad\n04:39:57      8388604         0      0.00         0      0.00\n\n04:39:57    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty\n04:39:58      6184472   6807064   1984836     24.30    772768     67380   1691736     10.22    847932    874224        20\n\n04:39:57    kbswpfree kbswpused  %swpused  kbswpcad   %swpcad\n04:39:58      8388604         0      0.00         0      0.00\n\n\u2026\n\n\n04:44:06    kbmemfree   kbavail kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty\n04:44:07       152780   6525716   8016528     98.13   6530440     51316   1691736     10.22    867124   6869332         0\n\n04:44:06    kbswpfree kbswpused  %swpused  kbswpcad   %swpcad\n04:44:07      8384508      4096      0.05        52      1.27\n</code></pre>"},{"location":"linux/optimization/network/","title":"\u7f51\u7edc\u6027\u80fd\u8c03\u4f18","text":""},{"location":"others/","title":"\u6742\u4e03\u6742\u516b","text":""},{"location":"others/config/","title":"\u914d\u7f6e\u6587\u4ef6","text":"<p>\u957f\u671f\u4ee5\u6765\uff0c\u914d\u7f6e\u6587\u4ef6\u90fd\u4ee5.json\u540e\u7f00\u7684\u5f62\u5f0f\u51fa\u73b0\uff0c\u5404\u5927\u7f16\u7a0b\u8bed\u8a00\u4e5f\u90fd\u63d0\u4f9b\u4e86\u89e3\u6790JSON\u6587\u4ef6\u7684\u5e93\u3002\u540e\u6765\u7a81\u7136\u51fa\u73b0\u4e86\u4e00\u79cd.yml\u540e\u7f00\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd9\u79cd\u683c\u5f0f\u7684\u4f7f\u7528\u8d8a\u6765\u8d8a\u9891\u7e41\u3002\u5982\u65e5\u4e2d\u5929\u7684Docker\u548cK8S\u5c31\u662f\u4f7f\u7528\u8fd9\u79cd\u683c\u5f0f\u4f5c\u4e3a\u5176\u914d\u7f6e\u6587\u4ef6\u3002</p> <p>\u4e00\u4e2a\u65b0\u5de5\u5177\u7684\u51fa\u73b0\u907f\u514d\u4e0d\u4e86\u6709\u4e24\u4e2a\u539f\u56e0\uff1a</p> <ul> <li>\u65e7\u5de5\u5177\u5728\u67d0\u4e9b\u4f7f\u7528\u573a\u666f\u8868\u73b0\u5403\u529b\uff0c\u9700\u8981\u66f4\u9ad8\u6548\u7684\u66ff\u4ee3\u65b9\u6848</li> <li>\u65e7\u5de5\u5177\u7528\u8d77\u6765\u4e5f\u6ca1\u4ec0\u4e48\u4e0d\u597d\uff0c\u4f46\u662f\u65b0\u7684\u5de5\u5177\u66f4\u52a0\u987a\u624b</li> </ul> <p>YAML\u5c31\u5c5e\u4e8e\u7b2c\u4e8c\u79cd\u3002\u4e00\u5f00\u59cb\u7684\u65f6\u5019\u5927\u5bb6\u90fd\u7528JSON\u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\uff0c\u4e5f\u6ca1\u89c9\u5f97\u6709\u4ec0\u4e48\u4e0d\u597d\u3002\u4f46\u662fYAML\u51fa\u73b0\u540e\uff0c\u5c31\u5f00\u59cb\u89c9\u5f97JSON\u6587\u4ef6\u597d\u4e71\u554a\uff0c\u8fd9\u5199\u7684\u90fd\u4ec0\u4e48\u73a9\u610f\uff0c\u8fd8\u4e0d\u652f\u6301\u6ce8\u91ca\uff0c\u770b\u5f97\u4eba\u5934\u6655\u3002</p> <p>YAML\u5b9e\u9645\u4e0a\u662f\u5bf9JSON\u7684\u7cbe\u7b80\uff0c\u4f7f\u5176\u66f4\u7b26\u5408\u4eba\u7c7b\u7684\u9605\u8bfb\u4e60\u60ef\u3002\u6211\u4eec\u6765\u770b\u4e0b\u8bed\u6cd5\u5bf9\u6bd4\uff1a</p> <p>\u5728JSON\u4e2d\u5982\u679c\u8981\u5b9a\u4e49\u4e00\u4e2a\"name\"\u5c5e\u6027\uff0c\u5fc5\u987b\u6309\u7167\u4e25\u683c\u7684\u683c\u5f0f\u8981\u6c42\uff1a</p> <pre><code>{\n    \"name\": \"Tom\"\n}\n</code></pre> <p>\u4ee5\u4e0b\u683c\u5f0f\u7edf\u7edf\u9519\u8bef\uff1a</p> <pre><code>//key\u6ca1\u6709\u5f15\u53f7\n{\n    name: \"Tom\"\n}\n\n//key\u4e0d\u662f\"\"\n{\n    'name': \"Tom\"\n}\n\n//value\u4e0d\u662f\"\"\n{\n    \"name\": 'Tom'\n}\n</code></pre> <p>\u5bf9\u5e94\u5230YAML\u4e2d\uff0c\u5c31\u4ec5\u4ec5\u53ea\u662f\u8fd9\u4e48\u4e00\u884c\uff0c\u8fde\u5927\u62ec\u53f7\u90fd\u7701\u7565\u4e86\uff1a</p> <pre><code>name: Tom\n</code></pre> <p>\u5982\u679c\u662f\u6570\u7ec4\u5f62\u5f0f\uff0c\u5c31\u66f4\u660e\u663e\u4e86\uff1a</p> <p>JSON:</p> <pre><code>{\n    \"names\": [{ \"name\": \"ruims\" }, { \"name\": \"ruidoc\" }]\n}\n</code></pre> <p>YAML:</p> <pre><code>names:\n  - name: ruims\n  - name: ruidoc\n</code></pre> <p>\u5f88\u660e\u663e\u53ef\u4ee5\u770b\u5230YAML\u5728\u8bed\u6cd5\u4e0a\u6bd4JSON\u66f4\u52a0\u7b80\u6d01\u3002\u8fd8\u6709\u4e00\u4e2a\u66f4\u5927\u7684\u4f18\u70b9\u662fYAML\u652f\u6301\u6ce8\u91ca\uff0c\u8fd9\u4f7f\u5f97\u914d\u7f6e\u6587\u4ef6\u66f4\u52a0\u6613\u8bfb\u3002JSON\u7531\u4e8e\u4e0d\u652f\u6301\u6ce8\u91ca\uff0c\u914d\u7f6e\u4e00\u591a\u5c31\u4f1a\u663e\u5f97\u975e\u5e38\u51cc\u4e71\u3002</p> <pre><code># \u5e94\u7528\u540d\u79f0\nname: my_app\n# \u5e94\u7528\u7aef\u53e3\nport: 8080\n</code></pre> <p>\u628a\u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\u7529\u7ed9\u522b\u4eba\uff0c\u8fd8\u4f1a\u62c5\u5fc3\u4ed6\u770b\u4e0d\u61c2\u5417\uff1f</p>"},{"location":"others/config/#yaml","title":"YAML\u8bed\u6cd5","text":"<p>YAML\u8bed\u6cd5\u7279\u70b9\uff1a</p> <ul> <li>\u5927\u5c0f\u5199\u654f\u611f</li> <li>\u4f7f\u7528\u7f29\u8fdb\u4ee3\u8868\u5c42\u7ea7\u5173\u7cfb</li> <li># \u8868\u793a\u6ce8\u91ca</li> </ul> <p>YAML\u652f\u6301\u7684\u6570\u636e\u7ed3\u6784\u6709\u4e09\u79cd\uff1a</p> <ul> <li>\u5bf9\u8c61\uff1a\u952e\u503c\u5bf9\u7684\u96c6\u5408\uff0c\u5373\u5b57\u5178</li> <li>\u6570\u7ec4\uff1a\u4e00\u7ec4\u6309\u6b21\u5e8f\u6392\u5217\u7684\u503c</li> <li>\u7eaf\u91cf\uff1a\u5355\u4e2a\u7684\u3001\u4e0d\u53ef\u518d\u5206\u7684\u503c</li> </ul>"},{"location":"others/config/#_2","title":"\u5bf9\u8c61","text":"<p>\u5bf9\u8c61\u952e\u503c\u5bf9\u4f7f\u7528\u5192\u53f7\u7ed3\u6784\u8868\u793a\uff0c\u5192\u53f7\u540e\u9762\u8981\u52a0\u4e00\u4e2a\u7a7a\u683c\u3002</p> <pre><code>name: Tom\nJob: programmer\n</code></pre>"},{"location":"others/config/#_3","title":"\u6570\u7ec4","text":"<p>\u6570\u7ec4\u4f7f\u7528\u4e00\u4e2a\u77ed\u6a2a\u7ebf\u52a0\u4e00\u4e2a\u7a7a\u683c\u5206\u9694\u7684\u591a\u4e2a\u503c\u8868\u793a\u3002</p> <pre><code># \u8fd9\u662f\u5bf9\u8c61\nname: Tom\njob: programmer\n\n# \u8fd9\u662f\u6570\u7ec4\nhobby:\n    - \u770b\u4e66\n    - \u7f16\u7a0b\n</code></pre>"},{"location":"others/config/#_4","title":"\u7eaf\u91cf","text":"<p>YAML\u652f\u6301\u7684\u7eaf\u91cf\u6709\uff1a</p> <ul> <li>\u5b57\u7b26\u4e32</li> <li>\u5e03\u5c14\u503c</li> <li>\u6574\u6570</li> <li>\u6d6e\u70b9\u6570</li> <li>Null</li> <li>\u65f6\u95f4</li> <li>\u65e5\u671f</li> </ul> <p>\u77e5\u9053\u4ee5\u4e0a\u8bed\u6cd5\u5df2\u7ecf\u8db3\u591f\u4f60\u5199\u57fa\u672c\u7684YAML\u6587\u4ef6\u4e86\uff0c\u662f\u4e0d\u662f\u5f88\u7b80\u5355\uff1f</p> <p>\u5982\u679c\u9700\u8981\u9a8c\u8bc1\u81ea\u5df1\u5199\u5f97\u5bf9\u4e0d\u5bf9\uff0c\u53ef\u4ee5\u53bb\u8fd9\u4e2a\u7f51\u7ad9\uff1ahttps://toolgg.com/yaml-validator.html\u3002</p>"},{"location":"others/ffmpeg/","title":"ffmpeg","text":"<ul> <li>\u5bb9\u5668(container)\u683c\u5f0f\uff1a\u4e00\u79cd\u6587\u4ef6\u5c01\u88c5\u7c7b\u578b\uff0c\u91cc\u9762\u4e3b\u8981\u5305\u542b\u4e86\u6d41\uff0c\u4e00\u822c\u4f1a\u4f7f\u7528\u4e00\u4e2a\u7279\u5b9a\u7684\u540e\u7f00\uff0c\u6bd4\u5982.mov\u3001.avi\u3001.wav\u7b49</li> <li>\u6d41(stream)\uff1a\u5728\u5bb9\u5668\u4e2d\u5b58\u50a8\u97f3\u9891\u6216\u8005\u89c6\u9891\u3001\u5b57\u5e55\u7b49\u6570\u636e</li> <li>\u5143\u6570\u636e(metadata)\uff1a\u4e00\u822c\u4f4d\u4e8e\u5bb9\u5668\u4e4b\u4e2d\uff0c\u544a\u8bc9\u6211\u4eec\u4e00\u4e9b\u989d\u5916\u7684\u4fe1\u606f</li> <li>\u7f16\u89e3\u7801\u5668(codec)\uff1a\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u6307\u7684\u662f\u4e00\u79cd\u538b\u7f29\u6807\u51c6\uff0c\u6bd4\u5982 H.264\u3001H.265</li> </ul> <p>ffmpeg\u6846\u67b6\u53ef\u4ee5\u7b80\u5355\u5206\u4e3a\u4e24\u5c42\uff0c\u4e0a\u5c42\u662f\u4ee5 ffmpeg\u3001ffplay\u3001ffprobe \u4e3a\u4ee3\u8868\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5176\u5e95\u5c42\u662f\u4e00\u4e9b\u57fa\u7840\u5e93\uff0c\u5305\u542b AVFormat\u3001AVCodec\u3001AVFilter\u3001AVDevices\u3001AVUtil \u7b49\u6a21\u5757\u5e93\u3002</p> <ul> <li>AVFormat\uff1a\u5c01\u88c5/\u89e3\u5c01\u88c5\u6a21\u5757</li> <li>AVCodec\uff1a\u7f16\u89e3\u7801\u6a21\u5757</li> <li>AVFilter\uff1a\u6ee4\u955c\u6a21\u5757</li> <li>AVDevice\uff1a\u8bbe\u5907\u6a21\u5757</li> <li>swscale\uff1a\u56fe\u50cf\u8f6c\u6362\u6a21\u5757</li> <li>swresample\uff1a\u97f3\u9891\u8f6c\u6362\u6a21\u5757</li> <li>ffmpeg\uff1a\u7f16\u89e3\u7801\u5de5\u5177</li> <li>ffprobe\uff1a\u591a\u5a92\u4f53\u5206\u6790\u5668</li> <li>ffplay\uff1a\u64ad\u653e\u5668</li> </ul>"},{"location":"others/ffmpeg/#_1","title":"\u547d\u4ee4\u884c","text":""},{"location":"others/ffmpeg/#ffmpeg_1","title":"ffmpeg","text":"<p>\u901a\u8fc7<code>ffmpeg --help</code>\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b ffmpeg \u5e38\u89c1\u7684\u547d\u4ee4\uff0c\u5927\u6982\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u516d\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>ffmpeg\u4fe1\u606f\u67e5\u8be2</li> <li>\u516c\u5171\u64cd\u4f5c\u53c2\u6570</li> <li>\u6587\u4ef6\u64cd\u4f5c\u53c2\u6570</li> <li>\u89c6\u9891\u64cd\u4f5c\u53c2\u6570</li> <li>\u97f3\u9891\u64cd\u4f5c\u53c2\u6570</li> <li>\u5b57\u5e55\u64cd\u4f5c\u53c2\u6570</li> </ul> <p>\u67e5\u770b\u652f\u6301\u7684\u5bb9\u5668\u6587\u4ef6\u683c\u5f0f\uff1a<code>ffmpeg -formats</code></p> <p>\u67e5\u770b\u652f\u6301\u7684\u7f16\u89e3\u7801\u5668\uff1a<code>ffmpeg -codecs</code></p> <p>\u67e5\u770b\u652f\u6301\u7684\u6ee4\u955c\uff1a<code>ffmpeg -filters</code></p> <p>\u63d0\u53d6AAC\u97f3\u9891\u6d41\uff1a<code>ffmpeg -i input.mp4 -vn -acodec copy output.aac</code></p> <p>\u63d0\u53d6H.264\u89c6\u9891\u6d41\uff1a<code>ffmpeg -i input.mp4 -vcodec copy -an output.h264</code></p> <p>\u5982\u679c\u4ec5\u4ec5\u662f\u4f7f\u7528 ffmpeg \u8f6c\u6362\u5c01\u88c5\u683c\u5f0f\uff0c\u90a3\u4e48\u6240\u4f7f\u7528\u7684 CPU \u8d44\u6e90\u5e76\u4e0d\u591a\uff0c\u4f46\u662f\u7f16\u7801\u8f6c\u6362\u4f1a\u6d88\u8017\u5927\u91cf CPU \u8d44\u6e90\u3002</p>"},{"location":"others/ffmpeg/#ffprobe","title":"ffprobe","text":"<p>ffprobe \u652f\u6301\u7684\u53c2\u6570\u6bd4\u8f83\u591a\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u9009\u9879\uff1a</p> <ul> <li><code>-v</code>\uff1a\u6307\u5b9a\u8f93\u51fa\u7684\u8be6\u7ec6\u7a0b\u5ea6\uff0c0\u4e3a\u6700\u5c11\uff0c9\u4e3a\u6700\u591a</li> <li><code>-show_format</code>\uff1a\u67e5\u770b\u6587\u4ef6\u7684\u5bb9\u5668\u4fe1\u606f\uff0c\u5305\u62ec\u683c\u5f0f\u3001\u65f6\u957f\u3001\u7801\u7387\u7b49</li> <li><code>-show_streams</code>\uff1a\u67e5\u770b\u6587\u4ef6\u7684\u6d41\u4fe1\u606f\uff0c\u5305\u62ec\u7c7b\u578b\u3001\u5e27\u7387\u3001\u5206\u8fa8\u7387\u7b49</li> <li><code>show_chapters</code>\uff1a\u67e5\u770b\u6587\u4ef6\u7684\u7ae0\u8282\u4fe1\u606f</li> <li><code>show_packets</code>\uff1a\u67e5\u770b\u6587\u4ef6\u7684\u6570\u636e\u5305\u4fe1\u606f</li> <li><code>show_frames</code>\uff1a\u67e5\u770b\u6587\u4ef6\u4e2d\u7684\u89c6\u9891\u5e27\u4fe1\u606f</li> <li><code>of</code>\uff1a\u6307\u5b9a\u8f93\u51fa\u7684\u683c\u5f0f\u4ee5\u4fbf\u540e\u7eed\u5904\u7406\uff0c\u6bd4\u5982<code>-of json</code>\u8f93\u51fajson\u683c\u5f0f</li> </ul>"},{"location":"others/ffmpeg/#ffplay","title":"ffplay","text":"<p>ffplay \u4e0d\u4ec5\u662f\u64ad\u653e\u5668\uff0c\u540c\u65f6\u4e5f\u662f\u6d4b\u8bd5 ffmpeg \u7684 Codec \u7ec4\u4ef6\u3001Format \u7ec4\u4ef6\u4ee5\u53ca Filter \u7ec4\u4ef6\u7684\u53ef\u89c6\u5316\u5de5\u5177\uff0c\u5e76\u4e14\u53ef\u4ee5\u505a\u53ef\u89c6\u5316\u7684\u5a92\u4f53\u53c2\u6570\u5206\u6790\u3002</p>"},{"location":"others/ffmpeg/#_2","title":"\u5c01\u88c5\u4e0e\u89e3\u5c01\u88c5","text":"<p>ffmpeg \u652f\u6301\u591a\u79cd\u5bb9\u5668\u683c\u5f0f\uff0c\u6240\u8c13\u5bb9\u5668\u5c31\u662f\u4e00\u79cd\u5141\u8bb8\u5c06\u5355\u4e2a\u6216\u591a\u4e2a\u97f3\u9891\u3001\u89c6\u9891\u3001\u5b57\u5e55\u7b49\u6570\u636e\u6d41\u5b58\u5165\u5355\u4e2a\u6587\u4ef6\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u901a\u5e38\u4f34\u968f\u7740\u7528\u4e8e\u8bc6\u522b\u8fd9\u4e9b\u6570\u636e\u6d41\u7684\u5143\u6570\u636e\u3002\u5143\u6570\u636e\u88ab\u5b58\u50a8\u5728\u5934\u90e8\uff0c\u4e5f\u88ab\u79f0\u4e3a\u97f3\u89c6\u9891\u5173\u952e\u6570\u636e\u7d22\u5f15\u3002</p> <p>\u5bb9\u5668\u683c\u5f0f\u7684\u8bbe\u8ba1\u81f3\u5c11\u8981\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u4e2a\u9700\u6c42\uff1a</p> <ul> <li>\u6355\u83b7\u89c6\u9891\u56fe\u50cf\u3001\u97f3\u9891\u4fe1\u53f7</li> <li>\u6587\u4ef6\u7684\u4ea4\u6362\u4e0e\u4e0b\u8f7d\uff0c\u5305\u62ec\u589e\u91cf\u4e0b\u8f7d\u4e0e\u64ad\u653e</li> <li>\u672c\u5730\u64ad\u653e</li> <li>\u7f16\u8f91\u3001\u7ec4\u5408\u3001\u5feb\u901f\u5b9a\u4f4d\u4e0e\u641c\u7d22</li> <li>\u6d41\u5f0f\u64ad\u653e\u53ca\u62c9\u6d41\u5f55\u5236</li> </ul>"},{"location":"others/ffmpeg/#mp4","title":"MP4","text":"<p>MP4 \u662f\u4e00\u79cd\u5e38\u89c1\u7684\u89c6\u9891\u5bb9\u5668\u683c\u5f0f\uff0c\u8de8\u5e73\u53f0\u6027\u6bd4\u8f83\u597d\u3002\u5b83\u4e3b\u8981\u5305\u542b\u4e24\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u5143\u6570\u636e(moov)\uff1a\u5305\u542b\u901a\u7528\u4fe1\u606f\uff0c\u6bd4\u5982\u6bcf\u4e2a\u97f3\u9891\u3001\u89c6\u9891\u5e27\u7684\u65f6\u95f4\u4fe1\u606f\u548c\u504f\u79fb\u91cf\u7b49</li> <li>\u97f3\u89c6\u9891\u6570\u636e(mdat)\uff1a\u5305\u542b\u89c6\u9891\u548c\u97f3\u9891\u5e27\uff0c\u901a\u5e38\u4ee5\u4ea4\u9519\u987a\u5e8f\u5b58\u653e</li> </ul> <p>MP4 \u6587\u4ef6\u683c\u5f0f\u4e2d\u5305\u542b\u591a\u4e2a\u5b50\u5bb9\u5668\uff0c\u88ab\u79f0\u4e3a box  \u6216\u8005 atom\uff0cmoov \u548c mdat \u90fd\u662f box\u3002</p> <p>\u5173\u4e8e MP4 \u683c\u5f0f\u4fe1\u606f\uff0c\u9700\u8981\u77e5\u9053\u4ee5\u4e0b\u51e0\u4e2a\u6982\u5ff5\uff1a</p> <ul> <li>MP4 \u6587\u4ef6\u7531\u591a\u4e2a box \u548c FullBox \u7ec4\u6210</li> <li>\u6bcf\u4e2a box \u7531 header \u548c data \u4e24\u90e8\u5206\u7ec4\u6210</li> <li>header \u5305\u542b\u4e86\u6574\u4e2a box \u7684 size \u548c type\uff0c\u5f53 size \u7b49\u4e8e0\u65f6\uff0c\u4ee3\u8868\u8fd9\u662f\u6700\u540e\u4e00\u4e2a box\uff1b\u5f53 size \u7b49\u4e8e1\u65f6\uff0c\u4ee3\u8868\u9700\u8981\u4e00\u4e2a largesize \u6765\u63cf\u8ff0\uff1b\u5f53 type \u4e3a uuid\u65f6\uff0c\u4ee3\u8868\u8fd9\u4e2a box \u4e2d\u7684\u6570\u636e\u65f6\u7528\u6237\u81ea\u5b9a\u4e49\u6269\u5c55\u7c7b\u578b</li> <li>FullBox \u662f box \u7684\u6269\u5c55\uff0c\u5728 header \u4e2d\u589e\u52a08\u4f4d\u7684 version \u6807\u5fd7\u548c24a\u4f4d\u7684 flags \u6807\u5fd7</li> <li>data \u662f box \u7684\u5b9e\u9645\u6570\u636e\uff0c\u53ef\u4ee5\u662f\u7eaf\u5a92\u4f53\u6570\u636e\uff0c\u4e5f\u53ef\u4ee5\u5d4c\u5957 box\uff0c\u8fd9\u65f6\u8be5 box \u53c8\u88ab\u79f0\u4e3a container box</li> </ul>"},{"location":"others/ffmpeg/#_3","title":"\u89c6\u9891\u6587\u4ef6\u5207\u7247","text":"<p>\u89c6\u9891\u6587\u4ef6\u5207\u7247\u662f\u6307\u5c06\u4e00\u4e2a\u5927\u7684\u89c6\u9891\u6587\u4ef6\u5206\u5272\u6210\u591a\u4e2a\u5c0f\u6bb5\u7684\u89c6\u9891\u6587\u4ef6\u7684\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5728\u89c6\u9891\u7f16\u8f91\u3001\u5206\u53d1\u548c\u6d41\u5a92\u4f53\u4f20\u8f93\u4e2d\u975e\u5e38\u6709\u7528\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u547d\u4ee4\u793a\u4f8b\uff1a</p> <pre><code>ffmpeg -i input.mp4 -c copy -map 0 -segment_time 00:10:00 -f segment output%03d.mp4\n</code></pre> <p>\u8be5\u547d\u4ee4\u5c06\u8f93\u5165\u89c6\u9891\u5207\u7247\u4e3a 10 \u5206\u949f\u7684\u7247\u6bb5\uff0c\u5e76\u4e14\u81ea\u52a8\u8f93\u51fa\u6587\u4ef6\u540d\u3002</p> <p>\u5728 ffmpeg \u4e2d\uff0c\u7ecf\u5e38\u4f7f\u7528 -ss \u548c -t \u53c2\u6570\u6765\u6307\u5b9a\u5207\u7247\u7684\u8d77\u59cb\u65f6\u95f4\u548c\u6301\u7eed\u65f6\u95f4\u3002</p> <ul> <li><code>-ss</code>\uff1a\u6307\u5b9a\u5207\u7247\u7684\u8d77\u59cb\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u79d2</li> <li><code>-t</code>\uff1a\u6307\u5b9a\u5207\u7247\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u79d2</li> </ul> <p>\u793a\u4f8b\uff1a</p> <pre><code>ffmpeg -i input.mp4 -c copy -ss 00:05:00 -t 00:10:00 output.mp4\n</code></pre> <p>\u8be5\u547d\u4ee4\u5c06\u4ece\u7b2c 5 \u5206\u949f\u5f00\u59cb\u622a\u53d6\u89c6\u9891\uff0c\u5171\u622a\u53d6 10 \u5206\u949f\uff0c\u8f93\u51fa\u6587\u4ef6\u540d\u4e3a output.mp4\u3002</p>"},{"location":"others/ffmpeg/#_4","title":"\u7f16\u7801\u4e0e\u8f6c\u7801","text":"<p>ffmpeg \u672c\u8eab\u5e76\u4e0d\u652f\u6301 H.264 \u7f16\u7801\u5668\uff0c\u800c\u662f\u901a\u8fc7\u96c6\u6210\u7b2c\u4e09\u65b9\u6a21\u5757\u7684\u65b9\u5f0f\u8fdb\u884c\u652f\u6301\uff0c\u6bd4\u5982 x264\uff0c\u53ef\u4ee5\u901a\u8fc7<code>ffmpeg -h encoder=libx264</code>\u547d\u4ee4\u67e5\u770b\u652f\u6301\u7684\u7f16\u7801\u5668\u3002</p> <p>x264 \u652f\u6301\u8bb8\u591a\u53c2\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7<code>ffmpeg -h encoder=libx264</code>\u67e5\u770b\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u4e00\u4e9b\u91cd\u8981\u7684\u53c2\u6570\u3002</p> <ol> <li>\u7f16\u7801\u5668\u9884\u8bbe\u53c2\u6570 preset\uff1a\u7528\u6765\u6743\u8861\u538b\u7f29\u6548\u7387\u548c\u7f16\u7801\u901f\u5ea6\uff0c\u9ed8\u8ba4\u4e3a medium\u3002 preset \u53c2\u6570\u4f1a\u5f71\u54cd\u540e\u7eed\u7684\u5f88\u591a\u53c2\u6570\uff0c\u4e00\u822c\u4f18\u5148\u8bbe\u7f6e</li> <li>\u7f16\u7801\u4f18\u5316\u53c2\u6570 tune\uff1a\u76f4\u64ad\u63a8\u6d41\u65f6\u4e00\u822c\u9009\u62e9 zerolatency</li> <li>profile \u548c level\uff1aprofile \u7528\u6765\u6307\u5b9a\u7f16\u7801\u7ea7\u522b\uff0clevel \u7528\u6765\u6307\u5b9a\u7f16\u7801\u901f\u5ea6</li> <li>\u7801\u7387\u63a7\u5236\uff1a\u901a\u8fc7\u4e09\u4e2a\u53c2\u6570<code>-b:v</code>\u3001<code>-maxrate</code>\u3001<code>-minrate</code>\u6765\u63a7\u5236\u7801\u7387</li> </ol>"},{"location":"others/ffmpeg/#_5","title":"\u6d41\u5a92\u4f53\u6280\u672f","text":"<p>\u6d41\u5a92\u4f53\u662f\u6307\u4ee5\u8fde\u7eed\u7684\u65b9\u5f0f\u4ece\u4e00\u4e2a\u6e90\u5934\u4f20\u9012\u548c\u6d88\u8d39\u97f3\u89c6\u9891\u6570\u636e\u7684\u6280\u672f\uff0c\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u5f88\u5c11\u6216\u6ca1\u6709\u4e2d\u95f4\u5b58\u50a8\u3002</p> <p>\u6d41\u5f0f\u4f20\u8f93\u5c31\u662f\u4eba\u4eec\u5728\u4e92\u8054\u7f51\u89c2\u770b\u89c6\u9891(\u5305\u62ec\u542c\u97f3\u9891)\u65f6\u4f7f\u7528\u7684\u6570\u636e\u4f20\u8f93\u65b9\u6cd5\u3002\u800c\u5b9e\u65f6\u6d41\u5f0f\u4f20\u8f93\u662f\u6307\u6d41\u5a92\u4f53\u89c6\u9891\u901a\u8fc7\u7f51\u7edc\u5b9e\u65f6\u53d1\u9001\uff0c\u65e0\u987b\u9884\u5148\u5f55\u5236\u548c\u5b58\u50a8\u3002</p> <p>\u5b9e\u65f6\u6d41\u5f0f\u4f20\u8f93\u7684\u4e3b\u8981\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u91c7\u96c6\uff1a\u91c7\u96c6\u6444\u50cf\u5934\u3001\u9ea6\u514b\u98ce\u3001\u5c4f\u5e55\u7b49\u8f93\u5165\u6e90\u7684\u89c6\u9891\u548c\u97f3\u9891\u6570\u636e</li> <li>\u7f16\u7801\uff1a\u5bf9\u89c6\u9891\u548c\u97f3\u9891\u6570\u636e\u8fdb\u884c\u7f16\u7801\uff0c\u7f16\u7801\u540e\u7684\u89c6\u9891\u548c\u97f3\u9891\u6570\u636e\u79f0\u4e3a\u6d41\u5a92\u4f53\u6570\u636e</li> <li>\u5206\u6bb5\uff1a\u5c06\u7f16\u7801\u540e\u7684\u6d41\u5a92\u4f53\u6570\u636e\u5206\u6bb5\uff0c\u5e76\u5c06\u5206\u6bb5\u6570\u636e\u53d1\u9001\u81f3\u670d\u52a1\u5668</li> <li>CDN\uff1a\u5185\u5bb9\u5206\u53d1\u7f51\u7edc(Content Delivery Network)\u5c06\u5185\u5bb9\u5206\u53d1\u81f3\u7528\u6237</li> <li>\u89e3\u7801\uff1a\u7528\u6237\u7684\u5a92\u4f53\u64ad\u653e\u5668(\u4e13\u95e8\u7684\u5e94\u7528\u6216\u8005\u662f\u6d4f\u89c8\u5668\u5185\u7684\u89c6\u9891\u64ad\u653e\u5668)\u5c06\u6570\u636e\u89e3\u7801\uff0c\u5e76\u64ad\u653e\u89c6\u9891</li> </ol> <p>ffmpeg \u652f\u6301 RTMP \u6d41\u3001 RTSP \u6d41\u3001HTTP \u6d41\u3001TCP/UDP \u6d41\u7b49\u591a\u79cd\u6d41\u5a92\u4f53\u534f\u8bae\u3002</p>"},{"location":"others/interpreter/","title":"\u89e3\u91ca\u5668","text":"<p>\u89e3\u91ca\u5668\u8d1f\u8d23\u5c06\u6e90\u4ee3\u7801\u8f6c\u6362\u4e3a\u673a\u5668\u6307\u4ee4\uff0c\u5b83\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a</p> <ol> <li>\u8bcd\u6cd5\u5206\u6790\u5668</li> <li>\u8bed\u6cd5\u5206\u6790\u5668</li> <li>\u62bd\u8c61\u8bed\u6cd5\u6811</li> <li>\u5185\u90e8\u5bf9\u8c61\u7cfb\u7edf</li> <li>\u6c42\u503c\u5668</li> </ol>"},{"location":"others/interpreter/#_2","title":"\u8bcd\u6cd5\u5206\u6790\u5668","text":"<p>\u8bcd\u6cd5\u5206\u6790\u5668\u5c06\u6e90\u4ee3\u7801\u8f6c\u6362\u4e3a\u8bcd\u6cd5\u5355\u5143\u2014\u2014\u6784\u6210\u6e90\u4ee3\u7801\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u4f8b\u5982\u5173\u952e\u5b57\u3001\u8fd0\u7b97\u7b26\u3001\u5206\u9694\u7b26\u7b49\u3002 \u8bcd\u6cd5\u5206\u6790\u5668\u4f1a\u904d\u5386\u8f93\u5165\u7684\u6e90\u4ee3\u7801\uff0c\u8bc6\u522b\u51fa\u6bcf\u4e2a\u8bcd\u6cd5\u5355\u5143\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u8d77\u6765\u3002</p>"},{"location":"others/interpreter/#_3","title":"\u8bed\u6cd5\u5206\u6790\u5668","text":"<p>\u8bed\u6cd5\u5206\u6790\u5668\u5c06\u8bcd\u6cd5\u5355\u5143\u8f6c\u6362\u4e3a\u62bd\u8c61\u8bed\u6cd5\u6811(Abstract Syntax Tree\uff0cAST)\uff0c\u5e76\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u68c0\u67e5\u8bed\u6cd5\u662f\u5426\u6b63\u786e\u3002 \u4e4b\u6240\u4ee5\u4f7f\u7528\"\u62bd\u8c61\"\u8fd9\u4e2a\u8bcd\uff0c\u662f\u56e0\u4e3a AST \u7701\u7565\u4e86\u6e90\u4ee3\u7801\u4e2d\u53ef\u89c1\u7684\u67d0\u4e9b\u7ec6\u8282\uff0c\u6bd4\u5982\u5206\u53f7\u3001\u6362\u884c\u7b26\u3001\u7a7a\u683c\u3001\u6ce8\u91ca\u3001\u62ec\u53f7\u7b49\u3002</p>"},{"location":"others/serializer/","title":"\u6570\u636e\u5e8f\u5217\u5316","text":"<p>\u6570\u636e\u5e8f\u5217\u5316\u662f\u5c06\u6570\u636e\u7ed3\u6784\u8f6c\u6362\u4e3a\u6613\u4e8e\u5b58\u50a8\u548c\u4f20\u8f93\u7684\u5f62\u5f0f\u7684\u8fc7\u7a0b\uff0c\u5728\u53e6\u4e00\u4e2a\u73af\u5883\u4e2d\u53ef\u4ee5\u53cd\u5e8f\u5217\u5316\u56de\u539f\u59cb\u6570\u636e\u7ed3\u6784\u3002</p> <p>Protocol Buffers(\u7b80\u79f0Protobuf)\uff0c\u662f\u8c37\u6b4c\u5f00\u53d1\u7684\u5e8f\u5217\u5316\u6846\u67b6\u3002\u4e0e\u5f00\u53d1\u8bed\u8a00\u65e0\u5173\uff0c\u548c\u5e73\u53f0\u65e0\u5173\uff0c\u5177\u6709\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\u3002Protobuf\u548c\u6240\u6709\u7684\u5e8f\u5217\u5316\u6846\u67b6\u4e00\u6837\uff0c\u90fd\u53ef\u4ee5\u7528\u4e8e\u6570\u636e\u5b58\u50a8\u3001\u901a\u8baf\u534f\u8bae\u3002</p> <p>\u4f7f\u7528Protobuf\u5e8f\u5217\u5316\u7684\u7ed3\u679c\u4f53\u79ef\u8fdc\u6bd4XML\u3001JSON\u8981\u5c0f\uff0c\u4e14\u901f\u5ea6\u5feb\u5f88\u591a\uff0c\u56e0\u6b64\u662f\u6570\u636e\u4f20\u8f93\u7684\u9996\u9009\u3002</p>"},{"location":"others/serializer/#_2","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<ol> <li> <p>\u5b9a\u4e49.proto\u6587\u4ef6\uff1a</p> person.proto<pre><code>syntax = \"proto3\";\n\nmessage Person {\n    string name = 1;\n    int32 id = 2;\n    bool has_pets = 3;\n}\n</code></pre> </li> <li> <p>\u7f16\u8bd1.proto\u6587\u4ef6\uff1a</p> <pre><code>protoc --cpp_out=. person.proto\n</code></pre> </li> <li> <p>\u5b9a\u4e49\u5e8f\u5217\u5316\u7c7b\uff1a</p> <pre><code>#include \"person.pb.h\"\n\nint main() {\n    // \u521b\u5efa\u4e00\u4e2a Person \u5bf9\u8c61\n    Person person;\n    person.set_name(\"Alice\");\n    person.set_id(1234);\n    person.set_has_pets(true);\n\n    // \u5e8f\u5217\u5316\u5230\u5185\u5b58\u4e2d\n    std::string serialized_data;\n    person.SerializeToString(&amp;serialized_data);\n\n    // \u53cd\u5e8f\u5217\u5316\u4ece\u5185\u5b58\u4e2d\n    Person deserialized_person;\n    deserialized_person.ParseFromString(serialized_data);\n\n    // \u4f7f\u7528\u53cd\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\n    std::cout &lt;&lt; \"Name: \" &lt;&lt; deserialized_person.name() &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"ID: \" &lt;&lt; deserialized_person.id() &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"Has pets: \" &lt;&lt; deserialized_person.has_pets() &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> </li> </ol>"},{"location":"others/video/","title":"\u97f3\u89c6\u9891\u57fa\u7840","text":""},{"location":"others/video/#_2","title":"\u56fe\u50cf\u57fa\u7840","text":"<p>\u4e00\u5e45\u56fe\u50cf\u5f80\u5f80\u662f\u4e00\u4e2a\u4e8c\u7ef4\u7684\u77e9\u9635\u5757\uff0c\u6709\u5bbd\u5ea6\u548c\u9ad8\u5ea6\u3002\u5728\u8ba1\u7b97\u673a\u7684\u4e16\u754c\u4e2d\uff0c\u56fe\u50cf\u7531\u4e00\u4e2a\u4e2a\u7684\u70b9\u7ec4\u6210\uff0c\u8fd9\u4e2a\u70b9\u88ab\u79f0\u4e3a\u50cf\u7d20(pixel)\u3002\u5982\u5e38\u89c1\u7684 1920 x 1080 \u7684\u56fe\u50cf\uff0c\u5b83\u7684\u50cf\u7d20\u70b9\u6709 1920 x 1080 \u4e2a\u3002\u5982\u679c\u662f RGB \u8272\u5f69\u7684\u56fe\u50cf\uff0c\u90a3\u4e48\u6bcf\u4e2a\u989c\u8272\u7684\u5206\u91cf\u5c31\u79f0\u4e3a\u4e00\u4e2a\u901a\u9053(channel)\u3002\u901a\u5e38\u6bcf\u4e2a\u50cf\u7d20\u7684\u6bcf\u79cd\u989c\u8272\u75281\u5b57\u8282(8\u4f4d)\u6765\u8868\u793a\uff0c\u90a3\u4e48\u4e00\u4e2a\u50cf\u7d20\u5c31\u67093\u4e2a\u5b57\u8282\u3002 </p> <p>\u4e3a\u4e86\u63cf\u8ff0\"\u900f\u660e\"\u7684\u56fe\u50cf\uff0c\u5728\u6bcf\u4e2a\u50cf\u7d20\u4e0a\u65b0\u589e\u4e00\u4e2a\u900f\u660e\u5ea6\u7684\u5206\u91cf\uff0c\u79f0\u4e3a Alpha \u901a\u9053\uff0c\u53601\u4e2a\u5b57\u8282\uff0c\u53ef\u4ee5\u8868\u793a256\u79cd\u4e0d\u540c\u7684\u900f\u660e\u5ea6\u3002\u8fd9\u79cd\u8272\u5f69\u7a7a\u95f4\u88ab\u79f0\u4e3aRGBA\uff0c\u8fd9\u79cd\u7a7a\u95f4\u4e00\u4e2a\u50cf\u7d20\u9700\u8981\u53604\u4e2a\u5b57\u8282\u3002</p> <p>\u89c6\u9891\u662f\u5229\u7528\u4eba\u773c\u89c6\u89c9\u6682\u7559\u7684\u539f\u7406\uff0c\u901a\u8fc7\u64ad\u653e\u4e00\u5e27\u4e00\u5e27\u7684\u56fe\u50cf\uff0c\u4f7f\u4eba\u773c\u4ea7\u751f\u8fd0\u52a8\u7684\u611f\u89c9\u3002\u4e00\u5e271080p\u56fe\u50cf\u67092 073 600\u50cf\u7d20\uff0c\u5982\u679c\u63098\u4f4d\u8272\u6df1\u7684RGB\u683c\u5f0f\u5b58\u50a8\uff0c\u9700\u8981\u7ea66MB\u7684\u5b58\u50a8\u7a7a\u95f4\u3002\u5982\u679c\u630925fps\u8ba1\u7b97\uff0c\u90a3\u4e48\u4e00\u79d2\u949f\u7684\u89c6\u9891\u5c31\u9700\u8981150MB\uff0c\u4e00\u90e81.5\u5c0f\u65f6\u7684\u7535\u5f71\u9700\u8981\u7ea6800GB\u7684\u5b58\u50a8\u7a7a\u95f4\u3002\u8fd9\u663e\u7136\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002\u56e0\u6b64\uff0c\u89c6\u9891\u538b\u7f29\u6280\u672f\u5e94\u8fd0\u800c\u751f\u3002</p>"},{"location":"others/video/#_3","title":"\u89c6\u9891\u538b\u7f29","text":"<p>\u89c6\u9891\u538b\u7f29\u66f4\u4e13\u4e1a\u7684\u8bf4\u6cd5\u662f\"\u89c6\u9891\u7f16\u7801\"\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u4e24\u70b9\uff1a\u7b2c\u4e00\uff0c\u4eba\u773c\u5e76\u4e0d\u662f\u5bf9\u6240\u6709\u989c\u8272\u90fd\u654f\u611f\uff0c\u56e0\u6b64\u53ef\u4ee5\u53bb\u6389\u4e00\u4e9b\u989c\u8272\uff0c\u8fd9\u88ab\u79f0\u4e3a\u6709\u635f\u538b\u7f29\uff0c\u662fJPEG\u7684\u4e3b\u8981\u538b\u7f29\u539f\u7406\u3002\u7b2c\u4e8c\uff0c\u4e00\u822c\u6765\u8bf4\uff0c\u4e24\u5e27\u56fe\u50cf\u4e4b\u95f4\u7684\u5dee\u5f02\u5176\u5b9e\u4e0d\u5927\uff0c\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u7279\u6027\uff0c\u53ea\u5b58\u50a8\u6216\u4f20\u8f93\u56fe\u50cf\u95f4\u7684\u5dee\u5f02\u4fe1\u606f\uff0c\u800c\u4e0d\u662f\u4e00\u5e27\u5b8c\u6574\u7684\u56fe\u50cf\u3002H.264\u3001H.265\u5c31\u662f\u7528\u7684\u8fd9\u4e2a\u539f\u7406\u3002</p> <p>\u5728\u97f3\u89c6\u9891\u5e94\u7528\u4e2d\uff0c\u89c6\u9891\u5728\u4f20\u8f93\u540e\u8fd8\u9700\u8981\"\u89e3\u7801\"\uff0c\u5373\u5c06\u538b\u7f29\u8fc7\u7684\u89c6\u9891\u518d\u8f6c\u6362\u6210\u4e00\u5e27\u4e00\u5e27\u7684\u56fe\u50cf\u3002\u6574\u4e2a\u8fc7\u7a0b\u5408\u8d77\u6765\u53eb\"\u7f16\u89e3\u7801\"\u3002</p>"},{"location":"others/video/#ptsdts","title":"\u5e27\u7387\u3001PTS\u548cDTS","text":"<ol> <li>\u5e27\u7387(Frame Rate)\uff1a\u6bcf\u79d2\u4f20\u8f93\u7684\u5e27\u6570\uff0c\u901a\u5e38\u7528FPS\u8868\u793a\uff0c\u4f8b\u5982\uff0c30FPS\u8868\u793a\u6bcf\u79d2\u4f20\u8f9330\u5e27\u56fe\u50cf\u3002</li> <li>PTS(Presentation Time Stamp)\uff1a\u64ad\u653e\u65f6\u95f4\u6233</li> <li>DTS(Decode Time Stamp)\uff1a\u89e3\u7801\u65f6\u95f4\u6233\uff0c\u5355\u4f4d\u4e3a\u79d2\u3002</li> </ol> <p>\u5982\u679c\u89e3\u7801\u5668\u6536\u5230\u7684\u5e27\u7684\u987a\u5e8f\u662fIBBP\uff0c\u56e0\u4e3aB\u4e0d\u80fd\u76f4\u63a5\u89e3\u7801\uff0c\u6240\u4ee5\u9700\u8981\u7b49\u5f85P\u5e27\u89e3\u7801\u5b8c\u6210\u540e\u624d\u80fd\u89e3\u7801B\u5e27\u3002\u56e0\u6b64\u5b9e\u9645\u7684\u89e3\u7801\u987a\u5e8f\u662fIPBB\uff0c\u4f46\u662f\u64ad\u653e\u987a\u5e8f\u4ecd\u7136\u662fIBBP\u3002\u8fd9\u5c31\u662fPTS\u548cDTS\u7684\u4f5c\u7528\u3002</p>"},{"location":"others/video/#yuv","title":"YUV\u56fe\u50cf","text":"<p>\u7f16\u89e3\u7801\u91c7\u7528\u7684\u89c6\u9891\u56fe\u50cf\u4e0d\u91c7\u7528RGB\u8272\u5f69\u7a7a\u95f4\uff0c\u800c\u662f\u7528YUV\u8272\u5f69\u7a7a\u95f4\u3002\"Y\"\u8868\u793a\u4eae\u5ea6\uff0c\"U\"\u548c\"V\"\u4e5f\u5206\u522b\u88ab\u79f0\u4e3aCb\u548cCr\uff0c\u8868\u793a\u84dd\u8272\u901a\u9053\u548c\u7ea2\u8272\u901a\u9053\u4e0e\u4eae\u5ea6\u7684\u5dee\u5f02\u3002</p> <p>\u4e0d\u540c\u4e8eRGB\u7528\u50cf\u7d20\u5b58\u50a8\uff0cYUV\u5219\u662f\u6309\u5e73\u9762\u5b58\u50a8\u3002</p> <p>\u5728\u8fd9\u79cd\u7f16\u7801\u7b97\u6cd5\u4e0b\uff0c\u5982\u679c\u4e22\u5931\u4e86\u4e00\u5e27\u7684\u6570\u636e\uff0c\u5219\u4f1a\u5f71\u54cd\u540e\u9762\u7684\u7f16\u7801\uff0c\u5982\u679c\u5f3a\u884c\u89e3\u7801\uff0c\u5c31\u4f1a\u51fa\u73b0\u82b1\u5c4f\u73b0\u8c61\u3002\u56e0\u800c\uff0c\u5728\u5b9e\u9645\u7684\u7f16\u7801\u5668\u4e0a\uff0c\u4f1a\u5bf9\u56fe\u50cf\u8fdb\u884c\u5206\u7ec4\uff0c\u5206\u7ec4\u540e\u7684\u56fe\u50cf\u79f0\u4e3aGoP(Group of Pictures)\u3002\u89e3\u7801\u5668\u5728\u64ad\u653e\u65f6\u5219\u662f\u8bfb\u53d6\u4e00\u6bb5\u4e00\u6bb5\u7684 GOP \u8fdb\u884c\u89e3\u7801\u540e\u8bfb\u53d6\u753b\u9762\u518d\u6e32\u67d3\u663e\u793a\u3002GOP\u662f\u4e00\u7ec4\u8fde\u7eed\u7684\u753b\u9762\uff0c\u7531\u4e00\u4e2a I \u5e27\u548c\u6570\u4e2a B/P\u5e27\u7ec4\u6210\uff0c\u662f\u89c6\u9891\u56fe\u50cf\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u5b58\u53d6\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u5b83\u7684\u6392\u5217\u987a\u5e8f\u5c06\u4f1a\u4e00\u76f4\u91cd\u590d\u5230\u5f71\u50cf\u7ed3\u675f\u3002I \u5e27\u662f\u5185\u90e8\u7f16\u7801\u5e27(\u4e5f\u79f0\u4e3a\u5173\u952e\u5e27)\uff0cP \u5e27\u662f\u524d\u5411\u9884\u6d4b\u5e27(\u524d\u5411\u53c2\u8003\u5e27)\uff0cB \u5e27\u662f\u53cc\u5411\u5185\u63d2\u5e27(\u53cc\u5411\u53c2\u8003\u5e27)\u3002\u7b80\u5355\u5730\u8bb2, I \u5e27\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u753b\u9762\uff0c\u800cP\u5e27\u548c B\u5e27\u8bb0\u5f55\u7684\u662f\u76f8\u5bf9\u4e8e I \u5e27\u7684\u53d8\u5316\u3002\u5982\u679c\u6ca1\u6709 I \u5e27\uff0cP \u5e27\u548c B \u5e27\u5c31\u65e0\u6cd5\u89e3\u7801\u3002\u7531\u4e8e B \u5e27\u9700\u8981\u53c2\u8003\u540e\u9762\u7684\u5e27\uff0c\u5728\u5b9e\u65f6\u901a\u4fe1\u4e2d\u4e00\u822c\u4e0d\u91c7\u7528\u3002</p>"},{"location":"others/video/#yuv_1","title":"YUV\u91c7\u6837","text":"<p>YUV\u6709\u4e09\u79cd\u91c7\u6837\u65b9\u5f0f\uff1aYUV444\uff0cYUV422\uff0cYUV420</p> <ul> <li>YUV444\uff1a\u9010\u70b9\u91c7\u6837\uff0c\u6bcf\u4e2a\u50cf\u7d20\u5305\u542b\u5b8c\u6574\u7684 Y\u3001U\u3001V \u5206\u91cf</li> <li>YUV422\uff1aU\u3001V\u5728\u5782\u76f4\u65b9\u5411\u9010\u70b9\u91c7\u6837\uff0c\u4f46\u662f\u5728\u6c34\u5e73\u65b9\u54112:1\u91c7\u6837</li> <li>YUV420\uff1a\u5728\u6c34\u5e73\u548c\u5782\u76f4\u65b9\u5411\u90fd\u6309\u71672:1\u91c7\u6837</li> </ul> <p></p> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0cYUV420\u683c\u5f0f\u7531\u4e8e\u5176\u8f83\u9ad8\u7684\u538b\u7f29\u6bd4\u548c\u76f8\u5bf9\u8f83\u5c0f\u7684\u6587\u4ef6\u5927\u5c0f\uff0c\u5728\u6570\u5b57\u89c6\u9891\u548c\u56fe\u50cf\u538b\u7f29\u4e2d\u975e\u5e38\u6d41\u884c\u3002\u5b83\u662fMPEG\u3001H.264\u3001H.265\u7b49\u89c6\u9891\u538b\u7f29\u6807\u51c6\u7684\u57fa\u7840\uff0c\u4e5f\u662f\u8bb8\u591a\u89c6\u9891\u6587\u4ef6\u683c\u5f0f\uff08\u5982MP4\u3001AVI\uff09\u548c\u6d41\u5a92\u4f53\u4f20\u8f93\u4e2d\u5e38\u7528\u7684\u683c\u5f0f\u3002YUV420\u683c\u5f0f\u7684\u6d41\u884c\u4e5f\u5f97\u76ca\u4e8e\u5176\u76f8\u5bf9\u4e8e\u4eba\u773c\u5bf9\u4eae\u5ea6\u4fe1\u606f\u6bd4\u5bf9\u8272\u5ea6\u4fe1\u606f\u66f4\u654f\u611f\u7684\u7279\u6027\uff0c\u56e0\u6b64\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u51cf\u5c11\u8272\u5ea6\u4fe1\u606f\u7684\u5206\u8fa8\u7387\u5bf9\u89c6\u89c9\u8d28\u91cf\u7684\u5f71\u54cd\u8f83\u5c0f\u3002</p>"},{"location":"others/video/#yuv_2","title":"YUV\u5b58\u50a8\u683c\u5f0f","text":"<p>YUV\u5b58\u50a8\u683c\u5f0f\u5206\u4e3a\u4e09\u79cd\uff1a</p> <ul> <li>packed\uff1a\u6253\u5305\u683c\u5f0f\uff0c\u6bcf\u6b21\u90fd\u5b58\u50a8\u4e00\u4e2a YUV</li> <li>planar\uff1a\u5e73\u9762\u683c\u5f0f\uff0c\u5148\u5b58\u50a8 Y \u5e73\u9762\uff0c\u518d\u5b58\u50a8 U \u5e73\u9762\uff0c\u6700\u540e\u5b58\u50a8 V \u5e73\u9762\uff0cYUV \u5206\u91cf\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u5e73\u9762</li> <li>semi-planar\uff1a\u534a\u5e73\u9762\u683c\u5f0f\uff0c\u5148\u5b58\u50a8 Y \u5e73\u9762\uff0c\u518d\u5b58\u50a8 UV \u5e73\u9762\uff0cUV \u4ea4\u9519\u6392\u5217\u5728\u4e00\u4e2a\u5e73\u9762</li> </ul>"},{"location":"others/video/#stream","title":"\u6d41(stream)","text":"<p>\u6d41\u662f\u4e00\u7cfb\u5217\u8fde\u7eed\u4f20\u8f93\u7684\u6570\u636e\uff0c\u901a\u5e38\u7528\u4e8e\u5b9e\u65f6\u4f20\u8f93\u97f3\u9891\u548c\u89c6\u9891\u3002\u6d41\u53ef\u4ee5\u662f\u5355\u4e00\u7c7b\u578b\u7684\u6570\u636e\uff08\u5982\u97f3\u9891\u6d41\u6216\u89c6\u9891\u6d41\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u591a\u79cd\u6570\u636e\u7684\u7ec4\u5408(\u5982\u97f3\u89c6\u9891\u6d41)\u3002\u6d41\u7528\u4e8e\u5b9e\u65f6\u4f20\u8f93\u97f3\u9891\u3001\u89c6\u9891\u7b49\u6570\u636e\uff0c\u901a\u8fc7\u7f51\u7edc\u6216\u5176\u4ed6\u4f20\u8f93\u4ecb\u8d28\uff0c\u5c06\u6570\u636e\u4ece\u53d1\u9001\u7aef\u4f20\u8f93\u5230\u63a5\u6536\u7aef\u3002</p>"},{"location":"pl/","title":"\u7f16\u7a0b\u8bed\u8a00","text":"<ul> <li>C++</li> <li>Python</li> <li>Go</li> </ul>"},{"location":"pl/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u73b0\u4ee3C++\u8bed\u8a00\u6838\u5fc3\u7279\u6027\u89e3\u6790</li> <li>C++20\u9ad8\u7ea7\u7f16\u7a0b</li> <li>C++\u5e76\u53d1\u7f16\u7a0b\u5b9e\u6218</li> <li>Conan 2</li> <li>Go\u8bed\u8a00\u5b66\u4e60\u4e4b\u8def</li> </ul>"},{"location":"pl/c/gcc/","title":"GCC\u5de5\u5177\u94fe","text":"<p>\u901a\u5e38\u6240\u8bf4\u7684GCC\u662fGUN Compiler Collection\u7684\u7b80\u79f0\uff0c\u662fLinux\u7cfb\u7edf\u4e0a\u5e38\u7528\u7684\u7f16\u8bd1\u5de5\u5177\u3002GCC\u5de5\u5177\u94fe\u8f6f\u4ef6\u5305\u62ecGNU C Compiler\u3001Binutils\u3001C\u8fd0\u884c\u5e93\u7b49\u3002</p> <p>Binutils\u662f\u4e00\u7ec4\u4e8c\u8fdb\u5236\u5904\u7406\u5de5\u5177\uff0c\u7528\u4e8e\u5f00\u53d1\u548c\u8c03\u8bd5\uff0c\u5206\u522b\u6709\u5982\u4e0b\u5de5\u5177\uff1a</p> <ul> <li>ar\uff1a\u7528\u4e8e\u521b\u5efa\u9759\u6001\u5e93\u548c\u52a8\u6001\u5e93</li> <li>as\uff1a\u6c47\u7f16\u5668</li> <li>ld\uff1a\u94fe\u63a5\u5668</li> <li>ldd\uff1a\u663e\u793a\u7a0b\u5e8f\u4f9d\u8d56\u7684\u5171\u4eab\u5e93</li> <li>objcopy\uff1a\u8f6c\u6362\u76ee\u6807\u6587\u4ef6\u683c\u5f0f</li> <li>objdump\uff1a\u53cd\u6c47\u7f16</li> <li>readelf\uff1a\u8bfb\u53d6ELF\u6587\u4ef6\u4fe1\u606f</li> <li>size\uff1a\u663e\u793a\u7b26\u53f7\u8868\u4fe1\u606f</li> </ul> <p>GCC\u7f16\u8bd1\u8fc7\u7a0b\u4e3b\u8981\u5305\u542b\u56db\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u9884\u5904\u7406\uff1a\u5904\u7406\u5b8f\u5b9a\u4e49\u3001\u6761\u4ef6\u7f16\u8bd1\u6307\u4ee4\uff0c\u5c55\u5f00\u5934\u6587\u4ef6\uff0c\u5220\u9664\u6ce8\u91ca\u7b49</li> <li>\u7f16\u8bd1\uff1a\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u3001\u751f\u6210\u6c47\u7f16\u4ee3\u7801</li> <li>\u6c47\u7f16\uff1a\u751f\u6210\u673a\u5668\u6307\u4ee4\uff0c\u751f\u6210.o\u76ee\u6807\u6587\u4ef6</li> <li>\u94fe\u63a5\uff1a\u5c06\u76ee\u6807\u6587\u4ef6\u94fe\u63a5\u6210\u6700\u540e\u7684\u53ef\u6267\u884c\u6587\u4ef6</li> </ol>"},{"location":"pl/c/gcc/#gnu-c","title":"GNU C\u6269\u5c55\u8bed\u6cd5","text":"<p>Linux\u5185\u6838\u4f7f\u7528GNU C\u7f16\u8bd1\u5668\uff0c\u5b83\u5bf9\u6807\u51c6C\u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u6269\u5c55\u548c\u4fee\u6539\u3002</p>"},{"location":"pl/c/misc/","title":"C\u8bed\u8a00\u6742\u9879","text":""},{"location":"pl/c/misc/#_1","title":"\u57fa\u7840\u6570\u636e\u7c7b\u578b","text":"<p>\u4ee532\u4f4d\u7cfb\u7edf\u4e3a\u4f8b\uff1a</p> \u6570\u636e\u7c7b\u578b \u8bf4\u660e \u5b57\u8282 char \u5b57\u7b26\u578b 1 short \u77ed\u6574\u578b 2 int \u6574\u578b 4 long \u957f\u6574\u578b 4 float \u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b 4 double \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b 8"},{"location":"pl/c/misc/#sizeofstrlen","title":"sizeof\u548cstrlen","text":"<p><code>sizeof()</code>\u8ba1\u7b97\u7684\u662f\u53d8\u91cf\u7684\u5927\u5c0f\uff0c<code>strlen()</code>\u8ba1\u7b97\u7684\u662f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002</p> <pre><code>char text[] = \"abcdef\";\nsizeof(text); // 7\nstrlen(text); // 6\n</code></pre> <p>\u4f46\u662f\uff0c\u5982\u679cC\u98ce\u683c\u7684\u5b57\u7b26\u4e32\u5b58\u50a8\u4e3achar *\uff0c\u5219<code>sizeof()</code>\u8fd4\u56de\u6307\u9488\u7684\u5927\u5c0f\u3002</p>"},{"location":"pl/c/misc/#_2","title":"\u6307\u9488","text":"<p>\u6307\u9488\u5176\u5b9e\u4e5f\u662f\u53d8\u91cf\uff0c\u53ea\u4e0d\u8fc7\u5176\u4e2d\u5b58\u50a8\u7684\u662f\u5730\u5740\uff0c\u7531\u5730\u5740\u53bb\u95f4\u63a5\u5730\u8bbf\u95ee\u6307\u5411\u7684\u53d8\u91cf\u3002</p> <p>\u6307\u9488\u53d8\u91cf\u6700\u597d\u5728\u58f0\u660e\u65f6\u5c31\u521d\u59cb\u5316\uff0c\u4ee5\u907f\u514d\u8bbf\u95ee\u91ce\u6307\u9488\u3002</p>"},{"location":"pl/c/misc/#_3","title":"\u6307\u9488\u4e0e\u6570\u7ec4","text":"<p>\u6307\u9488\u4e0e\u6570\u7ec4\u975e\u5e38\u76f8\u4f3c\uff0c\u6307\u9488\u4fdd\u5b58\u7684\u662f\u5730\u5740\uff0c\u6570\u7ec4\u540d\u4fdd\u5b58\u7684\u662f\u8be5\u6570\u7ec4\u7684\u9996\u5730\u5740\u3002\u5f53\u6211\u4eec\u628a\u6570\u7ec4\u540d\u8d4b\u503c\u7ed9\u6307\u9488\u65f6\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u544a\u8bc9\u4e86\u6307\u9488\u53d8\u91cf\u8fd9\u4e2a\u6570\u7ec4\u7684\u9996\u5730\u5740\u5728\u54ea\uff0c\u7531\u4e8e\u6570\u7ec4\u5143\u7d20\u662f\u8fde\u7eed\u5b58\u653e\u7684\uff0c\u6328\u4e2a\u904d\u5386\u5c31\u80fd\u8bbf\u95ee\u6574\u4e2a\u6570\u7ec4\u5143\u7d20\u3002\u5bf9\u6307\u9488\u7684++\u64cd\u4f5c\uff0c\u662f\u7f16\u8bd1\u5668\u6839\u636e\u6307\u9488\u53d8\u91cf\u7684\u957f\u5ea6\u4e3a\u6211\u4eec\u5b8c\u6210\u4e86\u5730\u5740\u7684\u504f\u79fb\u3002</p> <p>\u8981\u6ce8\u610f\uff0c\u6570\u7ec4\u540d\u662f\u5730\u5740\uff0c\u4e0d\u53ef\u4fee\u6539\uff0c\u800c\u6307\u9488\u662f\u4e2a\u53d8\u91cf\uff0c\u52a0\u51cf\u64cd\u4f5c\u662f\u7f16\u8bd1\u5668\u66ff\u6211\u4eec\u5b8c\u6210\u4e86\u5730\u5740\u7684\u4fee\u6539\u3002</p> <p>Question</p> <p>\u6307\u9488\u6570\u7ec4\u548c\u6570\u7ec4\u6307\u9488\u662f\u4ec0\u4e48\uff1f</p> <pre><code>int * p1[5];    //\u8fd9\u662f\u6307\u9488\u6570\u7ec4\nint (*p2)[5];   //\u8fd9\u662f\u6570\u7ec4\u6307\u9488\n</code></pre> <p>\u6307\u9488\u6570\u7ec4\uff0c\u91cd\u70b9\u5728\u6570\u7ec4\uff0c\u8868\u660e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u6307\u9488\u53d8\u91cf\u3002</p> <p>\u6570\u7ec4\u6307\u9488\uff0c\u91cd\u70b9\u5728\u6307\u9488\uff0c\u8868\u660e\u8be5\u6307\u9488\u53d8\u91cf\u6307\u5411\u4e00\u4e2a\u67095\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\u3002</p> <p>\u6307\u9488\u6570\u7ec4\u4e0e\u6570\u7ec4\u6307\u9488</p> <pre><code>char *p1[2] = {\"hello\", \"world\"};\nint temp[2] = {1, 2};\nint (*p2)[2] = temp;\n</code></pre>"},{"location":"pl/c/misc/#void","title":"void\u6307\u9488","text":"<p>void\u6307\u9488\u5176\u5b9e\u662fC\u8bed\u8a00\u4e2d\u7684\u591a\u6001\uff0c\u5b83\u53ef\u4ee5\u6307\u5411\u4efb\u4f55\u4e00\u4e2a\u7c7b\u578b\u7684\u6307\u9488\u53d8\u91cf\uff0c\u800c\u4efb\u4f55\u7c7b\u578b\u7684\u6307\u9488\u53d8\u91cf\u90fd\u53ef\u4ee5\u8d4b\u503c\u7ed9void\u6307\u9488\u3002\u4e5f\u5c31\u662f\u8bf4\u5f53\u4f60\u4e0d\u77e5\u9053\u5bf9\u65b9\u8981\u4f20\u5165\u4ec0\u4e48\u53c2\u6570\u65f6\uff0c\u4f60\u5c31\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2avoid\u6307\u9488\u6765\u63a5\u6536\u3002</p>"},{"location":"pl/c/misc/#_4","title":"\u4e8c\u7ea7\u6307\u9488","text":"<p>\u4e8c\u7ea7\u6307\u9488\u5b9e\u9645\u4e0a\u5c31\u662f\u6307\u5411\u6307\u9488\u7684\u6307\u9488\uff0c\u5de7\u5999\u4f7f\u7528\u53ef\u4ee5\u7b80\u5316\u4ee3\u7801\u3002</p>"},{"location":"pl/c/misc/#_5","title":"\u51fd\u6570\u6307\u9488","text":"<p>\u51fd\u6570\u6307\u9488\u5373\u6307\u5411\u51fd\u6570\u7684\u6307\u9488\uff0c\u5728C\u8bed\u8a00\u4e2d\uff0c\u901a\u5e38\u4e0e\u56de\u8c03\u51fd\u6570\u4e00\u8d77\u4f7f\u7528\u3002\u6bd4\u5982POSIX\u7ebf\u7a0b\u521b\u5efa\u51fd\u6570\uff1a<code>int pthread_create(pthread_t *thread, const pthread_attr_t *attr, void *(start_routine)(void*), void *arg)</code>\u3002<code>start_routine</code></p> <p>\u51fd\u6570\u6307\u9488\u7684\u5b9a\u4e49\u65b9\u5f0f\u4e3a\uff1a\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b(*\u6307\u9488\u53d8\u91cf\u540d)(\u51fd\u6570\u53c2\u6570\u5217\u8868)\u3002</p> <pre><code>typedef void (*FunctionPtr)(cosnt char *);\n\nvoid greet(const char *name)\n{\n    printf(\"Hello, %s!\\n\", name);\n}\n\nvoid goodbye(const char *name)\n{\n    printf(\"Goodbye, %s!\\n\", name);\n}\n\nvoid callFunction(FunctionPtr fp, const char *name)\n{\n    fp(name);\n}\n\nint main()\n{\n    const char *name = \"world\";\n    callFunction(greet, name);\n    callFunction(goodbye, name);\n    return 0;\n}\n</code></pre>"},{"location":"pl/c/misc/#_6","title":"\u6307\u9488\u5e38\u91cf\u548c\u5e38\u91cf\u6307\u9488","text":"<pre><code>int value = 10;\nconst int *ptr = &amp;value;    //\u8fd9\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\nint *const ptr = &amp;value;    //\u8fd9\u662f\u4e00\u4e2a\u5e38\u91cf\u6307\u9488\n</code></pre> <p>\u6307\u9488\u5e38\u91cf\uff0c\u5373\u6307\u5411\u7684\u5730\u5740\u4e0d\u53ef\u4fee\u6539\uff0c\u4f46\u662f\u53ef\u4ee5\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u503c\u3002</p> <p>\u5e38\u91cf\u6307\u9488\uff0c\u5373\u6307\u5411\u7684\u503c\u4e0d\u53ef\u4fee\u6539\uff0c\u4f46\u662f\u53ef\u4ee5\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5730\u5740\u3002</p>"},{"location":"pl/c/misc/#_7","title":"\u7ed3\u6784\u4f53","text":""},{"location":"pl/c/misc/#_8","title":"\u5bf9\u9f50\u95ee\u9898","text":"<p>32\u4f4d\u7cfb\u7edf\u91c7\u75284\u5b57\u8282\u5bf9\u9f50\uff0c\u8bbf\u95ee\u6548\u7387\u6700\u9ad8\uff0c\u4e0d\u6ee14\u5b57\u8282\u7684\u4f1a\u8865\u9f50\u3002</p> <pre><code>struct person{\n    char addr;\n    char name;\n    int id;\n};\n</code></pre> <p>sizeof(struct person) = 8;</p> <pre><code>struct person {\n    char addr;\n    int id;\n    char name;\n};\n</code></pre> <p>sizeof(struct person) = 12;</p>"},{"location":"pl/c/misc/#_9","title":"\u4f4d\u57df","text":"<p>\u6709\u4e9b\u4fe1\u606f\u5b58\u50a8\u65f6\u5e76\u4e0d\u9700\u8981\u5360\u7528\u6574\u4e2a\u5b57\u8282\uff0c\u6bd4\u5982\u4e00\u4e2a\u5f00\u5173\u91cf\u53ea\u9700\u8981\u75281\u4f4d\u4ee3\u8868\u5f00\u6216\u8005\u5173\u3002\u5728\u7ed3\u6784\u4f53\u4e2d\u4f7f\u7528\u4f4d\u57df\u53ef\u4ee5\u6709\u6548\u8282\u7701\u5185\u5b58\u7a7a\u95f4\u3002</p> <pre><code>struct person{\n    unsigned char gender : 1;\n    unsigned int age : 7;\n};\n</code></pre> <p>gender\u8868\u793a\u6027\u522b\uff0c\u75281\u4f4d\u8868\u793a\u7537\u5973\uff0cage\u8868\u793a\u5e74\u9f84\uff0c\u75287\u4f4d\u8868\u793a\uff0c\u6700\u5927\u4e3a127\uff0c\u5df2\u7ecf\u53ef\u4ee5\u6ee1\u8db3\u4eba\u5e74\u9f84\u7684\u9700\u6c42\u4e86\u3002\u8fd9\u6837\u7ed3\u6784\u4f53\u53ea\u9700\u8981\u4e00\u4e2a\u5b57\u8282\u5c31\u53ef\u4ee5\u8868\u793a\u4e86\u3002</p>"},{"location":"pl/c/misc/#printf","title":"printf","text":"\u683c\u5f0f\u7b26 \u8bf4\u660e %d \u5e26\u7b26\u53f7\u5341\u8fdb\u5236\u6574\u6570 %u \u65e0\u7b26\u53f7\u5341\u8fdb\u5236\u6574\u6570 %c \u5355\u4e2a\u5b57\u7b26 %s \u5b57\u7b26\u4e32 %f \u6d6e\u70b9\u6570 %x \u65e0\u7b26\u53f7\u5341\u516d\u8fdb\u5236\u6574\u6570 %p \u6307\u9488\u5730\u5740"},{"location":"pl/c/misc/#extern","title":"extern","text":"<p><code>extern</code>\u5173\u952e\u5b57\u7528\u6765\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u8fd9\u91cc\u58f0\u660e\u7684\u53d8\u91cf\u6216\u8005\u51fd\u6570\u540d\u5728\u522b\u5904\u5b9a\u4e49\uff0c\u5728\u6b64\u5904\u58f0\u660e\u3002</p> <p>Tip</p> <p>\u5b9a\u4e49\uff1a\u521b\u5efa\u53d8\u91cf\u5e76\u5206\u914d\u5185\u5b58\u7a7a\u95f4 \u58f0\u660e\uff1a\u8bf4\u660e\u53d8\u91cf\u7684\u6027\u8d28\uff0c\u5e76\u4e0d\u5206\u914d\u5185\u5b58\u7a7a\u95f4</p> <pre><code>extern int i;   //\u6b64\u4e3a\u58f0\u660e\nint i;         //\u6b64\u4e3a\u5b9a\u4e49\n</code></pre> <p>\u5982\u679c\u5728.h\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5373\u4e3a\u5916\u90e8\u53d8\u91cf\u3002\u5916\u90e8\u53d8\u91cf\u4fdd\u5b58\u5728\u9759\u6001\u5b58\u50a8\u533a\uff0c\u5176\u751f\u547d\u5468\u671f\u5b58\u5728\u4e8e\u6574\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u671f\uff0c\u56e0\u6b64\uff0c\u5916\u90e8\u53d8\u91cf\u4e0d\u80fd\u51fa\u73b0\u91cd\u540d\uff0c\u5426\u5219\u5c31\u4f1a\u62a5\u91cd\u5b9a\u4e49\u7684\u9519\u8bef\u3002\u5982\u679c\u662f\u5185\u90e8\u53d8\u91cf\uff0c\u6bd4\u5982\u5728\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8fd9\u79cd\u95ee\u9898\u3002</p>"},{"location":"pl/c/misc/#_10","title":"\u591a\u6587\u4ef6\u7f16\u7a0b","text":"<p>\u5728\u4e00\u4e2a\u5927\u578b\u9879\u76ee\u5de5\u7a0b\u4e2d\uff0c\u6709\u7684\u65f6\u5019\u6211\u4eec\u9700\u8981\u63d0\u524d\u4f7f\u7528\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\u5168\u5c40\u53d8\u91cf\u3002</p> <p>\u5047\u8bbe\u5728\"test.h\"\u4e2d\uff1a<code>int a = 10;</code>\u3002\u8fd9\u91cc<code>a</code>\u5c31\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u7684\u5b9a\u4e49\uff0c\u5982\u679c\"test.h\"\u5934\u6587\u4ef6\u88ab\u591a\u6b21\u5f15\u7528\uff0c<code>a</code>\u5c31\u4f1a\u88ab\u91cd\u590d\u5b9a\u4e49\uff0c\u8fd9\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002</p> <p>\u5728\u300a\u9ad8\u8d28\u91cfC/C++\u7f16\u7a0b\u6307\u5357\u300b\u4e00\u4e66\u4e2d\u5199\u5230\uff1a\u5934\u6587\u4ef6\u4e2d\u53ea\u5b58\u653e\u201c\u58f0\u660e\u201d\uff0c\u800c\u4e0d\u5b58\u653e\u201c\u5b9a\u4e49\u201d\u3002</p> <p>Question</p> <p>\u5982\u679c\u6211\u4eec\u9700\u8981\u5728\"main.c\"\u4e2d\u4f7f\u7528\u5230\u8be5\u5168\u5c40\u53d8\u91cf\uff0c\u5e94\u8be5\u600e\u4e48\u4fee\u6539\u5462\uff1f</p> <p>\u7b54\u6848\u5c31\u662f\u4f7f\u7528<code>extern</code>\u5173\u952e\u5b57\u3002</p> <p>\u5728\"test.h\"\u4e2d\uff1a<code>extern int a;</code>\u2014\u2014\u8fd9\u662f\u4e00\u4e2a\u58f0\u660e\u3002\u540c\u65f6\u5728\"test.c\"\u4e2d\uff1a<code>int a = 10;</code>\u2014\u2014\u8fd9\u662f\u4e00\u4e2a\u5b9a\u4e49\u3002</p> <p>\u8fd9\u6837\u5728\"main.c\"\u4e2d\u5c31\u53ef\u4ee5\u76f4\u63a5\u5f15\u7528\u53d8\u91cfa\u4e86\u3002</p>"},{"location":"pl/c/misc/#_11","title":"\u5934\u6587\u4ef6\u91cd\u590d\u5305\u542b","text":"<p><code>#include</code>\u547d\u4ee4\u5728\u9884\u5904\u7406\u9636\u6bb5\u4f1a\u76f4\u63a5\u88ab\u5c55\u5f00\uff0c\u9884\u5904\u7406\u5668\u5c06\u5c55\u5f00\u540e\u7684\u4ee3\u7801\u76f4\u63a5\u590d\u5236\u5230.c\u6587\u4ef6\u4e2d\u3002\u5982\u679c\u88ab\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e2d\u8fd8\u5305\u542b\u4e86\u5176\u4ed6\u7684\u5934\u6587\u4ef6\uff0c\u9884\u5904\u7406\u5668\u5c31\u4f1a\u9012\u5f52\u5730\u5305\u542b\u8fd9\u4e9b\u5934\u6587\u4ef6\u76f4\u5230\u4e0d\u518d\u5305\u542b\u4efb\u4f55\u5934\u6587\u4ef6\u3002</p> <p>\u9012\u5f52\u5305\u542b\u4f1a\u5f15\u5165\u4e00\u4e2a\u95ee\u9898\uff0c\u5c31\u662f\u91cd\u590d\u5730\u5f15\u5165\u4e00\u4e2a\u76f8\u540c\u7684\u5934\u6587\u4ef6\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u53d8\u91cf\u91cd\u5b9a\u4e49\u7684\u9519\u8bef\u3002\u6bd4\u5982\"test1.h\"\u4e2d\u5b9a\u4e49\u4e86\u53d8\u91cfa\uff0c\"test2.h\"\u548c\"test3.h\"\u90fd\u5305\u542b\u4e86\"test1.h\"\uff0c\u90a3\u4e48\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u4f1a\u62a5\u9519\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cC\u8bed\u8a00\u63d0\u4f9b\u4e86<code>#ifndef</code>\u3001<code>#define</code>\u548c<code>#endif</code>\u4e09\u4e2a\u9884\u5904\u7406\u547d\u4ee4\u3002\u8fd9\u79cd\u5b8f\u4fdd\u62a4\u65b9\u6848\u4f7f\u5f97\u7a0b\u5e8f\u5458\u53ef\u4ee5\u968f\u610f\u5730\u5f15\u5165\u5f53\u524d\u6a21\u5757\u9700\u8981\u7684\u6240\u6709\u5934\u6587\u4ef6\uff0c\u800c\u4e0d\u7528\u64cd\u5fc3\u8fd9\u4e9b\u5934\u6587\u4ef6\u4e2d\u662f\u5426\u5305\u542b\u4e86\u5176\u4ed6\u7684\u5934\u6587\u4ef6\u3002</p> <p><code>#pragma once</code>\u53ef\u4ee5\u7528\u6765\u66ff\u4ee3\u4ee5\u4e0a\u6307\u4ee4\u3002</p>"},{"location":"pl/c/misc/#extern-c","title":"extern \"C\"","text":"<p>\u8fd9\u90e8\u5206\u5185\u5bb9\u5e94\u8be5\u653e\u5728C++\u4e2d\uff0c\u56e0\u4e3a\u8fd9\u662fC++\u7f16\u8bd1\u5668\u7279\u6709\u7684\uff0c\u4e0d\u8fc7\u65e2\u7136\u5199\u5230<code>extern</code>\u4e86\uff0c\u5c31\u653e\u5728\u8fd9\u91cc\u5427\u3002</p> <p>\u7b80\u5355\u5730\u8bf4\u5c31\u662fC++\u4e3a\u4e86\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u4f1a\u5c06\u51fd\u6570\u540d\u91cd\u65b0\u7f16\u7801\u6210\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684\u7b26\u53f7\uff0c\u8fd9\u6837\u624d\u80fd\u8ba9\u94fe\u63a5\u5668\u51c6\u786e\u8bc6\u522b\u6bcf\u4e2a\u7b26\u53f7\u6240\u5bf9\u5e94\u7684\u5bf9\u8c61\u3002\u800cC\u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u56e0\u6b64\u5bf9\u51fd\u6570\u540d\u4e0d\u505a\u590d\u6742\u7684\u5904\u7406\u3002\u4e24\u79cd\u7f16\u8bd1\u5668\u4e0d\u540c\u7684\u884c\u4e3a\u5bfc\u81f4C++\u8c03\u7528C\u7f16\u8bd1\u5668\u7f16\u8bd1\u7684\u51fd\u6570\u65f6\uff0c\u4f1a\u62a5\"\u7b26\u53f7\u672a\u5b9a\u4e49\"\u7684\u9519\u8bef\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cC++\u63d0\u4f9b\u4e86<code>extern \"C\"</code>\u8fd9\u4e2a\u5173\u952e\u5b57\uff0c\u4f7f\u5f97\u4ee5<code>extern \"c\"</code>\u58f0\u660e\u7684\u51fd\u6570\u540d\u4ee5C\u8bed\u8a00\u7684\u5f62\u5f0f\u88ab\u7f16\u8bd1\u3002\u540c\u65f6\u7531\u4e8e\u8be5\u5173\u952e\u5b57\u662fC++\u7f16\u8bd1\u5668\u7279\u6709\u7684\uff0c\u6240\u4ee5\u5728\u524d\u9762\u9700\u8981\u4f7f\u7528\u5b8f__cplusplus\u6765\u5224\u65ad\u5f53\u524d\u7f16\u8bd1\u5668\u662f\u5426\u4e3aC++\u7f16\u8bd1\u5668\u3002</p> <pre><code>#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n...\n#ifdef __cplusplus\n}\n#endif\n</code></pre> <p>\u6ce8\u610f\uff1a\u94fe\u63a5\u89c4\u8303\u4ec5\u4ec5\u7528\u4e8e\u4fee\u9970\u51fd\u6570\u548c\u53d8\u91cf\uff0c\u4ee5\u53ca\u51fd\u6570\u7c7b\u578b\u3002\u6240\u4ee5\uff0c\u4e25\u683c\u5730\u8bb2\uff0c\u4f60\u53ea\u5e94\u8be5\u628a\u8fd9\u4e09\u79cd\u5bf9\u8c61\u653e\u7f6e\u4e8e<code>extern \"C\"</code>\u7684\u5185\u90e8\u3002</p>"},{"location":"pl/c/misc/#static","title":"static","text":"<ol> <li>\u4fee\u9970\u5c40\u90e8\u53d8\u91cf\uff1a\u7f16\u8bd1\u5668\u4e3a\u5176\u521d\u59cb\u5316\uff0c\u5b58\u653e\u4e8e\u9759\u6001\u533a\uff0c\u4f7f\u5f97\u53d8\u91cf\u5728\u6587\u4ef6\u5185\u5168\u5c40\u53ef\u89c1</li> <li>\u4fee\u9970\u5168\u5c40\u53d8\u91cf\uff1a\u666e\u901a\u7684\u5168\u5c40\u53d8\u91cf\u5bf9\u6574\u4e2a\u5de5\u7a0b\u53ef\u89c1\uff0c\u4e0d\u53ef\u51fa\u73b0\u91cd\u540d\uff0c\u9759\u6001\u5168\u5c40\u53d8\u91cf\u53ea\u5728\u5f53\u524d\u6587\u4ef6\u53ef\u89c1</li> <li>\u4fee\u9970\u5168\u5c40\u51fd\u6570\uff1a\u7c7b\u4f3c\u5168\u5c40\u53d8\u91cf\uff0c\u9759\u6001\u51fd\u6570\u53ea\u5728\u5f53\u524d\u6587\u4ef6\u53ef\u89c1</li> </ol>"},{"location":"pl/c/misc/#volatile","title":"volatile","text":"<p><code>volatile</code>\u7684\u4f5c\u7528\u662f\u6d88\u9664\u4f18\u5316\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u76f4\u63a5\u4ece\u5185\u5b58\u4e2d\u53bb\u53d6\u8fd9\u4e2a\u53d8\u91cf\u503c\u3002</p> <p>\u4e8b\u5b9e\u4e0a\uff0cLinux\u5185\u6838\u5b98\u65b9\u6587\u6863\u4e0d\u63a8\u8350\u4f7f\u7528<code>volatile</code>\u3002\u7406\u7531\u5982\u4e0b\uff1a\u5185\u6838\u63d0\u4f9b\u4e86\u5f88\u591a\u540c\u6b65\u673a\u5236\u6765\u4fdd\u8bc1\u5e76\u53d1\u8bbf\u95ee\u65f6\u7684\u6570\u636e\u5b89\u5168\uff0c\u8fd9\u4e9b\u540c\u6b65\u673a\u5236\u540c\u6837\u53ef\u4ee5\u9632\u6b62\u610f\u5916\u7684\u4f18\u5316\u3002\u53ea\u8981\u6b63\u786e\u4f7f\u7528\u8fd9\u4e9b\u673a\u5236\uff0c\u5c31\u6ca1\u6709\u5fc5\u8981\u518d\u4f7f\u7528<code>volatile</code>\u3002\u5982\u679c\u4ecd\u7136\u5fc5\u987b\u4f7f\u7528<code>volatile</code>\uff0c\u90a3\u4e48\u51e0\u4e4e\u53ef\u4ee5\u80af\u5b9a\u5728\u4ee3\u7801\u7684\u67d0\u5904\u6709\u4e00\u4e2abug\u3002\u5728\u6b63\u786e\u8bbe\u8ba1\u7684\u5185\u6838\u4ee3\u7801\u4e2d\uff0c<code>volatile</code>\u53ea\u4f1a\u964d\u4f4e\u7cfb\u7edf\u7684\u6027\u80fd\u3002</p> <p>\u4e00\u6bb5\u7ecf\u5178\u4ee3\u7801\u5982\u4e0b\uff1a <pre><code>spin_lock(&amp;the_lock);\ndo_something_on(&amp;shared_data);\ndo_something_else_with(&amp;shared_data);\nspin_unlock(&amp;the_lock);\n</code></pre></p> <p>\u5f53\u6301\u6709\u9501\u65f6\uff0c\u4e0d\u53ef\u80fd\u610f\u5916\u6539\u53d8shared_data\u7684\u503c\uff0c\u4efb\u4f55\u5176\u4ed6\u8bbf\u95ee\u8be5\u503c\u7684\u4ee3\u7801\u90fd\u4f1a\u7b49\u5f85\u9501\u7684\u91ca\u653e\u3002\u5c31\u7b97shared_data\u88ab\u58f0\u660e\u4e3a<code>volatile</code>\uff0c\u5728\u8bbf\u95ee\u8be5\u53d8\u91cf\u65f6\u8fd8\u662f\u9700\u8981\u52a0\u9501\u3002\u56e0\u6b64<code>volatile</code>\u88ab\u8ba4\u4e3a\u662f\u6ca1\u6709\u5fc5\u8981\u7684\u3002</p>"},{"location":"pl/c/misc/#_12","title":"\u5e93\u51fd\u6570","text":"<p>\u5b57\u7b26\u4e32\u51fd\u6570\uff1a</p> \u51fd\u6570\u683c\u5f0f \u8bf4\u660e strlen(s) \u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u4e0d\u5305\u62ec\"\\0\" strcpy(dest, src) \u62f7\u8d1dsrc\u81f3dest strcat(dest, src) \u5c06src\u62fc\u63a5\u5230dest strcmp(s1, s2) \u6bd4\u8f83\u5b57\u7b26\u4e32\uff0c\u76f8\u540c\u5219\u8fd4\u56de\u96f6 atoi(s1) \u5b57\u7b26\u4e32\u8f6c\u6574\u6570 memset(addr, val, n) \u5411\u76ee\u6807\u5730\u5740\u586b\u5145n\u4e2aval memcpy(dest, src, n) \u590d\u5236src\u7684\u524dn\u4e2a\u5b57\u7b26\u5230dest"},{"location":"pl/c/standard/","title":"C\u7f16\u7a0b\u89c4\u8303","text":"<ol> <li> <p>\u7248\u6743\u548c\u7248\u672c</p> <p>\u7ed9\u6bcf\u4e2a\u51fd\u6570\uff0c\u6bcf\u4e2a\u6587\u4ef6\uff0c\u90fd\u6ce8\u4e0a\u7248\u6743\u548c\u7248\u672c\u3002\u5bf9\u4e8eC/C++\u7684\u6587\u4ef6\uff0c\u6587\u4ef6\u5934\u5e94\u8be5\u6709\u7c7b\u4f3c\u8fd9\u6837\u7684\u6ce8\u91ca\uff1a</p> <pre><code>/*\n * @FileName:network.c \n * @Author: your name\n * @Date: 2019-10-28 15:21:58\n * @Description: network api\n * @LastEditTime: 2019-10-28 15:22:03\n * @Version:1.0\n */\n</code></pre> <p>\u800c\u5bf9\u4e8e\u51fd\u6570\u6765\u8bf4\uff0c\u5e94\u8be5\u4e5f\u6709\u7c7b\u4f3c\u7684\u6ce8\u91ca\uff1a</p> <pre><code>/*\n * @FunctionName: network_init\n * @Description: network init\n * @Params:\n * @Return:\n * @Author: your name\n */\n</code></pre> </li> <li> <p>\u4ee3\u7801\u683c\u5f0f</p> <p>\u52a0\u4e0a\u5fc5\u8981\u7684\u7f29\u8fdb\u3001\u7a7a\u683c\u3001\u6362\u884c\u3001\u5bf9\u9f50\u7b49\uff0c\u8ba9\u4ee3\u7801\u770b\u8d77\u6765\u6d45\u663e\u6613\u61c2\u3002</p> </li> <li> <p>\u52e4\u5199\u6ce8\u91ca</p> </li> <li> <p>\u5bf9\u53c2\u6570\u8fdb\u884c\u68c0\u67e5</p> <p>\u5728\u51fd\u6570\u5185\uff0c\u5bf9\u4f20\u8fdb\u6765\u7684\u53c2\u6570\uff0c\u5c24\u5176\u662f\u6307\u9488\u8fdb\u884c\u68c0\u67e5\u3002\u5728\u51fd\u6570\u5916\uff0c\u4e5f\u8981\u5bf9\u51fd\u6570\u7684\u8fd4\u56de\u503c\u8fdb\u884c\u68c0\u67e5\u3002</p> </li> <li> <p>\u5c06\u9519\u8bef\u5904\u7406\u63d0\u524d</p> <p>\u5728\u7528if\u8bed\u53e5\u5224\u65ad\u51fa\u9519\u65f6\uff0c\u5c06\u9519\u8bef\u7684\u6761\u4ef6\u63d0\u524d\uff0c\u8ba9\u522b\u4eba\u4e00\u773c\u5c31\u80fd\u770b\u5230\u4e0d\u5408\u6cd5\u7684\u6761\u4ef6\uff0c\u628a\u6b63\u5e38\u5904\u7406\u7684\u4ee3\u7801\u5ef6\u540e\u3002</p> </li> <li> <p>\u5185\u5b58\u5206\u914d\u95ee\u9898</p> <p>malloc\u548cfree\u5fc5\u987b\u914d\u5bf9\u4f7f\u7528\uff0cmalloc\u7533\u8bf7\u7684\u5185\u5b58\u5fc5\u987b\u521d\u59cb\u5316\uff0cfree\u91ca\u653e\u7684\u5185\u5b58\u5fc5\u987b\u7f6e\u7a7a\u3002</p> </li> <li> <p>\u53d8\u91cf\u7684\u521d\u59cb\u5316</p> <p>\u5b9a\u4e49\u53d8\u91cf\u65f6\uff0c\u5c31\u8981\u5bf9\u5176\u521d\u59cb\u5316\uff0c\u4ee5\u9632\u6b62\u5728\u540e\u7eed\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\uff0c\u8fd9\u4f1a\u9020\u6210\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002</p> </li> <li> <p>\u51fd\u6570\u540d\u548c\u53d8\u91cf\u540d\u7684\u547d\u540d</p> <ul> <li>\u76f4\u89c2\uff0c\u7b80\u77ed\u6613\u8bfb</li> <li>\u5168\u5c40\u53d8\u91cf\u548c\u6210\u5458\u53d8\u91cf\u9700\u8981\u52a0\u4e0a\u524d\u7f00</li> <li>\u4e0e\u6807\u51c6\u5e93\u547d\u540d\u98ce\u683c\u4fdd\u6301\u4e00\u81f4</li> </ul> </li> <li> <p>\u4fee\u6539\u522b\u4eba\u7a0b\u5e8f</p> <p>\u5c06\u539f\u6765\u7684\u4ee3\u7801\u52a0\u4e0a\u6ce8\u91ca\uff0c\u7136\u540e\u5728\u540e\u9762\u6dfb\u52a0\u81ea\u5df1\u7684\u4ee3\u7801\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u4ee3\u7801\u7684\u7ef4\u62a4\u3002</p> <pre><code>/*\n*----commented by tom ----\n* char *p = (char *)malloc(10);\n* memset(p, 0, 10);\n*/\n\n/* ---- add by tom ----*/\nchar *p = (char *)calloc(10, sizeof(char));\n</code></pre> </li> <li> <p>\u5c06\u76f8\u540c\u7684\u4ee3\u7801\u6539\u5199\u6210\u51fd\u6570\u6216\u8005\u662f\u5b8f</p> <p>\u5982\u679c\u6709\u4e00\u4e9b\u7a0b\u5e8f\u7684\u4ee3\u7801\u7247\u6bb5\u5f88\u76f8\u4f3c\uff0c\u6216\u76f4\u63a5\u5c31\u662f\u4e00\u6837\u7684\uff0c\u628a\u5b83\u4eec\u653e\u5728\u4e00\u4e2a\u51fd\u6570\u4e2d\u3002\u51fd\u6570\u7684\u529f\u80fd\u5e94\u8be5\u8d8a\u5355\u4e00\u8d8a\u597d\u3002\u5982\u679c\u8fd9\u6bb5\u4ee3\u7801\u4e0d\u591a\u4e14\u4f1a\u88ab\u7ecf\u5e38\u4f7f\u7528\uff0c\u8981\u60f3\u907f\u514d\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\uff0c\u53ef\u4ee5\u5199\u6210\u5b8f\u3002</p> </li> <li> <p>\u591a\u52a0\u62ec\u53f7</p> <p>\u5728\u8868\u8fbe\u5f0f\u4e2d\uff0c\u52a0\u4e0a\u62ec\u53f7\uff0c\u8ba9\u4eba\u4e00\u773c\u5c31\u660e\u767d\u4f60\u7684\u610f\u56fe\u3002</p> </li> <li> <p>\u4f7f\u7528const\u4fee\u9970\u53ea\u8bfb\u53d8\u91cf</p> </li> <li> <p>\u51fd\u6570\u7684\u53c2\u6570\u4e2a\u6570</p> <p>\u5982\u679c\u51fd\u6570\u7684\u53c2\u6570\u4e2a\u6570\u5f88\u591a(\u8d85\u8fc76\u4e2a)\uff0c\u8bf7\u6539\u7528\u7ed3\u6784\u4f53\u4f20\u53c2\u3002</p> </li> <li> <p>typedef\u7684\u4f7f\u7528</p> <p>typedef\u6700\u5927\u7684\u4ef7\u503c\u5728\u4e8e\u4ee3\u7801\u7684\u7ef4\u62a4\uff0c\u5728\u8de8\u5e73\u53f0\u7f16\u7a0b\u4e2d\uff0c\u4e0d\u540c\u5e73\u53f0\u5bf9\u4e8e\u5b57\u957f\u4f1a\u6709\u533a\u522b\uff0c\u6b63\u786e\u4f7f\u7528typedef\u53ef\u4ee5\u6709\u6548\u5730\u7ef4\u62a4\u4f60\u7684\u4ee3\u7801\u3002\u5728\u4f7f\u7528\u7ed3\u6784\u4f53\u548c\u51fd\u6570\u6307\u9488\u65f6\uff0ctypedef\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002</p> </li> <li> <p>\u5c06\u5e38\u91cf\u6539\u4e3a\u5b8f</p> <pre><code>#define MAX_NUM 100\nint num[MAX_NUM];\n</code></pre> </li> <li> <p>\u91cd\u89c6WARNING\u4fe1\u606f</p> <p>WARNING\u4fe1\u606f\u662f\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u7ed9\u51fa\u7684\u8b66\u544a\u4fe1\u606f\uff0c\u5b83\u63d0\u793a\u4f60\u4ee3\u7801\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u95ee\u9898\u3002\u5728\u7f16\u5199\u4ee3\u7801\u65f6\uff0c\u5e94\u8be5\u5c3d\u91cf\u6d88\u9664WARNING\u4fe1\u606f\u3002</p> </li> </ol>"},{"location":"pl/cpp/","title":"C++","text":""},{"location":"pl/cpp/#_1","title":"\u57fa\u7840\u77e5\u8bc6","text":"<ul> <li>C++\u6742\u9879</li> <li>I/O\u6d41</li> <li>\u5f02\u5e38\u5904\u7406</li> <li>GDB</li> </ul>"},{"location":"pl/cpp/#_2","title":"\u5305\u7ba1\u7406","text":"<ul> <li>CMake</li> <li>Conan</li> </ul>"},{"location":"pl/cpp/#_3","title":"\u9762\u5411\u5bf9\u8c61","text":"<ul> <li>\u9762\u5411\u5bf9\u8c61</li> </ul>"},{"location":"pl/cpp/#_4","title":"\u6807\u51c6\u5e93","text":"<ul> <li>\u6807\u51c6\u5e93\u5bb9\u5668</li> <li>\u6807\u51c6\u5e93\u7b97\u6cd5</li> <li>\u6b63\u5219\u8868\u8fbe\u5f0f</li> <li>\u65e5\u671f\u548c\u65f6\u95f4</li> </ul>"},{"location":"pl/cpp/#_5","title":"\u5185\u5b58\u7ba1\u7406","text":"<ul> <li>\u5185\u5b58\u7ba1\u7406</li> </ul>"},{"location":"pl/cpp/#_6","title":"\u5e76\u53d1","text":"<ul> <li>C++\u591a\u7ebf\u7a0b</li> </ul>"},{"location":"pl/cpp/#c_1","title":"\u73b0\u4ee3C++","text":"<ul> <li>C++11\u65b0\u7279\u6027</li> </ul>"},{"location":"pl/cpp/algorithm/","title":"\u6807\u51c6\u5e93\u7b97\u6cd5","text":"<p>\u5927\u90e8\u5206\u7b97\u6cd5\u5b9a\u4e49\u5728&lt;algorithm&gt;\u4e2d\uff0c\u5c11\u90e8\u5206\u5b9a\u4e49\u5728&lt;numeric&gt;\u3002</p>"},{"location":"pl/cpp/cmake/","title":"CMake","text":""},{"location":"pl/cpp/conan/","title":"Conan","text":"<p>Conan \u662f\u4e00\u4e2a C/C++ \u7684\u5305\u7ba1\u7406\u5668\uff0c\u652f\u6301\u591a\u4e2a\u5e73\u53f0\u548c\u6784\u5efa\u7cfb\u7edf\uff0c\u76ee\u524d\u5df2\u7ecf\u66f4\u65b0\u5230\u4e86 2.3.0 \u7248\u672c\uff0c\u5b98\u65b9\u6587\u6863\uff1ahttps://docs.conan.io/2/index.html\u3002</p> <p>\u200bConan \u7684\u7279\u70b9\u6709\uff1a</p> <ul> <li>\u4e0e\u539f\u751f\u7684\u4f9d\u8d56\u7cfb\u7edf\u89e3\u8026\uff0c\u4e0d\u5f15\u5165\u989d\u5916\u8d1f\u62c5</li> <li>\u517c\u5bb9\u591a\u79cd\u6784\u5efa\u7cfb\u7edf\uff0c\u5305\u62ec CMake\u3001Visual Studio\u3001Bazel\u3001Meson\u7b49</li> <li>\u7edf\u4e00\u7684\u5305\u7ba1\u7406\u65b9\u5f0f(\u4e2d\u5fc3\u4ed3\u5e93)</li> <li>\u652f\u6301\u4ea4\u53c9\u7f16\u8bd1\u73af\u5883</li> <li>\u81ea\u52a8\u67e5\u627e\u5305\u7684\u4f9d\u8d56\u5173\u7cfb</li> </ul> <p>Conan \u7684\u8bbe\u8ba1\u7406\u5ff5\u4e0e git \u975e\u5e38\u7c7b\u4f3c\uff0c\u7528\u4e00\u4e2a\u4e2d\u5fc3\u4ed3\u5e93\u5b58\u50a8\u6240\u6709\u7684\u5305\uff0c\u7528\u6237\u4ece\u4ed3\u5e93\u62c9\u53d6\u6216\u8005\u4e0a\u4f20\u5305\uff0c\u800c\u7f16\u8bd1\u5219\u653e\u5728\u672c\u5730\u6267\u884c\u3002\u5b98\u65b9\u4ed3\u5e93\u5730\u5740\u4e3a\uff1aConan Center\uff0c\u4f01\u4e1a\u7528\u6237\u4e5f\u53ef\u4ee5\u90e8\u7f72\u81ea\u5df1\u7684\u79c1\u6709\u4ed3\u5e93\u3002</p>"},{"location":"pl/cpp/conan/#_1","title":"\u5e38\u7528\u547d\u4ee4","text":""},{"location":"pl/cpp/conan/#_2","title":"\u4f7f\u7528\u5305","text":""},{"location":"pl/cpp/conan/#profile","title":"Profile","text":"<p>Conan profiles allow users to set a complete configuration set for settings, options, environment variables (for build time and runtime context), tool requirements, and configuration variables in a file.</p> <p>\u5728\u4f7f\u7528 conan \u7ba1\u7406\u5305\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u914d\u7f6e profile \u6587\u4ef6\u3002<code>conan profile detect</code>\u7528\u6765\u751f\u6210\u5f53\u524d\u73af\u5883\u7684\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\uff1a</p> <pre><code>$ conan profile show\n\nHost profile:\n[settings]\narch=x86_64\nbuild_type=Release\ncompiler=gcc\ncompiler.cppstd=gnu17\ncompiler.libcxx=libstdc++11\ncompiler.version=11\nos=Linux\n\nBuild profile:\n[settings]\narch=x86_64\nbuild_type=Release\ncompiler=gcc\ncompiler.cppstd=gnu17\ncompiler.libcxx=libstdc++11\ncompiler.version=11\nos=Linux\n</code></pre> <p>\u4e0e profile \u76f8\u5173\u7684\u547d\u4ee4\u6709\uff1a</p> <pre><code>$ conan profile -h\n\ndetect              Generate a profile using auto-detected values.\nlist                List all profiles in the cache.\npath                Show profile path location.\nshow                Show aggregated profiles from the passed arguments.\n</code></pre>"},{"location":"pl/cpp/conan/#_3","title":"\u4ea4\u53c9\u7f16\u8bd1","text":"<p><code>conan install</code>\u547d\u4ee4\u53ef\u4ee5\u6307\u5b9a profile \u6587\u4ef6\uff0c\u4f8b\u5982\uff1a<code>conan install . -pr:b=default -pr:h=raspberry</code>\u3002\u8fd9\u6761\u547d\u4ee4\u544a\u8bc9 conan \u4ea4\u53c9\u7f16\u8bd1\u7684\u914d\u7f6e\uff1adefault \u7528\u4e8e\u7f16\u8bd1\u73af\u5883\uff0craspberry \u7528\u4e8e\u6267\u884c\u73af\u5883\u3002</p> <pre><code>[settings]\nos=Linux\narch=aarch64\ncompiler=gcc\nbuild_type=Release\ncompiler.cppstd=gnu14\ncompiler.libcxx=libstdc++11\ncompiler.version=9\n\n[buildenv]\nCC=arm-linux-gnueabihf-gcc-9\nCXX=arm-linux-gnueabihf-g++-9\nLD=arm-linux-gnueabihf-ld\n</code></pre>"},{"location":"pl/cpp/conan/#conanfilepy","title":"conanfile.py","text":"<p><code>conanfile.py</code>\u662f conan \u7684\u6838\u5fc3\u6587\u4ef6\uff0c\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6587\u4ef6\u5982\u4e0b\uff1a</p> <pre><code>from conan import ConanFile\nfrom conan.tools.cmake import cmake_layout\n\nclass MyFile(ConanFile):\n    settings = \"os\", \"compiler\", \"build_type\", \"arch\"\n    generators = \"CMakeToolchain\", \"CMakeDeps\"\n\n    def requirements(self):\n        self.requires(\"zlib/1.2.11\")\n\n    def build_requirements(self):\n        self.tool_requires(\"cmake/3.22.6\")\n\n    # using cmake layout\n    def layout(self):\n        cmake_layout(self)\n</code></pre> <ul> <li><code>setttings</code>\uff1a\u6574\u4e2a\u9879\u76ee\u7684\u7f16\u8bd1\u73af\u5883\uff0c\u6bd4\u5982\u7f16\u8bd1\u5668\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u67b6\u6784\u7b49</li> <li><code>generators</code>\uff1a\u6307\u5b9a\u751f\u6210\u5668\uff0c\u6bd4\u5982 CMakeToolchain\u3001CMakeDeps</li> <li><code>requirements</code>\uff1a\u4f9d\u8d56\u7684\u5e93\uff0c\u6bd4\u5982 zlib</li> <li><code>build_requirements</code>\uff1a\u6784\u5efa\u5de5\u5177\uff0c\u6bd4\u5982 cmake</li> <li><code>layout</code>\uff1a\u6307\u5b9a\u751f\u6210\u7684\u76ee\u5f55\u7ed3\u6784\uff0c\u8fd9\u91cc\u4f7f\u7528 cmake \u5e03\u5c40</li> </ul>"},{"location":"pl/cpp/conan/#_4","title":"\u5b89\u88c5\u4f9d\u8d56\u5e93","text":"<p>\u5047\u8bbe\u6211\u4eec\u7684\u9879\u76ee\u7ed3\u6784\u5982\u4e0b\uff1a <pre><code>.\n\u251c\u2500\u2500 bin\n\u251c\u2500\u2500 build\n\u251c\u2500\u2500 CMakeLists.txt\n\u251c\u2500\u2500 conanfile.py\n\u251c\u2500\u2500 lib\n\u251c\u2500\u2500 main.cpp\n</code></pre></p> <p>\u5728\u914d\u7f6e\u597d conanfile.py \u540e\uff0c\u5728\u5f53\u524d\u76ee\u5f55\uff0c\u6267\u884c<code>conan install . --output-folder=build --build=missing</code>\u547d\u4ee4\uff0c\u5373\u53ef\u5b89\u88c5\u4f9d\u8d56\u5e93\u3002</p> <ul> <li>--output-folder\uff1a\u6307\u5b9a\u5b89\u88c5\u76ee\u5f55\u4e3a build</li> <li>--build=missing\uff1a\u5728\u5b89\u88c5\u8fc7\u7a0b\u4e2d\u81ea\u52a8\u6784\u5efa\u4efb\u4f55\u7f3a\u5931\u7684\u4f9d\u8d56\u9879</li> </ul> <p>\u5728 build \u76ee\u5f55\u4e0b\uff0cconan \u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u7cfb\u5217 cmake \u6587\u4ef6\uff0c\u800c\u5b9e\u9645\u7684\u5305\u5219\u662f\u4e0b\u8f7d\u5230\u4e86 ~/.conan2/p \u6587\u4ef6\u5939\u4e2d\u3002</p> <p></p> <p>\u8fd9\u91cc\u6700\u5173\u952e\u7684\u6587\u4ef6\u662f conan_toolchain.cmake\uff0c\u540e\u7eed\u5728\u4f7f\u7528 cmake \u65f6\u9700\u8981\u6307\u5b9a\u8be5\u5de5\u5177\u94fe\u6587\u4ef6\uff0c\u624d\u80fd\u627e\u5230\u5bf9\u5e94\u7684\u5305\u3002\u4ee5\u4e0b\u4e09\u884c\u544a\u8bc9\u4e86 cmake \u53bb\u54ea\u91cc\u5bfb\u627e\u4f9d\u8d56\u7684\u5305\uff1a</p> <pre><code>list(PREPEND CMAKE_PREFIX_PATH ${CMAKE_CURRENT_LIST_DIR} )\nlist(PREPEND CMAKE_LIBRARY_PATH \"/root/.conan2/p/zlib0236fd1b57105/p/lib\")\nlist(PREPEND CMAKE_INCLUDE_PATH \"/root/.conan2/p/zlib0236fd1b57105/p/include\")\n</code></pre> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u5728 CMakeLists.txt \u6587\u4ef6\u6307\u5b9a\u4f9d\u8d56\u7684\u5305\u3002</p> <pre><code>find_package(LIBNAME REQUIRED)\ntarget_link_libraries(${PROJECt_NAME} LIBNAME::LIBNAME)\n</code></pre> <p>\u6700\u540e\uff0c\u6267\u884c<code>cmake .. -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake</code>\u547d\u4ee4\uff0c\u5373\u53ef\u751f\u6210 Makefile \u6587\u4ef6\u3002</p>"},{"location":"pl/cpp/conan/#_5","title":"\u521b\u5efa\u5305","text":""},{"location":"pl/cpp/conan/#_6","title":"\u90e8\u7f72\u79c1\u6709\u4ed3\u5e93","text":"<p>\u5982\u679c\u4f01\u4e1a\u60f3\u8981\u81ea\u5df1\u7ba1\u7406\u6240\u6709\u5305\uff0c\u90a3\u4e48\u53ef\u4ee5\u90e8\u7f72\u4f01\u4e1a\u79c1\u6709\u4ed3\u5e93\u3002Conan \u5b98\u65b9\u5efa\u8bae\u9009\u62e9\u4f7f\u7528 Artifactory \u4f5c\u4e3a\u79c1\u6709\u4ed3\u5e93\uff0c\u5b83\u7684\u4e0b\u8f7d\u5730\u5740\u662f\uff1ahttps://conan.io/downloads\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 docker \u547d\u4ee4\u4e00\u952e\u542f\u52a8\uff1a<code>docker run --name artifactory -d -p 8081:8081 -p 8082:8082 releases-docker.jfrog.io/jfrog/artifactory-cpp-ce:7.63.12</code>\u3002</p> <p>\u542f\u52a8 docker \u540e\uff0c\u767b\u5f55\u5230\u9ed8\u8ba4\u7684 <code>http://localhost:8081</code>\u754c\u9762\uff0c\u9ed8\u8ba4\u7528\u6237\u540d\u548c\u5bc6\u7801\u4e3a admin: password\u3002\u5176\u754c\u9762\u5982\u4e0b\u6240\u793a\uff1a</p> <p></p> <p>\u7136\u540e\uff0c\u4f60\u9700\u8981\u5728\u9875\u9762\u4e2d\u521b\u5efa\u65b0\u7684 repository\uff0c\u518d\u5c06 Artifactory \u4ed3\u5e93\u7684\u5730\u5740\u6dfb\u52a0\u5230 conan \u4e2d\uff1a</p> <pre><code>conan remote add artifactory http://localhost:8081/artifactory/api/conan/conan-local\n</code></pre> <p>\u6b64\u65f6\u518d\u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93\uff0c\u53d1\u73b0\u591a\u4e86\u4e00\u4e2a artifactory \u4ed3\u5e93\uff1a</p> <pre><code>$ conan remote list\n\nconancenter: https://center.conan.io [Verify SSL: True, Enabled: True]\nartifactory: http://localhost:8081/artifactory/api/conan/conan-local [Verify SSL: True, Enabled: True]\n</code></pre> <p>\u914d\u7f6e\u767b\u5f55\u4fe1\u606f\uff1a</p> <pre><code>conan remote login artifactory &lt;user&gt; -p &lt;password&gt;\n</code></pre> <p>\u73b0\u5728\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 <code>conan upload</code> \u547d\u4ee4\u4e0a\u4f20\u81ea\u5df1\u7684\u5305\u5230 artifactory \u4ed3\u5e93\uff1a</p> <pre><code>$ conan upload mylib/1.0@user/testing -r artifactory\n</code></pre>"},{"location":"pl/cpp/conan/#_7","title":"\u7248\u672c\u63a7\u5236","text":""},{"location":"pl/cpp/conan/#_8","title":"\u5176\u4ed6\u91cd\u8981\u6982\u5ff5","text":""},{"location":"pl/cpp/concurrency/","title":"\u591a\u7ebf\u7a0b\u7f16\u7a0b","text":""},{"location":"pl/cpp/concurrency/#this_thread","title":"this_thread","text":"<p><code>std::this_thread</code>\u662f\u4e00\u4e2a\u5173\u4e8e\u7ebf\u7a0b\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u63d0\u4f9b\u4e86\u56db\u4e2a\u516c\u5171\u7684\u6210\u5458\u51fd\u6570\uff0c\u7528\u4e8e\u5bf9\u5f53\u524d\u7ebf\u7a0b\u8fdb\u884c\u64cd\u4f5c\u3002</p> <ul> <li><code>get_id</code>\uff1a\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u7684ID</li> <li><code>sleep_for</code>\uff1a\u4f7f\u5f53\u524d\u7ebf\u7a0b\u4f11\u7720\u4e00\u6bb5\u65f6\u95f4</li> <li><code>sleep_until</code>\uff1a\u4f7f\u5f53\u524d\u7ebf\u7a0b\u4f11\u7720\u5230\u67d0\u4e2a\u65f6\u95f4\u70b9(timepoint)</li> <li><code>yield</code>\uff1a\u4f7f\u5f53\u524d\u7ebf\u7a0b\u8ba9\u51faCPU\u8d44\u6e90</li> </ul>"},{"location":"pl/cpp/concurrency/#_2","title":"\u7ebf\u7a0b\u5e93","text":"<p>&lt;thread&gt;\u5e93\u4e2d\u5b9a\u4e49\u7684\u7ebf\u7a0b\u5e93\u53ef\u4ee5\u4f7f\u7528\u591a\u79cd\u65b9\u5f0f\u521b\u5efa\u7ebf\u7a0b\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u901a\u8fc7\u51fd\u6570\u6307\u9488\u521b\u5efa\u7ebf\u7a0b\uff1a\u53ef\u4ee5\u4f20\u5165\u591a\u4e2a\u53c2\u6570</li> <li>\u901a\u8fc7lambda\u8868\u8fbe\u5f0f\u521b\u5efa\u7ebf\u7a0b</li> <li>\u901a\u8fc7\u7c7b\u6210\u5458\u51fd\u6570\u521b\u5efa\u7ebf\u7a0b\uff1a\u9700\u8981\u540c\u65f6\u4f20\u9012\u7c7b\u65b9\u6cd5\u548c\u7c7b\u5b9e\u4f8b</li> </ul> <p>\u8c03\u7528<code>join()</code>\u4f1a\u963b\u585e\u4e3b\u7ebf\u7a0b\uff0c\u76f4\u5230\u7ebf\u7a0b\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u3002\u800c\u8c03\u7528<code>detach()</code>\u4f1a\u4f7f\u7ebf\u7a0b\u4e0e\u4e3b\u7ebf\u7a0b\u5206\u79bb\uff0c\u5728\u7ebf\u7a0b\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\u540e\u7531\u64cd\u4f5c\u7cfb\u7edf\u56de\u6536\u3002</p> <p>C++11\u63d0\u4f9b\u4e86\u4e00\u4e9b\u8f85\u52a9\u51fd\u6570\u7528\u4e8e\u66f4\u7cbe\u7ec6\u5316\u5730\u64cd\u4f5c\u7ebf\u7a0b\uff1a</p> <pre><code>std::thread t(func);\nstd::cout&lt;&lt;\"\u5f53\u524d\u7ebf\u7a0b\u4e2a\u6570\uff1a\"&lt;&lt; t.get_id() &lt;&lt;std::cendl;\nstd::cout&lt;&lt; \"\u5f53\u524dcpu\u4e2a\u6570\uff1a\"&lt;&lt; std::thread::hardware_concurrency() &lt;&lt;std::cendl;\nstd::this_thread::sleep_for(std::chrono::seconds(10));\n</code></pre>"},{"location":"pl/cpp/concurrency/#_3","title":"\u9501","text":"<p><code>std::mutex</code>\u662f\u4e00\u4e2a\u72ec\u5360\u7684\u4e92\u65a5\u9501\uff0c<code>std::lock_guard</code>\u548c<code>std::unique_lock</code>\u662f\u5bf9\u4e92\u65a5\u9501\u7684RAII\u5b9e\u73b0\uff0c\u53ef\u4ee5\u52a8\u6001\u5730\u91ca\u653e\u9501\u8d44\u6e90\u3002\u5b83\u4eec\u7684\u4e3b\u8981\u533a\u522b\u5728\u4e8e\u7075\u6d3b\u6027\u548c\u6027\u80fd\u5f00\u9500\u4e0a\u3002</p> <p><code>lock_guard</code>\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u9501\u7ba1\u7406\u7c7b\uff0c\u5b83\u5728\u6784\u9020\u65f6\u81ea\u52a8\u52a0\u9501\uff0c\u5728\u6790\u6784\u65f6\u81ea\u52a8\u89e3\u9501\u3002\u8fd9\u610f\u5473\u7740\u5b83\u9002\u7528\u4e8e\u90a3\u4e9b\u7b80\u5355\u7684\u540c\u6b65\u9700\u6c42\uff0c\u4f8b\u5982\u5728\u4e00\u4e2a\u51fd\u6570\u4f5c\u7528\u57df\u5185\u4fdd\u8bc1\u4e00\u6bb5\u4ee3\u7801\u7684\u4e92\u65a5\u6267\u884c\u3002<code>lock_guard</code>\u4e0d\u80fd\u624b\u52a8\u89e3\u9501\uff0c\u4e5f\u4e0d\u80fd\u5c1d\u8bd5\u9501\uff08try-lock\uff09\uff0c\u5b83\u53ea\u6709\u6700\u57fa\u672c\u7684\u9501\u5b9a\u529f\u80fd\u3002\u56e0\u6b64\uff0c<code>lock_guard</code>\u7684\u6027\u80fd\u5f00\u9500\u76f8\u5bf9\u8f83\u5c0f\u3002</p> <p><code>unique_lock</code>\u5219\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u529f\u80fd\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e0e<code>lock_guard</code>\u76f8\u540c\u7684\u57fa\u672c\u529f\u80fd\uff0c\u5e76\u4e14\u8fd8\u53ef\u4ee5\u624b\u52a8\u52a0\u9501\u548c\u89e3\u9501\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u9501\uff08try-lock\uff09\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u5b9a\u9501\u7684\u62e5\u6709\u6743\u8f6c\u79fb\uff0c\u4ee5\u53ca\u4e0e\u6761\u4ef6\u53d8\u91cf\u4e00\u8d77\u4f7f\u7528\u65f6\u80fd\u591f\u81ea\u52a8\u89e3\u9501\u548c\u91cd\u65b0\u52a0\u9501\u3002<code>unique_lock</code>\u7684\u8fd9\u4e9b\u989d\u5916\u529f\u80fd\u4f7f\u5f97\u5b83\u7684\u6027\u80fd\u5f00\u9500\u76f8\u5bf9\u8f83\u5927\uff0c\u4f46\u5728\u9700\u8981\u66f4\u7075\u6d3b\u7684\u9501\u7ba1\u7406\u65f6\u975e\u5e38\u6709\u7528\u3002</p>"},{"location":"pl/cpp/concurrency/#_4","title":"\u7ebf\u7a0b\u672c\u5730\u5b58\u50a8","text":"<p><code>thread_local</code>\u53ef\u4ee5\u5c06\u4efb\u4f55\u53d8\u91cf\u6807\u8bb0\u4e3a\u7ebf\u7a0b\u672c\u5730\u6570\u636e\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u526f\u672c\u3002</p>"},{"location":"pl/cpp/concurrency/#_5","title":"\u539f\u5b50\u53d8\u91cf","text":"<p>\u5934\u6587\u4ef6&lt;atomic&gt;\u5b9a\u4e49\u4e86C++\u4e2d\u7684\u539f\u5b50\u7c7b\u578b\uff0c\u6807\u51c6\u5e93\u4e3a\u6240\u6709\u57fa\u672c\u7c7b\u578b\u90fd\u5b9a\u4e49\u4e86\u547d\u540d\u7684\u539f\u5b50\u7c7b\u578b\uff0c\u6bd4\u5982<code>atomic_int</code>\u3001<code>atomic_bool</code>\u7b49\u3002</p>"},{"location":"pl/cpp/concurrency/#call_once","title":"call_once","text":"<p>c++11\u63d0\u4f9b\u4e86<code>std::call_once</code>\u6765\u4fdd\u8bc1\u67d0\u4e00\u51fd\u6570\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u53ea\u8c03\u7528\u4e00\u6b21\uff0c\u5b83\u9700\u8981\u914d\u5408<code>std::once_flag</code>\u4f7f\u7528\uff1a</p> <pre><code>std::once_flag onceflag;\n\nvoid CallOnce() {\n   std::call_once(onceflag, []() {\n       cout &lt;&lt; \"call once\" &lt;&lt; endl;\n  });\n}\n\nint main() {\n   std::thread threads[5];\n   for (int i = 0; i &lt; 5; ++i) {\n       threads[i] = std::thread(CallOnce);\n  }\n   for (auto&amp; th : threads) {\n       th.join();\n  }\n   return 0;\n}\n</code></pre>"},{"location":"pl/cpp/concurrency/#_6","title":"\u6761\u4ef6\u53d8\u91cf","text":"<p><code>std::condition_variable</code>\u662fc++11\u5f15\u5165\u7684\u4e00\u79cd\u540c\u6b65\u673a\u5236\uff0c\u5b83\u53ef\u4ee5\u963b\u585e\u4e00\u4e2a\u7ebf\u7a0b\u6216\u8005\u4e2a\u7ebf\u7a0b\uff0c\u76f4\u5230\u6709\u7ebf\u7a0b\u901a\u77e5\u6216\u8005\u8d85\u65f6\u624d\u4f1a\u5524\u9192\u6b63\u5728\u963b\u585e\u7684\u7ebf\u7a0b\uff0c\u6761\u4ef6\u53d8\u91cf\u9700\u8981\u548c\u9501\u914d\u5408\u4f7f\u7528\uff0c\u8fd9\u91cc\u7684\u9501\u5c31\u662f\u4e0a\u9762\u4ecb\u7ecd\u7684<code>std::unique_lock</code>\u3002</p>"},{"location":"pl/cpp/concurrency/#_7","title":"\u5f02\u6b65","text":"<p><code>async</code>\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u5f02\u6b65\u4efb\u52a1\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u4f1a\u4fdd\u5b58\u5728<code>std::future</code>\u4e2d\u3002</p> <pre><code>int func(int num){return num + 1;}\n\nauto res = std::async(func, 5);\nstd::cout&lt;&lt; res.get() &lt;&lt;std::endl;\n</code></pre>"},{"location":"pl/cpp/container/","title":"\u6807\u51c6\u5e93\u5bb9\u5668","text":"<p>\u987a\u5e8f\u5bb9\u5668\uff1a</p> <ul> <li>vector</li> <li>deque</li> <li>list</li> <li>forward_list</li> <li>array</li> </ul> <p>\u5bb9\u5668\u9002\u914d\u5668\uff1a</p> <ul> <li>queue</li> <li>priority_queue</li> <li>stack</li> </ul> <p>\u6709\u5e8f\u5173\u8054\u5bb9\u5668\uff1a</p> <ul> <li>map</li> <li>multimap</li> <li>set</li> <li>multiset</li> </ul> <p>\u65e0\u5e8f\u5173\u8054\u5bb9\u5668\u6216\u54c8\u5e0c\u8868\uff1a</p> <ul> <li>unordered_map</li> <li>unordered_multimap</li> <li>unordered_set</li> <li>unordered_multiset</li> </ul>"},{"location":"pl/cpp/container/#_2","title":"\u987a\u5e8f\u5bb9\u5668","text":""},{"location":"pl/cpp/container/#vector","title":"vector","text":"<p>vector\u63d0\u4f9b\u52a8\u6001\u589e\u957f\u7684\u6570\u7ec4\uff0c\u63d2\u5165\u6216\u5220\u9664\u4e3aO(n)\uff0c\u968f\u673a\u8bbf\u95ee\u4e3aO(1)\u3002\u4e3a\u4e86\u63d0\u4f9b\u52a8\u6001\u589e\u957f\u7684\u9700\u6c42\uff0c\u5f53vector\u5185\u90e8\u7a7a\u95f4\u4e0d\u591f\u65f6\uff0c\u4f1a\u5206\u914d\u4e00\u5757\u66f4\u5927\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u540e\u5c06\u539f\u5185\u5bb9\u590d\u5236\u5230\u65b0\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u975e\u5e38\u8017\u65f6\uff0c\u56e0\u6b64vector\u5728\u5206\u914d\u5185\u5b58\u65f6\uff0c\u4f1a\u5c3d\u91cf\u4e00\u6b21\u6027\u5206\u914d\u8db3\u591f\u591a\u7684\u5185\u5b58\uff0c\u907f\u514d\u9891\u7e41\u7684\u5185\u5b58\u5206\u914d\u3002</p> <p>\u4f46\u662fvector\u6c38\u8fdc\u4e0d\u4f1a\u91ca\u653e\u4efb\u4f55\u5185\u5b58\uff0c\u9664\u975evector\u88ab\u9500\u6bc1\u3002\u4ecevector\u4e2d\u5220\u9664\u4f1a\u5458\u4f1a\u51cf\u5c11\u5176\u5927\u5c0f\uff0c\u4f46\u662f\u4e0d\u4f1a\u91ca\u653e\u7a7a\u95f4\u3002\u56de\u6536\u5185\u5b58\u7684\u4e00\u4e2a\u6280\u5de7\u662f\u8ba9\u5b83\u4e0e\u4e00\u4e2a\u7a7a\u7684vector\u8fdb\u884c\u4ea4\u6362\uff1a</p> <pre><code>vector&lt;int&gt;values;\nvector&lt;int&gt;().swap(values);\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2a\u4e34\u65f6\u7684\u7a7avector\uff0c\u5e76\u4e0e\u5176\u4ea4\u6362\uff0c\u8bed\u53e5\u7ed3\u675f\u540e\u4e34\u65f6\u53d8\u91cf\u5c31\u4f1a\u88ab\u9500\u6bc1\uff0c\u8fd9\u6837\u5c31\u8fbe\u5230\u4e86\u91ca\u653e\u5185\u5b58\u7684\u76ee\u7684\u3002</p> <p>\u521d\u59cb\u5316\uff1a</p> <pre><code>vector&lt;int&gt;intVector1(10, 100);  //10\u4e2a100\nvector&lt;int&gt;intVector2 = {1, 2, 3, 4, 5};\n</code></pre> <p>\u590d\u5236\u548c\u8d4b\u503c\uff1a</p> <pre><code>intVector1.assign(5, 100);  //\u5220\u9664\u5e76\u586b\u51455\u4e2a100\nintVector2.swap(intVector1);//\u4ea4\u6362\u5143\u7d20\n</code></pre> <p>\u8fed\u4ee3\u5668\uff1a</p> <p><code>begin()</code>\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c<code>end()</code>\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u3002\u540c\u65f6\u8fd8\u6709<code>cbegin()</code>\u548c<code>cend()</code>\uff0c\u8fd4\u56de\u5e38\u91cf\u8fed\u4ee3\u5668\u3002<code>rbegin()</code>\u548c<code>rend()</code>\u5206\u522b\u8fd4\u56de\u53cd\u5411\u8fed\u4ee3\u5668\u3002</p> <p>\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\uff1a</p> <p><code>push_back()</code>\u548c<code>pop_back()</code>\u7528\u4e8e\u5411\u540e\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\uff0c<code>insert()</code>\u548c<code>erase()</code>\u7528\u4e8e\u4efb\u610f\u4f4d\u7f6e\u7684\u63d2\u5165\u548c\u5220\u9664\uff0c<code>clear()</code>\u7528\u4e8e\u6e05\u7a7a\u3002</p> <p>\u4eceC++20\u5f00\u59cb\uff0c<code>std::erase()</code>\u548c<code>std::erase_if()</code>\u4e3a\u6240\u6709\u6807\u51c6\u5e93\u5bb9\u5668\u63d0\u4f9b\u4e86\u5220\u9664\u64cd\u4f5c\uff1a</p> <pre><code>vector values{1,2,3,2,1};\nerase(values, 2);       //\u5220\u9664\u6240\u6709\u7b49\u4e8e2\u7684\u5143\u7d20\n</code></pre> <p><code>erase_if()</code>\u63a5\u6536\u4e00\u4e2a\u8c13\u8bcd\uff0c\u5bf9\u4e8e\u5e94\u8be5\u5220\u9664\u7684\u5143\u7d20\u8fd4\u56detrue\uff0c\u4fdd\u7559\u7684\u5143\u7d20\u8fd4\u56defalse\u3002</p> <p>\u5927\u5c0f\u548c\u5bb9\u91cf\uff1a</p> <p><code>size()</code>\u8fd4\u56de\u5f53\u524d\u5143\u7d20\u4e2a\u6570\uff0c<code>capacity()</code>\u8fd4\u56de\u5f53\u524d\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f\u3002<code>reserve()</code>\u9884\u5206\u914d\u7a7a\u95f4\u3002</p> <p>\u8bbf\u95ee\u6570\u636e\uff1a</p> <p><code>data()</code>\u65b9\u6cd5\u83b7\u53d6\u6307\u5411\u8fd9\u5757\u5185\u5b58\u7684\u6307\u9488\uff0c<code>operator[]</code>\u548c<code>at()</code>\u65b9\u6cd5\u7528\u4e8e\u8bbf\u95ee\u5143\u7d20\u3002</p>"},{"location":"pl/cpp/container/#deque","title":"deque","text":"<p>deque\u662f\u53cc\u7aef\u961f\u5217\uff0c\u4e0evector\u7684\u533a\u522b\u662f\uff1a</p> <ul> <li>\u4e0d\u8981\u6c42\u5143\u7d20\u4fdd\u5b58\u5728\u8fde\u7eed\u5185\u5b58\u4e2d</li> <li>\u9996\u5c3e\u63d2\u5165\u548c\u5220\u9664\u4e3a\u5e38\u91cf\u65f6\u95f4</li> <li>\u652f\u6301<code>push_fron()</code>\u548c<code>pop_front()</code></li> </ul>"},{"location":"pl/cpp/container/#list","title":"list","text":"<p>list\u662f\u4e00\u79cd\u53cc\u5411\u94fe\u8868\uff0c\u652f\u6301\u94fe\u8868\u4e2d\u4efb\u610f\u4f4d\u7f6e\u5e38\u91cf\u65f6\u95f4\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u4f46\u662f\u8bbf\u95ee\u5355\u72ec\u5143\u7d20\u7684\u901f\u5ea6\u4e3a\u7ebf\u6027\u65f6\u95f4\uff0clist\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\u5143\u7d20\u3002</p> <p>\u8bbf\u95ee\u5143\u7d20\uff1a</p> <p><code>front()</code>\u548c<code>back()</code>\u5206\u522b\u8bbf\u95ee\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002\u5bf9\u5176\u4ed6\u6240\u6709\u5143\u7d20\u7684\u8bbf\u95ee\u5fc5\u987b\u901a\u8fc7\u8fed\u4ee3\u5668\u8fdb\u884c\u3002</p> <p>\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\uff1a</p> <p><code>push_back()</code>\u3001<code>pop_back()</code>\u3001<code>emplace()</code>\u3001<code>emplace_back()</code>\uff0c5\u79cd\u5f62\u5f0f\u7684<code>insert()</code>\u548c2\u79cd\u5f62\u5f0f\u7684<code>erase()</code>\u548c<code>clear()</code>\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u63d0\u4f9b<code>push_front()</code>\u3001<code>emplace_front()</code>\u548c<code>pop_front()</code>\u3002</p> <p>\u5927\u5c0f\u548c\u5bb9\u91cf\uff1a</p> <p>list\u652f\u6301<code>size()</code>\u3001<code>empty()</code>\u3001<code>resize()</code>\uff0c\u4f46\u4e0d\u652f\u6301<code>reserve()</code>\u548c<code>capacitiy()</code>\u3002</p> <p>list\u4ee5\u65b9\u6cd5\u7684\u5f62\u5f0f\u63d0\u4f9b\u7684\u6807\u51c6\u5e93\u7b97\u6cd5\u6709\uff1a</p> \u65b9\u6cd5 \u8bf4\u660e remove()/remove_if() \u4ecelist\u4e2d\u5220\u9664\u6307\u5b9a\u5143\u7d20 unique() \u5220\u9664\u8fde\u7eed\u7684\u91cd\u590d\u5143\u7d20 merge() \u5408\u5e76\u4e24\u4e2a\u5df2\u6392\u5e8f\u7684list sort() \u6392\u5e8f reverse() \u53cd\u8f6c\u987a\u5e8f"},{"location":"pl/cpp/container/#array","title":"array","text":"<p>\u548cvector\u4e00\u6837\uff0carray\u652f\u6301\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff0c\u5143\u7d20\u90fd\u4fdd\u5b58\u5728\u8fde\u7eed\u5185\u5b58\u4e2d\uff0c\u533a\u522b\u5728\u4e8earray\u7684\u5927\u5c0f\u56fa\u5b9a\u3002</p>"},{"location":"pl/cpp/container/#span","title":"span","text":"<p>std::span\u5728c++20\u4e2d\u88ab\u5f15\u5165\uff0c\u5b83\u5141\u8bb8\u7f16\u5199\u5355\u4e2a\u51fd\u6570\u6765\u5904\u7406vector\u3001C\u98ce\u683c\u6570\u7ec4\u548carray\u3002span\u7684\u590d\u5236\u6210\u672c\u5f88\u4f4e\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a</p> <pre><code>void pirnt(span&lt;const int&gt;values)\n{\n    for(const auto &amp;value:values){\n        cout&lt;&lt;value&lt;&lt; \" \";\n        cout&lt;&lt;endl;\n    }\n}\n</code></pre>"},{"location":"pl/cpp/container/#_3","title":"\u5bb9\u5668\u9002\u914d\u5668","text":"<p>queue\u3001priority_queue\u3001stack\u90fd\u662f\u5bb9\u5668\u9002\u914d\u5668\uff0c\u662f\u5bf9\u987a\u5e8f\u5bb9\u5668\u7684\u5305\u88c5\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u7b80\u5316\u63a5\u53e3\uff0c\u53ea\u63d0\u4f9b\u7279\u5b9a\u7684\u529f\u80fd\u3002</p>"},{"location":"pl/cpp/container/#queue","title":"queue","text":"<p>queue\u662f\u4e00\u79cdFIFO\uff08\u5148\u8fdb\u5148\u51fa\uff09\u5bb9\u5668\u9002\u914d\u5668\uff0c\u5b83\u53ea\u652f\u63018\u4e2a\u65b9\u6cd5\uff1a</p> <ul> <li><code>push()</code>\u548c<code>emplace()</code>\uff1a\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u961f\u5217\u5c3e\u90e8</li> <li><code>pop()</code>\uff1a\u79fb\u9664\u961f\u5217\u5934\u90e8\u7684\u5143\u7d20</li> <li><code>front()</code>\u548c<code>back()</code>\uff1a\u8fd4\u56de\u5c3e\u90e8\u548c\u5934\u90e8\u5143\u7d20\u7684\u5f15\u7528</li> <li><code>size()</code>\uff1a\u8fd4\u56de\u961f\u5217\u4e2d\u5143\u7d20\u7684\u6570\u91cf</li> <li><code>empty()</code>\uff1a\u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a</li> <li><code>swap()</code>\uff1a\u4ea4\u6362\u5143\u7d20</li> </ul>"},{"location":"pl/cpp/container/#priority_queue","title":"priority_queue","text":"<p>priority_queue\u662f\u4e00\u79cd\u4f18\u5148\u961f\u5217\uff0c\u5b83\u4e0d\u4fdd\u8bc1\u4e25\u683c\u7684FIFO\u987a\u5e8f\uff0c\u800c\u662f\u4fdd\u8bc1\u961f\u5217\u5934\u90e8\u5143\u7d20\u62e5\u6709\u6700\u9ad8\u7684\u4f18\u5148\u7ea7\u3002\u5b83\u63d0\u4f9b\u7684\u65b9\u6cd5\u66f4\u5c11\uff1a</p> <ul> <li><code>push()</code>\u548c<code>emplace()</code>\uff1a\u63d2\u5165\u5143\u7d20</li> <li><code>pop()</code>\uff1a\u5220\u9664\u5143\u7d20</li> <li><code>top()</code>\uff1a\u8fd4\u56de\u961f\u5217\u5934\u90e8\u5143\u7d20</li> <li><code>size()</code>\u3001<code>empty()</code>\u548c<code>swap()</code>\uff1a\u4e0equeue\u76f8\u540c</li> </ul>"},{"location":"pl/cpp/container/#stack","title":"stack","text":"<p>stack\u63d0\u4f9b\u5148\u5165\u540e\u51fa\uff0c\u63d0\u4f9b\u7684\u65b9\u6cd5\u7c7b\u4f3c\u3002</p>"},{"location":"pl/cpp/container/#_4","title":"\u6709\u5e8f\u5173\u8054\u5bb9\u5668","text":"<p>\u4e0e\u987a\u5e8f\u5bb9\u5668\u4e0d\u540c\uff0c\u6709\u5e8f\u5173\u8054\u5bb9\u5668\u5c06\u952e\u6620\u5c04\u5230\u503c\uff0c\u5143\u7d20\u4fdd\u5b58\u5728\u7c7b\u4f3c\u6811\u7684\u7ed3\u6784\u4e2d\u3002</p>"},{"location":"pl/cpp/container/#pair","title":"pair","text":"<p>\u5728\u5b66\u4e60\u6709\u5e8f\u5173\u8054\u5bb9\u5668\u4e4b\u524d\uff0c\u5148\u8981\u4e86\u89e3\u4e0bpair\u7c7b\uff0c\u5b83\u5b9a\u4e49\u5728&lt;utility&gt;\u5934\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u5c06\u4e24\u4e2a\u4e0d\u76f8\u5173\u7684\u7c7b\u578b\u7ec4\u5408\u8d77\u6765\uff0c\u5e76\u901a\u8fc7first\u548csecond\u8bbf\u95ee\u3002</p> <pre><code>pair&lt;string, int&gt;myPair{\"hello\", 5};\nauto pair2 { make_pair(5, 10.0)};\n</code></pre>"},{"location":"pl/cpp/container/#map","title":"map","text":"<p>map\u4fdd\u5b58\u952e\u503c\u5bf9\uff0c\u63d2\u5165\u3001\u67e5\u627e\u548c\u5220\u9664\u90fd\u662f\u57fa\u4e8e\u952e\u7684\uff0c\u590d\u6742\u5ea6\u4e3a\u5bf9\u6570\u65f6\u95f4\u3002</p> <p><code>operator[]</code>\u7528\u4e8e\u63d2\u5165\u5143\u7d20\uff0c\u5b83\u603b\u662f\u4f1a\u6210\u529f\uff1a\u5982\u679c\u952e\u4e0d\u5b58\u5728\uff0c\u5219\u4f1a\u521b\u5efa\uff1b\u5982\u679c\u952e\u5b58\u5728\uff0c\u5219\u4f1a\u66ff\u6362\u503c\u3002</p> <p>\u67e5\u627e\u5143\u7d20\uff1a</p> <p>\u5982\u679c\u5df2\u77e5\u5143\u7d20\u5b58\u5728\uff0c\u5219\u901a\u8fc7<code>operator[]</code>\u67e5\u627e\u6700\u4e3a\u7b80\u5355\u3002<code>find()</code>\u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56de\u6307\u5411\u952e\u7684\u8fed\u4ee3\u5668\uff0c<code>count()</code>\u65b9\u6cd5\u8fd4\u56de\u7ed9\u5b9a\u952e\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5bf9\u4e8emap\u6765\u8bf4\uff0c\u8fd9\u4e2a\u7ed3\u679c\u4e0d\u662f0\u5c31\u662f1\uff0c\u56e0\u4e3amap\u4e0d\u5141\u8bb8\u91cd\u590d\u952e\u3002</p> <p>\u5220\u9664\u5143\u7d20\uff1a</p> <p><code>erase()</code>\u65b9\u6cd5\u63a5\u53d7\u4e24\u4e2a\u8f93\u5165\uff1a\u6307\u5411\u5220\u9664\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u6216\u8005\u662f\u952e\u503c\u3002</p>"},{"location":"pl/cpp/container/#set","title":"set","text":"<p>\u5982\u679c\u4fe1\u606f\u6ca1\u6709\u663e\u793a\u7684\u952e\uff0c\u4e14\u5e0c\u671b\u8fdb\u884c\u6392\u5e8f\u4ee5\u4fbf\u5feb\u901f\u7b2c\u6267\u884c\u63d2\u5165\u3001\u67e5\u627e\u548c\u5220\u9664\uff0c\u5219\u53ef\u4ee5\u8003\u8651\u4f7f\u7528set\u5bb9\u5668\u3002</p> <p>set\u5bb9\u5668\u63d0\u4f9b\u4e0emap\u51e0\u4e4e\u76f8\u540c\u7684\u63a5\u53e3\u3002</p> <p>multimap\u548cmultiset\u4e0d\u5e38\u7528\uff0c\u4e0d\u5728\u6b64\u4ecb\u7ecd\u3002</p>"},{"location":"pl/cpp/container/#_5","title":"\u65e0\u5e8f\u5173\u8054\u5bb9\u5668","text":"<p>\u65e0\u5e8f\u7248\u672c\u7684\u5173\u8054\u5bb9\u5668\uff0c\u5176\u5143\u7d20\u6ca1\u6709\u6392\u5e8f\uff0c\u4e14\u4e0d\u63d0\u4f9b\u57fa\u4e8e\u952e\u7684\u5feb\u901f\u67e5\u627e\u3002</p> <p>\u8bf7\u67e5\u770b\u300aC++20\u9ad8\u7ea7\u7f16\u7a0b\u4e0b\u518c\u300bP561\u9875\u4e0e\u6709\u5e8f\u7248\u672c\u7684\u533a\u522b\u3002</p>"},{"location":"pl/cpp/container/#_6","title":"\u5176\u4ed6\u5bb9\u5668","text":""},{"location":"pl/cpp/container/#string","title":"string","text":"<p><code>string</code>\u5b9e\u9645\u4e0a\u662f<code>basic_string&lt;char&gt;</code>\u7684\u522b\u540d\u3002</p> <p>\u63a8\u5bfc\u89c4\u5219</p> <pre><code>auto string1 { \"Hello world\"};   //string\u4e3aconst char *\nauto string2 { \"Hello world\"s};  //string\u4e3astd::string\n</code></pre> <p>\u5982\u679c\u8981\u63a8\u5bfc\u4e3a<code>std::string</code>\uff0c\u9700\u8981\u6dfb\u52a0\u540e\u7f00<code>s</code>\u3002</p> <p>\u83b7\u53d6C\u98ce\u683c\u5b57\u7b26\u4e32:</p> <p>C++17\u4e4b\u540e\uff0c<code>c_str()</code>\u8fd4\u56deconst char *\uff0c<code>data()</code>\u8fd4\u56dechar *\u3002</p> <p>\u6570\u503c\u8f6c\u6362:</p> <ul> <li>\u6570\u503c\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff1a<code>string to_string(T val)</code></li> <li>\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6570\u503c\uff1a<code>T stoi(const string&amp; str, size_t* idx = 0, int base = 10)</code></li> </ul>"},{"location":"pl/cpp/container/#string_view","title":"string_view","text":"<p>\u5728\u8fc7\u53bb\uff0c\u63a5\u6536\u53ea\u8bfb\u5b57\u7b26\u4e32\u4e00\u76f4\u662f\u4e00\u4ef6\u6bd4\u8f83\u5934\u75bc\u7684\u4e8b\u60c5\uff0c<code>string_view</code>\u7684\u51fa\u73b0\u89e3\u51b3\u4e86\u63a5\u53e3\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\u5b83\u7528\u6765\u63d0\u4f9b\u5bf9\u5b57\u7b26\u4e32\u7684\u53ea\u8bfb\u8bbf\u95ee\uff0c\u4e0d\u62e5\u6709\u5b57\u7b26\u4e32\u7684\u6240\u6709\u6743\uff0c\u56e0\u6b64\u4e0d\u80fd\u7528\u6765\u4fdd\u5b58\u4e34\u65f6\u5b57\u7b26\u4e32\u3002\u4e00\u822c\u7528\u5728\u51fd\u6570\u53c2\u6570\u4e2d\u6309\u503c\u4f20\u9012\u3002</p>"},{"location":"pl/cpp/container/#bitset","title":"bitset","text":"<p><code>bitset</code>\u662f\u6807\u51c6\u5e93\u63d0\u4f9b\u7684\u7528\u4e8e\u5b58\u50a8\u548c\u64cd\u4f5c\u4f4d\u7684\u6570\u636e\u7ed3\u6784\u3002\u53ef\u901a\u8fc7<code>set()</code>\u3001<code>reset()</code>\u3001<code>flip()</code>\u65b9\u6cd5\u6539\u53d8\u5355\u4e2a\u4f4d\u7684\u503c\uff0c\u901a\u8fc7\u91cd\u8f7d\u7684<code>operator[]</code>\u8fd0\u7b97\u7b26\u8bbf\u95ee\u548c\u8bbe\u7f6e\u5355\u4e2a\u4f4d\u3002<code>test()</code>\u65b9\u6cd5\u7528\u4e8e\u6d4b\u8bd5\u4f4d\u662f\u5426\u4e3a1\u3002</p>"},{"location":"pl/cpp/cpp11/","title":"C++11","text":""},{"location":"pl/cpp/cpp11/#_1","title":"\u65b0\u5b57\u7b26\u7c7b\u578b","text":"<p>C++98 \u4e2d\u63d0\u4f9b\u4e86<code>wchar_t</code>\u5b57\u7b26\u7c7b\u578b\u548c\u524d\u7f00L\uff0c\u7528\u4ee5\u8868\u793a\u5bbd\u5b57\u7b26\uff0c\u4f46\u662f\u5728\u4e0d\u540c\u5e73\u53f0\u4e0a\u5bbd\u5b57\u7b26\u7684\u5b57\u8282\u4e0d\u540c\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u65b0\u6807\u51c6\u63d0\u51fa\u4e86<code>char16_t</code>\u548c<code>char32_t</code>\u5b57\u7b26\u7c7b\u578b\uff0c\u5206\u522b\u8868\u793a 16 \u4f4d\u548c 32 \u4f4d\u7684 Unicode \u5b57\u7b26\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u4e09\u79cd UTF \u7f16\u7801\u524d\u7f00\uff1a</p> <ul> <li>UTF-8\uff1au8</li> <li>UTF-16\uff1au</li> <li>UTF-32\uff1aU</li> </ul>"},{"location":"pl/cpp/cpp11/#auto","title":"auto\u5360\u4f4d\u7b26","text":"<p><code>auto</code>\u5173\u952e\u5b57\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u7701\u53bb\u624b\u5199\u7c7b\u578b\u7684\u70e6\u607c\u3002\u5b83\u4e00\u822c\u4f7f\u7528\u5728\u4ee5\u4e0b\u573a\u666f\uff1a</p> <ol> <li>\u4e00\u773c\u5c31\u80fd\u770b\u51fa\u53d8\u91cf\u7684\u521d\u59cb\u5316\u7c7b\u578b</li> <li>\u8f83\u4e3a\u590d\u6742\u7684\u7c7b\u578b\u6bd4\u5982<code>lambda</code>\u8868\u8fbe\u5f0f</li> </ol>"},{"location":"pl/cpp/cpp11/#_2","title":"\u5f3a\u679a\u4e3e\u7c7b\u578b","text":"<p>\u65e7\u5f0f\u7684\u679a\u4e3e\u7c7b\u578b\u5b58\u5728\u540d\u79f0\u51b2\u7a81\u7684\u95ee\u9898\uff0c\u5373\u5728\u679a\u4e3e\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u4f1a\u4e0e\u7236\u4f5c\u7528\u57df\u4e2d\u7684\u540d\u79f0\u4ea7\u751f\u51b2\u7a81\uff0c\u56e0\u6b64\u65e7\u5f0f\u7684\u679a\u4e3e\u5fc5\u987b\u4fdd\u8bc1\u72ec\u4e00\u65e0\u4e8c\u7684\u679a\u4e3e\u503c\uff0c\u5373\u4fbf\u662f\u5728\u591a\u6587\u4ef6\u4e2d\u4e5f\u662f\u5982\u6b64\u3002gcc \u7f16\u8bd1\u5668\u4f1a\u4e3a\u5176\u8d4b\u503c\u4e3a int \u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5b83\u751a\u81f3\u53ef\u4ee5\u4e0e int \u7c7b\u578b\u7684\u53d8\u91cf\u76f4\u63a5\u8fdb\u884c\u6bd4\u8f83\uff1a</p> <pre><code>enum color {\n    red,\n    green,\n    blue\n};\n\nint red = 1; //\u540d\u79f0\u51b2\u7a81\uff0c\u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7\n\nif(red == 0){\n    printf(\"red == 0\\n\");\n}\n</code></pre> <p>\u4f7f\u7528\u5f3a\u679a\u4e3e\u7c7b\u578b\u53ef\u4ee5\u907f\u514d\u4ee5\u4e0a\u95ee\u9898\uff1a</p> <pre><code>enum class color {\n    red,\n    green,\n    blue\n};\n</code></pre> <p>\u5f3a\u679a\u4e3e\u7c7b\u578b\u7684\u6210\u5458\u53d8\u91cf\u4f5c\u7528\u57df\u9650\u5b9a\u5728\u540d\u79f0\u7a7a\u95f4\u5185\u3002\u540c\u65e7\u5f0f\u679a\u4e3e\u7c7b\u578b\u4e00\u6837\uff0c\u7f16\u8bd1\u5668\u4e5f\u4f1a\u5bf9\u5f3a\u679a\u4e3e\u7c7b\u578b\u6210\u5458\u8d4b\u503c\uff0c\u533a\u522b\u662f\u4e0d\u4f1a\u81ea\u52a8\u8f6c\u6362\u6210\u6574\u6570\uff0c\u56e0\u6b64\u4ee5\u4e0b\u4ee3\u7801\u662f\u975e\u6cd5\u7684\uff1a<code>if(color::red == 0) {}</code>\u3002</p>"},{"location":"pl/cpp/cpp11/#_3","title":"\u5c5e\u6027","text":"<p>gcc \u7f16\u8bd1\u5668\u652f\u6301\u5c5e\u6027<code>__attribute__</code>\uff0c\u53ef\u4ee5\u7528\u4e8e\u4fee\u9970\u53d8\u91cf\u3001\u51fd\u6570\u3001\u7c7b\u578b\u7b49\u3002\u4ece C++11 \u5f00\u59cb\uff0c\u4f7f\u7528\u53cc\u62ec\u53f7\u8bed\u6cd5[[]]\u5bf9\u5c5e\u6027\u8fdb\u884c\u6807\u51c6\u5316\u652f\u6301\u3002</p>"},{"location":"pl/cpp/cpp11/#nodiscard","title":"[[nodiscard]]","text":"<p><code>[[nodiscard]]</code>\u5c5e\u6027\u7528\u4e8e\u4fee\u9970\u51fd\u6570\uff0c\u8868\u793a\u8be5\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e0d\u4f1a\u88ab\u5ffd\u7565\uff0c\u5982\u679c\u88ab\u5ffd\u7565\uff0c\u7f16\u8bd1\u5668\u4f1a\u53d1\u51fa\u8b66\u544a\u3002</p>"},{"location":"pl/cpp/cpp11/#deprecated","title":"[[deprecated]]","text":"<p><code>[[deprecated]]</code>\u5c5e\u6027\u8868\u793a\u8be5\u5185\u5bb9\u5df2\u7ecf\u88ab\u5f03\u7528\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002</p>"},{"location":"pl/cpp/cpp11/#maybe_unused","title":"[[maybe_unused]]","text":"<p><code>[[maybe_unused]]</code>\u5c5e\u6027\u7981\u6b62\u7f16\u8bd1\u5668\u5728\u672a\u4f7f\u7528\u67d0\u4e9b\u5185\u5bb9\u65f6\u53d1\u51fa\u8b66\u544a\u3002</p>"},{"location":"pl/cpp/cpp11/#noreturn","title":"[[noreturn]]","text":"<p><code>[[noreturn]]</code>\u5c5e\u6027\u7528\u4e8e\u4fee\u9970\u51fd\u6570\uff0c\u8868\u793a\u8be5\u51fd\u6570\u4e0d\u4f1a\u8fd4\u56de\u3002</p>"},{"location":"pl/cpp/cpp11/#likely","title":"[[likely]]","text":"<p><code>[[likely]]</code>\u5c5e\u6027\u544a\u8bc9\u7f16\u8bd1\u5668\u4ee3\u7801\u6267\u884c\u8fd9\u4e2a\u5206\u652f\u7684\u53ef\u80fd\u6027\u6bd4\u8f83\u5927\u3002</p>"},{"location":"pl/cpp/cpp11/#_4","title":"\u7ed3\u6784\u5316\u7ed1\u5b9a","text":"<p>\u7ed3\u6784\u5316\u7ed1\u5b9a\u5141\u8bb8\u540c\u65f6\u83b7\u53d6\u4e00\u4e2a\u5143\u7ec4\u7684\u591a\u4e2a\u503c\uff0c\u4f8b\u5982\u5047\u8bbe\u6709\uff1a</p> <p><code>array values{11, 22, 33};</code></p> <p>\u5219\u53ef\u4ee5\u4f7f\u7528<code>auto [a, b, c] = values;</code>\u6765\u83b7\u53d6<code>a</code>\u3001<code>b</code>\u3001<code>c</code>\u7684\u503c\u3002\u6ce8\u610f\uff0c\u7ed3\u6784\u5316\u7ed1\u5b9a\u5fc5\u987b\u4f7f\u7528<code>auto</code>\u5173\u952e\u5b57\u4ee5\u81ea\u52a8\u63a8\u5bfc\u7c7b\u578b\u3002</p> <p>\u4f7f\u7528\u7ed3\u6784\u5316\u7ed1\u5b9a\u58f0\u660e\u7684\u53d8\u91cf\u6570\u91cf\u5fc5\u987b\u4e0e\u53f3\u4fa7\u8868\u8fbe\u5f0f\u4e2d\u7684\u503c\u6570\u91cf\u5339\u914d\u3002</p> <p>\u901a\u8fc7\u4f7f\u7528<code>auto&amp;</code>\u6216<code>const auto &amp;</code>\uff0c\u8fd8\u53ef\u4ee5\u521b\u5efa\u4e00\u7ec4\u975e<code>const</code>\u6216<code>const</code>\u5f15\u7528\u3002</p>"},{"location":"pl/cpp/cpp11/#_5","title":"\u521d\u59cb\u5316\u5217\u8868","text":"<p>\u521d\u59cb\u5316\u5217\u8868\u5141\u8bb8\u4f7f\u7528\u82b1\u62ec\u53f7\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5217\u8868\u4e2d\u7684\u6240\u6709\u5143\u7d20\u5fc5\u987b\u4e3a\u540c\u4e00\u7c7b\u578b\u3002</p> <pre><code>int makeSum(initializer_list&lt;int&gt; values)\n{\n    int total{0};\n    for(auto value: values)\n    {\n        total += value;\n    }\n    return total;\n}\n\nint a {makeSum({1, 2, 3, 4, 5})};\n</code></pre>"},{"location":"pl/cpp/cpp11/#_6","title":"\u539f\u59cb\u5b57\u9762\u91cf","text":"<p>\u539f\u59cb\u5b57\u9762\u91cf\u4ee5<code>R\"()\"</code>\u7684\u5f62\u5f0f\u5b9a\u4e49\u3002\u5b83\u4f1a\u5c06\u62ec\u53f7\u5185\u7684\u5185\u5bb9\u539f\u6837\u8f93\u51fa\u3002</p> <pre><code>auto str = R\"(\"Hello, world!\")\";\nstd::cout&lt;&lt;str&lt;&lt;std::endl; //\u8f93\u51fa \"Hello, world!\"\n</code></pre>"},{"location":"pl/cpp/cpp11/#_7","title":"\u663e\u5f0f\u9ed8\u8ba4\u4e0e\u5220\u9664","text":"<p><code>default</code>\u548c<code>delete</code>\u5173\u952e\u5b57\u7528\u4e8e\u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u4f7f\u7528\u9ed8\u8ba4\u7248\u672c\u6216\u5c06\u5176\u5220\u9664\u3002</p>"},{"location":"pl/cpp/cpp11/#explicit","title":"explicit","text":"<p><code>explicit</code>\u5173\u952e\u5b57\u7528\u4e8e\u4fee\u9970\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u7981\u6b62\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\u3002</p>"},{"location":"pl/cpp/cpp11/#static_assert","title":"static_assert","text":"<p><code>static_assert</code>\u5173\u952e\u5b57\u7528\u4e8e\u5728\u7f16\u8bd1\u671f\u8fdb\u884c\u65ad\u8a00\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u5e38\u91cf\u8868\u8fbe\u5f0f\u548c\u63d0\u793a\u5b57\u7b26\u4e32\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u503c\u4e3afalse\uff0c\u5219\u4f1a\u4ea7\u751f\u4e00\u6761\u7f16\u8bd1\u9519\u8bef\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5c31\u662f\u63d0\u793a\u7684\u5b57\u7b26\u4e32\u3002</p>"},{"location":"pl/cpp/cpp11/#constexpr","title":"constexpr","text":"<p>\u4e3a\u4e86\u533a\u5206\u53d8\u91cf\u7684\u53ea\u8bfb\u548c\u5e38\u91cf\u5c5e\u6027\uff0cC++11 \u65b0\u589e\u4e86<code>constexpr</code>\u5173\u952e\u5b57\u3002</p> <p><code>constexpr</code>\u4fee\u9970\u7684\u79f0\u4e3a\u5e38\u91cf\u8868\u8fbe\u5f0f\uff0c\u7528\u4e8e\u5728\u7f16\u8bd1\u671f\u8ba1\u7b97\u51fa\u7ed3\u679c\u3002</p> <p><code>cosntexpr</code>\u8fd8\u53ef\u4ee5\u4fee\u9970\u51fd\u6570\uff0c\u4f7f\u5f97\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002</p>"},{"location":"pl/cpp/cpp11/#_8","title":"\u53f3\u503c\u5f15\u7528","text":"<p>\u5de6\u503c\u662f\u53ef\u4ee5\u83b7\u53d6\u5176\u5730\u5740\u7684\u4e00\u4e2a\u53d8\u91cf\uff0c\u7531\u4e8e\u7ecf\u5e38\u51fa\u73b0\u5728\u8d4b\u503c\u8bed\u53e5\u7684\u5de6\u8fb9\uff0c\u56e0\u6b64\u88ab\u79f0\u4e3a\u5de6\u503c\u3002\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u975e\u5de6\u503c\u5c31\u662f\u53f3\u503c\uff0c\u4f8b\u5982\u5b57\u9762\u91cf\u3001\u4e34\u65f6\u5bf9\u8c61\u3002\u8003\u8651\u5982\u4e0b\u8bed\u53e5\uff1a</p> <pre><code>int a = 4 * 2;\n</code></pre> <p>\u5728\u8fd9\u6761\u8bed\u53e5\u4e2d\uff0ca\u4e3a\u5de6\u503c\uff0c4 * 2\u7684\u7ed3\u679c\u662f\u53f3\u503c\uff0c\u5b83\u662f\u4e00\u4e2a\u4e34\u65f6\u503c\uff0c\u8bed\u53e5\u6267\u884c\u5b8c\u5c31\u4f1a\u88ab\u9500\u6bc1\u3002</p> <p>\u53f3\u503c\u5f15\u7528\u5c31\u662f\u7528\u6765\u8868\u793a\u53f3\u503c\u7684\u5f15\u7528\uff0c\u901a\u8fc7<code>&amp;&amp;</code>\u7b26\u53f7\u6765\u8868\u793a\u3002\u5b83\u7684\u76ee\u7684\u662f\u5ef6\u957f\u53f3\u503c\u7684\u751f\u547d\u5468\u671f\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u62f7\u8d1d\u64cd\u4f5c\uff0c\u63d0\u5347\u7cfb\u7edf\u7684\u6027\u80fd\u3002\u53f3\u503c\u5f15\u7528\u53ea\u80fd\u7528\u53f3\u503c\u6765\u521d\u59cb\u5316\uff1a</p> <pre><code>//\u5de6\u503c\nint num = 9;\n\n//\u5de6\u503c\u5f15\u7528\nint &amp;a = num;\n\n//\u53f3\u503c\u5f15\u7528\nint &amp;&amp;b = 8;\n</code></pre> <p>\u6211\u4eec\u518d\u6765\u770b\u8fd9\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>void handleMessage(string &amp;message)\n{\n    cout&lt;&lt;\"lvalue Message:\"&lt;&lt;message&lt;&lt;endl;\n}\n\nvoid handleMessage(string &amp;&amp;message)\n{\n    cout&lt;&lt;\"rvalue Message:\"&lt;&lt;message&lt;&lt;endl;\n}\n\nint main()\n{\n    string a {\"hello\"};\n    handleMessage(a);           //\u8c03\u7528\u5de6\u503c\u7248\u672c\n\n    string b {\"world\"};\n    handleMessage(a+b);         //\u8c03\u7528\u53f3\u503c\u7248\u672c\n\n    handleMessage(\"world\");     //\u8c03\u7528\u53f3\u503c\u7248\u672c\n}\n</code></pre> <p>\u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c<code>handleMessage()</code>\u51fd\u6570\u6709\u4e24\u4e2a\u7248\u672c\uff0c\u4e00\u4e2a\u662f\u63a5\u53d7\u5de6\u503c\u53c2\u6570\uff0c\u53e6\u4e00\u4e2a\u63a5\u53d7\u53f3\u503c\u53c2\u6570\u3002\u5728\u8c03\u7528<code>handleMessage()</code>\u51fd\u6570\u65f6\uff0c\u6839\u636e\u4f20\u5165\u53c2\u6570\u7684\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u9009\u62e9\u8c03\u7528\u5de6\u503c\u7248\u672c\u8fd8\u662f\u53f3\u503c\u7248\u672c\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>std::move()</code>\u6765\u5f3a\u5236\u8c03\u7528\u53f3\u503c\u7248\u672c\uff1a<code>handleMessage(std::move(a))</code>\u3002</p> <p>\u4f7f\u7528\u53f3\u503c\u5f15\u7528\u7684\u6ce8\u610f\u70b9\u6709\uff1a</p> <ol> <li>\u5de6\u503c\u548c\u53f3\u503c\u662f\u72ec\u7acb\u4e8e\u4ed6\u4eec\u7684\u7c7b\u578b\u7684\uff0c\u53f3\u503c\u5f15\u7528\u7c7b\u578b\u53ef\u80fd\u662f\u5de6\u503c\u4e5f\u53ef\u80fd\u662f\u53f3\u503c</li> <li>\u7f16\u8bd1\u5668\u4f1a\u5c06\u5df2\u547d\u540d\u7684\u53f3\u503c\u5f15\u7528\u89c6\u4e3a\u5de6\u503c\uff0c\u5c06\u672a\u547d\u540d\u7684\u53f3\u503c\u5f15\u7528\u89c6\u4e3a\u53f3\u503c</li> <li><code>auto &amp;&amp;</code>\u6216\u8005\u51fd\u6570\u53c2\u6570\u7c7b\u578b\u81ea\u52a8\u63a8\u5bfc\u7684<code>T &amp;&amp;</code>\u662f\u4e00\u4e2a\u672a\u5b9a\u7684\u5f15\u7528\u7c7b\u578b\uff0c\u5b83\u53d6\u51b3\u4e8e\u521d\u59cb\u5316\u503c\u7684\u7c7b\u578b\u3002</li> </ol>"},{"location":"pl/cpp/cpp11/#_9","title":"\u79fb\u52a8\u8bed\u4e49","text":"<p>\u79fb\u52a8\u8bed\u4e49\u7684\u76ee\u7684\u662f\u51cf\u5c11\u7c7b\u7684\u62f7\u8d1d\u3002\u4e3a\u4e86\u5bf9\u7c7b\u589e\u52a0\u79fb\u52a8\u8bed\u4e49\uff0c\u9700\u8981\u624b\u52a8\u5b9e\u73b0\u79fb\u52a8\u6784\u9020\u51fd\u6570\u548c\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u5e94\u4f7f\u7528<code>noexcept</code>\u5173\u952e\u5b57\u6807\u8bb0\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002</p> <p>\u4e00\u4e2a\u7b80\u5355\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>class Simple{\n    public:\n        Simple(Simple &amp;&amp;)noexcept;\n        Simple &amp; operator=(Simple &amp;&amp;)noexcept;\n};\n</code></pre> <p>\u6ce8\u610f\uff1a\u5728\u8fd4\u56de\u503c\u8bed\u53e5\u4e2d\uff0c\u53ea\u9700\u8981<code>return object</code>\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u4f7f\u7528<code>std::move()</code>\u3002</p>"},{"location":"pl/cpp/cpp11/#stdmove","title":"std::move","text":"<p>\u4f7f\u7528<code>std::move()</code>\u51fd\u6570\u53ef\u4ee5\u5c06\u5de6\u503c\u8f6c\u6362\u4e3a\u53f3\u503c\uff0c\u8be5\u51fd\u6570\u4e0d\u590d\u5236\u4efb\u4f55\u5185\u5bb9\uff0c\u53ea\u662f\u8f6c\u79fb\u5bf9\u8c61\u7684\u6240\u6709\u6743\u3002\u5982\u679c\u67d0\u4e2a\u5bf9\u8c61\u5728\u540e\u7eed\u4e0d\u4f1a\u88ab\u4f7f\u7528\u4e86\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u8003\u8651\u4f7f\u7528<code>std::move()</code>\uff0c\u8f6c\u79fb\u8be5\u5bf9\u8c61\u7684\u6240\u6709\u6743\u800c\u907f\u514d\u4efb\u4f55\u590d\u5236\u64cd\u4f5c\u3002</p>"},{"location":"pl/cpp/cpp11/#_10","title":"\u5b8c\u7f8e\u8f6c\u53d1","text":"<p>\u4e00\u4e2a\u53f3\u503c\u5f15\u7528\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u7684\u5f62\u53c2\u65f6\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4f20\u9012\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u53d8\u6210\u4e00\u4e2a\u5de6\u503c\u3002\u5982\u679c\u8981\u4fdd\u6301\u539f\u6765\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u4f7f\u7528<code>std::forward()</code>\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5b9e\u73b0\u7684\u529f\u80fd\u88ab\u79f0\u4e3a\u5b8c\u7f8e\u8f6c\u53d1\u3002</p>"},{"location":"pl/cpp/cpp11/#lambda","title":"lambda\u8868\u8fbe\u5f0f","text":"<p><code>std::function</code>\u662f\u4e00\u4e2a\u591a\u6001\u51fd\u6570\u5305\u88c5\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u6307\u5411\u4efb\u4f55\u53ef\u8c03\u7528\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u6bd4\u5982\u51fd\u6570\u3001\u51fd\u6570\u5bf9\u8c61\u6216\u8005 lambda \u8868\u8fbe\u5f0f\u3002\u4e0b\u9762\u4ee3\u7801\u662f\u4e00\u4e2a\u4f7f\u7528\u7684\u793a\u4f8b\uff1a</p> <pre><code>void func(int num, string_view str)\n{\n    std::cout&lt;&lt;\"using function\"&lt;&lt;std::endl;\n}\n\nint main()\n{\n    std::function&lt;void(int, string_view)&gt;f1{func};\n    f1(1,\"hello\");\n}\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>auto f1{func}</code>\u6765\u5b9a\u4e49 f1\uff0c\u4f46\u7f16\u8bd1\u5668\u4f1a\u5c06\u5176\u63a8\u5bfc\u4e3a\u51fd\u6570\u6307\u9488\u7c7b\u578b\uff0c\u800c\u4e0d\u662f<code>std::function</code>\u3002</p> <p>lambda \u8868\u8fbe\u5f0f\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>[capture list](parameter list)mutable exception attribute -&gt; return type {statement}\n</code></pre> <p>\u7f16\u8bd1\u5668\u81ea\u52a8\u5c06\u4efb\u4f55 lambda \u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3a\u51fd\u6570\u5bf9\u8c61\u3002\u5982\u679c\u4e0d\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\uff0c\u5219\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8fdb\u884c\u63a8\u5bfc\u3002\u63a8\u5bfc\u7684\u7ed3\u6784\u4f1a\u79fb\u9664\u4efb\u4f55\u5f15\u7528\u548c<code>const</code>\u9650\u5b9a\uff0c\u9664\u975e\u4f7f\u7528<code>decltype(auto)</code>\u3002</p> <p>[ ]\u79f0\u4e3a\u6355\u83b7\u5757\uff0clambda \u6709\u4e09\u79cd\u6355\u83b7\u65b9\u5f0f\uff1a</p> <ol> <li>[ ]\uff1a\u4e0d\u6355\u83b7\u4efb\u4f55\u53d8\u91cf</li> <li>[ &amp; ]\uff1a\u6309\u5f15\u7528\u65b9\u5f0f\u6355\u83b7\u5916\u90e8\u4f5c\u7528\u57df\u4e2d\u7684\u6240\u6709\u53d8\u91cf</li> <li>[ = ]\uff1a\u6309\u503c\u65b9\u5f0f\u6355\u83b7\u5916\u90e8\u4f5c\u7528\u57df\u4e2d\u7684\u6240\u6709\u53d8\u91cf</li> </ol> <p>\u4e0b\u9762\u662f\u4e00\u4e9b\u6355\u83b7\u5757\u7684\u793a\u4f8b\uff1a</p> <ul> <li>[&amp;x]\uff1a\u5f15\u7528\u6355\u83b7x</li> <li>[x]\uff1a\u6309\u503c\u6355\u83b7x</li> <li>[=, &amp;x]\uff1a\u9ed8\u8ba4\u6309\u503c\u6355\u83b7\uff0cx\u6309\u5f15\u7528\u6355\u83b7</li> <li>[this]\uff1a\u6355\u83b7\u5f53\u524d\u7c7b\u5bf9\u8c61\uff0c\u5bf9\u8c61\u9700\u4fdd\u8bc1\u5b58\u6d3b</li> <li>[*this]\uff1a\u6355\u83b7\u5f53\u524d\u5bf9\u8c61\u7684\u62f7\u8d1d\uff0c\u5bf9\u8c61\u53ef\u4ee5\u4e0d\u5b58\u6d3b</li> <li>[=, this]\uff1a\u6309\u503c\u6355\u83b7\u6240\u6709\u5185\u5bb9\uff0c\u663e\u793a\u6355\u83b7 this \u6307\u9488</li> </ul> <p>Warning</p> <p>\u5168\u5c40\u53d8\u91cf\u603b\u662f\u4f7f\u7528\u5f15\u7528\u6355\u83b7\uff0c\u5373\u4fbf\u8981\u6c42\u6309\u503c\u6355\u83b7\uff01</p>"},{"location":"pl/cpp/exception/","title":"\u5f02\u5e38\u5904\u7406","text":"<p>\u5f02\u5e38\u5904\u7406\u7684\u57fa\u672c\u5f62\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>try {\n    // \u53ef\u80fd\u4f1a\u629b\u51fa\u5f02\u5e38\u7684\u4ee3\u7801\n} catch (ExceptionType1 e1) {\n    // \u5904\u7406ExceptionType1\u7c7b\u578b\u7684\u5f02\u5e38\n} catch(ExceptionType2 e2){\n    // \u5904\u7406ExceptionType2\u7c7b\u578b\u7684\u5f02\u5e38\n}\n//\u5269\u4f59\u4ee3\u7801\n</code></pre> <p>\u5b83\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u5982\u679c\u6ca1\u6709\u629b\u51fa\u5f02\u5e38\uff1acatch\u5757\u7684\u8bed\u53e5\u4e0d\u4f1a\u88ab\u6267\u884c\uff0c\u7a0b\u5e8f\u7ee7\u7eed\u6267\u884c\u5269\u4f59\u4ee3\u7801\u3002</p> </li> <li> <p>\u5982\u679c\u629b\u51fa\u4e86\u5f02\u5e38\uff1a\u6839\u636e\u4e0d\u540c\u7684\u5f02\u5e38\u627e\u5230\u5bf9\u5e94\u7684catch\u5757\uff0c\u4e00\u76f4\u6267\u884c\u5230throw\u8bed\u53e5\uff0c\u4e4b\u540e\u7684\u8bed\u53e5\u4e0d\u4f1a\u88ab\u6267\u884c\u3002</p> </li> </ul> <p>\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u96640\u5f02\u5e38\u5982\u4e0b\uff1a</p> <pre><code>double SafeDivide(double num1, double num2)\n{\n    if(num2 == 0){\n        throw invalid_argument(\"Divide by zero\");\n    }\n    return num1 / num2;\n}\n\nint main()\n{\n    try{\n        cout&lt;&lt;SafeDivide(5, 2)&lt;&lt;endl;\n        cout&lt;&lt;SafeDivide(10,0)&lt;&lt;endl;\n    }catch(const invalid_argument&amp; e){\n        cout&lt;&lt;\"Caught exception:\"&lt;&lt;e.what()&lt;&lt;endl;\n    }\n}\n</code></pre> <p><code>e.what()</code>\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a<code>const char *</code>\u7684\u5b57\u7b26\u4e32\u3002</p>"},{"location":"pl/cpp/gdb/","title":"GDB","text":"<p>GDB \u662f\u5f3a\u5927\u7684\u4ee3\u7801\u8c03\u8bd5\u5de5\u5177\uff0c\u7f16\u8bd1\u65f6\u9700\u8981\u8bbe\u7f6e<code>-g</code>\u9009\u9879\uff0c\u4f7f\u5f97\u7f16\u8bd1\u5668\u751f\u6210\u8c03\u8bd5\u4fe1\u606f\u3002\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 gdb a.out \u6765\u8c03\u8bd5\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 gdb attach pid \u6765\u5c06 GDB \u9644\u52a0\u5230\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u4e0a\u3002</p>"},{"location":"pl/cpp/gdb/#_1","title":"\u5e38\u7528\u547d\u4ee4","text":"<p>GDB \u7684\u547d\u4ee4\u6709\u5f88\u591a\uff0c\u8fd9\u91cc\u5217\u51fa\u4e00\u4e9b\u5e38\u7528\u7684\uff0c\u8db3\u4ee5\u5e94\u4ed8\u4e00\u822c\u7684\u8c03\u8bd5\u4efb\u52a1\uff1a</p> <ul> <li>run\uff1a\u8fd0\u884c\u7a0b\u5e8f\uff0c\u76f4\u5230\u9047\u5230\u65ad\u70b9</li> <li>list\uff1a\u663e\u793a\u6e90\u4ee3\u7801</li> <li>break\uff1a\u8bbe\u7f6e\u65ad\u70b9</li> <li>next\uff1a\u5355\u6b65\u6267\u884c(\u8df3\u8fc7\u51fd\u6570)</li> <li>step\uff1a\u5355\u6b65\u6267\u884c(\u8fdb\u5165\u51fd\u6570)</li> <li>backtrace\uff1a\u663e\u793a\u51fd\u6570\u8c03\u7528\u6808</li> <li>set\uff1a\u8bbe\u7f6e\u53d8\u91cf\u7684\u503c</li> <li>frame\uff1a\u5207\u6362\u51fd\u6570\u8c03\u7528\u6808</li> <li>info\uff1a\u663e\u793a\u5c40\u90e8\u53d8\u91cf\u7684\u503c</li> <li>finish\uff1a\u7ed3\u675f\u5f53\u524d\u51fd\u6570</li> <li>until\uff1a\u9000\u51fa\u5faa\u73af\u4f53</li> <li>delete\uff1a\u5220\u9664\u65ad\u70b9</li> <li>continue\uff1a\u7ee7\u7eed\u6267\u884c\u5230\u4e0b\u4e00\u4e2a\u65ad\u70b9\u5904\u6216\u7a0b\u5e8f\u7ed3\u675f</li> <li>print\uff1a\u6253\u5370\u53d8\u91cf\u7684\u503c</li> <li>watch\uff1a\u76d1\u89c6\u67d0\u4e2a\u53d8\u91cf</li> <li>quit\uff1a\u9000\u51fa GDB</li> </ul>"},{"location":"pl/cpp/io/","title":"I/O\u6d41","text":"<p>C\u7684<code>printf()</code>\u548c<code>scanf()</code>\u4e0d\u80fd\u5904\u7406\u9519\u8bef\uff0c\u4e5f\u4e0d\u662f\u7c7b\u578b\u5b89\u5168\u7684\u3002C++\u901a\u8fc7\u6d41\u7684\u673a\u5236\u63d0\u4f9b\u4e86\u66f4\u7cbe\u826f\u7684\u8f93\u5165\u8f93\u51fa\u65b9\u6cd5(\u4f46\u662f\u6027\u80fd\u5f00\u9500\u4e5f\u6bd4C\u65b9\u5f0f\u8981\u9ad8)\uff0c\u6d41\u662f\u4e00\u79cd\u7075\u6d3b\u7684\u3001\u9762\u5411\u5bf9\u8c61\u7684I/O\u65b9\u6cd5\u3002</p>"},{"location":"pl/cpp/io/#acm","title":"ACM\u8f93\u5165\u8f93\u51fa","text":"<p>\u5728\u7b14\u8bd5\u7684\u65f6\u5019\uff0cACM\u8f93\u5165\u8f93\u51fa(\u5373\u9700\u8981\u81ea\u5df1\u5b9a\u4e49\u8f93\u5165\u4e0e\u8f93\u51fa)\u662f\u5e38\u89c1\u7684\u6a21\u5f0f\u3002\u4ee5\u4e0b\u5217\u4e3e\u5e38\u89c1\u7684\u7528\u6cd5\uff1a</p> <ol> <li> <p>\u53ea\u6709\u4e00\u4e2a\u6216\u51e0\u4e2a\u8f93\u5165</p> <p>\u8f93\u5165\u6837\u4f8b:</p> <pre><code>3 5 7\n</code></pre> <p>\u6a21\u677f\uff1a</p> <pre><code>int a, b, c;\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n</code></pre> </li> <li> <p>\u5148\u7ed9\u884c\u6570T\uff0c\u518d\u7ed9\u51faT\u884c</p> <p>\u8f93\u5165\u6837\u4f8b:</p> <pre><code>3\n3 5 7\n6 8 9\n12 9 5\n</code></pre> <p>\u6a21\u677f\uff1a</p> <pre><code>int T;\ncin &gt;&gt; T;\nwhile(T--) {\n    int a, b, c;\n    cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n    //\u5904\u7406\u8f93\u5165\n}\n</code></pre> </li> <li> <p>\u6574\u884c\u8bfb\u53d6\u5b57\u7b26\u4e32</p> <p>\u8f93\u5165\u6837\u4f8b\uff1a</p> <pre><code>Hello world\n</code></pre> <p>\u6a21\u677f\uff1a</p> <pre><code>string s;\ngetline(cin, s);\n//\u5904\u7406\u8f93\u5165\n</code></pre> </li> <li> <p>\u8bfb\u53d6\u4ee5\u9017\u53f7\u5206\u5f00\u7684\u5b57\u7b26\u4e32</p> <p>\u8f93\u5165\u6837\u4f8b\uff1a</p> <pre><code>one,two,three\n</code></pre> <p>\u6a21\u677f\uff1a</p> <pre><code>string line;\ngetline(cin, line);\nstringstream ss(line);\nstring token;\nwhile(getline(ss, token, ',')){\n    //\u5904\u7406token\n}\n</code></pre> </li> <li> <p>\u6784\u9020\u94fe\u8868</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nstruct ListNode{\n    int val;\n    ListNode* next;\n    ListNode(int x) : val(x), next(nullptr) {}\n    ListNode(int x, ListNode* n) : val(x), next(n) {}\n}\n\nint main(){\n    ListNode *dummy = new ListNode(-1);\n    ListNode *pre = dummy;\n    ListNod *cur = nullptr;\n    int num;\n    while(cin&gt;&gt;num){\n        cur = new ListNode(num);\n        pre-&gt;next = cur;\n        pre = cur;\n    }\n\n    cur = dummy-&gt;next;\n\n    while(cur){\n        cout&lt;&lt;cur-&gt;val&lt;&lt;\" \";\n        cur = cur-&gt;next;\n    }\n\n    return 0;\n}\n</code></pre> </li> <li> <p>\u6784\u9020\u4e8c\u53c9\u6811</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\n//\u5b9a\u4e49\u6811\u8282\u70b9\nstruct TreeNode\n{\n    int val;\n    TreeNode* left;\n    TreeNode* right;\n    TreeNode():val(0),left(nullptr),right(nullptr){}\n    TreeNode(int _val):val(_val),left(nullptr),right(nullptr){}\n    TreeNode(int _val,TreeNode* _left,TreeNode* _right):val(0),left(_left),right(_right){}\n};\n\n//\u6839\u636e\u6570\u7ec4\u751f\u6210\u6811\nTreeNode* buildTree(const vector&lt;int&gt;&amp; v)\n{\n    vector&lt;TreeNode*&gt; vTree(v.size(),nullptr);\n    TreeNode* root = nullptr;\n    for(int i = 0; i &lt; v.size(); i++)\n    {\n        TreeNode* node = nullptr;\n        if(v[i] != -1)\n        {\n            node = new TreeNode(v[i]);\n        }\n        vTree[i] = node;\n    }\n    root = vTree[0];\n    for(int i = 0; 2 * i + 2 &lt; v.size(); i++)\n    {\n        if(vTree[i] != nullptr)\n        {\n            vTree[i]-&gt;left = vTree[2 * i + 1];\n            vTree[i]-&gt;right = vTree[2 * i + 2];\n        }\n    }\n    return root;\n}\n\n//\u6839\u636e\u4e8c\u53c9\u6811\u6839\u8282\u70b9\u5c42\u5e8f\u904d\u5386\u5e76\u6253\u5370\nvoid printBinaryTree(TreeNode* root)\n{\n    if(root == nullptr) return;\n    vector&lt;vector&lt;int&gt;&gt; ans;\n    queue&lt;TreeNode*&gt; q;\n    q.push(root);\n    while(!q.empty())\n    {\n        int size = q.size();\n        vector&lt;int&gt; path;\n        for(int i = 0;i&lt;size;i++)\n        {\n            TreeNode* node = q.front();\n            q.pop();\n            if(node == nullptr)\n            {\n                path.push_back(-1);\n            }\n            else\n            {\n                path.push_back(node-&gt;val);\n                q.push(node-&gt;left);\n                q.push(node-&gt;right);\n            }\n        }\n        ans.push_back(path);\n    }\n\n    for(int i = 0;i&lt;ans.size();i++)\n    {\n        for(int j = 0;j&lt;ans[i].size();j++)\n        {\n            cout &lt;&lt; ans[i][j] &lt;&lt; \" \";\n        }\n        cout &lt;&lt; endl;\n    }\n    return;\n}\n\nint main()\n{\n    // \u9a8c\u8bc1\n    vector&lt;int&gt; v = {4,1,6,0,2,5,7,-1,-1,-1,3,-1,-1,-1,8};\n    TreeNode* root = buildTree(v);\n    printBinaryTree(root);\n\n    return 0;\n}\n</code></pre> </li> </ol>"},{"location":"pl/cpp/io/#_1","title":"\u6d41\u7684\u6982\u5ff5","text":"<p>\u6d41\u53ef\u4ee5\u770b\u6210\u662f\u6570\u636e\u7684\u7f13\u51b2\uff0c<code>cout</code>\u548c<code>cin</code>\u662fC++\u5728std\u540d\u79f0\u7a7a\u95f4\u9884\u5b9a\u4e49\u7684\u6d41\u5b9e\u4f8b\u3002\u7f13\u51b2\u6d41\u4e0d\u4f1a\u8bb2\u6570\u636e\u7acb\u5373\u53d1\u9001\uff0c\u800c\u662f\u5148\u5b58\u50a8\u5728\u7f13\u51b2\u533a\uff0c\u7136\u540e\u4ee5\u5757\u7684\u5f62\u5f0f\u53d1\u9001\u3002\u975e\u7f13\u51b2\u6d41\u5219\u4f1a\u7acb\u5373\u5c06\u6570\u636e\u53d1\u9001\u81f3\u76ee\u7684\u5730\u3002\u7f13\u51b2\u7684\u76ee\u7684\u901a\u5e38\u662f\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\u3002<code>flush()</code>\u65b9\u6cd5\u53ef\u4ee5\u5f3a\u5236\u5237\u65b0\u7f13\u51b2\u6d41\u7684\u7f13\u51b2\u533a\u3002</p> \u6d41 \u8bf4\u660e cin \u6807\u51c6\u8f93\u5165\u6d41 cout \u7f13\u51b2\u7684\u6807\u51c6\u8f93\u51fa\u6d41 cerr \u975e\u7f13\u51b2\u7684\u9519\u8bef\u8f93\u51fa\u6d41 <p>\u8fd9\u4e9b\u6d41\u8fd8\u652f\u6301\u5bbd\u5b57\u7b26\u7248\u672c\uff0c\u4ee5w\u5f00\u5934\uff1awcin\u3001wcout\u3001wcerr\u3002\u5bbd\u5b57\u7b26\u7528\u4e8e\u5b57\u7b26\u6570\u591a\u4e8e\u82f1\u8bed\u7684\u8bed\u8a00\uff0c\u6bd4\u5982\u4e2d\u6587\u3002</p> <p>Note</p> <p>GUI\u7a0b\u5e8f\u901a\u5e38\u6ca1\u6709\u63a7\u5236\u53f0\uff0c\u56e0\u6b64\u4e0d\u8981\u5047\u5b9a\u8fd9\u4e9b\u6d41\u5b58\u5728\uff0c\u5373\u4fbf\u5199\u5165\u4e86\u6570\u636e\uff0c\u7528\u6237\u4e5f\u65e0\u6cd5\u770b\u5230\u3002</p>"},{"location":"pl/cpp/io/#_2","title":"\u6587\u4ef6\u6d41","text":"<p><code>std::ofstream</code>\u548c<code>std::ifstream</code>\u5206\u522b\u7528\u4e8e\u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u5199\u5165\u548c\u8bfb\u53d6\u3002\u8fd9\u4e24\u4e2a\u7c7b\u5728&lt;fstream&gt;\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002</p> <p>\u6587\u4ef6\u6d41\u7684\u53c2\u6570\u6709\uff1a</p> \u53c2\u6570 \u8bf4\u660e ios_base::app \u5728\u672b\u5c3e\u8ffd\u52a0 ios_base::binary \u4ee5\u4e8c\u8fdb\u5236\u6a21\u5f0f\u6253\u5f00 ios_base::in \u4ece\u5f00\u5934\u5f00\u59cb\u8bfb\u53d6 ios_base::out \u4ece\u5f00\u5934\u5f00\u59cb\u5199\u5165 ios_base::trunc \u5220\u9664\u5df2\u6709\u6570\u636e <p><code>ifstream</code>\u81ea\u52a8\u5305\u542b<code>ios_base::in</code>\uff0c<code>ofstream</code>\u81ea\u52a8\u5305\u542b<code>ios_base::out</code>\u3002\u4e14\u4e8c\u8005\u4f1a\u81ea\u52a8\u5173\u95ed\u5e95\u5c42\u6587\u4ef6\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u663e\u793a\u8c03\u7528<code>close()</code>\u3002</p>"},{"location":"pl/cpp/io/#_3","title":"\u6587\u4ef6\u6d41\u7684\u5b9a\u4f4d","text":"<p>\u6587\u4ef6\u6d41\u652f\u6301\u5b9a\u4f4d\u64cd\u4f5c\uff0c<code>seekp()</code>\u548c<code>seekg()</code>\u5206\u522b\u7528\u4e8e\u5b9a\u4f4d\u5199\u5165\u548c\u8bfb\u53d6\u7684\u6587\u4ef6\u6d41\u3002\u4f4d\u7f6e\u7684\u7c7b\u578b\u4e3a<code>std::streampos</code>\uff0c\u504f\u79fb\u91cf\u7684\u7c7b\u578b\u4e3a<code>std::streamoff</code>\uff0c\u4e24\u79cd\u7c7b\u578b\u90fd\u4ee5\u5b57\u8282\u8ba1\u6570\u3002</p> <p>\u9884\u5b9a\u4e49\u76843\u4e2a\u4f4d\u7f6e\u5982\u4e0b\u56fe\uff1a</p> \u4f4d\u7f6e \u8bf4\u660e ios_base::beg \u6d41\u5f00\u5934 ios_base::end \u6d41\u672b\u5c3e ios_base::cur \u6d41\u5f53\u524d\u4f4d\u7f6e <p>\u5b9a\u4f4d\u6d41</p> <pre><code>//\u5b9a\u4f4d\u5230\u8f93\u51fa\u6d41\u7684\u5f00\u5934\nstd::streampos begPos = outStream.seekp(ios_base::beg);\n\n//\u5b9a\u4f4d\u5230\u8f93\u5165\u6d41\u7684\u672b\u5c3e\nstd::streampos endPos = inStream.seekg(ios_base::end);\n</code></pre> <p><code>tellp()</code>\u548c<code>tellg()</code>\u5206\u522b\u7528\u4e8e\u83b7\u53d6\u5199\u5165\u548c\u8bfb\u53d6\u7684\u6587\u4ef6\u6d41\u7684\u5f53\u524d\u4f4d\u7f6e\u3002</p>"},{"location":"pl/cpp/io/#filesystem","title":"filesystem\u5e93","text":"<p>C++17\u5f15\u5165\u4e86<code>std::filesystem</code>\u5e93\uff0c\u7528\u4e8e\u5904\u7406\u6587\u4ef6\u7cfb\u7edf\u3002</p>"},{"location":"pl/cpp/io/#_4","title":"\u8def\u5f84","text":"<p>\u8def\u5f84\u53ef\u4ee5\u662f\u7edd\u5bf9\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u7684\uff1a<code>filesystem::path p {\"test.txt\"}</code>\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528<code>append()</code>\u51fd\u6570\u6216\u8005<code>operator+=</code>\u5c06\u5b57\u7b26\u4e32\u62fc\u63a5\u5230\u8def\u5f84\u4e2d\uff0c\u4e0e\u5e73\u53f0\u76f8\u5173\u7684\u8def\u5f84\u5206\u9694\u7b26\u4f1a\u81ea\u52a8\u63d2\u5165\u3002\u800c<code>concat()</code>\u51fd\u6570\u6216<code>operator+=</code>\u5219\u4e0d\u4f1a\u63d2\u5165\u5206\u9694\u7b26\u3002</p> <p>\u57fa\u4e8e\u8303\u56f4\u7684for\u5faa\u73af\u53ef\u4ee5\u904d\u5386\u8def\u5f84\u7684\u4e0d\u540c\u7ec4\u4ef6\uff0c\u6bd4\u5982\uff1a</p> <pre><code>filesystem::path p {R\"(C:\\Foo\\Bar)\"};\nfor(const auto &amp;component: p){\n    cout&lt;&lt;component&lt;&lt;endl;&gt;&gt;\n}\n</code></pre> <p>Windows\u4e0a\u7684\u8f93\u51fa\u5982\u4e0b\uff1a</p> <pre><code>\"C:\"\n\"\\\\\"\n\"Foo\"\n\"Bar\"\n</code></pre>"},{"location":"pl/cpp/io/#_5","title":"\u76ee\u5f55","text":"<p><code>create_directory()</code>\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u65b0\u76ee\u5f55\u3002</p>"},{"location":"pl/cpp/misc/","title":"C++\u6742\u9879","text":""},{"location":"pl/cpp/misc/#static","title":"static","text":"<ol> <li>\u4fee\u9970\u6210\u5458\u53d8\u91cf\uff1a\u4f7f\u5f97\u6240\u6709\u5bf9\u8c61\u53ea\u4fdd\u5b58\u4e00\u4efd\u62f7\u8d1d</li> <li>\u4fee\u9970\u6210\u5458\u51fd\u6570\uff1a\u4f7f\u5f97\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4e2a\u51fd\u6570\uff0cstatic\u6210\u5458\u51fd\u6570\u53ea\u80fd\u8bbf\u95eestatic\u6210\u5458\u53d8\u91cf</li> </ol>"},{"location":"pl/cpp/misc/#const","title":"const","text":"<ol> <li>\u4fee\u9970\u6210\u5458\u51fd\u6570\uff1a\u4f7f\u5f97\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4fee\u6539\u6210\u5458\u53d8\u91cf</li> <li>\u4fee\u9970\u6210\u5458\u53d8\u91cf\uff1a\u4f7f\u5f97\u6210\u5458\u53d8\u91cf\u4e0d\u80fd\u88ab\u4fee\u6539</li> <li>\u4fee\u9970\u51fd\u6570\u53c2\u6570\uff1a\u4f7f\u5f97\u51fd\u6570\u53c2\u6570\u4e0d\u80fd\u88ab\u4fee\u6539</li> </ol> <p>\u4e0d\u4fee\u6539\u5bf9\u8c61\u7684\u65b9\u6cd5\u5e94\u58f0\u660e\u4e3aconst\uff0cconst\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528const\u65b9\u6cd5\u3002</p>"},{"location":"pl/cpp/misc/#_1","title":"\u7c7b\u578b\u8f6c\u6362","text":"<ul> <li><code>const_cast</code>\uff1a\u7528\u4e8e\u53d6\u6d88\u53d8\u91cf\u7684const\u5c5e\u6027</li> <li><code>static_cast</code>\uff1a\u7528\u4e8e\u6267\u884c\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u6216\u8005\u5728\u7ee7\u627f\u7ed3\u6784\u4e2d\u5411\u4e0b\u8f6c\u6362\uff0c\u5b83\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5</li> <li><code>dynamict_cast</code>\uff1a\u7528\u4e8e\u6267\u884c\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u5b83\u662f\u5728\u8fd0\u884c\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5</li> <li><code>reinterpret_cast</code>\uff1a\u7528\u4e8e\u4f4e\u7ea7\u8f6c\u6362\uff0c\u53ef\u4ee5\u5c06\u6307\u9488\u7c7b\u578b\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u4ed6\u6307\u9488\u7c7b\u578b\uff0c\u5373\u4f7f\u8fd9\u79cd\u8f6c\u6362\u4e0d\u5408\u6cd5\uff0c\u56e0\u6b64\u4f7f\u7528\u65f6\u5fc5\u987b\u975e\u5e38\u5c0f\u5fc3</li> </ul> <p>\u7c7b\u578b\u8f6c\u6362\u5c0f\u7ed3\uff1a</p> \u573a\u666f \u7c7b\u578b\u8f6c\u6362 \u79fb\u9664const\u5c5e\u6027 const_cast \u8bed\u8a00\u652f\u6301\u7684\u663e\u793a\u5f3a\u5236\u8f6c\u6362 static_cast \u540c\u4e00\u7ee7\u627f\u5c42\u6b21\u7ed3\u6784\u4e2d\uff0c\u4e00\u4e2a\u7c7b\u7684\u6307\u9488/\u5f15\u7528\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u7c7b\u7684\u6307\u9488/\u5f15\u7528 dynamic_cast \u4efb\u4f55\u6307\u9488\u7c7b\u578b\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u4ed6\u6307\u9488\u7c7b\u578b reinterpret_cast \u4e00\u79cd\u7c7b\u578b\u7684\u5f15\u7528\u8f6c\u6362\u4e3a\u5176\u4ed6\u4e0d\u76f8\u5173\u7c7b\u578b\u7684\u5f15\u7528 reinterpret_cast"},{"location":"pl/cpp/misc/#_2","title":"\u53cb\u5143","text":"<p>C++\u5141\u8bb8\u67d0\u4e2a\u7c7b\u5c06\u5176\u4ed6\u7c7b\u3001\u5176\u4ed6\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6216\u975e\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u53cb\u5143\uff0c\u53cb\u5143\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u7684protected\u3001private\u6570\u636e\u6210\u5458\u548c\u65b9\u6cd5\u3002</p>"},{"location":"pl/cpp/mm/","title":"\u5185\u5b58\u7ba1\u7406","text":"<p>\u4f7f\u7528<code>new</code>\u5173\u952e\u5b57\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u59cb\u7ec8\u5728\u5806\u533a\u4e0a\u5206\u914d\u3002<code>new</code>\u5173\u952e\u5b57\u4e0d\u4ec5\u5206\u914d\u5185\u5b58\uff0c\u8fd8\u4f1a\u8c03\u7528\u54cd\u5e94\u7684\u6784\u9020\u51fd\u6570\u4ee5\u6784\u5efa\u5bf9\u8c61\u3002\u4f8b\u5982\u6709\u4e00\u4e2a Simple \u7c7b\uff0c\u5f53\u8c03\u7528<code>new Simple[4]</code>\u65f6\uff0cSimple \u7684\u6784\u9020\u51fd\u6570\u5c31\u4f1a\u88ab\u8c03\u75284\u6b21\u3002</p> <p>\u901a\u8fc7\u539f\u59cb\u6307\u9488\u5206\u914d\u7684<code>new</code>\u5bf9\u8c61\u5fc5\u987b\u4e0e<code>delete</code>\u5173\u952e\u5b57\u914d\u5bf9(<code>new []</code>\u4e0e<code>delete[]</code>\u914d\u5bf9)\uff0c\u4ee5\u91ca\u653e\u5185\u5b58\u5e76\u8c03\u7528\u76f8\u5e94\u7684\u6790\u6784\u51fd\u6570\u3002\u5728\u91ca\u653e\u5b8c\u6307\u9488\u4e4b\u540e\uff0c\u5e94\u5c06\u5176\u6307\u5411<code>nullptr</code>\uff0c\u4ee5\u907f\u514d\u8bbf\u95ee\u60ac\u7a7a\u6307\u9488\u3002</p>"},{"location":"pl/cpp/mm/#_2","title":"\u667a\u80fd\u6307\u9488","text":"<p>C++11 \u5b9e\u73b0\u4e86\u4e09\u79cd\u667a\u80fd\u6307\u9488\uff1a<code>std::unique_ptr</code>\u3001<code>std::shared_ptr</code>\u548c<code>std::weak_ptr</code>\uff0c\u80fd\u591f\u81ea\u52a8\u7ba1\u7406\u6307\u9488\u6240\u6307\u5411\u7684\u5185\u5b58\u7684\u7c7b\u3002\u667a\u80fd\u6307\u9488\u662f\u4e00\u79cd\u6a21\u677f\u7c7b\uff0c\u53ef\u4ee5\u6307\u5411\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61\u3002</p> <p>\u667a\u80fd\u6307\u9488\u7684\u5b9e\u73b0\u539f\u7406\u662f\u5229\u7528 RAII\uff08Resource Acquisition Is Initialization\uff09\u6280\u672f\uff0c\u5728\u6784\u9020\u51fd\u6570\u4e2d\u7533\u8bf7\u5185\u5b58\uff0c\u5728\u6790\u6784\u51fd\u6570\u4e2d\u91ca\u653e\u5185\u5b58\u3002\u8fd9\u6837\uff0c\u5f53\u667a\u80fd\u6307\u9488\u8d85\u51fa\u4f5c\u7528\u57df\u65f6\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u91ca\u653e\u5185\u5b58\u3002</p>"},{"location":"pl/cpp/mm/#unique_ptr","title":"unique_ptr","text":"<p><code>unique_ptr</code>\u662f\u4e00\u4e2a\u72ec\u5360\u6240\u6709\u6743\u7684\u667a\u80fd\u6307\u9488\uff0c\u5176\u5f15\u7528\u8ba1\u6570\u6c38\u8fdc\u662f1\u3002</p> <p>\u5b83\u7684\u521d\u59cb\u5316\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>std::unique_ptr&lt;int&gt;sp = std::make_unique&lt;int&gt;(3);\n</code></pre> <p><code>unique_ptr</code>\u7981\u6b62\u62f7\u8d1d\u548c\u590d\u5236\u64cd\u4f5c\uff0c\u4f8b\u5916\u662f\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u8fd4\u56de\u503c\u8fd4\u56de\u4e00\u4e2a<code>unique_ptr</code>\u3002\u53ef\u4ee5\u4f7f\u7528<code>std::move()</code>\u5c06\u6240\u6709\u6743\u8f6c\u79fb\u3002</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u667a\u80fd\u6307\u9488\u5bf9\u8c61\u5728\u6790\u6784\u65f6\u53ea\u4f1a\u91ca\u653e\u5176\u6301\u6709\u7684\u5806\u5185\u5b58\uff0c\u5982\u679c\u9700\u8981\u81ea\u5b9a\u4e49\u8d44\u6e90\u6790\u6784\u51fd\u6570\uff0c\u53ef\u4ee5\u5728\u5b9a\u4e49\u65f6\u6dfb\u52a0\uff1a<code>std::unique_ptr&lt;T, Deletor&gt;</code>\u3002</p>"},{"location":"pl/cpp/mm/#shared_ptr","title":"shared_ptr","text":"<p><code>shared_ptr</code>\u662f\u4e00\u4e2a\u5171\u4eab\u6240\u6709\u6743\u7684\u667a\u80fd\u6307\u9488\uff0c\u5b83\u5141\u8bb8\u591a\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002</p> <p><code>shared_ptr</code>\u7684\u521d\u59cb\u5316\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>std::shared_ptr&lt;int&gt;sp = std::make_shared&lt;int&gt;(3);\n</code></pre> <p><code>shared_ptr</code>\u7684\u5f15\u7528\u8ba1\u6570\u4f1a\u968f\u7740\u5bf9\u8c61\u7684\u91ca\u653e\u800c\u51cf\u5c11\uff0c\u5f53\u6700\u540e\u4e00\u4e2a\u5bf9\u8c61\u6790\u6784\u65f6\uff0c\u5c06\u91ca\u653e\u5176\u6240\u5360\u6709\u7684\u8d44\u6e90\u3002<code>shared_ptr</code>\u63d0\u4f9b\u4e86\u4e00\u4e2a<code>use_count()</code>\u65b9\u6cd5\u6765\u83b7\u53d6\u5f53\u524d\u8d44\u6e90\u7684\u5f15\u7528\u8ba1\u6570\u3002</p>"},{"location":"pl/cpp/mm/#weak_ptr","title":"weak_ptr","text":"<p><code>weak_ptr</code>\u662f\u4e00\u79cd\u5f31\u5f15\u7528\uff0c\u5f15\u5165\u5b83\u7684\u76ee\u7684\u662f\u534f\u52a9<code>shared_ptr</code>\u5de5\u4f5c\u3002</p> <p><code>weak_ptr</code>\u53ef\u4ee5\u4ece\u4e00\u4e2a<code>shared_ptr</code>\u6216\u53e6\u4e00\u4e2a<code>weak_ptr</code>\u5bf9\u8c61\u6784\u9020\u3002<code>lock()</code>\u65b9\u6cd5\u7528\u6765\u83b7\u5f97\u5bf9\u5e94\u7684<code>shared_ptr</code>\u3002<code>expired()</code>\u65b9\u6cd5\u7528\u6765\u68c0\u6d4b\u5bf9\u5e94\u7684<code>shared_ptr</code>\u662f\u5426\u5df2\u7ecf\u91ca\u653e\u3002</p> <p><code>unique_ptr</code>\u7684\u5927\u5c0f\u548c\u539f\u59cb\u6307\u9488\u4e00\u6837\uff0c\u800c<code>shard_ptr</code>\u548c<code>weak_ptr</code>\u662f\u539f\u59cb\u6307\u9488\u7684\u4e24\u500d\u3002</p> <p>\u8bb0\u4f4f\uff0c\u4e00\u65e6\u4f7f\u7528\u667a\u80fd\u6307\u9488\u63a5\u7ba1\u4e86\u8d44\u6e90\u7684\u6240\u6709\u6743\uff0c\u6240\u6709\u5bf9\u8d44\u6e90\u7684\u64cd\u4f5c\u90fd\u5e94\u8be5\u901a\u8fc7\u667a\u80fd\u6307\u9488\u5bf9\u8c61\u8fdb\u884c\uff0c\u800c\u4e0d\u8981\u518d\u4f7f\u7528\u539f\u59cb\u6307\u9488\u3002\u4e09\u79cd\u667a\u80fd\u6307\u9488\u90fd\u53ef\u4ee5\u901a\u8fc7<code>get()</code>\u65b9\u6cd5\u83b7\u53d6\u539f\u59cb\u6307\u9488\u3002</p>"},{"location":"pl/cpp/oop/","title":"\u9762\u5411\u5bf9\u8c61","text":"<p>\u5f53\u58f0\u660e\u4e86\u4e00\u4e2a\u6216\u591a\u4e2a\u7279\u6b8a\u6210\u5458\u51fd\u6570(\u6790\u6784\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3001\u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26\u548c\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26)\u65f6\uff0c\u901a\u5e38\u9700\u8981\u58f0\u660e\u6240\u6709\u8fd9\u4e9b\u51fd\u6570\uff0c\u8fd9\u88ab\u79f0\u4e3a\"Rule of Five\"\u3002</p> <p>\u5728\u73b0\u4ee3C++\u4e2d\uff0c\u8981\u5e94\u7528\"\u96f6\u89c4\u5219\"\uff0c\u5373\u4e0d\u63d0\u4f9b\u4ee5\u4e0a\u4e94\u4e2a\u7279\u6b8a\u51fd\u6570\u4e5f\u80fd\u786e\u4fdd\u7c7b\u7684\u6b63\u786e\u4f7f\u7528\u3002\u8fd9\u5c31\u8981\u6c42\u6211\u4eec\u907f\u514d\u4f7f\u7528\u4efb\u4f55\u65e7\u5f0f\u7684\u3001\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\uff0c\u800c\u91c7\u7528\u73b0\u4ee3\u7ed3\u6784\u6bd4\u5982\u6807\u51c6\u5e93\u5bb9\u5668\u3002</p>"},{"location":"pl/cpp/oop/#_2","title":"\u7ee7\u627f","text":"<p>\u6d3e\u751f\u7c7b\u53ef\u4ee5\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7684<code>public</code>\u3001<code>protected</code>\u65b9\u6cd5\u548c\u6570\u636e\u6210\u5458\uff0c\u4f46\u4e0d\u80fd\u8bbf\u95ee\u57fa\u7c7b\u7684<code>private</code>\u6210\u5458\u3002</p> <p>\u8bbf\u95ee\u8bf4\u660e\u7b26\u7684\u542b\u4e49\u4e00\u822c\u5982\u4e0b\u8868\u6240\u793a\uff1a</p> \u8bbf\u95ee\u8bf4\u660e\u7b26 \u542b\u4e49 \u4f7f\u7528\u65f6\u673a public \u4efb\u4f55\u4ee3\u7801\u90fd\u53ef\u4ee5\u8c03\u7528\u6216\u8bbf\u95ee \u66b4\u9732\u7ed9\u5916\u90e8\u7684\u63a5\u53e3 protected \u53ea\u6709\u7c7b\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee \u5b50\u7c7b\u53ef\u4ee5\u8bbf\u95ee private \u53ea\u6709\u7c7b\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee \u6570\u636e\u6210\u5458\u9ed8\u8ba4\u4e3aprivate <p>\u5f53\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u6d3e\u751f\u7c7b\u4fdd\u7559\u5176\u6570\u636e\u6210\u5458\u548c\u91cd\u5199\u7684\u65b9\u6cd5\u3002\u4f46\u662f\u901a\u8fc7\u7c7b\u578b\u8f6c\u6362\u5c06\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8f6c\u6362\u4e3a\u57fa\u7c7b\u5bf9\u8c61\u65f6\uff0c\u5c31\u4f1a\u4e22\u5931\u5176\u72ec\u6709\u7279\u5f81\u3002\u91cd\u5199\u65b9\u6cd5\u548c\u6d3e\u751f\u7c7b\u6570\u636e\u7684\u4e22\u5931\u79f0\u4e3a\u622a\u65ad(slicing)\u3002</p>"},{"location":"pl/cpp/oop/#finaloverride","title":"final\u548coverride","text":"<p><code>final</code>\u5173\u952e\u5b57\u7528\u4e8e\u6307\u793a\u7c7b\u6216\u8005\u65b9\u6cd5\u4e0d\u80fd\u88ab\u7ee7\u627f\u3002</p> <p><code>override</code>\u5173\u952e\u5b57\u53ef\u4ee5\u6b63\u786e\u6307\u660e\u8981\u91cd\u5199\u7684\u57fa\u7c7b\u65b9\u6cd5\u3002\u6709\u7684\u65f6\u5019\uff0c\u5f53\u6211\u4eec\u5728\u57fa\u7c7b\u4e2d\u58f0\u660e\u4e86<code>virtual</code>\u65b9\u6cd5\uff0c\u7136\u540e\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u5199\u4e86\u8be5\u65b9\u6cd5\u3002\u5982\u679c\u6211\u4eec\u4fee\u6539\u4e86\u57fa\u7c7b\u7684\u65b9\u6cd5\uff0c\u4f46\u5fd8\u8bb0\u540c\u6b65\u5230\u6d3e\u751f\u7c7b\u4e2d\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5c31\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u65b9\u6cd5\uff0c\u8fd9\u4e0e\u9884\u671f\u4e0d\u7b26\u3002\u4f7f\u7528<code>override</code>\u5173\u952e\u5b57\u540e\uff0c\u7f16\u8bd1\u5668\u4f1a\u68c0\u67e5\u6d3e\u751f\u7c7b\u7684\u65b9\u6cd5\u662f\u5426\u6b63\u786e\u91cd\u5199\u4e86\u57fa\u7c7b\u7684\u65b9\u6cd5\u3002</p> <pre><code>class Base \n{\n    public:\n        virtual void someMethod(double d) {}\n};\n\n\nclass Derived: public Base \n{\n    public:\n        virtual void someMethod(int d) override {}\n};\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u5728\u7f16\u8bd1\u65f6\u4f1a\u5bfc\u81f4\u9519\u8bef\uff0c\u5173\u952e\u5b57<code>override</code>\u8868\u660e\u5c06\u91cd\u5199\u57fa\u7c7b\u7684<code>someMethod</code>\u65b9\u6cd5\uff0c\u4f46\u662fBase\u7c7b\u4e2d\u53ea\u63a5\u6536\u53cc\u7cbe\u5ea6\u6570\uff0c\u800c\u4e0d\u662f\u6574\u6570\u3002\u5f53\u8981\u91cd\u5199\u67d0\u4e2a\u57fa\u7c7b\u65b9\u6cd5\u65f6\uff0c\u59cb\u7ec8\u52a0\u4e0a<code>override</code>\u5173\u952e\u5b57\u3002</p>"},{"location":"pl/cpp/oop/#_3","title":"\u865a\u51fd\u6570","text":"<p>C++\u4f7f\u7528\u52a8\u6001\u7ed1\u5b9a\u6765\u652f\u6301\u865a\u51fd\u6570\u3002\u4e00\u65e6\u51fd\u6570\u88ab\u58f0\u660e\u4e3a<code>virtual</code>\uff0c\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u8be5\u8868\u5305\u542b\u6307\u5411\u865a\u51fd\u6570\u7684\u6307\u9488\u3002\u7c7b\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u5305\u542b\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u6307\u9488\uff0c\u5f53\u5bf9\u8c61\u8c03\u7528\u67d0\u4e2a\u865a\u51fd\u6570\u65f6\uff0c\u901a\u8fc7\u6307\u9488\u627e\u5230\u865a\u51fd\u6570\u8868\u5730\u5740\uff0c\u7136\u540e\u6839\u636e\u5bf9\u8c61\u7684\u7c7b\u578b\u5728\u8fd0\u884c\u671f\u6267\u884c\u6b63\u786e\u7684\u7248\u672c\u3002</p> <p>\u4e3a\u4e86\u66f4\u597d\u5730\u7406\u89e3\u865a\u51fd\u6570\u8868\uff0c\u6211\u4eec\u6765\u770b\u4ee5\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\uff1a</p> <pre><code>class Base\n{\n    public:\n        virtual void func1();\n        virtual void func2();\n};\n\nclass Derived: public Base\n{\n    public:\n        void func2() override;\n        void noVirtualFunc();\n};\n\nBase myBase;\nDerived myDerived;\n</code></pre> <p>\u4e0b\u56fe\u663e\u793a\u4e86\u865a\u51fd\u6570\u8868\u7684\u89c6\u56fe\uff0cmyBase\u5bf9\u8c61\u4fdd\u5b58\u4e86\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0cmyDerived\u5bf9\u8c61\u4fdd\u5b58\u4e86\u53e6\u4e00\u4e2a\u865a\u51fd\u6570\u8868\u3002\u865a\u8868\u4e2d\u6307\u9488\u6307\u5411\u4e86\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c\u7531\u4e8e\u6d3e\u751f\u7c7bmyDerived\u6ca1\u6709\u91cd\u5199<code>func1()</code>\uff0c\u6240\u4ee5\u5b83\u7684\u6307\u9488\u4f9d\u7136\u6307\u5411\u4e86Base\u7c7b\u4e2d\u7684<code>func1()</code>\u3002\u800c\u91cd\u5199\u7684<code>func2()</code>\uff0c\u5219\u6307\u5411\u4e86Derived\u7c7b\u4e2d\u7684<code>func2()</code>\u3002</p> <p></p> <p>Note</p> <p>\u6790\u6784\u51fd\u6570\u5fc5\u987b\u58f0\u660e\u4e3avirtual\uff0c\u4ee5\u6b63\u786e\u8c03\u7528\u5bf9\u5e94\u7c7b\u7684\u6790\u6784\u51fd\u6570\u91ca\u653e\u8d44\u6e90\u3002</p> <p>C++\u4e2d\uff0c\u865a\u51fd\u6570\u8868\u5b58\u653e\u4e8e\u53ea\u8bfb\u6570\u636e\u6bb5(.rodata)\uff0c\u865a\u51fd\u6570\u5219\u5b58\u653e\u4e8e\u4ee3\u7801\u6bb5(.text)\uff0c\u865a\u51fd\u6570\u8868\u6307\u9488\u5b58\u50a8\u7684\u4f4d\u7f6e\u548c\u6240\u5c5e\u5bf9\u8c61\u7684\u4f4d\u7f6e\u76f8\u540c\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u5728\u6808\u4e5f\u53ef\u4ee5\u5728\u5806\u3002</p>"},{"location":"pl/cpp/oop/#_4","title":"\u9759\u6001\u6570\u636e\u6210\u5458","text":"<p>\u6709\u65f6\u8ba9\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u5305\u542b\u67d0\u4e2a\u53d8\u91cf\u7684\u526f\u672c\u662f\u6ca1\u6709\u5fc5\u8981\u7684\uff0c\u6570\u636e\u6210\u5458\u53ea\u5bf9\u7c7b\u6709\u610f\u4e49\uff0c\u6bd4\u5982\u6211\u4eec\u9700\u8981\u5bf9\u7c7b\u7684\u5bf9\u8c61\u8fdb\u884c\u7edf\u8ba1\uff0c\u5c31\u53ef\u4ee5\u5728\u7c7b\u4e2d\u5b9a\u4e49\u4e00\u4e2a<code>static</code>\u6570\u636e\u6210\u5458\uff1a</p> <pre><code>class MyClass {\n    public:\n        static int m_count;\n};\n</code></pre> <p>\u5728C++17\u4e4b\u524d\uff0c\u9759\u6001\u6570\u636e\u6210\u5458\u53ea\u80fd\u5728\u7c7b\u5916\u521d\u59cb\u5316\uff0cC++17\u4e4b\u540e\uff0c\u53ef\u4ee5\u5c06\u9759\u6001\u6570\u636e\u6210\u5458\u58f0\u660e\u4e3a<code>inline</code>\u76f4\u63a5\u521d\u59cb\u5316\u3002</p> <pre><code>class MyClass{\n    public:\n        static inline int m_count { 0 };\n};\n</code></pre> <p>\u5728\u7c7b\u65b9\u6cd5\u5185\u90e8\uff0c\u53ef\u4ee5\u50cf\u4f7f\u7528\u666e\u901a\u6570\u636e\u6210\u5458\u54ea\u6837\u4f7f\u7528\u9759\u6001\u6570\u636e\u6210\u5458\uff1a</p> <pre><code>class MyClass{\n    public:\n        int getID()const;\n    private:\n        static inline int m_count { 0 };\n        int m_id { 0 };\n};\n\n//\u7c7b\u7684\u6784\u9020\u51fd\u6570\nMyClass::MyClass(int width, int height):m_id{ ++m_count}, m_width { width }, m_height{ height }\n{\n\n}\n</code></pre> <p>\u5982\u679c\u8981\u5728\u7c7b\u65b9\u6cd5\u5916\u8bbf\u95ee\u9759\u6001\u6570\u636e\u6210\u5458\uff0c\u5219\u53ea\u6709\u5728public\u7684\u65f6\u5019\u53ef\u4ee5\u901a\u8fc7::\u4f5c\u7528\u57df\u89e3\u6790\u8fd0\u7b97\u7b26\u8bbf\u95ee\u3002\u4f46\u4e00\u822c\u4e0d\u63a8\u8350\u8fd9\u4e48\u505a\uff0c\u5982\u679c\u8981\u8bbf\u95ee\uff0c\u5e94\u63d0\u4f9bstatic\u7684get/set\u65b9\u6cd5\u3002</p>"},{"location":"pl/cpp/oop/#_5","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<p>C++20\u7b80\u5316\u4e86\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u4ee3\u7801\u7f16\u5199\uff0c\u53ea\u9700\u63d0\u4f9b<code>operator==</code>\u548c<code>operator&lt;=&gt;</code>\uff0c\u5c31\u4f1a\u81ea\u52a8\u4e3a\u6240\u67096\u4e2a\u6bd4\u8f83\u8fd0\u7b97\u7b26\u63d0\u4f9b\u652f\u6301\u3002</p>"},{"location":"pl/cpp/regex/","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\u5728&lt;regex&gt;\u4e2d\u5b9a\u4e49\uff0c\u662f\u4e00\u79cd\u5f3a\u5927\u7684\u5904\u7406\u5b57\u7b26\u4e32\u7684\u5e93\u3002C++\u4e2dmorning\u7684\u8bed\u6cd5\u662fECMAScript\u3002</p>"},{"location":"pl/cpp/regex/#_2","title":"\u8bed\u6cd5","text":"<p>\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u7684\u4efb\u4f55\u5b57\u7b26\u90fd\u8868\u793a\u5339\u914d\u81ea\u8eab\uff0c\u4f46\u4ee5\u4e0b\u7279\u6b8a\u5b57\u7b26\u9664\u5916\uff1a</p> <pre><code>^ $ \\ . * + ? ( ) [ ] { } |\n</code></pre> <p>\u5982\u679c\u8981\u5339\u914d\u8fd9\u4e9b\u5b57\u7b26\uff0c\u5219\u9700\u8981\u52a0\u4e0a\\\u8f6c\u4e49\u5b57\u7b26\u3002\u4e0b\u9762\u8bb2\u89e3\u8fd9\u4e9b\u7279\u6b8a\u5b57\u7b26\u7684\u542b\u4e49\uff1a</p> <ol> <li> <p>\u951a\u70b9</p> <p>^ \u548c $ \u88ab\u79f0\u4e3a\u951a\u70b9\uff0c\u5b83\u4eec\u5206\u522b\u8868\u793a\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u3002</p> </li> <li> <p>\u901a\u914d\u7b26</p> <p>. \u53ef\u4ee5\u5339\u914d\u9664\u4e86\u6362\u884c\u7b26\u4e4b\u5916\u7684\u4efb\u610f\u5355\u4e2a\u5b57\u7b26\u3002</p> </li> <li> <p>\u66ff\u4ee3</p> <p>| \u8868\u793a\u6216\uff0c\u5373\u5339\u914d | \u5de6\u6216\u53f3\u7684\u5b57\u7b26\u3002</p> </li> <li> <p>\u5206\u7ec4</p> <p>() \u88ab\u79f0\u4e3a\u6355\u83b7\u7ec4\uff0c\u8868\u793a\u5339\u914d\u7684\u6a21\u5f0f\u3002</p> </li> <li> <p>\u91cd\u590d</p> <p>\u4ee5\u4e0b4\u4e2a\u5b57\u7b26\u8868\u793a\u53ef\u91cd\u590d\u5339\u914d\uff1a</p> <ul> <li>*\uff1a\u5339\u914d\u96f6\u6b21\u6216\u591a\u6b21\u4e4b\u524d\u7684\u90e8\u5206\u3002</li> <li>+\uff1a\u5339\u914d\u4e00\u6b21\u6216\u591a\u6b21\u4e4b\u524d\u7684\u90e8\u5206\u3002</li> <li>?\uff1a\u5339\u914d\u96f6\u6b21\u6216\u4e00\u6b21\u4e4b\u524d\u7684\u90e8\u5206\u3002</li> <li>{n,m}\uff1a\u5339\u914dn\u81f3m\u6b21\u4e4b\u524d\u7684\u90e8\u5206\u3002</li> </ul> <p>\u91cd\u590d\u5339\u914d\u5b57\u7b26\u9ed8\u8ba4\u4f4d\u8d2a\u5a6a\u5339\u914d\uff0c\u5373\u5c3d\u53ef\u80fd\u591a\u5730\u5339\u914d\u5b57\u7b26\u3002\u5728\u5b57\u7b26\u540e\u9762\u52a0\u4e0a ?\uff0c\u53ef\u4ee5\u6539\u4e3a\u975e\u8d2a\u5a6a\u6a21\u5f0f\u3002</p> </li> <li> <p>\u4f18\u5148\u7ea7</p> <p>\u5143\u7d20\uff1a\u4f8b\u5982a\uff0c\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u6700\u57fa\u672c\u7684\u6784\u5efa\u5757 \u91cf\u8bcd\uff1a\u4f8b\u5982+\u3001*\u3001?\u3001{n,m}\uff0c\u4e0e\u5de6\u4fa7\u7684\u5143\u7d20\u7d27\u5bc6\u7ed1\u5b9a \u4e32\u8054\uff1a\u4f8b\u5982ab+c\uff0c\u5728\u91cf\u8bcd\u4e4b\u540e\u7ed1\u5b9a \u66ff\u4ee3\u7b26\uff1a\u4f8b\u5982|\uff0c\u6700\u540e\u7ed1\u5b9a</p> </li> <li> <p>\u5b57\u7b26\u96c6\u5408</p> <p>\u4e3a\u4e86\u4e00\u6b21\u6027\u5339\u914d\u591a\u4e2a\u5b57\u7b26\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528[c1c2c3...cn]\u7684\u5f62\u5f0f\uff0c\u8868\u793a\u5339\u914d\u65b9\u62ec\u53f7\u5185\u7684\u4efb\u610f\u5b57\u7b26\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f^\uff0c\u5219\u8868\u793a\u5339\u914d\u9664\u4e86\u8fd9\u4e9b\u5b57\u7b26\u4e4b\u5916\u7684\u4efb\u610f\u5b57\u7b26\uff1a</p> <ul> <li>[^abc]\uff1a\u5339\u914d\u9664\u4e86a\u3001b\u3001c\u4e4b\u5916\u7684\u6240\u6709\u5b57\u7b26\u3002</li> <li>[a-z]\uff1a\u5339\u914d\u6240\u6709\u5c0f\u5199\u5b57\u6bcd</li> </ul> <p>\u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u5b57\u7b26\u7c7b\uff0c\u8fd9\u91cc\u53ea\u5217\u4e3e\u7528\u5f97\u6bd4\u8f83\u591a\u7684\uff0c\u6bd4\u5982\\d+\uff0c\u8868\u793a\u5339\u914d\u4e00\u4e2a\u6216\u591a\u4e2a\u6570\u5b57\uff0c</p> </li> </ol>"},{"location":"pl/cpp/regex/#regex","title":"regex\u5e93","text":""},{"location":"pl/cpp/time/","title":"\u65e5\u671f\u548c\u65f6\u95f4","text":"<p>C++\u6807\u51c6\u5e93\u4e2d\u7684\u4e0e\u65f6\u95f4\u76f8\u5173\u7684\u529f\u80fd\u90fd\u653e\u5728std::chrono\u540d\u79f0\u7a7a\u95f4\u4e2d\uff0c\u5b9a\u4e49\u5728\u5934\u6587\u4ef6&lt;chrono&gt;\u3002</p> <p>\u8fd9\u4e9b\u5e93\u5305\u542b\u4ee5\u4e0b\u7ec4\u4ef6\uff1a</p> <ul> <li>\u65f6\u95f4\u95f4\u9694(Duration)</li> <li>\u65f6\u949f(Clock)</li> <li>\u65f6\u95f4\u70b9(Time point)</li> <li>\u65e5\u671f(Date) C++20</li> <li>\u65f6\u533a(Time zone) C++20</li> </ul>"},{"location":"pl/cpp/time/#duration","title":"Duration","text":"<p>Duration\u8868\u793a\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694\uff0c\u5b83\u7531\u4e00\u4e2a\u6570\u91cf\u548c\u5355\u4f4d\u7ec4\u6210\uff1a</p> <p><code>template&lt;class Rep, class Period = std::ratio&lt;1&gt;&gt; class duration;</code></p> <p>Rep\u8868\u793a\u91cd\u590d\u7684\u6b21\u6570\uff0cratio\u7684\u5355\u4f4d\u662f\u79d2\u3002</p> <p>\u6807\u51c6\u5e93\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\uff0c\u5c31\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u65f6\u95f4\u95f4\u9694\uff1a</p> <pre><code>typedef duration &lt;Rep, ratio&lt;3600,1&gt;&gt; hours;\ntypedef duration &lt;Rep, ratio&lt;60,1&gt;&gt; minutes;\ntypedef duration &lt;Rep, ratio&lt;1,1&gt;&gt; seconds;\ntypedef duration &lt;Rep, ratio&lt;1,1000&gt;&gt; milliseconds;\ntypedef duration &lt;Rep, ratio&lt;1,1000000&gt;&gt; microseconds;\ntypedef duration &lt;Rep, ratio&lt;1,1000000000&gt;&gt; nanoseconds;\n</code></pre> <p>\u901a\u8fc7\u5b9a\u4e49\u8fd9\u4e9b\u5e38\u7528\u7684\u65f6\u95f4\u95f4\u9694\u7c7b\u578b\uff0c\u6211\u4eec\u80fd\u65b9\u4fbf\u7684\u4f7f\u7528\u5b83\u4eec\uff0c\u6bd4\u5982\u7ebf\u7a0b\u7684\u4f11\u7720\uff1a</p> <pre><code>std::this_thread::sleep_for(std::chrono::seconds(3)); //\u4f11\u7720\u4e09\u79d2`\n</code></pre> <p><code>duration_cast</code>\u53ef\u4ee5\u5c06\u5f53\u524d\u7684\u65f6\u949f\u5468\u671f\u8f6c\u6362\u4e3a\u5176\u4ed6\u7684\u65f6\u949f\u5468\u671f\u3002</p>"},{"location":"pl/cpp/time/#time-point","title":"Time point","text":""},{"location":"pl/cpp/time/#clock","title":"Clock","text":"<p>\u8868\u793a\u5f53\u524d\u7684\u7cfb\u7edf\u65f6\u949f\uff0c\u5b83\u6709\u4e09\u79cd\uff1a</p> <ul> <li>system_clock\uff1a\u7cfb\u7edf\u65f6\u949f\uff0c\u4f1a\u88ab\u4fee\u6539</li> <li>steady_clock\uff1a\u4e0d\u80fd\u88ab\u4fee\u6539\u7684\u65f6\u949f</li> <li>high_resolution_clock\uff1a\u9ad8\u7cbe\u5ea6\u65f6\u949f</li> </ul> <p>\u6210\u5458\u51fd\u6570<code>now()</code>\u7528\u6765\u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u70b9\u3002</p>"},{"location":"pl/go/","title":"Go","text":""},{"location":"pl/go/#_1","title":"\u57fa\u7840\u77e5\u8bc6","text":"<ul> <li>\u5feb\u901f\u5165\u95e8</li> <li>\u51fd\u6570</li> <li>\u5305</li> <li>\u63a5\u53e3</li> <li>\u5e76\u53d1</li> <li>\u53cd\u5c04</li> <li>\u6cdb\u578b</li> <li>\u5355\u5143\u6d4b\u8bd5</li> <li>\u8c03\u8bd5</li> </ul>"},{"location":"pl/go/concurrency/","title":"\u5e76\u53d1","text":"<p>Go \u8bed\u8a00\u63d0\u4f9b\u4e86 Goroutine(\u534f\u7a0b)\u548c Channel(\u7ba1\u9053)\u6765\u5b9e\u73b0\u5e76\u53d1\u3002</p>"},{"location":"pl/go/concurrency/#goroutine","title":"Goroutine","text":"<p>Goroutine \u662f Go \u8bed\u8a00\u63d0\u4f9b\u7684\u8f7b\u91cf\u7ea7\u7ebf\u7a0b\uff0c\u4e00\u4e2a goroutine \u4f1a\u4ee5\u5f88\u5c0f\u7684\u6808\u5f00\u59cb\u5176\u751f\u547d\u5468\u671f\uff0c\u7531 Go \u8fd0\u884c\u65f6\u8d1f\u8d23\u8c03\u5ea6\u3002runtime \u4f1a\u667a\u80fd\u5730\u5c06\u591a\u4e2a goroutine \u5408\u7406\u5730\u5206\u914d\u7ed9 n \u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u3002</p> <p>\u5728 Go \u8bed\u8a00\u4e2d\u7f16\u5199\u5e76\u53d1\u7a0b\u5e8f\uff0c\u53ea\u9700\u8981\u5c06\u8be5\u4efb\u52a1\u5305\u88c5\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u4e22\u7ed9 goroutine \u5373\u53ef\u3002\u4f7f\u7528\u5173\u952e\u5b57<code>go</code>\u5373\u53ef\u521b\u5efa\u4e00\u4e2a goroutine\u3002</p>"},{"location":"pl/go/concurrency/#main-goroutine","title":"main goroutine","text":"<p>\u5728 Go \u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a main goroutine\u3002\u5f53<code>main()</code>\u51fd\u6570\u7ed3\u675f\u65f6\uff0c\u6574\u4e2a\u7a0b\u5e8f\u4e5f\u7ed3\u675f\u4e86\uff0c\u6240\u6709\u7531 main goroutine \u521b\u5efa\u7684 goroutine \u4e5f\u4f1a\u4e00\u540c\u9000\u51fa\u3002</p>"},{"location":"pl/go/concurrency/#_2","title":"\u52a8\u6001\u6808","text":"<p>\u7531\u64cd\u4f5c\u7cfb\u7edf\u521b\u5efa\u7684\u7ebf\u7a0b\u4e00\u822c\u90fd\u6709\u56fa\u5b9a\u7684\u6808\u5185\u5b58\uff0c\u800c goroutine \u5c5e\u4e8e\u7528\u6237\u7ea7\u7ebf\u7a0b\uff0c\u521d\u59cb\u6808\u7a7a\u95f4\u5f88\u5c0f\uff08\u4e00\u822c\u4e3a2KB\uff09\u3002\u6240\u4ee5\u5728 Go \u8bed\u8a00\u4e2d\u4e00\u6b21\u521b\u5efa\u6570\u4e07\u4e2a goroutine \u4e5f\u662f\u53ef\u80fd\u7684\u3002\u5e76\u4e14 goroutine \u7684\u6808\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u52a8\u6001\u5730\u589e\u5927\u6216\u7f29\u5c0f\u3002go runtime \u4f1a\u81ea\u52a8\u4e3a goroutine \u5206\u914d\u5408\u9002\u7684\u6808\u7a7a\u95f4\u3002</p>"},{"location":"pl/go/concurrency/#goroutine_1","title":"goroutine\u8c03\u5ea6","text":"<p>\u7531\u64cd\u4f5c\u7cfb\u7edf\u63a7\u5236\u7684\u7ebf\u7a0b\u5728\u8fdb\u884c\u8c03\u5ea6\u65f6\uff0c\u9700\u8981\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u6574\u4e2a\u8fc7\u7a0b\u6bd4\u8f83\u8017\u65f6\u3002\u800c goroutine \u7684\u8c03\u5ea6\u662f\u7531 go scheduler \u5b9e\u73b0\u7684\uff0c\u5b83\u5728\u7528\u6237\u6001\u7ef4\u62a4\u4e86\u4e00\u4e2a\u7c7b\u4f3c\u7ebf\u7a0b\u6c60\u7684\u6982\u5ff5\uff0c\u4f1a\u81ea\u52a8\u5730\u5c06 goroutine \u8c03\u5ea6\u5230\u7a7a\u95f2\u7684\u7ebf\u7a0b\u4e0a\u8fd0\u884c\u3002</p> <p>\u76ee\u524d Go \u8bed\u8a00\u91c7\u7528\u7684\u662f GPM \u8c03\u5ea6\u6a21\u578b\uff1a</p> <p></p> <ul> <li>G\uff1a\u5373 goroutine\uff0c \u6bcf\u6267\u884c\u4e00\u4e2a<code>go func()</code>\u8bed\u53e5\u5c31\u4f1a\u521b\u5efa\u4e00\u4e2a goroutine\u3002</li> <li>\u5168\u5c40\u961f\u5217\uff1a\u5b58\u653e\u7b49\u5f85\u8fd0\u884c\u7684 G\u3002</li> <li>P\uff1a\u8868\u793a goroutine \u6267\u884c\u6240\u9700\u8981\u7684\u8d44\u6e90\uff0c\u6700\u591a\u6709 GOMAXPROCS(\u9ed8\u8ba4\u503c\u4e3a CPU \u6838\u6570) \u4e2a\u3002</li> <li>P\u672c\u5730\u961f\u5217\uff1a\u540c\u5168\u5c40\u961f\u5217\u7c7b\u4f3c\uff0c\u5b58\u653e\u7684\u4e5f\u662f\u7b49\u5f85\u8fd0\u884c\u7684G\uff0c\u5b58\u7684\u6570\u91cf\u6709\u9650\uff0c\u4e0d\u8d85\u8fc7256\u4e2a\u3002\u65b0\u5efa G \u65f6\uff0cG \u4f18\u5148\u52a0\u5165\u5230 P \u7684\u672c\u5730\u961f\u5217\uff0c\u5982\u679c\u672c\u5730\u961f\u5217\u6ee1\u4e86\u4f1a\u6279\u91cf\u79fb\u52a8\u90e8\u5206 G \u5230\u5168\u5c40\u961f\u5217\u3002</li> <li>M\uff1a\u7ebf\u7a0b\u60f3\u8fd0\u884c\u4efb\u52a1\u5c31\u5f97\u83b7\u53d6 P\uff0c\u4ece P \u7684\u672c\u5730\u961f\u5217\u83b7\u53d6 G\uff0c\u5f53 P \u7684\u672c\u5730\u961f\u5217\u4e3a\u7a7a\u65f6\uff0cM \u4e5f\u4f1a\u5c1d\u8bd5\u4ece\u5168\u5c40\u961f\u5217\u6216\u5176\u4ed6 P \u7684\u672c\u5730\u961f\u5217\u83b7\u53d6 G\u3002M \u8fd0\u884c G\uff0cG \u6267\u884c\u4e4b\u540e\uff0cM \u4f1a\u4ece P \u83b7\u53d6\u4e0b\u4e00\u4e2a G\uff0c\u4e0d\u65ad\u91cd\u590d\u4e0b\u53bb\u3002</li> <li>Goroutine \u8c03\u5ea6\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u5668\u662f\u901a\u8fc7 M \u7ed3\u5408\u8d77\u6765\u7684\uff0c\u6bcf\u4e2a M \u90fd\u4ee3\u8868\u4e861\u4e2a\u5185\u6838\u7ebf\u7a0b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u5668\u8d1f\u8d23\u628a\u5185\u6838\u7ebf\u7a0b\u5206\u914d\u5230 CPU \u7684\u6838\u4e0a\u6267\u884c\u3002</li> </ul>"},{"location":"pl/go/concurrency/#channel","title":"Channel","text":"<p>Go \u8bed\u8a00\u4e2d\u7684 channel\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\u578b\u3002\u901a\u9053\u50cf\u4e00\u4e2a\u4f20\u9001\u5e26\u6216\u8005\u961f\u5217\uff0c\u603b\u662f\u9075\u5faa\u5148\u5165\u5148\u51fa\u7684\u89c4\u5219\uff0c\u4fdd\u8bc1\u6536\u53d1\u6570\u636e\u7684\u987a\u5e8f\u3002\u6bcf\u4e00\u4e2a channel \u90fd\u662f\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\u7684\u5bfc\u7ba1\uff0c\u4e5f\u5c31\u662f\u58f0\u660e channel \u7684\u65f6\u5019\u9700\u8981\u4e3a\u5176\u6307\u5b9a\u5143\u7d20\u7c7b\u578b\u3002</p> <p>\u5728 channel \u53d8\u91cf\u58f0\u660e\u540e\uff0c\u9700\u8981\u4f7f\u7528<code>make()</code>\u51fd\u6570\u6765\u521d\u59cb\u5316\uff1a</p> <pre><code>make(chan type, buffer_size)\n</code></pre> <p>channel \u7684\u64cd\u4f5c\u6709\u53d1\u9001\u3001\u63a5\u6536\u3001\u5173\u95ed\u4e09\u79cd\uff1a</p> <pre><code>ch := make(chan int)\nch &lt;- 10 // \u53d1\u9001\u6570\u636e\nx := &lt;-ch   // \u63a5\u6536\u6570\u636e\nclose(ch)   // \u5173\u95ed\u901a\u9053\n</code></pre> <p>\u5173\u95ed\u540e\u7684 channel \u6709\u4ee5\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>\u5bf9\u4e00\u4e2a\u5173\u95ed\u7684 channel \u53d1\u9001\u6570\u636e\u4f1a\u5bfc\u81f4 panic\u3002</li> <li>\u5bf9\u4e00\u4e2a\u5173\u95ed\u7684\u901a\u9053\u8fdb\u884c\u63a5\u6536\u64cd\u4f5c\u4f1a\u4e00\u76f4\u83b7\u53d6\u503c\u76f4\u5230 channel \u4e3a\u7a7a\u3002</li> <li>\u5173\u95ed\u4e00\u4e2a\u5df2\u7ecf\u5173\u95ed\u7684 channel \u4f1a\u5bfc\u81f4 panic\u3002</li> </ul>"},{"location":"pl/go/concurrency/#_3","title":"\u7f13\u51b2\u533a","text":"<p>channel \u53ef\u4ee5\u8bbe\u7f6e\u7f13\u51b2\u533a\uff0c\u5373\u6307\u5b9a channel \u7684\u5bb9\u91cf\u3002\u5982\u679c\u7f13\u51b2\u533a\u6ee1\u4e86\uff0c\u5219\u53d1\u9001\u8005\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230\u7f13\u51b2\u533a\u6709\u7a7a\u95f2\u4f4d\u7f6e\u3002</p> <p>\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u7f13\u51b2\u533a\uff0c\u5219 channel \u5fc5\u987b\u8981\u6307\u5b9a\u4e00\u4e2a\u63a5\u6536\u65b9\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u6b7b\u9501\u3002</p>"},{"location":"pl/go/concurrency/#channel_1","title":"\u5355\u5411channel","text":"<p>Go \u8bed\u8a00\u63d0\u4f9b\u4e86\u5355\u5411 channel\uff0c\u5373\u67d0\u4e2a channel \u53ea\u7528\u6765\u53d1\u9001\u6216\u8005\u63a5\u6536\u6570\u636e\uff1a</p> <pre><code>&lt;- chan int // \u53ea\u63a5\u6536\nchan&lt;- int // \u53ea\u53d1\u9001\n</code></pre> <p>\u7bad\u5934\u7684\u65b9\u5411\u51b3\u5b9a\u4e86\u5f53\u524d channel \u5141\u8bb8\u7684\u64cd\u4f5c\uff0c\u8fd9\u79cd\u9650\u5236\u5c06\u5728\u7f16\u8bd1\u9636\u6bb5\u8fdb\u884c\u76d1\u6d4b\u3002\u53e6\u5916\uff0c\u4e00\u4e2a\u53ea\u63a5\u6536\u7684 channel \u5e94\u8be5\u7531\u53d1\u9001\u65b9\u6765\u5173\u95ed\u3002</p> <p>\u4e0b\u9762\u7684\u8868\u683c\u603b\u7ed3\u4e86\u4e0d\u540c\u72b6\u6001\u7684 channel \u6267\u884c\u7684\u7ed3\u679c\uff1a</p> <p></p>"},{"location":"pl/go/concurrency/#select","title":"select\u591a\u8def\u590d\u7528","text":"<p>Go \u5185\u7f6e\u4e86<code>select</code>\u5173\u952e\u5b57\u6765\u5b9e\u73b0\u591a\u8def\u590d\u7528\u3002\u5b83\u53ef\u4ee5\u76d1\u542c\u591a\u4e2a channel \u7684\u72b6\u6001\uff0c\u5e76\u6839\u636e channel \u7684\u72b6\u6001\u6765\u9009\u62e9\u6267\u884c\u76f8\u5e94\u7684 case\u3002</p> <pre><code>select {\ncase &lt;-ch1:\n    // ch1 \u6709\u6570\u636e\ncase ch2 &lt;- 10:\n    // ch2 \u5df2\u6ee1\ndefault:\n    // \u5176\u4ed6\u60c5\u51b5\n}\n</code></pre> <p><code>select</code>\u8bed\u53e5\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>\u53ef\u5904\u7406\u4e00\u4e2a\u6216\u591a\u4e2a channel \u7684\u53d1\u9001/\u63a5\u6536\u64cd\u4f5c\u3002</li> <li>\u5982\u679c\u591a\u4e2a case \u540c\u65f6\u6ee1\u8db3\uff0c\u5219\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u6267\u884c\u3002</li> <li>\u5982\u679c\u6ca1\u6709 case \u53ef\u6267\u884c\uff0c\u5219\u4f1a\u963b\u585e\u3002</li> </ul>"},{"location":"pl/go/concurrency/#_4","title":"\u5e76\u53d1\u9501","text":""},{"location":"pl/go/concurrency/#_5","title":"\u4e92\u65a5\u9501","text":"<p>Go \u63d0\u4f9b\u4e86 sync.Mutex \u4e92\u65a5\u9501\u7684\u4e24\u4e2a\u65b9\u6cd5\uff1a<code>Lock()</code>\u548c<code>Unlock()</code>\u3002</p>"},{"location":"pl/go/concurrency/#_6","title":"\u8bfb\u5199\u4e92\u65a5\u9501","text":"<p>sync.RWMutex \u63d0\u4f9b\u4e86\u4ee5\u4e0b5\u4e2a\u65b9\u6cd5\uff1a</p> <ul> <li><code>Lock()</code>\uff1a\u83b7\u53d6\u5199\u9501</li> <li><code>Unlock()</code>\uff1a\u91ca\u653e\u5199\u9501</li> <li><code>RLock()</code>\uff1a\u83b7\u53d6\u8bfb\u9501</li> <li><code>RUnlock()</code>\uff1a\u91ca\u653e\u8bfb\u9501</li> <li><code>RLocker()</code>\uff1a\u8fd4\u56de\u4e00\u4e2a\u5b9e\u73b0 Locker \u63a5\u53e3\u7684\u8bfb\u5199\u9501</li> </ul>"},{"location":"pl/go/concurrency/#waitgroup","title":"WaitGroup","text":"<p>sync.WaitGroup \u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u8ba1\u6570\u5668\u7684\u503c\u53ef\u4ee5\u589e\u52a0\u548c\u51cf\u5c11\u3002\u4f8b\u5982\u5f53\u6211\u4eec\u542f\u52a8\u4e86 N \u4e2a\u5e76\u53d1\u4efb\u52a1\u65f6\uff0c\u5c31\u5c06\u8ba1\u6570\u5668\u503c\u589e\u52a0N\u3002\u6bcf\u4e2a\u4efb\u52a1\u5b8c\u6210\u65f6\u901a\u8fc7\u8c03\u7528<code>Done()</code>\u65b9\u6cd5\u5c06\u8ba1\u6570\u5668\u51cf1\u3002\u901a\u8fc7\u8c03\u7528<code>Wait()</code>\u6765\u7b49\u5f85\u5e76\u53d1\u4efb\u52a1\u6267\u884c\u5b8c\uff0c\u5f53\u8ba1\u6570\u5668\u503c\u4e3a 0 \u65f6\uff0c\u8868\u793a\u6240\u6709\u5e76\u53d1\u4efb\u52a1\u5df2\u7ecf\u5b8c\u6210\u3002</p> <ul> <li><code>Add(delta int)</code>\uff1a\u589e\u52a0\u8ba1\u6570\u5668\u7684\u503c</li> <li><code>Done()</code>\uff1a\u51cf\u5c11\u8ba1\u6570\u5668\u7684\u503c</li> <li><code>Wait()</code>\uff1a\u963b\u585e\u76f4\u5230\u8ba1\u6570\u5668\u53d8\u4e3a0</li> </ul>"},{"location":"pl/go/concurrency/#once","title":"Once","text":"<p>sync.Once \u7528\u4e8e\u4fdd\u8bc1\u67d0\u4e2a\u51fd\u6570\u53ea\u6267\u884c\u4e00\u6b21\u3002</p>"},{"location":"pl/go/concurrency/#_7","title":"\u539f\u5b50\u64cd\u4f5c","text":"<p>\u9488\u5bf9\u6574\u6570\u6570\u636e\u7c7b\u578b\uff08int32\u3001uint32\u3001int64\u3001uint64\uff09\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\u6765\u4fdd\u8bc1\u5e76\u53d1\u5b89\u5168\uff0c\u901a\u5e38\u76f4\u63a5\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c\u6bd4\u4f7f\u7528\u9501\u64cd\u4f5c\u6548\u7387\u66f4\u9ad8\u3002Go \u8bed\u8a00\u4e2d\u539f\u5b50\u64cd\u4f5c\u7531\u5185\u7f6e\u7684\u6807\u51c6\u5e93 sync/atomic \u63d0\u4f9b\u3002</p>"},{"location":"pl/go/debug/","title":"\u8c03\u8bd5","text":""},{"location":"pl/go/debug/#pprof","title":"pprof","text":""},{"location":"pl/go/debug/#trace","title":"trace","text":""},{"location":"pl/go/function/","title":"\u51fd\u6570","text":"<p>Go \u8bed\u8a00\u4e2d\u51fd\u6570\u7684\u7279\u70b9\u6709\uff1a</p> <ul> <li>\u65e0\u9700\u58f0\u660e\u539f\u578b</li> <li>\u652f\u6301\u4e0d\u5b9a\u53c2\u6570</li> <li>\u652f\u6301\u591a\u8fd4\u56de\u503c</li> <li>\u652f\u6301\u547d\u540d\u8fd4\u56de\u53c2\u6570</li> <li>\u652f\u6301\u533f\u540d\u51fd\u6570\u548c\u95ed\u5305</li> <li>\u4e0d\u652f\u6301\u5d4c\u5957\u3001\u91cd\u8f7d\u3001\u9ed8\u8ba4\u53c2\u6570</li> </ul> <p>\u7b26\u5408\u89c4\u8303\u7684\u51fd\u6570\u4e00\u822c\u5199\u6210\u5982\u4e0b\u7684\u5f62\u5f0f\uff1a</p> <pre><code>func functionName(parameter_list) (return_value_list) {\n    //body\n}\n</code></pre> <p>\u5176\u4e2d\uff1a</p> <ul> <li>parameter_list\u7684\u5f62\u5f0f\u4e3a(param1 type1, param2 type2, \u2026)</li> <li>return_value_list\u7684\u5f62\u5f0f\u4e3a(return1 type1, return2 type2, \u2026)</li> </ul> <p>\u53ea\u6709\u5f53\u67d0\u4e2a\u51fd\u6570\u9700\u8981\u88ab\u5916\u90e8\u5305\u8c03\u7528\u7684\u65f6\u5019\u624d\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u5e76\u9075\u5faa Pascal \u547d\u540d\u6cd5\uff1b\u5426\u5219\u5c31\u9075\u5faa\u9a86\u9a7c\u547d\u540d\u6cd5\uff0c\u5373\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u5176\u4f59\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u5927\u5199\u3002</p>"},{"location":"pl/go/function/#_2","title":"\u8fd4\u56de\u503c","text":"<p>\u5728GO\u4e2d\uff0c\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u591a\u4e2a\u8fd4\u56de\u503c:</p> <ul> <li>\u533f\u540d\u65b9\u5f0f\u8fd4\u56de</li> </ul> <pre><code>func foo(a string, b int)(int, int){\n    return 111, 222\n}\n</code></pre> <ul> <li>\u547d\u540d\u65b9\u5f0f\u8fd4\u56de</li> </ul> <pre><code>func foo(a string, b int)(r1 int, r2 int){\n    r1 = 111\n    r2 = 222\n    return\n}\n</code></pre>"},{"location":"pl/go/function/#_3","title":"\u5185\u7f6e\u51fd\u6570","text":"<p>Go \u8bed\u8a00\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u51fd\u6570\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff1a</p> <ul> <li><code>append()</code>\uff1a\u8ffd\u52a0\u5143\u7d20\u5230\u6570\u7ec4\u3001\u5207\u7247\u4e2d</li> <li><code>close()</code>\uff1a\u5173\u95ed channel</li> <li><code>delete()</code>\uff1a\u4ece map \u4e2d\u5220\u9664 key \u5bf9\u5e94\u7684 value</li> <li><code>panic()</code>\uff1a\u89e6\u53d1\u5f02\u5e38\uff0c\u7ec8\u6b62\u4ee3\u7801\u6267\u884c</li> <li><code>recover()</code>\uff1a\u6355\u83b7<code>panic()</code>\u5f02\u5e38</li> <li><code>imag()</code>\uff1a\u83b7\u53d6\u590d\u6570\u7684\u865a\u90e8</li> <li><code>real()</code>\uff1a\u83b7\u53d6\u590d\u6570\u7684\u5b9e\u90e8</li> <li><code>make()</code>\uff1a\u521b\u5efa\u5207\u7247\u3001map\u3001channel</li> <li><code>new()</code>\uff1a\u5206\u914d\u503c\u7c7b\u578b\u7684\u5185\u5b58</li> <li><code>cap()</code>\uff1a\u83b7\u53d6\u5207\u7247\u3001map \u7684\u5bb9\u91cf</li> <li><code>copy()</code>\uff1a\u590d\u5236\u5207\u7247</li> <li><code>len()</code>\uff1a\u83b7\u53d6\u5b57\u7b26\u4e32\u3001\u6570\u7ec4\u3001\u5207\u7247\u3001map\u3001channel \u7684\u957f\u5ea6</li> <li><code>println()</code>\uff1a\u6253\u5370\u5230\u63a7\u5236\u53f0</li> </ul>"},{"location":"pl/go/function/#_4","title":"\u9ad8\u7ea7\u7528\u6cd5","text":"<p>\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\uff1a</p> <pre><code>func add(x, y int) int {\n    return x + y\n}\n\nfunc calc(x, y int, op func(int, int) int) int {\n    return op(x, y)\n}\n\n\nret := calc(1, 2, add)\nfmt.Println(ret)   // 3\n</code></pre> <p>\u51fd\u6570\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u8fd4\u56de\u503c\uff1a</p> <pre><code>func do(s string) (func(int, int) int, error) {\n    switch s {\n    case \"+\":\n        return add, nil\n    case \"-\":\n        return sub, nil\n    default:\n        err := errors.New(\"\u65e0\u6cd5\u8bc6\u522b\u7684\u64cd\u4f5c\u7b26\")\n        return nil, err\n    }\n}\n</code></pre>"},{"location":"pl/go/function/#_5","title":"\u533f\u540d\u51fd\u6570","text":"<p>\u533f\u540d\u51fd\u6570\u5c31\u662f\u6ca1\u6709\u51fd\u6570\u540d\u7684\u51fd\u6570\uff1a</p> <pre><code>func(parameter_list)(return_value_list){\n    //body\n}\n</code></pre> <p>\u56e0\u4e3a\u6ca1\u6709\u51fd\u6570\u540d\uff0c\u6240\u4ee5\u6ca1\u6cd5\u50cf\u666e\u901a\u51fd\u6570\u90a3\u6837\u8c03\u7528\uff0c\u6240\u4ee5\u533f\u540d\u51fd\u6570\u9700\u8981\u7acb\u523b\u4fdd\u5b58\u5230\u67d0\u4e2a\u53d8\u91cf\u4e2d\uff0c\u6216\u8005\u4f5c\u4e3a\u7acb\u5373\u6267\u884c\u7684\u51fd\u6570\uff1a</p> <pre><code>add := func(x, y int) int {\n    return x + y\n}\n\nadd(1, 2)   // 3\n</code></pre> <p>\u533f\u540d\u51fd\u6570\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6267\u884c\uff1a</p> <pre><code>func(x, y int){\n    fmt.Println(x + y)\n}(1, 2)\n</code></pre>"},{"location":"pl/go/function/#_6","title":"\u95ed\u5305","text":"<p>\u6240\u8c13\u95ed\u5305\u5c31\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u8bbf\u95ee\u5916\u90e8\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\uff1a</p> <pre><code>func calc(base int) (func(int) int, func(int) int){\n    add := func(i int) int{\n        base += i\n        return base\n    }\n\n    sub := func(i int) int{\n        base -= i\n        return base\n    }\n\n    return add, sub\n}\n\nfunc main(){\n    f1, f2 := calc(10)\n    fmt.Println(f1(1))   // 11\n    fmt.Println(f2(2))   // 8\n}\n</code></pre> <p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c<code>calc()</code>\u51fd\u6570\u8fd4\u56de\u4e24\u4e2a\u533f\u540d\u51fd\u6570\uff0c\u5206\u522b\u7528\u4e8e\u52a0\u548c\u51cf<code>base</code>\u53d8\u91cf\uff0c\u5f53\u6211\u4eec\u7528\u4e24\u4e2a\u53d8\u91cf\u53bb\u63a5\u6536\u8fd4\u56de\u503c\u65f6\uff0c\u53ef\u4ee5\u5b9e\u73b0\u4e0d\u540c\u7684\u884c\u4e3a\u3002\u8fd9\u5c31\u662f\u95ed\u5305\u7684\u9b45\u529b\u3002</p>"},{"location":"pl/go/function/#_7","title":"\u5ef6\u8fdf\u8c03\u7528","text":"<p><code>defer</code>\u5173\u952e\u5b57\u7528\u4e8e\u5ef6\u8fdf\u6267\u884c\u4e00\u4e9b\u4ee3\u7801\uff0c\u76f4\u5230\u5305\u542b<code>defer</code>\u8bed\u53e5\u7684\u51fd\u6570\u6267\u884c\u5b8c\u6bd5\uff0c\u8fd9\u5e38\u88ab\u7528\u4e8e\u91ca\u653e\u8d44\u6e90\u7b49\u64cd\u4f5c\uff1a</p> <pre><code>func main(){\n    file, err := os.Open(\"file.txt\")\n    if err!= nil {\n        log.Fatalln(err)\n    }\n    defer file.Close()\n    // do something with file\n}\n</code></pre> <p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u65e0\u8bba<code>main()</code>\u51fd\u6570\u662f\u5426\u6267\u884c\u6210\u529f\uff0c<code>file.Close()</code>\u90fd\u4f1a\u88ab\u8c03\u7528\uff0c\u4ee5\u786e\u4fdd\u6587\u4ef6\u88ab\u5173\u95ed\u3002</p> <p><code>defer</code>\u8bed\u53e5\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u6309\u7167\u6808\u7684\u987a\u5e8f\u6267\u884c\uff1a</p> <pre><code>defer func1()\ndefer func2()\ndefer func3()\n</code></pre> <p>\u5219\u6267\u884c\u987a\u5e8f\u4e3a\uff1a<code>func3()</code> -&gt; <code>func2()</code> -&gt; <code>func1()</code>\u3002</p>"},{"location":"pl/go/function/#_8","title":"\u5f02\u5e38\u5904\u7406","text":"<p>Go \u8bed\u8a00\u901a\u8fc7<code>panic()</code>\u629b\u51fa\u5f02\u5e38\uff0c\u7136\u540e\u5728<code>defer</code>\u4e2d\u901a\u8fc7<code>recover()</code>\u6355\u83b7\u5f02\u5e38\uff1a</p> <pre><code>func test(){\n    defer func(){\n        if err := recover(); err!= nil {\n            println(err.(string))\n        }\n    }()\n\n    panic(\"error\")\n}\n</code></pre>"},{"location":"pl/go/interface/","title":"\u63a5\u53e3","text":"<p>\u63a5\u53e3(interface)\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5bf9\u8c61\u7684\u884c\u4e3a\u89c4\u8303\uff0c\u5b83\u7684\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>type interfaceName interface {\n    method1(params) result1\n    method2(params) result2\n    ...\n}\n</code></pre> <p>\u5728 Go \u8bed\u8a00\u4e2d\uff0c\u63a5\u53e3\u53ea\u8d1f\u8d23\u5b9a\u4e49\u65b9\u6cd5\u7684\u7b7e\u540d\uff0c\u4f46\u4e0d\u5173\u5fc3\u5177\u4f53\u7684\u5b9e\u73b0\u3002\u6bd4\u5982\u5047\u8bbe\u6709\u4e00\u4e2a\u63a5\u53e3\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>type Shape interface {\n    Area() float64\n}\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u5706\u5f62\u7684\u7ed3\u6784\u4f53\uff0c\u5e76\u5b9e\u73b0<code>Area()</code>\u65b9\u6cd5\uff1a</p> <pre><code>type Circle struct {\n    radius float64\n}\n\nfunc (c Circle) Area() float64 {\n    return 3.14 * c.radius * c.radius\n}\n</code></pre> <p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a<code>Shape</code>\u63a5\u53e3\u7684\u53d8\u91cf\uff0c\u5e76\u5c06<code>Circle</code>\u7ed3\u6784\u4f53\u8d4b\u503c\u7ed9\u5b83\uff1a</p> <pre><code>var s Shape = Circle{radius: 5}\n</code></pre> <p>\u7136\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8c03\u7528<code>Area()</code>\u65b9\u6cd5\u6765\u83b7\u53d6\u5706\u7684\u9762\u79ef\uff1a</p> <pre><code>area := s.Area()\nfmt.Println(\"The area of the circle is\", area)\n</code></pre>"},{"location":"pl/go/interface/#error","title":"error\u63a5\u53e3","text":"<p>Go \u8bed\u8a00\u4e2d\u628a\u9519\u8bef\u5f53\u6210\u4e00\u79cd\u7279\u6b8a\u7684\u503c\u6765\u5904\u7406\uff0c\u7528<code>error</code>\u63a5\u53e3\u6765\u8868\u793a\uff1a</p> <pre><code>type error interface {\n    Error() string\n}\n</code></pre> <p><code>error</code>\u63a5\u53e3\u4e4b\u5b9a\u4e49\u4e86\u4e00\u4e2a<code>Error()</code>\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u9519\u8bef\u4fe1\u606f\u3002\u5f53\u4e00\u4e2a\u51fd\u6570\u6216\u65b9\u6cd5\u9700\u8981\u8fd4\u56de\u9519\u8bef\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u662f\u628a\u9519\u8bef\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u4f8b\u5982\u6807\u51c6\u5e93\u4e2d\u7684<code>Open()</code>\u51fd\u6570\uff1a</p> <pre><code>func Open(name string) (*File, error){\n    return OpenFile(name, O_RDONLY, 0)\n}\n</code></pre> <p>\u8fd4\u56de\u503c<code>error</code>\u662f\u4e00\u4e2a\u63a5\u53e3\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3a<code>nil</code>\u3002\u6240\u4ee5\u6211\u4eec\u901a\u5e38\u5c06\u8c03\u7528\u51fd\u6570\u8fd4\u56de\u7684\u9519\u8bef\u4e0e<code>nil</code>\u8fdb\u884c\u6bd4\u8f83\uff0c\u6765\u5224\u65ad\u662f\u5426\u6709\u9519\u8bef\u53d1\u751f\uff1a</p> <pre><code>file, err := Open(\"test.txt\")\nif err!= nil {\n    fmt.Println(\"\u6253\u5f00\u6587\u4ef6\u5931\u8d25\uff0cError:\", err)\n} else {\n    // do something with file\n}\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u81ea\u5b9a\u4e49<code>error</code>\uff1a</p> <pre><code>type MyError struct {\n    message string\n}\n\nfunc (e MyError) Error() string {\n    return e.message\n}\n</code></pre> <p>\u7136\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a<code>MyError</code>\u7c7b\u578b\u7684\u9519\u8bef\uff1a</p> <pre><code>func myFunc() error {\n    return MyError{message: \"something went wrong\"}\n}\n</code></pre> <p>\u8fd9\u6837\uff0c\u8c03\u7528\u8005\u5c31\u53ef\u4ee5\u901a\u8fc7<code>error</code>\u63a5\u53e3\u6765\u5904\u7406\u9519\u8bef\uff1a</p> <pre><code>if err := myFunc(); err != nil {\n    fmt.Println(err.Error())\n}\n</code></pre>"},{"location":"pl/go/interface/#_2","title":"\u7a7a\u63a5\u53e3","text":"<p>\u7a7a\u63a5\u53e3\u662f\u6307\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u65b9\u6cd5\u7684\u63a5\u53e3\u7c7b\u578b\u3002\u56e0\u6b64\u4efb\u4f55\u7c7b\u578b\u90fd\u53ef\u4ee5\u89c6\u4e3a\u5b9e\u73b0\u4e86\u7a7a\u63a5\u53e3\u3002\u4e5f\u6b63\u662f\u56e0\u4e3a\u7a7a\u63a5\u53e3\u7c7b\u578b\u7684\u8fd9\u4e2a\u7279\u6027\uff0c\u7a7a\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u4ee5\u5b58\u50a8\u4efb\u610f\u7c7b\u578b\u7684\u503c\u3002</p> <p>\u4f7f\u7528\u7a7a\u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0\u63a5\u6536\u4efb\u610f\u7c7b\u578b\u7684\u51fd\u6570\u53c2\u6570\uff1a</p> <pre><code>func printValue(v interface{}) {\n    fmt.Println(v)\n}\n\nprintValue(123)\nprintValue(\"hello\")\nprintValue(true)\n</code></pre> <p>\u65e2\u7136\u7a7a\u63a5\u53e3\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u7c7b\u578b\u7684\u503c\uff0c\u90a3\u4e48\u6211\u4eec\u5982\u4f55\u5224\u65ad\u5177\u4f53\u4f20\u5165\u7684\u503c\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u65ad\u8a00\u6765\u8fdb\u884c\u5224\u65ad\uff1a</p> <pre><code>func printValue(v interfaceP{}){\n    a, ok := v.(int)\n    if ok {\n        fmt.Println(\"int value:\", a)\n    }else {\n        fmt.Println(\"not an int value\")\n    }\n}\n</code></pre>"},{"location":"pl/go/interface/#_3","title":"\u7ec4\u5408\u63a5\u53e3","text":"<p>\u63a5\u53e3\u7684\u7ec4\u5408\u662f\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u63a5\u53e3\uff0c\u7136\u540e\u5185\u5d4c\u5176\u4ed6\u63a5\u53e3\u6765\u5b9e\u73b0\u7684\u3002\u8fd9\u79cd\u673a\u5236\u5177\u6709\u5f3a\u5927\u7684\u7075\u6d3b\u6027\uff0c\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u63a5\u53e3\u7c7b\u578b\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u6240\u6709\u65b9\u6cd5\uff1a</p> <pre><code>package main\n\nimport \"fmt\"\n\n// \u5b9a\u4e49\u4e00\u4e2aWriter\u63a5\u53e3\ntype Writer interface {\n    Write([]byte) (int, error)\n}\n\n// \u5b9a\u4e49\u4e00\u4e2aCloser\u63a5\u53e3\ntype Closer interface {\n    Close() error\n}\n\n// \u5b9a\u4e49\u4e00\u4e2aReadWriteCloser\u63a5\u53e3\uff0c\u5b83\u7ec4\u5408\u4e86Writer\u548cCloser\u63a5\u53e3\ntype ReadWriteCloser interface {\n    Writer\n    Closer\n    // \u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u6dfb\u52a0\u66f4\u591a\u65b9\u6cd5\n}\n\n// \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5b9e\u73b0\u4e86Writer\u548cCloser\u63a5\u53e3\u7684\u7ed3\u6784\u4f53\ntype MyFile struct{}\n\nfunc (f *MyFile) Write(data []byte) (int, error) {\n    fmt.Println(\"Writing data\")\n    return len(data), nil\n}\n\nfunc (f *MyFile) Close() error {\n    fmt.Println(\"Closing file\")\n    return nil\n}\n\nfunc main() {\n    var rwc ReadWriteCloser\n    myFile := &amp;MyFile{}\n\n    // \u56e0\u4e3aMyFile\u5b9e\u73b0\u4e86Writer\u548cCloser\u63a5\u53e3\uff0c\u6240\u4ee5\u5b83\u53ef\u4ee5\u88ab\u8d4b\u503c\u7ed9ReadWriteCloser\u7c7b\u578b\u7684\u53d8\u91cf\n    rwc = myFile\n\n    // \u4f7f\u7528ReadWriteCloser\u63a5\u53e3\n    rwc.Write([]byte(\"Hello, Go!\"))\n    rwc.Close()\n}\n</code></pre>"},{"location":"pl/go/intro/","title":"\u5feb\u901f\u5165\u95e8","text":"<p>Go \u8bed\u8a00\u7248\u7684\"Hello World\"\u7a0b\u5e8f\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main(){\n    fmt.Println(\"Hello, World!\")\n}\n</code></pre> <p>\u4f7f\u7528<code>go run</code>\u6267\u884c .go \u7a0b\u5e8f\uff0c\u4f7f\u7528<code>go build</code>\u7f16\u8bd1 .go \u7a0b\u5e8f\u3002</p>"},{"location":"pl/go/intro/#_2","title":"\u7279\u6027","text":"<p>\u8bb8\u591a\u80fd\u591f\u5728\u5927\u591a\u6570\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u4e2d\u4f7f\u7528\u7684\u7279\u6027 Go \u8bed\u8a00\u90fd\u6ca1\u6709\u652f\u6301\uff0c\u4f46\u5176\u4e2d\u7684\u4e00\u90e8\u5206\u53ef\u80fd\u4f1a\u5728\u672a\u6765\u88ab\u652f\u6301\u3002</p> <ul> <li>\u4e3a\u4e86\u7b80\u5316\u8bbe\u8ba1\uff0c\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u548c\u64cd\u4f5c\u7b26\u91cd\u8f7d</li> <li>\u4e3a\u4e86\u907f\u514d\u5728 C/C++ \u5f00\u53d1\u4e2d\u7684\u4e00\u4e9b Bug \u548c\u6df7\u4e71\uff0c\u4e0d\u652f\u6301\u9690\u5f0f\u8f6c\u6362</li> <li>Go \u8bed\u8a00\u901a\u8fc7\u53e6\u4e00\u79cd\u9014\u5f84\u5b9e\u73b0\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u6765\u653e\u5f03\u7c7b\u548c\u7c7b\u578b\u7684\u7ee7\u627f</li> <li>\u5c3d\u7ba1\u5728\u63a5\u53e3\u7684\u4f7f\u7528\u65b9\u9762\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u4f3c\u53d8\u4f53\u7c7b\u578b\u7684\u529f\u80fd\uff0c\u4f46\u672c\u8eab\u4e0d\u652f\u6301\u53d8\u4f53\u7c7b\u578b</li> <li>\u4e0d\u652f\u6301\u52a8\u6001\u52a0\u8f7d\u4ee3\u7801</li> <li>\u4e0d\u652f\u6301\u52a8\u6001\u94fe\u63a5\u5e93</li> <li>\u4e0d\u652f\u6301\u6cdb\u578b</li> <li>\u901a\u8fc7 <code>recover()</code> \u548c <code>panic()</code> \u6765\u66ff\u4ee3\u5f02\u5e38\u673a\u5236</li> <li>\u4e0d\u652f\u6301\u9759\u6001\u53d8\u91cf</li> </ul>"},{"location":"pl/go/intro/#_3","title":"\u73af\u5883\u53d8\u91cf","text":"<p>\u4f7f\u7528<code>go env</code>\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b Go \u8bed\u8a00\u7684\u73af\u5883\u53d8\u91cf\uff0c\u5176\u4e2d\u5e38\u7528\u7684\u6709\uff1a</p> <ul> <li>GOARCH\uff1a\u76ee\u6807\u7cfb\u7edf\u7684\u4f53\u7cfb\u7ed3\u6784</li> <li>GOPATH\uff1aGo \u5de5\u4f5c\u76ee\u5f55</li> <li>GOPROXY\uff1aGo \u5b89\u88c5\u6a21\u5757\u7684\u8def\u5f84</li> <li>GOOS\uff1a\u76ee\u6807\u7cfb\u7edf\u7684\u67b6\u6784(\u7528\u4e8e\u4ea4\u53c9\u7f16\u8bd1)</li> </ul> <p>\u7531\u4e8e\u7f51\u7edc\u539f\u56e0\uff0c\u4e3a\u4e86\u6b63\u786e\u5b89\u88c5\u6a21\u5757\uff0c\u4e00\u822c\u4f1a\u4f7f\u7528<code>go env -w GOPROXY=https://goproxy.cn,direct</code>\u547d\u4ee4\u8bbe\u7f6e\u4ee3\u7406\u3002</p>"},{"location":"pl/go/intro/#_4","title":"\u547d\u4ee4\u884c\u5de5\u5177","text":"<p>Go \u8bed\u8a00\u7684\u547d\u4ee4\u884c\u5de5\u5177\u6709\uff1a</p> <pre><code>$ go\nGo is a tool for managing Go source code.\n\nUsage:\n\n        go &lt;command&gt; [arguments]\n\nThe commands are:\n\n        bug         start a bug report\n        build       compile packages and dependencies\n        clean       remove object files and cached files\n        doc         show documentation for package or symbol\n        env         print Go environment information\n        fix         update packages to use new APIs\n        fmt         gofmt (reformat) package sources\n        generate    generate Go files by processing source\n        get         add dependencies to current module and install them\n        install     compile and install packages and dependencies\n        list        list packages or modules\n        mod         module maintenance\n        work        workspace maintenance\n        run         compile and run Go program\n        test        test packages\n        tool        run specified go tool\n        version     print Go version\n        vet         report likely mistakes in packages\n\nUse \"go help &lt;command&gt;\" for more information about a command.\n\nAdditional help topics:\n\n        buildconstraint build constraints\n        buildmode       build modes\n        c               calling between Go and C\n        cache           build and test caching\n        environment     environment variables\n        filetype        file types\n        go.mod          the go.mod file\n        gopath          GOPATH environment variable\n        goproxy         module proxy protocol\n        importpath      import path syntax\n        modules         modules, module versions, and more\n        module-auth     module authentication using go.sum\n        packages        package lists and patterns\n        private         configuration for downloading non-public code\n        testflag        testing flags\n        testfunc        testing functions\n        vcs             controlling version control with GOVCS\n\nUse \"go help &lt;topic&gt;\" for more information about that topic.\n</code></pre>"},{"location":"pl/go/intro/#_5","title":"\u5e38\u91cf","text":"<p>\u5e38\u91cf\u7528<code>const</code>\u8868\u793a\uff0c\u5b83\u7684\u503c\u5fc5\u987b\u5728\u7f16\u8bd1\u671f\u88ab\u786e\u5b9a\u3002</p> <p>\u5728 Go \u8bed\u8a00\u4e2d\uff0c\u4f60\u53ef\u4ee5\u7701\u7565\u7c7b\u578b\u8bf4\u660e\u7b26 [type]\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u53ef\u4ee5\u6839\u636e\u53d8\u91cf\u7684\u503c\u6765\u63a8\u65ad\u5176\u7c7b\u578b\uff1a</p> <ul> <li>\u663e\u5f0f\u7c7b\u578b\u5b9a\u4e49\uff1a <code>const b string = \"abc\"</code></li> <li>\u9690\u5f0f\u7c7b\u578b\u5b9a\u4e49\uff1a <code>const b = \"abc\"</code></li> </ul> <p><code>const</code>\u53ef\u4ee5\u7528\u6765\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\uff1a</p> <pre><code>const (\n    BEIJING     // 0\n    SHANGHAI    // 1\n    SHENZHEN    // 2\n)\n</code></pre> <p>\u5728<code>const()</code>\u4e2d\u58f0\u660e<code>iota</code>\uff0c\u5b83\u9ed8\u8ba4\u5f00\u59cb\u503c\u4e3a0\uff0cconst \u4e2d\u6bcf\u65b0\u589e\u4e00\u884c\u5e38\u91cf\u58f0\u660e\u5c06\u4f7f<code>iota</code>\u8ba1\u6570\u4e00\u6b21\uff0c\u5982\u4e0b\uff1a</p> <pre><code>const (\n    i = iota + 1    // iota = 0\uff0c i = 1\n    j = iota + 2    // iota = 1\uff0c j = 2\n    k = iota * 2    // iota = 2\uff0c k = 4\n)\n</code></pre>"},{"location":"pl/go/intro/#_6","title":"\u6570\u636e\u7c7b\u578b","text":"<p>Go \u8bed\u8a00\u652f\u6301\u4ee5\u4e0b\u6570\u636e\u7c7b\u578b\uff1a</p> <ul> <li>bool</li> <li>int</li> <li>float</li> <li>complex</li> <li>string</li> <li>rune (Unicode \u7801\u70b9)</li> <li>byte (uint8 \u7684\u522b\u540d)</li> <li>pointer</li> <li>array</li> <li>slice</li> <li>struct</li> <li>map</li> <li>function</li> <li>interface</li> <li>channel</li> </ul> <p>\u6ce8\u610f\uff1a\u57fa\u672c\u7c7b\u578b\u548c\u6570\u7ec4\u5c5e\u4e8e\u503c\u4f20\u9012\uff0cmap\u3001slice\u3001interface\u3001channel \u5c5e\u4e8e\u5f15\u7528\u4f20\u9012\u3002</p>"},{"location":"pl/go/intro/#_7","title":"\u6570\u7ec4\u4e0e\u5207\u7247","text":"<p>Go \u8bed\u8a00\u4e2d\u6570\u7ec4\u5927\u5c0f\u662f\u786e\u5b9a\u7684\uff0c\u7528\u4ee5\u4e0b\u65b9\u5f0f\u6765\u58f0\u660e\uff1a</p> <pre><code>var arrayName [size]dataType\n</code></pre> <p>\u521d\u59cb\u5316\uff1a</p> <pre><code>var numbers = [3]int{1, 2, 3}\n</code></pre> <p>\u5207\u7247\u4e3a\u52a8\u6001\u6570\u7ec4\uff0c\u5f15\u7528\u7c7b\u578b\uff0c\u5b83\u53ef\u4ee5\u4ece\u6570\u7ec4\u4e2d\u751f\u6210\uff1a</p> <pre><code>a := [5]int{1, 2, 3, 4, 5}\ns := a[1:4]\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u52a8\u6001\u521b\u5efa\uff1a</p> <pre><code>slice := make([]dataType, len, cap)\n</code></pre> <p><code>len()</code>\u51fd\u6570\u83b7\u53d6\u5207\u7247\u7684\u957f\u5ea6\uff0c<code>cap()</code>\u51fd\u6570\u83b7\u53d6\u5207\u7247\u7684\u5bb9\u91cf\u3002</p>"},{"location":"pl/go/intro/#_8","title":"\u5b57\u5178","text":"<p>\u5b57\u5178\u7c7b\u578b\u662f\u65e0\u5e8f\u7684\u952e\u503c\u5bf9\u96c6\u5408\uff0c\u7528\u4ee5\u4e0b\u65b9\u5f0f\u58f0\u660e\uff1a</p> <pre><code>dictName := make(map[keyType]valueType)\n</code></pre> <p>\u5224\u65ad\u67d0\u4e2a\u952e\u662f\u5426\u5b58\u5728\uff1a</p> <pre><code>value, ok := dictName[key]\n\nif ok{\n    // \u952e\u5b58\u5728\n}else{\n    // \u952e\u4e0d\u5b58\u5728\n}\n</code></pre> <p>\u904d\u5386\uff1a</p> <pre><code>for key, value := range dictName{\n    // \u904d\u5386\u5b57\u5178\n}\n</code></pre> <p>\u5220\u9664\u952e\u503c\u5bf9\uff1a</p> <pre><code>delete(dictName, key)\n</code></pre>"},{"location":"pl/go/intro/#_9","title":"\u7ed3\u6784\u4f53","text":"<p>Go \u8bed\u8a00\u4f7f\u7528<code>type</code>\u5173\u952e\u5b57\u6765\u5b9a\u4e49\u7ed3\u6784\u4f53\uff1a</p> <pre><code>type structName struct {\n    filed1 dataType1\n    filed2 dataType2\n   ...\n}\n</code></pre> <p>\u7ed3\u6784\u4f53\u4e2d\u5b57\u6bb5\u5927\u5199\u5f00\u5934\u8868\u793a\u53ef\u516c\u5f00\u8bbf\u95ee\uff0c\u5c0f\u5199\u8868\u793a\u79c1\u6709\uff08\u4ec5\u5728\u5b9a\u4e49\u5f53\u524d\u7ed3\u6784\u4f53\u7684\u5305\u4e2d\u53ef\u8bbf\u95ee\uff09\u3002\u7ed3\u6784\u4f53\u521d\u59cb\u5316\u53ef\u4ee5\u91c7\u7528\u952e\u503c\u5bf9\u521d\u59cb\u5316\u3001\u5217\u8868\u521d\u59cb\u5316\u3002</p> <p>Go \u8bed\u8a00\u4e2d\uff0c\u5728\u7ed3\u6784\u4f53\u4e2d\u5d4c\u5957\u53e6\u4e00\u4e2a\u7ed3\u6784\u4f53\u53ef\u4ee5\u76f4\u63a5\u5b9e\u73b0\u7ee7\u627f\u3002\u5982\u679c\u8be5\u7ed3\u6784\u4f53\u4e0e\u5d4c\u5957\u7ed3\u6784\u4f53\u7684\u65b9\u6cd5\u91cd\u540d\uff0c\u5219\u4f1a\u8986\u76d6\u5d4c\u5957\u7ed3\u6784\u4f53\u7684\u65b9\u6cd5\uff1a</p> <pre><code>type Animal struct {\n    Name string\n}\n\nfunc (a *Animal) Speak() {\n    println(a.Name, \"says meow!\")\n}\n\nfunc (a *Animal) Move() {\n    println(a.Name, \"is running!\")\n}\n\ntype Dog struct {\n    Animal\n}\n\nfunc (d *Dog) Speak() {\n    println(d.Name, \"says woof!\")\n}\n\nfunc main() {\n    a := Animal{Name: \"Bob\"}\n    d := Dog{Animal: a}\n    d.Move()    // \u8f93\u51fa: Bob is running!\n    d.Speak()   // \u8f93\u51fa: Bob says woof!\n}\n</code></pre> <p>\u4f46\u662f\uff0c\u5982\u679c\u5904\u4e8e\u540c\u4e00\u5c42\u7ea7\u7684\u591a\u4e2a\u5d4c\u5165\u5b57\u6bb5\u62e5\u6709\u540c\u540d\u7684\u5b57\u6bb5\u6216\u65b9\u6cd5\uff0c\u5219\u4f1a\u89e6\u53d1\u4e00\u4e2a\u7f16\u8bd1\u9519\u8bef\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u65e0\u6cd5\u786e\u5b9a\u5e94\u8be5\u9009\u62e9\u54ea\u4e2a\u6210\u5458\u3002</p> <p>Go \u8bed\u8a00\u53ef\u4ee5\u5bf9\u7ed3\u6784\u4f53\u6253\u6807\u7b7e(tag)\uff0c\u4f7f\u5f97\u7ed3\u6784\u4f53\u53ef\u4ee5\u88ab\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002</p> <pre><code>type Person struct {\n    Name string `json:\"name\" xml:\"name\"`\n    Age  int    `json:\"age\" xml:\"age\"`\n    City string `json:\"city\" xml:\"city\"`\n}\n</code></pre> <p>\u4f7f\u7528\u7ed3\u6784\u4f53\u6807\u7b7e\u8fdb\u884c\u7f16\u7801\uff1a</p> <pre><code>import (\n    \"encoding/json\"\n    \"fmt\"\n)\n\np := Person{Name: \"Alice\", Age: 30, City: \"New York\"}\n\n// \u5c06\u7ed3\u6784\u4f53\u7f16\u7801\u4e3aJSON\ndata, err := json.Marshal(p)\nif err != nil {\n    fmt.Println(\"Error encoding JSON:\", err)\n    return\n}\n\nfmt.Println(string(data)) // \u8f93\u51fa: {\"name\":\"Alice\",\"age\":30,\"city\":\"New York\"}\n</code></pre> <p>\u4f7f\u7528\u7ed3\u6784\u4f53\u6807\u7b7e\u8fdb\u884c\u89e3\u7801\uff1a</p> <pre><code>import (\n    \"encoding/json\"\n    \"fmt\"\n)\n\njsonStr := `{\"name\":\"Bob\",\"age\":25,\"city\":\"Los Angeles\"}`\n\nvar p Person\nerr := json.Unmarshal([]byte(jsonStr), &amp;p)\nif err != nil {\n    fmt.Println(\"Error decoding JSON:\", err)\n    return\n}\n\nfmt.Println(p) // \u8f93\u51fa: {Bob 25 Los Angeles}\n</code></pre>"},{"location":"pl/go/intro/#_10","title":"\u65b9\u6cd5\u548c\u63a5\u6536\u8005","text":"<p>Go \u8bed\u8a00\u4e2d\u7684\u65b9\u6cd5\u662f\u4e00\u79cd\u4f5c\u7528\u4e8e\u7279\u5b9a\u7c7b\u578b\u53d8\u91cf\u7684\u51fd\u6570\uff0c\u8fd9\u79cd\u53d8\u91cf\u53eb\u505a\u63a5\u6536\u8005\uff1a</p> <pre><code>func (receiverVar dataType) funcName(parameterList) (returnList){\n    // \u51fd\u6570\u4f53\n}\n</code></pre> <p>\u4e3e\u4f8b\u8bf4\u660e\uff1a</p> <pre><code>type Person struct {\n    name string\n    age int\n}\n\nfunc(p Person) sayHello(){\n    fmt.Println(\"Hello, my name is\", p.name)\n}\n</code></pre> <p>\u53ef\u4ee5\u4f7f\u7528\u6307\u9488\u7c7b\u578b\u7684\u63a5\u6536\u8005\u6765\u4fee\u6539\u7ed3\u6784\u4f53\u53d8\u91cf\uff1a</p> <pre><code>func (p *Person) setAge(age int){\n    p.age = age\n}\n</code></pre>"},{"location":"pl/go/intro/#_11","title":"\u7c7b\u578b\u8f6c\u6362","text":"<p>GO \u8bed\u8a00\u4e0d\u5b58\u5728\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u6240\u6709\u7684\u8f6c\u6362\u90fd\u5fc5\u987b\u663e\u5f0f\u8bf4\u660e\uff0c\u6bd4\u5982\uff1a</p> <pre><code>a := 5.0\nb := int(a)\n</code></pre> <p>\u4f46\u8fd9\u53ea\u80fd\u5728\u5b9a\u4e49\u6b63\u786e\u7684\u60c5\u51b5\u4e0b\u8f6c\u6362\u6210\u529f\uff0c\u4f8b\u5982\u4ece\u4e00\u4e2a\u53d6\u503c\u8303\u56f4\u8f83\u5c0f\u7684\u7c7b\u578b\u8f6c\u6362\u5230\u4e00\u4e2a\u53d6\u503c\u8303\u56f4\u8f83\u5927\u7684\u7c7b\u578b\u3002\u5f53\u7f16\u8bd1\u5668\u6355\u6349\u5230\u975e\u6cd5\u7684\u7c7b\u578b\u8f6c\u6362\u65f6\u4f1a\u5f15\u53d1\u7f16\u8bd1\u65f6\u9519\u8bef\uff0c\u5426\u5219\u5c06\u5f15\u53d1\u8fd0\u884c\u65f6\u9519\u8bef\u3002</p>"},{"location":"pl/go/intro/#_12","title":"\u6d41\u7a0b\u63a7\u5236","text":"<p>Go \u8bed\u8a00\u4e2d\u7684\u6d41\u7a0b\u63a7\u5236\u8bed\u53e5\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u6761\u4ef6\u8bed\u53e5</p> <ul> <li>if\uff1a\u57fa\u672c\u7684\u6761\u4ef6\u5224\u65ad\u8bed\u53e5</li> <li>switch\uff1a\u591a\u6761\u4ef6\u5224\u65ad\u8bed\u53e5\uff0cGo \u8bed\u8a00\u4e2d\u7684 switch \u4e0d\u9700\u8981\u663e\u793a\u6dfb\u52a0 break\uff0c\u6bcf\u4e2a case \u9ed8\u8ba4\u81ea\u5e26 break\u3002 <pre><code>if condition {\n\n} else if condition {\n\n} else {\n\n}\n\nswtich variable {\n    case value1:\n\n    case value2:\n\n    default:\n}\n</code></pre></li> </ul> </li> <li> <p>\u5faa\u73af\u8bed\u53e5</p> <ul> <li>for\uff1a\u552f\u4e00\u7684\u5faa\u73af\u8bed\u53e5</li> </ul> <pre><code>for init; condition; post{\n\n}\n</code></pre> </li> <li> <p>\u9009\u62e9\u8bed\u53e5</p> <ul> <li>select\uff1a\u7528\u4e8e\u5904\u7406\u901a\u9053</li> </ul> <pre><code>select {\n    case &lt;-chan1:\n        // \u4ecechan1\u63a5\u6536\u6570\u636e\n    case chan2 &lt;- data:\n        // \u5411chan2\u53d1\u9001\u6570\u636e\n    default:\n        // \u5982\u679c\u6ca1\u6709\u4efb\u4f55case\u53ef\u4ee5\u5904\u7406\uff0c\u5219\u6267\u884cdefault\u8bed\u53e5\n}\n</code></pre> </li> </ol>"},{"location":"pl/go/package/","title":"\u5305\u7ba1\u7406","text":"<p>Go \u8bed\u8a00\u4e2d\u4f7f\u7528\u5305\u6765\u652f\u6301\u4ee3\u7801\u6a21\u5757\u5316\u548c\u4ee3\u7801\u590d\u7528\uff0c\u4e00\u4e2a\u5305\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a Go \u6e90\u7801\u6587\u4ef6\u7ec4\u6210\u7684\u3002\u5b9a\u4e49\u5305\u53ef\u4ee5\u7528<code>package package_name</code>\u8bed\u53e5\uff0c\u4e00\u4e2a\u5305\u53ef\u4ee5\u7b80\u5355\u5730\u7406\u89e3\u4e3a\u4e00\u4e2a\u5b58\u653e .go \u6587\u4ef6\u7684\u6587\u4ef6\u5939\uff0c\u8be5\u6587\u4ef6\u5939\u4e0b\u6240\u6709\u7684 .go \u6587\u4ef6\u90fd\u89c6\u4e3a\u8be5\u5305\u7684\u4e00\u90e8\u5206\u3002<code>main</code>\u5305\u63d0\u4f9b\u4e86\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\uff0c\u8be5\u5305\u7f16\u8bd1\u540e\u4f1a\u5f97\u5230\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> <p>\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u662f\u4e00\u4e2a\u5305\uff0c\u5fc5\u987b\u5728\u6e90\u6587\u4ef6\u4e2d\u975e\u6ce8\u91ca\u7684\u7b2c\u4e00\u884c\u6307\u660e\u8fd9\u4e2a\u6587\u4ef6\u5c5e\u4e8e\u54ea\u4e2a\u5305\uff0c\u5982\uff1a<code>package main</code>\u3002<code>package main</code> \u8868\u793a\u4e00\u4e2a\u53ef\u72ec\u7acb\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u6bcf\u4e2a Go \u5e94\u7528\u7a0b\u5e8f\u90fd\u5305\u542b\u4e00\u4e2a\u540d\u4e3a<code>main</code>\u7684\u5305\u3002</p> <p>\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7684\u5305\uff0c\u800c\u4e14\u5373\u4f7f\u4f60\u53ea\u4f7f\u7528<code>main</code>\u5305\u4e5f\u4e0d\u5fc5\u628a\u6240\u6709\u7684\u4ee3\u7801\u90fd\u5199\u5728\u4e00\u4e2a\u5de8\u5927\u7684\u6587\u4ef6\u91cc\uff1a\u4f60\u53ef\u4ee5\u7528\u4e00\u4e9b\u8f83\u5c0f\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u5728\u6bcf\u4e2a\u6587\u4ef6\u975e\u6ce8\u91ca\u7684\u7b2c\u4e00\u884c\u90fd\u4f7f\u7528<code>package main</code>\u6765\u6307\u660e\u8fd9\u4e9b\u6587\u4ef6\u90fd\u5c5e\u4e8e<code>main</code>\u5305\u3002</p> <p>\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5305\u7684\u6e90\u6587\u4ef6\u5fc5\u987b\u5168\u90e8\u88ab\u4e00\u8d77\u7f16\u8bd1\uff0c\u4e00\u4e2a\u5305\u5373\u662f\u7f16\u8bd1\u65f6\u7684\u4e00\u4e2a\u5355\u5143\uff0c\u56e0\u6b64\u6839\u636e\u60ef\u4f8b\uff0c\u6bcf\u4e2a\u76ee\u5f55\u90fd\u53ea\u5305\u542b\u4e00\u4e2a\u5305\u3002</p> <p>\u5982\u679c\u5bf9\u4e00\u4e2a\u5305\u8fdb\u884c\u66f4\u6539\u6216\u91cd\u65b0\u7f16\u8bd1\uff0c\u6240\u6709\u5f15\u7528\u4e86\u8fd9\u4e2a\u5305\u7684\u5ba2\u6237\u7aef\u7a0b\u5e8f\u90fd\u5fc5\u987b\u5168\u90e8\u91cd\u65b0\u7f16\u8bd1\u3002</p> <p>GO \u7a0b\u5e8f\u7684\u6267\u884c\uff08\u7a0b\u5e8f\u542f\u52a8\uff09\u987a\u5e8f\u5982\u4e0b\uff1a</p> <ul> <li>\u6309\u987a\u5e8f\u5bfc\u5165\u6240\u6709\u88ab<code>main</code>\u5305\u5f15\u7528\u7684\u5176\u5b83\u5305\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u5305\u4e2d\u6267\u884c\u5982\u4e0b\u6d41\u7a0b\uff1a</li> <li>\u5982\u679c\u8be5\u5305\u53c8\u5bfc\u5165\u4e86\u5176\u5b83\u7684\u5305\uff0c\u5219\u4ece\u7b2c\u4e00\u6b65\u5f00\u59cb\u9012\u5f52\u6267\u884c\uff0c\u4f46\u662f\u6bcf\u4e2a\u5305\u53ea\u4f1a\u88ab\u5bfc\u5165\u4e00\u6b21\u3002</li> <li>\u7136\u540e\u4ee5\u76f8\u53cd\u7684\u987a\u5e8f\u5728\u6bcf\u4e2a\u5305\u4e2d\u521d\u59cb\u5316\u5e38\u91cf\u548c\u53d8\u91cf\uff0c\u5982\u679c\u8be5\u5305\u542b\u6709<code>init()</code>\u51fd\u6570\u7684\u8bdd\uff0c\u5219\u8c03\u7528\u8be5\u51fd\u6570\u3002</li> <li>\u5728\u5b8c\u6210\u8fd9\u4e00\u5207\u4e4b\u540e\uff0c<code>main</code>\u4e5f\u6267\u884c\u540c\u6837\u7684\u8fc7\u7a0b\uff0c\u6700\u540e\u8c03\u7528<code>main()</code>\u51fd\u6570\u5f00\u59cb\u6267\u884c\u7a0b\u5e8f\u3002</li> </ul> <p></p>"},{"location":"pl/go/package/#module","title":"module","text":"<p><code>go module</code>\u662f Go \u8bed\u8a00\u7684\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0c\u8981\u542f\u7528\u5b83\u9996\u5148\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf GO111MODULE\uff1a</p> <ul> <li>GO111MODULE=off\uff1a\u7981\u7528\u6a21\u5757\u652f\u6301\uff0c\u7f16\u8bd1\u65f6\u4f1a\u4ece GOPATH \u548c vendor \u76ee\u5f55\u67e5\u627e\u4f9d\u8d56\u5305\u3002</li> <li>GO111MODULE=on\uff1a\u542f\u7528\u6a21\u5757\u652f\u6301\uff0c\u7f16\u8bd1\u65f6\u4f1a\u5ffd\u7565 GOPATH \u548c vendor \u76ee\u5f55\uff0c\u53ea\u6839\u636e go.mod \u6587\u4ef6\u67e5\u627e\u4f9d\u8d56\u5305\u3002</li> <li>GO111MODULE=auto\uff1a\u5f53\u9879\u76ee\u5728 GOPATH/src \u5916\u5207\u9879\u76ee\u6839\u76ee\u5f55\u6709 go.mod \u6587\u4ef6\u65f6\u542f\u7528\u6a21\u5757\u652f\u6301</li> </ul> <p><code>go mod</code>\u547d\u4ee4\u7528\u4e8e\u7ba1\u7406\u5305\uff0c\u5728\u4f7f\u7528\u524d\u5148\u7528<code>go mod init</code>\u547d\u4ee4\u521d\u59cb\u5316\u9879\u76ee\u3002\u5176\u4e2d Go \u4fdd\u7559\u4e86\u4e24\u4e2a\u7279\u6b8a\u7684 module \u540d\uff1a</p> <ul> <li>test\uff1a\u7528\u4e8e\u6d4b\u8bd5\u4ee3\u7801</li> <li>example\uff1a\u4e00\u4e9b\u5305\u4f1a\u4f7f\u7528\u8be5\u540d\u79f0\u4f5c\u4e3a\u6559\u5b66\u6216\u793a\u4f8b\u4ee3\u7801</li> </ul> <pre><code>go mod download    \u4e0b\u8f7d\u4f9d\u8d56\u7684module\u5230\u672c\u5730cache\uff08\u9ed8\u8ba4\u4e3a$GOPATH/pkg/mod\u76ee\u5f55\uff09\ngo mod edit        \u7f16\u8f91go.mod\u6587\u4ef6\ngo mod graph       \u6253\u5370\u6a21\u5757\u4f9d\u8d56\u56fe\ngo mod init        \u521d\u59cb\u5316\u5f53\u524d\u6587\u4ef6\u5939, \u521b\u5efago.mod\u6587\u4ef6\ngo mod tidy        \u66f4\u65b0\u5f53\u524d\u6a21\u5757\u7684\u4f9d\u8d56\ngo mod vendor      \u5c06\u4f9d\u8d56\u590d\u5236\u5230vendor\u4e0b\ngo mod verify      \u6821\u9a8c\u4f9d\u8d56\ngo mod why         \u89e3\u91ca\u4e3a\u4ec0\u4e48\u9700\u8981\u4f9d\u8d56\n</code></pre>"},{"location":"pl/go/package/#goproxy","title":"GOPROXY","text":"<p>GOPROXY \u7528\u4e8e\u8bbe\u7f6e Go \u6a21\u5757\u4ee3\u7406\uff0c\u4f7f\u5f97\u62c9\u53d6\u6a21\u5757\u65f6\u53ef\u4ee5\u901a\u8fc7\u955c\u50cf\u7ad9\u70b9\u7684\u65b9\u5f0f\uff1a</p> <pre><code>go env -w GOPROXY=https://goproxy.cn,direct\n</code></pre> <p>\u591a\u4e2a\u4ee3\u7406\u5730\u5740\u7528\u9017\u53f7\u9694\u5f00\uff0c<code>direct</code>\u6307\u793a Go \u56de\u5230\u6e90\u5730\u5740\u53bb\u6293\u53d6\u3002</p>"},{"location":"pl/go/package/#goprivate","title":"GOPRIVATE","text":"<p>\u8bbe\u7f6e\u4e86 GOPROXY \u4e4b\u540e\uff0cgo \u547d\u4ee4\u5c31\u4f1a\u4ece\u914d\u7f6e\u7684\u4ee3\u7406\u5730\u5740\u62c9\u53d6\u548c\u6821\u9a8c\u4f9d\u8d56\u5305\u3002\u7136\u800c\u5f53\u6211\u4eec\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u4e86\u975e\u516c\u5f00\u7684\u5305\uff08\u516c\u53f8\u5185\u90e8 git \u4ed3\u5e93\u6216 github \u79c1\u6709\u4ed3\u5e93\u7b49\uff09\uff0c\u6b64\u65f6\u4fbf\u65e0\u6cd5\u6b63\u5e38\u4ece\u4ee3\u7406\u62c9\u53d6\u5230\u8fd9\u4e9b\u975e\u516c\u5f00\u7684\u4f9d\u8d56\u5305\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u914d\u7f6e GOPRIVATE \u73af\u5883\u53d8\u91cf\u3002GOPRIVATE \u7528\u6765\u544a\u8bc9 go \u547d\u4ee4\u54ea\u4e9b\u4ed3\u5e93\u5c5e\u4e8e\u79c1\u6709\u4ed3\u5e93\uff0c\u4e0d\u5fc5\u901a\u8fc7\u4ee3\u7406\u670d\u52a1\u5668\u62c9\u53d6\u548c\u6821\u9a8c\u3002</p>"},{"location":"pl/go/package/#_2","title":"\u5f15\u5165\u5916\u90e8\u4f9d\u8d56","text":"<p>\u4f7f\u7528<code>go get</code>\u547d\u4ee4\u53ef\u4ee5\u76f4\u63a5\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u4e0b\u8f7d\u4f9d\u8d56\u7684\u5305\uff0c\u5e76\u5728 go.mod \u6587\u4ef6\u4e2d\u8bb0\u5f55\u4f9d\u8d56\u4fe1\u606f\u3002</p> <p>\u6bd4\u5982\u5982\u679c\u4f7f\u7528\u4e86<code>go get example.com/theirmodule@v1.3.4</code>\u547d\u4ee4\uff0c\u5219\u4f1a\u5728 go.mod \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u8bed\u53e5\uff1a</p> <pre><code>require example.com/theirmodule v1.3.4\n</code></pre>"},{"location":"pl/go/package/#_3","title":"\u5f15\u5165\u672c\u5730\u4f9d\u8d56","text":"<p>\u5982\u679c\u8981\u5f15\u5165\u672c\u5730\u4f9d\u8d56\uff0c\u6b64\u65f6\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ul> <li>\u6e90\u7801\u5728\u5f53\u524d\u9879\u76ee\u8def\u5f84\uff1a<code>import \"\u4e3b\u5305\u540d/\u4f9d\u8d56\u5305\u540d\"</code></li> <li>\u6e90\u7801\u5728\u5176\u4ed6\u9879\u76ee\u8def\u5f84\uff1a\u5728 go.mod \u6587\u4ef6\u4e2d\u6dfb\u52a0<code>require</code>\u8bed\u53e5\u6307\u5b9a\u4f9d\u8d56\u7684\u5305\uff0c\u7136\u540e\u5728 go.mod \u6587\u4ef6\u4e2d\u6dfb\u52a0<code>replace</code>\u8bed\u53e5\uff0c\u6307\u5b9a\u4f9d\u8d56\u5305\u7684\u8def\u5f84\u3002</li> </ul>"},{"location":"pl/go/reflect/","title":"\u53cd\u5c04","text":"<p>\u53cd\u5c04\u662f\u6307\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u5bf9\u7a0b\u5e8f\u672c\u8eab\u8fdb\u884c\u8bbf\u95ee\u548c\u4fee\u6539\u7684\u80fd\u529b\u3002Go \u8bed\u8a00\u901a\u8fc7 reflect \u5305\u8bbf\u95ee\u7a0b\u5e8f\u7684\u53cd\u5c04\u4fe1\u606f\u3002</p> <p>\u5728 Go \u8bed\u8a00\u7684\u53cd\u5c04\u673a\u5236\u4e2d\uff0c\u4efb\u4f55\u63a5\u53e3\u503c\u90fd\u662f\u7531\u4e00\u4e2a\u5177\u4f53\u7c7b\u578b\u548c\u7c7b\u578b\u7684\u503c\u4e24\u90e8\u5206\u7ec4\u6210\u7684\u3002reflect \u5305\u63d0\u4f9b\u4e86<code>reflect.TypeOf</code>\u6765\u83b7\u53d6\u63a5\u53e3\u7684\u7c7b\u578b\uff0c<code>reflect.ValueOf</code>\u6765\u83b7\u53d6\u7c7b\u578b\u7684\u503c\u3002</p> <pre><code>func reflectType(x interface{}){\n    v := reflect.TypeOf(x)\n    fmt.Println(\"Type:\", v)\n}\n\nfunc main(){\n    var a float32 = 3.14\n    reflectType(a) // Type: float32\n    var b int = 10\n    reflectType(b) // Type: int\n}\n</code></pre>"},{"location":"pl/go/reflect/#namekind","title":"name\u548ckind","text":"<p>\u5728 Go \u8bed\u8a00\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528<code>type</code>\u5173\u952e\u5b57\u5b9a\u4e49\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u800c<code>kind</code>\u5c31\u662f\u7528\u6765\u63cf\u8ff0\u5e95\u5c42\u7684\u7c7b\u578b\u3002Go \u8bed\u8a00\u7684\u53cd\u5c04\u4e2d\u50cf\u6570\u7ec4\u3001\u5207\u7247\u3001map\u3001\u6307\u9488\u7b49\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u7684<code>.Name()</code>\u90fd\u662f\u8fd4\u56de\u7a7a\u3002</p> <pre><code>package main\n\nimport (\n    \"fmt\"\n    \"reflect\"\n)\n\ntype myInt int64\n\nfunc reflectType(x interface{}) {\n    t := reflect.TypeOf(x)\n    fmt.Printf(\"type:%v kind:%v\\n\", t.Name(), t.Kind())\n}\n\nfunc main() {\n    var a *float32 // \u6307\u9488\n    var b myInt    // \u81ea\u5b9a\u4e49\u7c7b\u578b\n    var c rune     // \u7c7b\u578b\u522b\u540d\n    reflectType(a) // type: kind:ptr\n    reflectType(b) // type:myInt kind:int64\n    reflectType(c) // type:int32 kind:int32\n\n    type person struct {\n        name string\n        age  int\n    }\n    type book struct{ title string }\n    var d = person{\n        name: \"\u6c99\u6cb3\u5c0f\u738b\u5b50\",\n        age:  18,\n    }\n    var e = book{title: \"\u300a\u8ddf\u5c0f\u738b\u5b50\u5b66Go\u8bed\u8a00\u300b\"}\n    reflectType(d) // type:person kind:struct\n    reflectType(e) // type:book kind:struct\n}\n</code></pre> <p>reflect \u5305\u4e2d\u5b9a\u4e49\u7684<code>kind</code>\u5e38\u91cf\u5982\u4e0b\uff1a</p> <pre><code>type Kind uint\nconst (\n    Invalid Kind = iota  // \u975e\u6cd5\u7c7b\u578b\n    Bool                 // \u5e03\u5c14\u578b\n    Int                  // \u6709\u7b26\u53f7\u6574\u578b\n    Int8                 // \u6709\u7b26\u53f78\u4f4d\u6574\u578b\n    Int16                // \u6709\u7b26\u53f716\u4f4d\u6574\u578b\n    Int32                // \u6709\u7b26\u53f732\u4f4d\u6574\u578b\n    Int64                // \u6709\u7b26\u53f764\u4f4d\u6574\u578b\n    Uint                 // \u65e0\u7b26\u53f7\u6574\u578b\n    Uint8                // \u65e0\u7b26\u53f78\u4f4d\u6574\u578b\n    Uint16               // \u65e0\u7b26\u53f716\u4f4d\u6574\u578b\n    Uint32               // \u65e0\u7b26\u53f732\u4f4d\u6574\u578b\n    Uint64               // \u65e0\u7b26\u53f764\u4f4d\u6574\u578b\n    Uintptr              // \u6307\u9488\n    Float32              // \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\n    Float64              // \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\n    Complex64            // 64\u4f4d\u590d\u6570\u7c7b\u578b\n    Complex128           // 128\u4f4d\u590d\u6570\u7c7b\u578b\n    Array                // \u6570\u7ec4\n    Chan                 // \u901a\u9053\n    Func                 // \u51fd\u6570\n    Interface            // \u63a5\u53e3\n    Map                  // \u6620\u5c04\n    Ptr                  // \u6307\u9488\n    Slice                // \u5207\u7247\n    String               // \u5b57\u7b26\u4e32\n    Struct               // \u7ed3\u6784\u4f53\n    UnsafePointer        // \u5e95\u5c42\u6307\u9488\n)\n</code></pre>"},{"location":"pl/go/reflect/#valueof","title":"ValueOf","text":"<p><code>reflect.Valueof()</code>\u8fd4\u56de\u7684\u662f<code>reflect.Value</code>\u7c7b\u578b\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u539f\u59cb\u503c\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362\u3002<code>reflect.Value</code>\u7c7b\u578b\u63d0\u4f9b\u4e86\u5f88\u591a\u65b9\u6cd5\u6765\u64cd\u4f5c\u539f\u59cb\u503c\uff1a</p> <ul> <li><code>Bool()</code>\uff1a\u8fd4\u56de<code>bool</code>\u7c7b\u578b\u7684\u503c</li> <li><code>Int()</code>\uff1a\u8fd4\u56de<code>int64</code>\u7c7b\u578b\u7684\u503c</li> <li><code>Uint()</code>\uff1a\u8fd4\u56de<code>uint64</code>\u7c7b\u578b\u7684\u503c</li> <li><code>Float()</code>\uff1a\u8fd4\u56de<code>float64</code>\u7c7b\u578b\u7684\u503c</li> <li><code>Bytes()</code>\uff1a\u8fd4\u56de<code>[]byte</code>\u7c7b\u578b\u7684\u503c</li> <li><code>String()</code>\uff1a\u8fd4\u56de<code>string</code>\u7c7b\u578b\u7684\u503c</li> <li><code>Interface()</code>\uff1a\u8fd4\u56de<code>interface{}</code>\u7c7b\u578b\u7684\u503c</li> </ul>"},{"location":"pl/go/reflect/#_2","title":"\u4fee\u6539\u503c","text":"<p>\u5728\u53cd\u5c04\u4e2d\u4fee\u6539\u503c\uff0c\u9700\u8981\u5148\u83b7\u53d6<code>reflect.Value</code>\u7c7b\u578b\u7684\u503c\uff0c\u7136\u540e\u8c03\u7528<code>Elem()</code>\u65b9\u6cd5\u83b7\u53d6\u5e95\u5c42\u6307\u9488\uff0c\u7136\u540e\u624d\u53ef\u4ee5\u4fee\u6539\uff1a</p> <pre><code>func SetValue(x interface{}){\n    v := reflect.ValueOf(x)\n    //\u83b7\u53d6\u5e95\u5c42\u6307\u9488\n    if v.Elem().Kind() == reflect.Int64 {\n        v.Elem().SetInt(100)\n    }\n}\n\nfunc main(){\n    var a int64 = 10\n    //\u5fc5\u987b\u4f20\u9012\u53d8\u91cf\u5730\u5740\n    SetValue(&amp;a)\n}\n</code></pre>"},{"location":"pl/go/reflect/#isnilisvalid","title":"IsNil\u548cIsValid","text":"<p><code>IsNil()</code>\u5e38\u7528\u4e8e\u5224\u65ad\u6307\u9488\u662f\u5426\u4e3a\u7a7a\uff0c<code>IsValid()</code>\u5e38\u7528\u4e8e\u5224\u65ad\u8fd4\u56de\u503c\u662f\u5426\u6709\u6548\u3002</p>"},{"location":"pl/go/reflect/#_3","title":"\u7ed3\u6784\u4f53\u53cd\u5c04","text":"<p>\u5982\u679c<code>reflect.TypeOf()</code>\u83b7\u53d6\u7684\u7c7b\u578b\u662f\u7ed3\u6784\u4f53\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e9b\u65b9\u6cd5\u6765\u83b7\u53d6\u7ed3\u6784\u4f53\u7684\u8be6\u7ec6\u4fe1\u606f\uff1a</p> \u65b9\u6cd5 \u8bf4\u660e Field(i int) StructField \u6839\u636e\u7d22\u5f15\uff0c\u8fd4\u56de\u7d22\u5f15\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\u5b57\u6bb5\u7684\u4fe1\u606f\u3002 NumField() int \u8fd4\u56de\u7ed3\u6784\u4f53\u6210\u5458\u5b57\u6bb5\u6570\u91cf\u3002 FieldByName(name string) (StructField, bool) \u6839\u636e\u7ed9\u5b9a\u5b57\u7b26\u4e32\u8fd4\u56de\u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u7ed3\u6784\u4f53\u5b57\u6bb5\u7684\u4fe1\u606f\u3002 FieldByIndex(index []int) StructField \u591a\u5c42\u6210\u5458\u8bbf\u95ee\u65f6\uff0c\u6839\u636e []int \u63d0\u4f9b\u7684\u6bcf\u4e2a\u7ed3\u6784\u4f53\u7684\u5b57\u6bb5\u7d22\u5f15\uff0c\u8fd4\u56de\u5b57\u6bb5\u7684\u4fe1\u606f\u3002 FieldByNameFunc(match func(string) bool) (StructField,bool) \u6839\u636e\u4f20\u5165\u7684\u5339\u914d\u51fd\u6570\u5339\u914d\u9700\u8981\u7684\u5b57\u6bb5\u3002 NumMethod() int \u8fd4\u56de\u8be5\u7c7b\u578b\u7684\u65b9\u6cd5\u96c6\u4e2d\u65b9\u6cd5\u7684\u6570\u76ee\u3002 Method(int) Method \u8fd4\u56de\u8be5\u7c7b\u578b\u65b9\u6cd5\u96c6\u4e2d\u7684\u7b2ci\u4e2a\u65b9\u6cd5\u3002 MethodByName(string)(Method, bool) \u6839\u636e\u65b9\u6cd5\u540d\u8fd4\u56de\u8be5\u7c7b\u578b\u65b9\u6cd5\u96c6\u4e2d\u7684\u65b9\u6cd5\u3002 <p><code>StructField</code>\u7c7b\u578b\u7528\u6765\u63cf\u8ff0\u7ed3\u6784\u4f53\u4e2d\u7684\u4e00\u4e2a\u5b57\u6bb5\u7684\u4fe1\u606f\uff1a</p> <pre><code>type StructField struct {\n    // Name\u662f\u5b57\u6bb5\u7684\u540d\u5b57\u3002PkgPath\u662f\u975e\u5bfc\u51fa\u5b57\u6bb5\u7684\u5305\u8def\u5f84\uff0c\u5bf9\u5bfc\u51fa\u5b57\u6bb5\u8be5\u5b57\u6bb5\u4e3a\"\"\u3002\n    // \u53c2\u89c1http://golang.org/ref/spec#Uniqueness_of_identifiers\n    Name    string\n    PkgPath string\n    Type      Type      // \u5b57\u6bb5\u7684\u7c7b\u578b\n    Tag       StructTag // \u5b57\u6bb5\u7684\u6807\u7b7e\n    Offset    uintptr   // \u5b57\u6bb5\u5728\u7ed3\u6784\u4f53\u4e2d\u7684\u5b57\u8282\u504f\u79fb\u91cf\n    Index     []int     // \u7528\u4e8eType.FieldByIndex\u65f6\u7684\u7d22\u5f15\u5207\u7247\n    Anonymous bool      // \u662f\u5426\u533f\u540d\u5b57\u6bb5\n}\n</code></pre>"},{"location":"pl/go/template/","title":"\u6cdb\u578b","text":""},{"location":"pl/go/unit_test/","title":"\u5355\u5143\u6d4b\u8bd5","text":"<p>Go \u8bed\u8a00\u63d0\u4f9b\u4e86<code>go test</code>\u547d\u4ee4\u6765\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6240\u6709\u4ee5<code>_test.go</code>\u7ed3\u5c3e\u7684\u6587\u4ef6\u90fd\u89c6\u4e3a\u6d4b\u8bd5\u6587\u4ef6\uff0c\u4e0d\u4f1a\u88ab\u7f16\u8bd1\u5230\u6700\u7ec8\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002</p> <p>\u5728<code>_test.go</code>\u6587\u4ef6\u4e2d\uff0c\u6709\u591a\u4e2a\u6d4b\u8bd5\u51fd\u6570\uff0c\u5206\u522b\u4ee3\u8868\u4e0d\u540c\u7684\u7528\u9014\uff1a</p> \u7c7b\u578b \u683c\u5f0f \u4f5c\u7528 \u6d4b\u8bd5\u51fd\u6570 func TestXXX(t *testing.T) \u6d4b\u8bd5\u51fd\u6570\u7684\u903b\u8f91 \u57fa\u51c6\u51fd\u6570 func BenchmarkXXX(b *testing.B) \u6d4b\u8bd5\u51fd\u6570\u7684\u6027\u80fd \u793a\u4f8b\u51fd\u6570 func ExampleXXX() \u63d0\u4f9b\u793a\u4f8b\u4ee3\u7801"},{"location":"pl/go/unit_test/#_2","title":"\u6d4b\u8bd5\u51fd\u6570","text":"<p>\u6d4b\u8bd5\u51fd\u6570\u5fc5\u987b\u4ee5 Test \u5f00\u5934\uff0c\u540e\u7f00\u540d\u5fc5\u987b\u4ee5\u5927\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u6bd4\u5982\uff1a</p> <pre><code>func TestAdd(t *testing.T){...}\nfunc TestSub(t *testing.T){...}\n</code></pre> <p>\u53c2\u6570 t \u7528\u4e8e\u62a5\u544a\u6d4b\u8bd5\u5931\u8d25\u7684\u9644\u52a0\u7684\u65e5\u5fd7\u4fe1\u606f\uff1a</p> <pre><code>func (c *T) Error(args ...interface{})\nfunc (c *T) Errorf(format string, args ...interface{})\nfunc (c *T) Fail()\nfunc (c *T) FailNow()\nfunc (c *T) Failed() bool\nfunc (c *T) Fatal(args ...interface{})\nfunc (c *T) Fatalf(format string, args ...interface{})\nfunc (c *T) Log(args ...interface{})\nfunc (c *T) Logf(format string, args ...interface{})\nfunc (c *T) Name() string\nfunc (t *T) Parallel()\nfunc (t *T) Run(name string, f func(t *T)) bool\nfunc (c *T) Skip(args ...interface{})\nfunc (c *T) SkipNow()\nfunc (c *T) Skipf(format string, args ...interface{})\nfunc (c *T) Skipped() bool\n</code></pre>"},{"location":"pl/go/unit_test/#_3","title":"\u5b50\u6d4b\u8bd5","text":"<p>\u5f53\u6d4b\u8bd5\u7528\u4f8b\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b50\u6d4b\u8bd5\u3002</p>"},{"location":"pl/go/unit_test/#_4","title":"\u6d4b\u8bd5\u8986\u76d6\u7387","text":"<p>\u6d4b\u8bd5\u8986\u76d6\u7387\u6307\u7684\u662f\u8bed\u53e5\u8986\u76d6\u7387\uff0c\u5373\u7f16\u5199\u7684\u4ee3\u7801\u4e2d\u6709\u591a\u5c11\u8bed\u53e5\u88ab\u6d4b\u8bd5\u7528\u4f8b\u8986\u76d6\u4e86\u3002\u53ef\u4ee5\u4f7f\u7528<code>go test -cover</code>\u547d\u4ee4\u6765\u67e5\u770b\u6d4b\u8bd5\u8986\u76d6\u7387\u3002<code>-coverprofile</code>\u53c2\u6570\u53ef\u4ee5\u751f\u6210\u6d4b\u8bd5\u8986\u76d6\u7387\u62a5\u544a\u3002</p> <p></p>"},{"location":"pl/go/unit_test/#_5","title":"\u57fa\u51c6\u6d4b\u8bd5","text":"<p>\u57fa\u51c6\u6d4b\u8bd5\u662f\u6307\u5728\u4e00\u5b9a\u7684\u5de5\u4f5c\u8d1f\u8f7d\u4e4b\u4e0b\uff0c\u68c0\u9a8c\u7a0b\u5e8f\u7684\u6027\u80fd\uff0c\u57fa\u672c\u683c\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>func BenchmarkName(b *testing.B){\n    // ...\n}\n</code></pre> <p><code>testing.B</code>\u62e5\u6709\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>func (c *B) Error(args ...interface{})\nfunc (c *B) Errorf(format string, args ...interface{})\nfunc (c *B) Fail()\nfunc (c *B) FailNow()\nfunc (c *B) Failed() bool\nfunc (c *B) Fatal(args ...interface{})\nfunc (c *B) Fatalf(format string, args ...interface{})\nfunc (c *B) Log(args ...interface{})\nfunc (c *B) Logf(format string, args ...interface{})\nfunc (c *B) Name() string\nfunc (b *B) ReportAllocs()\nfunc (b *B) ResetTimer()\nfunc (b *B) Run(name string, f func(b *B)) bool\nfunc (b *B) RunParallel(body func(*PB))\nfunc (b *B) SetBytes(n int64)\nfunc (b *B) SetParallelism(p int)\nfunc (c *B) Skip(args ...interface{})\nfunc (c *B) SkipNow()\nfunc (c *B) Skipf(format string, args ...interface{})\nfunc (c *B) Skipped() bool\nfunc (b *B) StartTimer()\nfunc (b *B) StopTimer()\n</code></pre>"},{"location":"pl/go/unit_test/#_6","title":"\u6027\u80fd\u6bd4\u8f83\u51fd\u6570","text":"<p>\u5982\u679c\u6211\u4eec\u60f3\u8981\u77e5\u9053\u67d0\u4e00\u51fd\u6570\u5bf9\u4e8e\u4e0d\u540c\u8f93\u5165\u7684\u6027\u80fd\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u6027\u80fd\u6bd4\u8f83\u51fd\u6570\uff0c\u6bd4\u5982</p> <pre><code>func Benchmark(b *testing.B, size int){}\nfunc Benchmark10(b *testing.B){ Benchmark(b, 10) }\nfunc Benchmark100(b *testing.B){ Benchmark(b, 100) }\nfunc Benchmark1000(b *testing.B){ Benchmark(b, 1000) }\n</code></pre>"},{"location":"pl/go/unit_test/#_7","title":"\u91cd\u7f6e\u65f6\u95f4","text":"<p><code>b.ResetTimer()</code>\u7528\u4e8e\u91cd\u7f6e\u8ba1\u65f6\u5668\uff0c\u5728\u8be5\u51fd\u6570\u8c03\u7528\u4e4b\u524d\u7684\u5904\u7406\u4e0d\u4f1a\u8ba1\u5165\u5230\u6700\u7ec8\u7684\u6267\u884c\u65f6\u95f4\u91cc\u53bb\uff0c\u6bd4\u5982\uff1a</p> <pre><code>func Benchmark(b *testing.B){\n    time.Sleep(10 * time.Second)\n    b.ResetTimer()\n    //...\n}\n</code></pre>"},{"location":"pl/go/unit_test/#_8","title":"\u5e76\u884c\u6d4b\u8bd5","text":"<p><code>b.RunParallel(body func(*PB))</code>\u7528\u4e8e\u5e76\u884c\u6d4b\u8bd5\uff0c\u5b83\u5c06\u521b\u5efa\u591a\u4e2a goroutine \u5e76\u5c06\u6d4b\u8bd5\u51fd\u6570\u7684\u6267\u884c\u5206\u53d1\u5230\u8fd9\u4e9b goroutine \u4e0a\uff0c\u5176\u4e2d goroutine \u7684\u6570\u91cf\u9ed8\u8ba4\u4e3a GOMAXPROCS\u3002</p>"},{"location":"pl/go/unit_test/#_9","title":"\u793a\u4f8b\u51fd\u6570","text":""},{"location":"pl/python/","title":"Python","text":""},{"location":"ros2/","title":"ROS2","text":""},{"location":"ros2/#_1","title":"\u57fa\u7840\u77e5\u8bc6","text":"<ul> <li>\u5165\u95e8\u4ecb\u7ecd</li> <li>\u6838\u5fc3\u6982\u5ff5</li> </ul>"},{"location":"ros2/core/","title":"\u6838\u5fc3\u6982\u5ff5","text":""},{"location":"ros2/core/#_2","title":"\u5de5\u4f5c\u7a7a\u95f4","text":"<p>\u5de5\u4f5c\u7a7a\u95f4\u5c31\u662f\u5728\u5f00\u53d1ROS\u9879\u76ee\u65f6\uff0c\u5b58\u653e\u4ee3\u7801\u3001\u914d\u7f6e\u6587\u4ef6\u7b49\u6587\u4ef6\u7684\u5730\u65b9\u3002\u4e00\u4e2a\u5178\u578b\u7684\u5de5\u4f5c\u7a7a\u95f4\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u76ee\u5f55\uff1a</p> <ul> <li>src\uff1a\u5b58\u653e\u6e90\u7801\u6587\u4ef6</li> <li>build\uff1a\u5b58\u653e\u7f16\u8bd1\u540e\u7684\u6587\u4ef6</li> <li>install\uff1a\u5b58\u653e\u7f16\u8bd1\u540e\u7684\u53ef\u6267\u884c\u6587\u4ef6</li> <li>log\uff1a\u5b58\u653e\u65e5\u5fd7\u6587\u4ef6</li> </ul> <p>\u5728\u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4\u524d\uff0c\u9700\u8981\u5148\u4f7f\u7528<code>rosdepc</code>\u5de5\u5177\u5b89\u88c5\u7cfb\u7edf\u4f9d\u8d56\u9879\uff1a</p> <pre><code># \u521d\u59cb\u5316\n$ rosdepc init\n$ rosdepc update\n\n# \u5b89\u88c5\u7cfb\u7edf\u4f9d\u8d56\u9879\n$ rosdep install --from-paths &lt;package_directory&gt; --ignore-src \n</code></pre> <p>\u4f9d\u8d56\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528<code>colcon build</code>\u547d\u4ee4\u7f16\u8bd1\u9879\u76ee\u3002\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u76ee\u5f55\u4e0b\u65b0\u4ea7\u751f\u4e09\u4e2a\u6587\u4ef6\u5939\uff1abuild, install, log\u3002</p> <pre><code>root@84036d2ba497:/userdata# tree\n.\n\u251c\u2500\u2500 build\n\u2502   \u2514\u2500\u2500 COLCON_IGNORE\n\u251c\u2500\u2500 install\n\u2502   \u251c\u2500\u2500 COLCON_IGNORE\n\u2502   \u251c\u2500\u2500 _local_setup_util_ps1.py\n\u2502   \u251c\u2500\u2500 _local_setup_util_sh.py\n\u2502   \u251c\u2500\u2500 local_setup.bash\n\u2502   \u251c\u2500\u2500 local_setup.ps1\n\u2502   \u251c\u2500\u2500 local_setup.sh\n\u2502   \u251c\u2500\u2500 local_setup.zsh\n\u2502   \u251c\u2500\u2500 setup.bash\n\u2502   \u251c\u2500\u2500 setup.ps1\n\u2502   \u251c\u2500\u2500 setup.sh\n\u2502   \u2514\u2500\u2500 setup.zsh\n\u2514\u2500\u2500 log\n    \u251c\u2500\u2500 COLCON_IGNORE\n    \u251c\u2500\u2500 build_2024-07-15_14-32-45\n    \u2502   \u251c\u2500\u2500 events.log\n    \u2502   \u2514\u2500\u2500 logger_all.log\n    \u251c\u2500\u2500 latest -&gt; latest_build\n    \u2514\u2500\u2500 latest_build -&gt; build_2024-07-15_14-32-45\n\n6 directories, 15 files\n</code></pre> <p>\u4e3a\u4e86\u8ba9\u7cfb\u7edf\u80fd\u591f\u627e\u5230\u6211\u4eec\u7684\u529f\u80fd\u5305\u548c\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8fd8\u9700\u8981\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff1a</p> <pre><code>$ echo \" source ~/dev_ws/install/local_setup.sh\" &gt;&gt; ~/.bashrc\n</code></pre>"},{"location":"ros2/core/#_3","title":"\u529f\u80fd\u5305","text":"<p>\u529f\u80fd\u5305\u662f\u7ec4\u7ec7\u548c\u5206\u53d1\u4ee3\u7801\u7684\u57fa\u672c\u65b9\u5f0f\uff0c\u901a\u8fc7\u5b9a\u4e49\u6e05\u6670\u7684\u63a5\u53e3\u548c\u4f9d\u8d56\u5173\u7cfb\uff0c\u529f\u80fd\u5305\u80fd\u591f\u65b9\u4fbf\u5730\u5728\u4e0d\u540c\u7684\u9879\u76ee\u548c\u56e2\u961f\u4e4b\u95f4\u5171\u4eab\u548c\u590d\u7528\u3002</p> <p>\u4e00\u4e2a\u5178\u578b\u7684 ROS2 \u529f\u80fd\u5305\u53ef\u80fd\u5177\u6709\u4ee5\u4e0b\u76ee\u5f55\u7ed3\u6784\uff1a</p> <pre><code>my_package/\n  CMakeLists.txt       # CMake\u6784\u5efa\u914d\u7f6e\u6587\u4ef6\n  package.xml          # \u529f\u80fd\u5305\u5143\u4fe1\u606f\uff0c\u5305\u62ec\u540d\u79f0\u3001\u7248\u672c\u3001\u4f9d\u8d56\u7b49\n  src/                 # \u6e90\u4ee3\u7801\u76ee\u5f55\n    my_node.cpp\n  include/\n    my_package/        # \u5934\u6587\u4ef6\u76ee\u5f55\n      my_node.hpp\n  scripts/             # \u811a\u672c\u6587\u4ef6\u76ee\u5f55\n    my_script.py\n  msg/                 # \u6d88\u606f\u5b9a\u4e49\u76ee\u5f55\n    MyMessage.msg\n  srv/                 # \u670d\u52a1\u5b9a\u4e49\u76ee\u5f55\n    MyService.srv\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a\u529f\u80fd\u5305\uff1a</p> <pre><code>ros2 pkg create &lt;package_name&gt; --dependencies [dependencies]\n</code></pre> <p>\u6784\u5efa\u529f\u80fd\u5305\uff1a</p> <pre><code>colcon build --packages-select &lt;package_name&gt;\n</code></pre> <p>\u8fd0\u884c\u8282\u70b9\uff1a</p> <pre><code>ros2 run &lt;package_name&gt; &lt;node_name&gt;\n</code></pre>"},{"location":"ros2/core/#_4","title":"\u8282\u70b9","text":"<p>\u8282\u70b9\uff0c\u5c31\u662f\u6267\u884c\u67d0\u4e9b\u5177\u4f53\u4efb\u52a1\u7684\u5355\u5143\uff0c\u5728 OS \u7684\u89c6\u89d2\u6765\u770b\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\u3002\u6bcf\u4e2a\u8282\u70b9\u90fd\u5fc5\u987b\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u53ef\u6267\u884c\u7684\u6587\u4ef6\u3002</p> <p>\u8282\u70b9\u7684\u521b\u5efa\u9700\u8981\u6709\u56db\u4e2a\u6b65\u9aa4\uff1a</p> <ul> <li>\u7f16\u7a0b\u63a5\u53e3\u521d\u59cb\u5316</li> <li>\u521b\u5efa\u8282\u70b9\u5e76\u521d\u59cb\u5316</li> <li>\u5b9e\u73b0\u8282\u70b9\u529f\u80fd</li> <li>\u9500\u6bc1\u8282\u70b9\u5e76\u5173\u95ed\u63a5\u53e3</li> </ul>"},{"location":"ros2/core/#_5","title":"\u8bdd\u9898","text":"<p>ROS2 \u7684\u8bdd\u9898\u901a\u4fe1\u91c7\u7528\u7684\u662f\u53d1\u5e03/\u8ba2\u9605\u6a21\u5f0f\uff0c\u4e8c\u8005\u89c4\u5b9a\u7edf\u4e00\u7684\u6570\u636e\u7684\u63cf\u8ff0\u683c\u5f0f\u3002</p>"},{"location":"ros2/core/#_6","title":"\u670d\u52a1","text":""},{"location":"ros2/core/#_7","title":"\u901a\u4fe1\u63a5\u53e3","text":""},{"location":"ros2/core/#_8","title":"\u52a8\u4f5c","text":""},{"location":"ros2/intro/","title":"\u5165\u95e8\u4ecb\u7ecd","text":"<p>2022\u5e745\u6708\u5e95\uff0cROS2 Humble\u53d1\u5e03\uff0c\u8fd9\u662fROS2\u7684\u7b2c\u4e00\u4e2a\u957f\u671f\u652f\u6301\u7248\u672c\uff0c\u6807\u5fd7\u7740ROS\u8fdb\u5165\u4e86\u5168\u65b0\u7684\u53d1\u5c55\u9636\u6bb5\u3002</p> <p></p> <p>\u4e00\u4e2a\u65b0\u7248\u672c\u7684\u53d1\u5e03\u5fc5\u7136\u662f\u56e0\u4e3a\u65e7\u7248\u672c\u6709\u4e00\u4e9b\u95ee\u9898\u3002ROS2\u6ca1\u6709\u4fee\u4fee\u8865\u8865\uff0c\u800c\u662f\u76f4\u63a5\u63a8\u5012\u91cd\u6765\uff0c\u5bf9\u7cfb\u7edf\u67b6\u6784\u548c\u8f6f\u4ef6\u4ee3\u7801\u5168\u90e8\u91cd\u65b0\u8bbe\u8ba1\u3002\u4e0eROS1\u76f8\u6bd4\uff0c\u4e3b\u8981\u4f53\u73b0\u5728\u4ee5\u4e0b\u4e09\u70b9\uff1a</p> <ul> <li>\u67b6\u6784\u91cd\u505a\uff1aROS1\u4e2d\u6240\u6709\u8282\u70b9\u90fd\u8981\u5728Master\u8282\u70b9\u4e0b\u7ba1\u7406\uff0c\u4e00\u65e6Master\u51fa\u73b0\u95ee\u9898\uff0c\u7cfb\u7edf\u5c31\u4f1a\u6b7b\u673a\u3002ROS2\u4f7f\u7528\u57fa\u4e8eDDS\u7684Discovery\u673a\u5236\uff0c\u5b9e\u73b0\u4e86\u771f\u6b63\u7684\u5206\u5e03\u5f0f\u901a\u4fe1\u3002</li> <li>API\u91cd\u6784\uff1aROS2\u7ed3\u5408C++\u6700\u65b0\u6807\u51c6\u548cPython3\u8bed\u8a00\u7279\u6027\uff0c\u8bbe\u8ba1\u4e86\u66f4\u5177\u901a\u7528\u578b\u7684API\u3002</li> <li>\u7f16\u8bd1\u7cfb\u7edf\u5347\u7ea7\uff1aROS1\u7684rosbuild\u548ccatkin\u95ee\u9898\u8bf8\u591a\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u4ee3\u7801\u8f83\u591a\u7684\u5927\u578b\u9879\u76ee\u800c\u8a00\u3002ROS2\u5bf9\u8fd9\u4e9b\u95ee\u9898\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u65b0\u7684\u7f16\u8bd1\u7cfb\u7edf\u547d\u540d\u4e3aament\u548ccolcon\u3002</li> </ul>"},{"location":"ros2/intro/#_2","title":"\u7cfb\u7edf\u67b6\u6784","text":"<ul> <li>ROS2\u53bb\u6389\u4e86Master\u8282\u70b9\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u57fa\u4e8eDDS\u7684Discovery\u673a\u5236\u3002</li> <li>Middleware\u662fROS\u5c01\u88c5\u597d\u7684\u6807\u51c6\u901a\u4fe1\u63a5\u53e3\uff0c\u7f16\u5199\u4ee3\u7801\u65f6\uff0c\u7528\u6237\u53ea\u9700\u8981\u5173\u6ce8\u4e1a\u52a1\u903b\u8f91\uff0c\u7531\u4e2d\u95f4\u5c42\u53bb\u8c03\u7528\u5e95\u5c42\u590d\u6742\u7684\u9a71\u52a8\u548c\u901a\u4fe1\u63a5\u53e3\u3002</li> </ul>"},{"location":"ros2/intro/#dds","title":"DDS\u901a\u4fe1","text":"<p>ROS1\u4e2d\u57fa\u4e8eTCP/UDP\u7684\u901a\u4fe1\u7cfb\u7edf\uff0c\u957f\u671f\u8bdf\u75c5\u4e8e\u5ef6\u8fdf\u9ad8\u3001\u4e22\u6570\u636e\u3001\u65e0\u6cd5\u52a0\u5bc6\u7b49\u95ee\u9898\uff0cROS2\u4f7f\u7528DDS\u4f5c\u4e3a\u901a\u4fe1\u534f\u8bae\uff0c\u5e76\u8bbe\u8ba1\u4e86\u4e2d\u95f4\u4ef6\uff0c\u7531\u5382\u5bb6\u81ea\u5df1\u53bb\u9002\u914dDDS\u534f\u8bae\uff0c\u7528\u6237\u65e0\u9700\u5173\u5fc3\u7ec6\u8282\u3002</p> <p></p>"},{"location":"ros2/intro/#_3","title":"\u6838\u5fc3\u6982\u5ff5","text":""},{"location":"ros2/intro/#_4","title":"\u547d\u4ee4\u884c","text":"<p>ROS1\u4e2d\u7684\u547d\u4ee4\u884c\u975e\u5e38\u5206\u6563\uff0c\u6bcf\u4e00\u4e2a\u529f\u80fd\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u547d\u4ee4\uff0c\u6bd4\u5982<code>rosrun</code>\u542f\u52a8\u4e00\u4e2a\u8282\u70b9\u3002 ROS2\u5bf9\u547d\u4ee4\u884c\u505a\u4e86\u96c6\u6210\uff0c\u6240\u6709\u7684\u547d\u4ee4\u90fd\u96c6\u6210\u5728\u4e00\u4e2aros2\u4e3b\u547d\u4ee4\u4e2d\u3002</p> <p></p>"},{"location":"tools/","title":"\u5de5\u5177","text":""},{"location":"tools/#_2","title":"\u7f16\u7a0b\u5de5\u5177","text":"<ul> <li>github</li> <li>vim</li> </ul>"},{"location":"tools/#_3","title":"\u6587\u6863\u5de5\u5177","text":"<ul> <li>Markdown</li> </ul>"},{"location":"tools/github/","title":"github","text":"<p>github \u662f\u76ee\u524d\u6700\u6d41\u884c\u7684\u5f00\u6e90\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u4e4b\u4e00\uff0c\u672c\u6587\u5c06\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528github\u3002</p>"},{"location":"tools/github/#https","title":"HTTPS\u8fde\u63a5","text":"<p>\u8fc7\u53bb\uff0cHTTPS \u8fde\u63a5\u8981\u6c42\u4f60\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u7531\u4e8e\u4e0d\u5b89\u5168\u5df2\u7ecf\u88ab github \u5e9f\u5f03\u3002\u73b0\u5728\uff0c\u8981\u60f3\u901a\u8fc7 HTTPS \u8fde\u63a5\uff0c\u4f60\u5fc5\u987b\u4f7f\u7528\u53e6\u5916\u4e00\u79cd\u53ebGit Credential Manager\u7684\u65b9\u5f0f\u3002\u5177\u4f53\u64cd\u4f5c\u8bf7\u67e5\u770b\u5b98\u7f51\u6587\u6863\u3002</p>"},{"location":"tools/github/#ssh","title":"SSH\u8fde\u63a5","text":"<p>SSH \u8fde\u63a5\u9ed8\u8ba4\u91c7\u7528 22 \u7aef\u53e3\uff0c\u4f46\u662f\u6709\u65f6\u5019\u9632\u706b\u5899\u4f1a\u963b\u6b62\u8fd9\u79cd\u884c\u4e3a\u3002\u5982\u679c\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff0c\u4f60\u53ef\u4ee5\u91c7\u7528\u4e0a\u9762\u7684 HTTPS \u8fde\u63a5\u3002\u5982\u679c HTTPS \u8fde\u63a5\u4e5f\u4e0d\u884c\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u91c7\u7528 HTTPS \u7aef\u53e3\u7684 SSH \u8fde\u63a5\u3002</p> <p>\u8981\u6d4b\u8bd5\u901a\u8fc7 HTTPS \u7aef\u53e3\u7684 SSH \u8fde\u63a5\u662f\u5426\u53ef\u884c\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <p><pre><code>ssh -T -p 443 git@ssh.github.com\n\n&gt; Hi USERNAME! You've successfully authenticated, but GitHub does not provide shell access.\n</code></pre> \u5982\u679c\u8f93\u51fa\u4ee5\u4e0a\u5185\u5bb9\uff0c\u5219\u8bf4\u660e\u8fde\u63a5\u53ef\u884c\u3002\u4f60\u53ef\u4ee5\u66f4\u6539~/.ssh/config\u6587\u4ef6\uff0c\u5f3a\u5236\u4e0e github \u7684\u8fde\u63a5\u90fd\u901a\u8fc7 SSH \u7684 443 \u7aef\u53e3\u3002</p> <pre><code>Host github.com\nHostname ssh.github.com\nPort 443\nUser git\n</code></pre> <p>\u66f4\u6539\u914d\u7f6e\u540e\uff0c\u518d\u6b21\u6d4b\u8bd5 SSH \u8fde\u63a5\u662f\u5426\u53ef\u884c\uff1a</p> <pre><code>ssh -T git@github.com\n\n&gt; Hi USERNAME! You've successfully authenticated, but GitHub does not provide shell access.\n</code></pre> <p>\u6ce8\u610f\uff1aSSH \u901a\u8fc7\u516c\u94a5\u548c\u79c1\u94a5\u914d\u5bf9\u7684\u65b9\u5f0f\u6765\u9a8c\u8bc1\u8fde\u63a5\u662f\u5426\u5b89\u5168\uff0c\u5f53\u4f60\u7b2c\u4e00\u6b21\u901a\u8fc7 SSH \u8fde\u63a5\u65f6\uff0c\u4f1a\u8be2\u95ee\u4f60\u662f\u5426\u4fe1\u4efb\u8be5\u670d\u52a1\u5668\uff0c\u8f93\u5165yes\u5373\u53ef\u3002github \u7684 SSH \u516c\u94a5\u5b58\u653e\u5728Github's SSH key fingerprints\u3002\u4f60\u53ef\u4ee5\u6dfb\u52a0\u5230~/.ssh/known_hosts\u6765\u907f\u514d\u9a8c\u8bc1\u3002</p>"},{"location":"tools/github/#ssh_1","title":"\u6dfb\u52a0SSH\u5bc6\u94a5","text":"<p>\u6dfb\u52a0 SSH \u5bc6\u94a5\u7684\u8fc7\u7a0b\u5f88\u7b80\u5355\uff0c\u6309\u7167\u6b65\u9aa4\u4e00\u6b65\u6b65\u6765\u5373\u53ef\u3002</p> <p>1.\u9996\u5148\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff0c\u5c06\u90ae\u4ef6\u5730\u5740\u6539\u4e3a\u4f60\u6ce8\u518c github \u7684\u90ae\u7bb1\uff1a</p> <pre><code>ssh-keygen -t ed25519 -C \"your_email@example.com\"\n</code></pre> <p>\u7cfb\u7edf\u4f1a\u8981\u6c42\u4f60\u8f93\u5165\u4e00\u4e9b\u4fe1\u606f\uff0c\u8fde\u7eed\u6309\u56de\u8f66\u8df3\u8fc7\u5373\u53ef\u3002</p> <p>2.\u5c06 SSH \u5bc6\u94a5\u6dfb\u52a0\u5230 ssh-agent\uff1a</p> <p>\u5148\u542f\u52a8 ssh \u4ee3\u7406\uff1a</p> <pre><code>eval \"$(ssh-agent -s)\"\n</code></pre> <p>\u7136\u540e\u6dfb\u52a0\u79c1\u94a5\uff1a</p> <pre><code>ssh-add ~/.ssh/id_ed25519\n</code></pre> <p>3.\u5411\u4f60\u7684\u8d26\u6237\u6dfb\u52a0\u65b0\u7684 SSH \u5bc6\u94a5</p> <p>\u73b0\u5728\uff0c.ssh/\u76ee\u5f55\u4e0b\u6709\u4e24\u4e2a\u6587\u4ef6\uff0c\u4ee5 pub \u7ed3\u5c3e\u7684\u5c31\u662f\u516c\u94a5\uff0c\u9700\u8981\u4f60\u4e0a\u4f20\u81f3 github \u670d\u52a1\u5668\u3002</p> <pre><code>cat ~/.ssh/id_ed25519.pub\n</code></pre> <p>\u590d\u5236\u6253\u5370\u7684\u5185\u5bb9\uff0c\u7136\u540e\u5728 github \u4e2a\u4eba\u8d44\u6599\u9762\u70b9\u51fb\u8bbe\u7f6e\uff0c\u627e\u5230<code>SSH and GPG keys</code>\uff0c\u70b9\u51fb<code>New SSH key</code>\uff0c\u6700\u540e\u7c98\u8d34\u590d\u5236\u7684\u516c\u94a5\u5373\u53ef\u3002</p>"},{"location":"tools/github/#_1","title":"\u7f51\u7edc\u914d\u7f6e","text":"<p>github \u652f\u6301\u6d41\u91cf\u4ee3\u7406\uff1a</p> <pre><code>git config --global http.proxy http://127.0.0.1:[\u7aef\u53e3\u53f7]\n\ngit config --global https.proxy http://127.0.0.1:[\u7aef\u53e3\u53f7]\n</code></pre> <p>\u8fd9\u4e24\u884c\u547d\u4ee4\u7684\u610f\u601d\u662f\u8ba9 http \u548c https \u534f\u8bae\u7684\u6d41\u91cf\u5168\u90e8\u8d70\u4f60\u68af\u5b50\u7684\u4ee3\u7406\uff0c\u7aef\u53e3\u53f7\u6839\u636e\u68af\u5b50\u7684\u914d\u7f6e\u81ea\u884c\u8f93\u5165\u3002\u914d\u7f6e\u5b8c\u4ee5\u540e<code>git clone</code>\u5e94\u8be5\u4e0d\u4f1a\u5361\u4e86\u3002\u5982\u679c\u4f60\u8981\u53d6\u6d88\u5168\u5c40\u4ee3\u7406\uff0c\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>git config --global --unset http.proxy\n\ngit config --global --unset https.proxy\n</code></pre>"},{"location":"tools/github/#_2","title":"\u7ba1\u7406\u8fdc\u7a0b\u4ed3\u5e93","text":"<p>\u8981\u6dfb\u52a0\u4e00\u4e2a\u8fdc\u7a0b\u4ed3\u5e93\u94fe\u63a5\uff0c\u4f7f\u7528<code>git remote add</code> \u547d\u4ee4\uff0c\u8be5\u547d\u4ee4\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff1a</p> <ul> <li>\u8fdc\u7a0b\u4ed3\u5e93\u540d\uff0c\u6bd4\u5982<code>origin</code></li> <li>\u8fdc\u7a0b\u4ed3\u5e93\u5730\u5740\uff0c\u6bd4\u5982<code>https://github.com/OWNER/REPOSITORY.git</code></li> </ul> <pre><code>git remote add origin https://github.com/OWNER/REPOSITORY.git\n</code></pre> <p>\u5728\u6dfb\u52a0\u5b8c\u8fdc\u7a0b\u4ed3\u5e93\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528<code>git remote -v</code>\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u4f60\u5f53\u524d\u6dfb\u52a0\u7684\u8fdc\u7a0b\u4ed3\u5e93\uff1a</p> <pre><code>git remote -v\n# Verify new remote\n&gt; origin  https://github.com/OWNER/REPOSITORY.git (fetch)\n&gt; origin  https://github.com/OWNER/REPOSITORY.git (push)\n</code></pre> <p>\u5982\u679c\u8981\u66f4\u6539\u8fde\u63a5\u8fdc\u7a0b\u4ed3\u5e93\u7684\u65b9\u5f0f\uff0c\u6bd4\u5982\u4ece HTTPS \u6539\u4e3a SSH\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528<code>git remote set-url</code>\u547d\u4ee4\uff1a</p> <pre><code>git remote set-url origin git@github.com:OWNER/REPOSITORY.git\n</code></pre> <p>\u8fd9\u65f6\u8fdc\u7a0b\u4ed3\u5e93\u7684\u683c\u5f0f\u5e94\u8be5\u662f\uff1a</p> <pre><code>origin  git@github.com:OWNER/REPOSITORY.git (fetch)\norigin  git@github.com:OWNER/REPOSITORY.git (push)\n</code></pre>"},{"location":"tools/github/#git","title":"git\u57fa\u672c\u6982\u5ff5","text":""},{"location":"tools/github/#_3","title":"\u5206\u652f\u7ba1\u7406","text":"<p>\u663e\u793a\u6240\u6709\u5206\u652f\uff1a</p> <pre><code>git branch -a\n</code></pre> <p>\u65b0\u5efa\u5e76\u5207\u6362\u5206\u652f\uff1a</p> <pre><code>git checkout -b [\u65b0\u5206\u652f\u540d]\n</code></pre> <p>\u5220\u9664\u5206\u652f\uff1a</p> <pre><code>git branch -d [\u5206\u652f\u540d]\n</code></pre> <p>\u5408\u5e76\u5176\u4ed6\u5206\u652f\u7684\u4ee3\u7801\u5230\u5f53\u524d\u5206\u652f\uff0c\u4f60\u9700\u8981\u624b\u52a8\u89e3\u51b3\u51b2\u7a81\uff1a</p> <pre><code>git merge [\u53e6\u4e00\u4e2a\u5206\u652f\u540d]\n</code></pre> <p>\u5c06\u67d0\u4e2a\u5206\u652f\u7684\u63d0\u4ea4\u5e94\u7528\u5230\u5f53\u524d\u5206\u652f\uff0c\u4f60\u9700\u8981\u624b\u52a8\u89e3\u51b3\u51b2\u7a81\uff1a</p> <pre><code>git cherry-pick [\u63d0\u4ea4\u53f7]\n</code></pre> <ul> <li>Master\uff1a\u7981\u6b62\u4efb\u4f55\u672a\u88ab review \u548c\u6d4b\u8bd5\u8fc7\u7684\u4ee3\u7801\u90e8\u7f72\u5230\u8be5\u5206\u652f\uff0cMaster \u5206\u652f\u7528\u6765\u53d1\u5e03\u6b63\u5f0f\u7248\u672c</li> <li>Develop\uff1a\u5f00\u53d1\u5206\u652f\uff0c\u6301\u7eed\u96c6\u6210\u7684\u5de5\u4f5c\u5b58\u653e\u4e8e\u6b64\uff0creview \u8fc7\u7684\u4ee3\u7801\u53ef\u4ee5\u5408\u5165\u8fd9\u91cc</li> <li>Feature\uff1a\u65b0\u529f\u80fd\u5f00\u53d1\u5206\u652f\uff0c\u4ece develop \u5206\u652f\u4e0a\u62c9\u53d6\uff0c\u5b8c\u6210\u540e\u5408\u5e76\u56de develop \u5206\u652f</li> <li>Hotfix\uff1a\u7d27\u6025\u4fee\u590d\u5206\u652f\uff0c\u4ece Master \u5206\u652f\u4e0a\u62c9\u53d6\uff0c\u5b8c\u6210\u540e\u5408\u5e76\u56de Master \u548c develop \u5206\u652f</li> <li>Release\uff1a\u9884\u53d1\u5e03\u5206\u652f\uff0c\u6bd4\u5982 0.1\u30010.2 \u7248\u672c</li> <li>Bugfix\uff1a\u4fee\u590d Bug \u5206\u652f\uff0c\u4ece develop \u5206\u652f\u4e0a\u62c9\u53d6\uff0c\u5b8c\u6210\u540e\u5408\u5e76\u56de develop \u5206\u652f</li> </ul>"},{"location":"tools/github/#_4","title":"\u56de\u9000\u64cd\u4f5c","text":"<p>\u6e05\u7a7a\u5de5\u4f5c\u533a\u7684\u6570\u636e\uff1a</p> <pre><code># \u4e22\u5f03\u6240\u6709\u672a\u6682\u5b58\u7684\u66f4\u6539\ngit checkout .\n\n# \u4e22\u5f03\u5355\u4e2a\u6587\u4ef6\u672a\u6682\u5b58\u7684\u66f4\u6539\ngit checkout [file]\n</code></pre> <p>\u5c06\u6682\u5b58\u533a\u56de\u9000\u5230\u5de5\u4f5c\u533a(Untracked)\uff1a</p> <pre><code>git resotre -S [file]\n</code></pre> <p>\u4ece\u672c\u5730\u4ed3\u5e93\u56de\u9000\uff1a</p> <ol> <li> <p><code>git rest --soft</code>\uff1a\u56de\u9000\u5230\u6682\u5b58\u533a</p> <ul> <li>\u5f71\u54cd\u8303\u56f4\uff1a\u4ec5\u5f71\u54cd HEAD \u7684\u4f4d\u7f6e</li> <li>\u6548\u679c\uff1a\u4e0d\u66f4\u6539\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u7684\u5185\u5bb9\uff0c\u4ec5\u79fb\u52a8 HEAD \u6307\u9488</li> <li>\u9002\u7528\u573a\u666f\uff1a\u9002\u5408\u4e8e\u9700\u8981\u4fee\u6539\u6700\u8fd1\u63d0\u4ea4\u7684\u4e00\u4e9b\u6539\u52a8\uff0c\u4f46\u4e0d\u60f3\u4e22\u5931\u5f53\u524d\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u7684\u53d8\u66f4</li> </ul> </li> <li> <p><code>git reset --mixed</code>\uff1a\u56de\u9000\u5230\u5de5\u4f5c\u533a</p> <ul> <li>\u5f71\u54cd\u8303\u56f4\uff1a\u5f71\u54cd HEAD \u7684\u4f4d\u7f6e\u548c\u6682\u5b58\u533a</li> <li>\u6548\u679c\uff1a\u4e0d\u66f4\u6539\u5de5\u4f5c\u533a\u5185\u5bb9\uff0c\u79fb\u52a8 HEAD \u6307\u9488\u5230\u6307\u5b9a\u63d0\u4ea4\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u63d0\u4ea4\u4e4b\u540e\u7684\u4fee\u6539\u653e\u5165\u6682\u5b58\u533a</li> <li>\u9002\u7528\u573a\u666f\uff1a\u9002\u5408\u4e8e\u9700\u8981\u56de\u9000\u5230\u4e4b\u524d\u7684\u63d0\u4ea4\uff0c\u9009\u62e9\u4e0b\u4e00\u6b21\u63d0\u4ea4\u4e2d\u7684\u66f4\u6539</li> </ul> </li> <li> <p><code>git reset --hard</code>\uff1a\u5b8c\u5168\u64a4\u9500\u63d0\u4ea4\u548c\u76f8\u5173\u66f4\u6539\uff0c\u5c31\u50cf\u4ece\u672a\u63d0\u4ea4\u8fc7\u4e00\u6837</p> <ul> <li>\u5f71\u54cd\u8303\u56f4\uff1a\u5f71\u54cd HEAD \u7684\u4f4d\u7f6e\u3001\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a</li> <li>\u6548\u679c\uff1a\u5c06 HEAD \u56de\u9000\u5230\u6307\u5b9a\u63d0\u4ea4\uff0c\u91cd\u7f6e\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\uff0c\u4e22\u5f03\u6240\u6709\u672a\u63d0\u4ea4\u7684\u66f4\u6539</li> <li>\u9002\u7528\u573a\u666f\uff1a\u5b8c\u5168\u64a4\u9500\u67d0\u4e2a\u63d0\u4ea4\uff0c\u4e14\u4e0d\u5173\u5fc3\u4e4b\u524d\u7684\u4fee\u6539\u5185\u5bb9</li> </ul> </li> </ol> <p>\u64a4\u9500\u4e4b\u524d\u67d0\u4e2a\u7248\u672c\uff0c\u4f46\u4fdd\u7559\u8be5\u7248\u672c\u540e\u9762\u7684\u7248\u672c\uff1a</p> <pre><code>git revert -n [\u7248\u672c\u53f7]  //-n\u8868\u793a\u624b\u52a8\u89e3\u51b3\u51b2\u7a81\n</code></pre>"},{"location":"tools/github/#_5","title":"\u6bd4\u8f83\u5dee\u5f02","text":"<p><code>git diff</code>\u547d\u4ee4\u7528\u4e8e\u663e\u793a\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u7528\u6cd5\u3002</p> <p>\u67e5\u770b\u672a\u6682\u5b58\u7684\u66f4\u6539\uff1a</p> <pre><code>git diff\n</code></pre> <p>\u67e5\u770b\u5df2\u6682\u5b58\u4f46\u672a\u63d0\u4ea4\u7684\u66f4\u6539\uff1a</p> <pre><code>git diff --stage\n</code></pre> <p>\u67e5\u770b\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u7684\u5dee\u5f02\uff1a</p> <pre><code>git diff HEAD\n</code></pre> <p>\u67e5\u770b\u5de5\u4f5c\u533a\u548c\u67d0\u4e2a\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02\uff1a</p> <pre><code>git diff [\u7248\u672c\u53f7]\n</code></pre> <p>\u67e5\u770b\u6682\u5b58\u533a\u548c\u67d0\u4e2a\u63d0\u4ea4\u4e4b\u95f4\u7684\u5dee\u5f02\uff1a</p> <pre><code>git diff [\u7248\u672c\u53f7] --staged\n</code></pre> <p>\u6bd4\u8f83\u4e24\u4e2a\u63d0\u4ea4\uff1a</p> <pre><code>git diff &lt;commit1&gt; &lt;commit2&gt;\n</code></pre> <p>\u6bd4\u8f83\u4e24\u4e2a\u5206\u652f\uff1a</p> <pre><code>git diff &lt;branch1&gt; &lt;branch2&gt;\n</code></pre> <p>\u663e\u793a\u6bcf\u4e2a\u6587\u4ef6\u66f4\u6539\u7684\u6982\u8981\u4fe1\u606f\uff1a</p> <pre><code>git diff --stat\n</code></pre>"},{"location":"tools/github/#_6","title":"\u6682\u5b58\u6539\u52a8","text":"<p><code>git stash</code>\u547d\u4ee4\u5141\u8bb8\"\u4e34\u65f6\u5b58\u653e\"\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u4e2d\u7684\u6240\u6709\u6539\u52a8\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5e72\u51c0\u5730\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u5206\u652f\u53bb\u5904\u7406\u5176\u4ed6\u4efb\u52a1\uff0c\u800c\u4e0d\u7528\u62c5\u5fc3\u4e22\u5931\u5f53\u524d\u7684\u8fdb\u5ea6\u3002\u4f7f\u7528\u8be5\u547d\u4ee4\u540e git \u4f1a\u505a\u4ee5\u4e0b\u51e0\u4ef6\u4e8b\uff1a</p> <ol> <li>\u4fdd\u5b58\u4fee\u6539\u81f3\u4e00\u4e2a\u79f0\u4e3a\"stash\"\u7684\u6808\u4e2d</li> <li>\u6e05\u7406\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u6062\u590d\u5230\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u7684\u72b6\u6001\uff0c\u6e05\u9664\u6240\u6709\u672a\u63d0\u4ea4\u7684\u66f4\u6539</li> </ol> <p>\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u7528\u6cd5\uff1a</p> <p>\u6682\u5b58\u5f53\u524d\u6539\u52a8\u5e76\u6dfb\u52a0\u4e00\u5219\u4fe1\u606f\uff1a</p> <pre><code>git stash save \"message\"\n</code></pre> <p>\u663e\u793a\u6240\u6709\u6682\u5b58\u7684\u6539\u52a8\uff1a</p> <pre><code>git stash list\n</code></pre> <p>\u5e94\u7528\u6700\u8fd1\u7684\u6682\u5b58\uff1a</p> <pre><code>git stash apply\n</code></pre> <p>\u5e94\u7528\u6700\u8fd1\u7684\u6682\u5b58\u5e76\u5220\u9664\uff1a</p> <pre><code>git stash pop\n</code></pre> <p>\u6e05\u9664\u6240\u6709\u6682\u5b58\uff1a</p> <pre><code>git stash clear\n</code></pre> <p>\u6ce8\u610f\uff1a<code>git stash</code>\u547d\u4ee4\u9ed8\u8ba4\u4e0d\u4f1a\u6682\u5b58 untracked \u6587\u4ef6\u3002</p>"},{"location":"tools/markdown/","title":"Markdown","text":"<p>Markdown\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u6807\u8bb0\u8bed\u8a00\uff0c\u6392\u7248\u8bed\u6cd5\u7b80\u6d01\uff0c\u8ba9\u4eba\u4eec\u66f4\u591a\u5730\u5173\u6ce8\u5185\u5bb9\u672c\u8eab\u800c\u975e\u6392\u7248\u3002\u5b83\u4f7f\u7528\u6613\u8bfb\u6613\u5199\u7684\u7eaf\u6587\u672c\u683c\u5f0f\u7f16\u5199\u6587\u6863\uff0c\u53ef\u4e0eHTML\u6df7\u7f16\uff0c\u53ef\u5bfc\u51faHTML\u3001PDF\u4ee5\u53ca\u672c\u8eab\u7684.md\u683c\u5f0f\u7684\u6587\u4ef6\u3002\u56e0\u7b80\u6d01\u3001\u9ad8\u6548\u3001\u6613\u8bfb\u3001\u6613\u5199\uff0cMarkdown\u88ab\u5927\u91cf\u4f7f\u7528\uff0c\u5982Github\u3001Wikipedia\u3001\u7b80\u4e66\u7b49\u3002</p> <p>\u53ef\u4ee5\u5148\u5728\u7ebf\u4f53\u9a8c\u4e00\u4e0bMarkdown\u5728\u7ebf\u7f16\u8f91\u5668\u3002</p> <p>Markdown\u7684\u8bed\u6cd5\u5341\u5206\u7b80\u5355\uff0c\u534a\u5c0f\u65f6\u8db3\u4ee5\u638c\u63e1\u3002\u5b66\u5b8c\u4e4b\u540e\u53ef\u4ee5\u4e13\u5fc3\u4e8e\u5185\u5bb9\u8f93\u51fa\uff0c\u5927\u91cf\u63d0\u9ad8\u751f\u4ea7\u529b\uff0c\u975e\u5e38\u63a8\u8350\u3002</p> <p>\u5b98\u65b9\u7f51\u7ad9\u7684\u5185\u5bb9\u5df2\u7ecf\u8db3\u591f\u8be6\u7ec6\uff0c\u8bf7\u76f4\u63a5\u67e5\u770b\u5b98\u65b9\u6587\u6863\u81ea\u5b66\uff1aMarkdown\u5b98\u65b9\u6559\u7a0b\u3002</p>"},{"location":"tools/vim/","title":"vim","text":"<p>vim\u547d\u4ee4\u53ef\u4ee5\u7531\u64cd\u4f5c\u7b26 + \u6b21\u6570 + \u52a8\u4f5c\u6765\u7ec4\u6210\uff0c\u6bd4\u5982d3w\u8868\u793a\u5220\u96643\u4e2a\u5355\u8bcd\u3002</p> <p>u\uff1a\u64a4\u9500\u4fee\u6539</p> <p>CTRL + R\uff1a\u6062\u590d\u4fee\u6539</p>"},{"location":"tools/vim/#_1","title":"\u79fb\u52a8","text":"<p>h, j, k, l\uff1a\u5de6\u4e0b\u4e0a\u53f3</p> <p>e\uff1a\u8df3\u8f6c\u81f3\u4e0b\u4e00\u4e2a\u5355\u8bcd\u672b\u5c3e</p> <p>b\uff1a\u8df3\u8f6c\u81f3\u4e0a\u4e00\u4e2a\u5355\u8bcd\u5f00\u5934</p> <p>w\uff1a\u8df3\u8f6c\u81f3\u4e0b\u4e00\u4e2a\u5355\u8bcd\u5f00\u5934</p> <p>$\uff1a\u8df3\u8f6c\u81f3\u884c\u672b</p> <p>CTRL + O\uff1a\u8fd4\u56de\u4e0a\u6b21\u4f4d\u7f6e</p> <p>CTRL + I\uff1a\u524d\u5f80\u4e0b\u6b21\u4f4d\u7f6e</p> <p>0\uff1a\u8df3\u8f6c\u81f3\u884c\u9996</p> <p>nG\uff1a\u8df3\u8f6c\u81f3\u7b2cn\u884c</p> <p>GG\uff1a\u8df3\u8f6c\u81f3\u6587\u4ef6\u672b\u5c3e</p> <p>gg\uff1a\u8df3\u8f6c\u81f3\u6587\u4ef6\u5f00\u5934</p>"},{"location":"tools/vim/#_2","title":"\u63d2\u5165","text":"<p>a\uff1a\u5149\u6807\u540e\u63d2\u5165</p> <p>A\uff1a\u884c\u5c3e\u63d2\u5165</p> <p>i\uff1a\u5149\u6807\u524d\u63d2\u5165</p> <p>I\uff1a\u884c\u9996\u63d2\u5165</p> <p>o\uff1a\u4e0b\u4e00\u884c\u63d2\u5165</p> <p>O\uff1a\u4e0a\u4e00\u884c\u63d2\u5165</p>"},{"location":"tools/vim/#_3","title":"\u5220\u9664","text":"<p>x\uff1a\u5220\u9664\u5149\u6807\u5904\u5b57\u7b26</p> <p>dd\uff1a\u5220\u9664\u6574\u884c</p> <p>D\uff1a\u5220\u9664\u81f3\u884c\u672b</p> <p>dw\uff1a\u4ece\u5f53\u524d\u5149\u6807\u4f4d\u7f6e\uff0c\u4e00\u76f4\u5220\u9664\u81f3\u4e0b\u4e00\u4e2a\u5355\u8bcd\u5f00\u5934</p> <p>d$\uff1a\u4ece\u5f53\u524d\u5149\u6807\u4f4d\u7f6e\uff0c\u4e00\u76f4\u5220\u9664\u81f3\u884c\u672b</p>"},{"location":"tools/vim/#_4","title":"\u590d\u5236\u4e0e\u7c98\u8d34","text":"<p>p\uff1a\u5728\u5149\u6807\u4e0b\u4e00\u884c\u4f4d\u7f6e\u590d\u5236</p> <p>y\uff1a\u590d\u5236\u9009\u4e2d\u5185\u5bb9\uff0c\u9700\u8981\u914d\u5408visual mode</p> <p>yy\uff1a\u590d\u5236\u5f53\u524d\u884c</p> <p>yw\uff1a\u590d\u5236\u4e00\u4e2a\u5355\u8bcd</p>"},{"location":"tools/vim/#_5","title":"\u4fee\u6539\u4e0e\u66ff\u6362","text":"<p>rx\uff1a\u5c06\u5f53\u524d\u5149\u6807\u5904\u5b57\u7b26\u4fee\u6539\u4e3ax</p> <p>ce\uff1a\u4fee\u6539\u5355\u8bcd</p> <p>:s/old/new/g\uff1a\u5c06\u5f53\u524d\u884c\u7684'old'\u5168\u90e8\u6539\u4e3a'new'</p> <p>:%s/old/new/g\uff1a\u5c06\u5f53\u524d\u6587\u4ef6\u7684'old'\u5168\u90e8\u6539\u4e3a'new'</p>"},{"location":"tools/vim/#_6","title":"\u67e5\u627e","text":"<p>\u6309/\u8fdb\u5165\u67e5\u627e\u6a21\u5f0f\uff0c\u8f93\u5165\u4f60\u8981\u641c\u5bfb\u7684\u5b57\u7b26\u4e32\uff0c\u7136\u540e\uff1a</p> <p>n\uff1a\u67e5\u627e\u4e0b\u4e00\u4e2a</p> <p>N\uff1a\u67e5\u627e\u4e0a\u4e00\u4e2a</p> <p>%\uff1a\u641c\u5bfb\u4e0b\u4e00\u4e2a\u5339\u914d\u7684), ], }</p>"}]}